{
    "uid": "1400-A",
    "url": "https://codeforces.com/contest/1400/problem/A",
    "tags": [
        "constructive algorithms",
        " strings"
    ],
    "title": "1400-A",
    "statement": "A. String Similaritytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA binary string is a string where each character is either0or1. Two binary strings $$$a$$$ and $$$b$$$ of equal length aresimilar, if they have the same character in some position (there exists an integer $$$i$$$ such that $$$a_i = b_i$$$). For example:10010and01111aresimilar(they have the same character in position $$$4$$$);10010and11111aresimilar;111and111aresimilar;0110and1001are notsimilar.You are given an integer $$$n$$$ and a binary string $$$s$$$ consisting of $$$2n-1$$$ characters. Let's denote $$$s[l..r]$$$ as the contiguous substring of $$$s$$$ starting with $$$l$$$-th character and ending with $$$r$$$-th character (in other words, $$$s[l..r] = s_l s_{l + 1} s_{l + 2} \\\\dots s_r$$$).You have to construct a binary string $$$w$$$ of length $$$n$$$ which issimilartoall of the following strings: $$$s[1..n]$$$, $$$s[2..n+1]$$$, $$$s[3..n+2]$$$, ..., $$$s[n..2n-1]$$$.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 1000$$$) — the number of test cases.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 50$$$).The second line of each test case contains the binary string $$$s$$$ of length $$$2n - 1$$$. Each character $$$s_i$$$ is either0or1.OutputFor each test case, print the corresponding binary string $$$w$$$ of length $$$n$$$. If there are multiple such strings — print any of them. It can be shown that at least one string $$$w$$$ meeting the constraints always exists.ExampleInput4 1 1 3 00000 4 1110000 2 101Output1 000 1010 00NoteThe explanation of the sample case (equal characters in equal positions are bold):The first test case:$$$\\\\mathbf{1}$$$ is similar to $$$s[1..1] = \\\\mathbf{1}$$$.The second test case:$$$\\\\mathbf{000}$$$ is similar to $$$s[1..3] = \\\\mathbf{000}$$$;$$$\\\\mathbf{000}$$$ is similar to $$$s[2..4] = \\\\mathbf{000}$$$;$$$\\\\mathbf{000}$$$ is similar to $$$s[3..5] = \\\\mathbf{000}$$$.The third test case:$$$\\\\mathbf{1}0\\\\mathbf{10}$$$ is similar to $$$s[1..4] = \\\\mathbf{1}1\\\\mathbf{10}$$$;$$$\\\\mathbf{1}01\\\\mathbf{0}$$$ is similar to $$$s[2..5] = \\\\mathbf{1}10\\\\mathbf{0}$$$;$$$\\\\mathbf{10}1\\\\mathbf{0}$$$ is similar to $$$s[3..6] = \\\\mathbf{10}0\\\\mathbf{0}$$$;$$$1\\\\mathbf{0}1\\\\mathbf{0}$$$ is similar to $$$s[4..7] = 0\\\\mathbf{0}0\\\\mathbf{0}$$$.The fourth test case:$$$0\\\\mathbf{0}$$$ is similar to $$$s[1..2] = 1\\\\mathbf{0}$$$;$$$\\\\mathbf{0}0$$$ is similar to $$$s[2..3] = \\\\mathbf{0}1$$$.",
    "source": "CF",
    "vjudge": false
}