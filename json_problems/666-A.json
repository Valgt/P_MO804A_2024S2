{
    "uid": "666-A",
    "url": "https://codeforces.com/contest/666/problem/A",
    "tags": [
        "dp",
        " implementation",
        " strings"
    ],
    "title": "666-A",
    "statement": "A. Reberland Linguisticstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputFirst-rate specialists graduate from Berland State Institute of Peace and Friendship. You are one of the most talented students in this university. The education is not easy because you need to have fundamental knowledge in different areas, which sometimes are not related to each other.For example, you should know linguistics very well. You learn a structure of Reberland language as foreign language. In this language words are constructed according to the following rules. First you need to choose the \"root\" of the word — some string which has more than4letters. Then several strings with the length2or3symbols are appended to this word. The only restriction —it is not allowed to append the same string twice in a row. All these strings are considered to be suffixes of the word (this time we use word \"suffix\" to describe a morpheme but not the few last characters of the string as you may used to).Here is one exercise that you have found in your task list. You are given the words. Find all distinct strings with the length2or3, which can be suffixes of this word according to the word constructing rules in Reberland language.Two strings are considered distinct if they have different length or there is a position in which corresponding characters do not match.Let's look at the example: the wordabacabacais given. This word can be obtained in the following ways:, where the root of the word is overlined, and suffixes are marked by \"corners\". Thus, the set of possible suffixes for this word is{aca,ba,ca}.InputThe only line contains a strings(5 ≤ |s| ≤ 104) consisting of lowercase English letters.OutputOn the first line print integerk— a number of distinct possible suffixes. On the nextklines print suffixes.Print suffixes in lexicographical (alphabetical) order.ExamplesInputabacabacaOutput3acabacaInputabacaOutput0NoteThe first test was analysed in the problem statement.In the second example the length of the string equals5. The length of the root equals 5, so no string can be used as a suffix.",
    "source": "CF",
    "vjudge": false
}