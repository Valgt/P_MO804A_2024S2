{
    "uid": "348-B",
    "url": "https://codeforces.com/contest/348/problem/B",
    "tags": [
        "dfs and similar",
        " number theory",
        " trees"
    ],
    "title": "348-B",
    "statement": "B. Apple Treetime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutYou are given a rooted tree withnvertices. In each leaf vertex there's a single integer — the number of apples in this vertex.Theweightof a subtree is the sum of all numbers in this subtree leaves. For instance, the weight of a subtree that corresponds to some leaf is the number written in the leaf.A tree isbalancedif for every vertexvof the tree all its subtrees, corresponding to the children of vertexv, are of equal weight.Count the minimum number of apples that you need to remove from the tree (specifically, from some of its leaves) in order to make the tree balanced. Notice that you can always achieve the goal by just removing all apples.InputThe first line contains integern(2 ≤n≤ 105), showing the number of vertices in the tree. The next line containsnintegersa1,a2, ...,an(0 ≤ai≤ 108),aiis the number of apples in the vertex numberi. The number of apples in non-leaf vertices is guaranteed to be zero.Then follown- 1lines, describing the tree edges. Each line contains a pair of integersxi,yi(1 ≤xi,yi≤n,xi≠yi) — the vertices connected by an edge.The vertices are indexed from 1 ton. Vertex 1 is the root.OutputPrint a single integer — the minimum number of apples to remove in order to make the tree balanced.Please, do not write the%lldspecifier to read or write 64-bit integers in С++. It is preferred to use the sin, cout streamscin,coutor the%I64dspecifier.ExamplesInput60 0 12 13 5 61 21 31 42 52 6Output6",
    "source": "CF",
    "vjudge": false
}