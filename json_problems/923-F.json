{
    "uid": "923-F",
    "url": "https://codeforces.com/contest/923/problem/F",
    "tags": [
        "constructive algorithms",
        " graphs",
        " trees"
    ],
    "title": "923-F",
    "statement": "F. Public Servicetime limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere areNcities in Bob's country connected by roads. Some pairs of cities are connected by public transport. There are two competing transport companies —Boblinesoperating buses andBobrailrunning trains. When traveling fromAtoB, a passenger always first selects the mode of transport (either bus or train), and then embarks on a journey. For every pair of cities, there are exactly two ways of how to travel between them without visiting any city more than once — one using only bus routes, and the second using only train routes. Furthermore, there is no pair of cities that is directly connected by both a bus route and a train route.You obtained the plans of each of the networks. Unfortunately, each of the companies uses different names for the same cities. More precisely, the bus company numbers the cities using integers from1toN, while the train company uses integers betweenN+ 1and2N. Find one possible mapping between those two numbering schemes, such that no pair of cities is connected directly by both a bus route and a train route. Note that this mapping has to map different cities to different cities.InputThe first line contains an integerN(2 ≤N≤ 10000), the number of cities.N- 1lines follow, representing the network plan of Boblines. Each contains two integersuandv(1 ≤u,v≤N), meaning that there is a bus route between citiesuandv.N- 1lines follow, representing the network plan of Bobrail. Each contains two integersuandv(N+ 1 ≤u,v≤ 2N), meaning that there is a train route between citiesuandv.OutputIf there is no solution, output a single line with the word \"No\".If a solution exists, output two lines. On the first line, there should be the word \"Yes\". On the second line, there should beNintegersP1,P2, ...,PN(N+ 1 ≤Pi≤ 2N) — the mapping between the two numbering schemes. More precisely, fori≠jit should bePi≠Pj, and for every direct bus route(i,j), there is no direct train route between(Pi,Pj).If there are multiple solutions, you may print any of them.ExamplesInput41 22 33 45 66 77 8OutputYes6 8 5 7Input41 22 33 45 65 75 8OutputNoInput71 21 31 41 55 66 78 99 1010 1111 1212 1313 14OutputYes9 14 11 12 13 10 8NoteThe first sample (bus lines in red and rail lines in blue):",
    "source": "CF",
    "vjudge": false
}