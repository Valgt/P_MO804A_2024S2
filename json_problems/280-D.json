{
    "uid": "280-D",
    "url": "https://codeforces.com/contest/280/problem/D",
    "tags": [
        "data structures",
        " flows",
        " graphs",
        " implementation"
    ],
    "title": "280-D",
    "statement": "D. k-Maximum Subsequence Sumtime limit per test4 secondsmemory limit per test256 megabytesinputstdinoutputstdoutConsider integer sequencea1,a2, ...,an. You should run queries of two types:The query format is \"0ival\". In reply to this query you should make the following assignment:ai=val.The query format is \"1lrk\". In reply to this query you should print the maximum sum of at mostknon-intersecting subsegments of sequenceal,al+ 1, ...,ar. Formally, you should choose at mostkpairs of integers(x1,y1), (x2,y2), ..., (xt,yt)(l≤x1≤y1<x2≤y2< ... <xt≤yt≤r;t≤k)such that the sumax1+ax1+ 1+ ... +ay1+ax2+ax2+ 1+ ... +ay2+ ... +axt+axt+ 1+ ... +aytis as large as possible. Note that you should choose at mostksubsegments. Particularly, you can choose 0 subsegments. In this case the described sum considered equal to zero.InputThe first line contains integern(1 ≤n≤ 105), showing how many numbers the sequence has. The next line containsnintegersa1,a2, ...,an(|ai| ≤ 500).The third line contains integerm(1 ≤m≤ 105)— the number of queries. The nextmlines contain the queries in the format, given in the statement.All changing queries fit into limits:1 ≤i≤n,|val| ≤ 500.All queries to count the maximum sum of at mostknon-intersecting subsegments fit into limits:1 ≤l≤r≤n,1 ≤k≤ 20. It is guaranteed that the number of the queries to count the maximum sum of at mostknon-intersecting subsegments doesn't exceed10000.OutputFor each query to count the maximum sum of at mostknon-intersecting subsegments print the reply — the maximum sum. Print the answers to the queries in the order, in which the queries follow in the input.ExamplesInput99 -8 9 -1 -1 -1 9 -8 931 1 9 11 1 9 21 4 6 3Output17250Input15-4 8 -3 -10 10 4 -7 -7 0 -6 3 8 -10 7 2151 3 9 21 6 12 10 6 50 10 -71 4 9 11 7 9 10 10 -31 4 10 21 3 13 21 4 11 20 15 -90 13 -90 11 -101 5 14 21 6 12 1Output1411150152618238NoteIn the first query of the first example you can select a single pair(1, 9). So the described sum will be 17.Look at the second query of the first example. How to choose two subsegments? (1, 3) and (7, 9)? Definitely not, the sum we could get from (1, 3) and (7, 9) is 20, against the optimal configuration (1, 7) and (9, 9) with 25.The answer to the third query is 0, we prefer select nothing if all of the numbers in the given interval are negative.",
    "source": "CF",
    "vjudge": false
}