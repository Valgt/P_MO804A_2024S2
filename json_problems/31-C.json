{
    "uid": "31-C",
    "url": "https://codeforces.com/contest/31/problem/C",
    "tags": [
        "implementation"
    ],
    "title": "31-C",
    "statement": "C. Scheduletime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutAt the beginning of the new semester there is new schedule in the Berland State University. According to this schedule,ngroups have lessons at the room 31. For each group the starting time of the lesson and the finishing time of the lesson are known. It has turned out that it is impossible to hold all lessons, because for some groups periods of their lessons intersect. If at some moment of time one groups finishes it's lesson, and the other group starts the lesson, their lessons don't intersect.The dean wants to cancel the lesson in one group so that no two time periods of lessons of the remaining groups intersect. You are to find all ways to do that.InputThe first line contains integern(1 ≤n≤ 5000) — amount of groups, which have lessons in the room 31. Thennlines follow, each of them contains two integersliri(1 ≤li<ri≤ 106) — starting and finishing times of lesson of thei-th group. It is possible that initially no two lessons intersect (see sample 1).OutputOutput integerk— amount of ways to cancel the lesson in exactly one group so that no two time periods of lessons of the remaining groups intersect. In the second line outputknumbers — indexes of groups, where it is possible to cancel the lesson. Groups are numbered starting from1in the order that they were given in the input. Output the numbers in increasing order.ExamplesInput33 1020 301 3Output31 2 3Input43 1020 301 31 39Output14Input31 52 63 7Output0",
    "source": "CF",
    "vjudge": false
}