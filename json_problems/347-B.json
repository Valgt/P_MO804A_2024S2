{
    "uid": "347-B",
    "url": "https://codeforces.com/contest/347/problem/B",
    "tags": [
        "brute force",
        " implementation",
        " math"
    ],
    "title": "347-B",
    "statement": "B. Fixed Pointstime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutA permutation of lengthnis an integer sequence such that each integer from 0 to(n- 1)appears exactly once in it. For example, sequence[0, 2, 1]is a permutation of length 3 while both[0, 2, 2]and[1, 2, 3]are not.A fixed point of a function is a point that is mapped to itself by the function. A permutation can be regarded as a bijective function. We'll get a definition of a fixed point in a permutation. An integeriis a fixed point of permutationa0,a1, ...,an- 1if and only ifai=i. For example, permutation[0, 2, 1]has1fixed point and permutation[0, 1, 2]has3fixed points.You are given permutationa. You are allowed to swap two elements of the permutation at most once. Your task is to maximize the number of fixed points in the resulting permutation. Note that you are allowed to make at most one swap operation.InputThe first line contains a single integern(1 ≤n≤ 105). The second line containsnintegersa0,a1, ...,an- 1— the given permutation.OutputPrint a single integer — the maximum possible number of fixed points in the permutation after at most one swap operation.ExamplesInput50 1 3 4 2Output3",
    "source": "CF",
    "vjudge": false
}