{
    "uid": "1002-E2",
    "url": "https://codeforces.com/contest/1002/problem/E2",
    "tags": [],
    "title": "1002-E2",
    "statement": "E2. Another array reconstruction algorithmtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a quantum oracle - an operation onN+ 1qubits which implements a function. You are guaranteed that the functionfimplemented by the oracle can be represented in the following form (oracle from problem D2):Here(a vector ofNintegers, each of which can be 0 or 1), andis a vector ofN1s.Your task is to reconstruct the arraywhich could produce the given oracle. Your code is allowed to call the given oracle only once.You have to implement an operation which takes the following inputs:an integerN- the number of qubits in the oracle input (1 ≤N≤ 8),an oracleUf, implemented as an operation with signature((Qubit[], Qubit) => ()), i.e., an operation which takes as input an array of qubits and an output qubit and has no output.The return of your operation is an array of integers of lengthN, each of them 0 or 1.Note that in this problem we're comparing the oracle generated by your return to the oracleUf, instead of comparing your return to the (hidden) value ofused to generateUf. This means that any kind of incorrect return results in \"Runtime Error\" verdict, as well as actual runtime errors like releasing qubits in non-zero state.Your code should have the following signature:namespace Solution {open Microsoft.Quantum.Primitive;open Microsoft.Quantum.Canon;operation Solve (N : Int, Uf : ((Qubit[], Qubit) => ())) : Int[]{body{// your code here}}}",
    "source": "CF",
    "vjudge": false
}