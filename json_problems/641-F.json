{
    "uid": "641-F",
    "url": "https://codeforces.com/contest/641/problem/F",
    "tags": [],
    "title": "641-F",
    "statement": "F. Little Artem and 2-SATtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Artem is a very smart programmer. He knows many different difficult algorithms. Recently he has mastered in2-SATone.In computer science, 2-satisfiability (abbreviated as2-SAT) is the special case of the problem of determining whether a conjunction (logicalAND) of disjunctions (logicalOR) have a solution, in which all disjunctions consist of no more than two arguments (variables). For the purpose of this problem we consider only2-SATformulas where each disjunction consists of exactly two arguments.Consider the following2-SATproblem as an example:. Note that there might be negations in2-SATformula (like forx1and forx4).Artem now tries to solve as many problems with2-SATas possible. He found a very interesting one, which he can not solve yet. Of course, he asks you to help him.The problem is: given two2-SATformulasfandg, determine whether their sets of possible solutions are the same. Otherwise, find any variables assignmentxsuch thatf(x) ≠g(x).InputThe first line of the input contains three integersn,m1andm2(1 ≤n≤ 1000,1 ≤m1,m2≤n2) — the number of variables, the number of disjunctions in the first formula and the number of disjunctions in the second formula, respectively.Nextm1lines contains the description of2-SATformulaf. The description consists of exactlym1pairs of integersxi(-n≤xi≤n,xi≠ 0) each on separate line, wherexi> 0corresponds to the variable without negation, whilexi< 0corresponds to the variable with negation. Each pair gives a single disjunction. Nextm2lines contains formulagin the similar format.OutputIf both formulas share the same set of solutions, output a single word \"SIMILAR\" (without quotes). Otherwise output exactlynintegersxi() — any set of valuesxsuch thatf(x) ≠g(x).ExamplesInput2 1 11 21 2OutputSIMILARInput2 1 11 21 -2Output0 0NoteFirst sample has two equal formulas, so they are similar by definition.In second sample if we compute first function withx1= 0andx2= 0we get the result0, because. But the second formula is1, because.",
    "source": "CF",
    "vjudge": false
}