{
    "uid": "1907-A",
    "url": "https://codeforces.com/contest/1907/problem/A",
    "tags": [
        "implementation"
    ],
    "title": "1907-A",
    "statement": "A. Rooktime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAs you probably know, chess is a game that is played on a board with 64 squares arranged in an $$$8\\\\times 8$$$ grid. Columns of this board are labeled with letters fromatoh, and rows are labeled with digits from1to8. Each square is described by the row and column it belongs to.The rook is a piece in the game of chess. During its turn, it may move any non-zero number of squares horizontally or vertically. Your task is to find all possible moves for a rook on an empty chessboard.InputThe first line of input contains single integer $$$t$$$ ($$$1 \\\\le t \\\\le 64$$$) — the number of test cases. The descriptions of test cases follow.Each test case contains one string of two characters, description of the square where rook is positioned. The first character is a letter fromatoh, the label of column, and the second character is a digit from1to8, the label of row.The same position may occur in more than one test case.OutputFor each test case, output descriptions of all squares where the rook can move, in the same format as in the input.You can output squares in any order per test case.ExampleInput1d5Outputd1 d2 b5 g5 h5 d3 e5 f5 d8 a5 d6 d7 c5 d4",
    "source": "CF",
    "vjudge": false
}