{
    "uid": "403-E",
    "url": "https://codeforces.com/contest/403/problem/E",
    "tags": [
        "data structures",
        " implementation",
        " trees"
    ],
    "title": "403-E",
    "statement": "E. Two Rooted Treestime limit per test4 secondsmemory limit per test512 megabytesinputstdinoutputstdoutYou have two rooted undirected trees, each containsnvertices. Let's number the vertices of each tree with integers from1ton. The root of each tree is at vertex1. The edges of the first tree are painted blue, the edges of the second one are painted red. For simplicity, let's say that the first tree is blue and the second tree is red.Edge{x,y}is called bad for edge{p,q}if two conditions are fulfilled:The color of edge{x,y}is different from the color of edge{p,q}.Let's consider the tree of the same color that edge{p,q}is. Exactly one of verticesx,ylies both in the subtree of vertexpand in the subtree of vertexq.In this problem, your task is to simulate the process described below. The process consists of several stages:On each stage edges of exactly one color are deleted.On the first stage, exactly one blue edge is deleted.Let's assume that at the stageiwe've deleted edges{u1,v1},{u2,v2},...,{uk,vk}. At the stagei+ 1we will delete all undeleted bad edges for edge{u1,v1}, then we will delete all undeleted bad edges for edge{u2,v2}and so on until we reach edge{uk,vk}.For each stage of deleting edges determine what edges will be removed on the stage. Note that the definition of a bad edge always considers the initial tree before it had any edges removed.InputThe first line contains integern(2 ≤n≤ 2·105) — the number of vertices in each tree.The next line containsn- 1positive integersa2,a3, ...,an(1 ≤ai≤n;ai≠i) — the description of edges of the first tree. Numberaimeans that the first tree has an edge connecting vertexaiand vertexi.The next line containsn- 1positive integersb2,b3, ...,bn(1 ≤bi≤n;bi≠i) — the description of the edges of the second tree. Numberbimeans that the second tree has an edge connecting vertexbiand vertexi.The next line contains integeridx(1 ≤idx<n) — the index of the blue edge that was removed on the first stage. Assume that the edges of each tree are numbered with numbers from1ton- 1in the order in which they are given in the input.OutputFor each stage of removing edges print its description. Each description must consist of exactly two lines. If this is the stage when blue edges are deleted, then the first line of the description must contain wordBlue, otherwise — wordRed. In the second line print the indexes of the edges that will be deleted on this stage in the increasing order.ExamplesInput51 1 1 14 2 1 13OutputBlue3Red1 3Blue1 2Red2NoteFor simplicity let's assume that all edges of the root tree received some direction, so that all vertices are reachable from vertex1. Then asubtreeof vertexvis a set of vertices reachable from vertexvin the resulting directed graph (vertexvis also included in the set).",
    "source": "CF",
    "vjudge": false
}