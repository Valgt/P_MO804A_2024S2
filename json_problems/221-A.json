{
    "uid": "221-A",
    "url": "https://codeforces.com/contest/221/problem/A",
    "tags": [
        "implementation",
        " math"
    ],
    "title": "221-A",
    "statement": "A. Little Elephant and Functiontime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutThe Little Elephant enjoys recursive functions.This time he enjoys the sorting function. Letais a permutation of an integers from 1 ton, inclusive, andaidenotes thei-th element of the permutation. The Little Elephant's recursive functionf(x), that sorts the firstxpermutation's elements, works as follows:Ifx= 1, exit the function.Otherwise, callf(x- 1), and then makeswap(ax- 1,ax)(swap thex-th and(x- 1)-th elements ofa).The Little Elephant's teacher believes that this function does not work correctly. But that-be do not get an F, the Little Elephant wants to show the performance of its function. Help him, find a permutation of numbers from 1 ton, such that after performing the Little Elephant's function (that is callf(n)), the permutation will be sorted in ascending order.InputA single line contains integern(1 ≤n≤ 1000)— the size of permutation.OutputIn a single line printndistinct integers from 1 ton— the required permutation. Numbers in a line should be separated by spaces.It is guaranteed that the answer exists.ExamplesInput1Output1Input2Output2 1",
    "source": "CF",
    "vjudge": false
}