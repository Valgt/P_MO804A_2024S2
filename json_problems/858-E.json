{
    "uid": "858-E",
    "url": "https://codeforces.com/contest/858/problem/E",
    "tags": [
        "greedy",
        " implementation"
    ],
    "title": "858-E",
    "statement": "E. Tests Renumerationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe All-Berland National Olympiad in Informatics has just ended! Now Vladimir wants to upload the contest from the Olympiad as a gym to a popular Codehorses website.Unfortunately, the archive with Olympiad's data is a mess. For example, the files with tests are named arbitrary without any logic.Vladimir wants to rename the files with tests so that their names are distinct integers starting from1without any gaps, namely, \"1\", \"2\", ..., \"n', wherenis the total number of tests.Some of the files contain tests from statements (examples), while others contain regular tests. It is possible that there are no examples, and it is possible that all tests are examples. Vladimir wants to rename the files so that the examples are the first several tests, all all the next files contain regular tests only.The only operation Vladimir can perform is the \"move\" command. Vladimir wants to write a script file, each of the lines in which is \"move file_1 file_2\", that means that the file \"file_1\" is to be renamed to \"file_2\". If there is a file \"file_2\" at the moment of this line being run, then this file is to be rewritten. After the line \"move file_1 file_2\" the file \"file_1\" doesn't exist, but there is a file \"file_2\" with content equal to the content of \"file_1\" before the \"move\" command.Help Vladimir to write the script file with the minimum possible number of lines so that after this script is run:all examples are the first several tests having filenames \"1\", \"2\", ..., \"e\", whereeis the total number of examples;all other files contain regular tests with filenames \"e+ 1\", \"e+ 2\", ..., \"n\", wherenis the total number of all tests.InputThe first line contains single integern(1 ≤n≤ 105) — the number of files with tests.nlines follow, each describing a file with test. Each line has a form of \"name_i type_i\", where \"name_i\" is the filename, and \"type_i\" equals \"1\", if thei-th file contains an example test, and \"0\" if it contains a regular test. Filenames of each file are strings of digits and small English letters with length from1to6characters. The filenames are guaranteed to be distinct.OutputIn the first line print the minimum number of lines in Vladimir's script file.After that print the script file, each line should be \"move file_1 file_2\", where \"file_1\" is an existing at the moment of this line being run filename, and \"file_2\" — is a string of digits and small English letters with length from1to6.ExamplesInput501 02 12extra 03 199 0Output4move 3 1move 01 5move 2extra 4move 99 3Input21 02 1Output3move 1 3move 2 1move 3 2Input51 011 1111 01111 111111 0Output5move 1 5move 11 1move 1111 2move 111 4move 11111 3",
    "source": "CF",
    "vjudge": false
}