{
    "uid": "416-B",
    "url": "https://codeforces.com/contest/416/problem/B",
    "tags": [
        "brute force",
        " dp",
        " implementation"
    ],
    "title": "416-B",
    "statement": "B. Art Uniontime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutA well-known art union called \"Kalevich is Alive!\" manufactures objects d'art (pictures). The union consists ofnpainters who decided to organize their work as follows.Each painter uses only the color that was assigned to him. The colors are distinct for all painters. Let's assume that the first painter uses color 1, the second one uses color 2, and so on. Each picture will contain all thesencolors. Adding thej-th color to thei-th picture takes thej-th paintertijunits of time.Order is important everywhere, so the painters' work is ordered by the following rules:Each picture is first painted by the first painter, then by the second one, and so on. That is, after thej-th painter finishes working on the picture, it must go to the(j+ 1)-th painter (ifj<n);each painter works on the pictures in some order: first, he paints the first picture, then he paints the second picture and so on;each painter can simultaneously work on at most one picture. However, the painters don't need any time to have a rest;as soon as thej-th painter finishes his part of working on the picture, the picture immediately becomes available to the next painter.Given that the painters start working at time 0, find for each picture the time when it is ready for sale.InputThe first line of the input contains integersm,n(1 ≤m≤ 50000, 1 ≤n≤ 5), wheremis the number of pictures andnis the number of painters. Then follow the descriptions of the pictures, one per line. Each line containsnintegersti1,ti2, ...,tin(1 ≤tij≤ 1000), wheretijis the time thej-th painter needs to work on thei-th picture.OutputPrint the sequence ofmintegersr1,r2, ...,rm, whereriis the moment when then-th painter stopped working on thei-th picture.ExamplesInput5 112345Output1 3 6 10 15Input4 22 53 15 310 1Output7 8 13 21",
    "source": "CF",
    "vjudge": false
}