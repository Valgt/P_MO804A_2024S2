{
    "uid": "1531-E1",
    "url": "https://codeforces.com/contest/1531/problem/E1",
    "tags": [
        "*special"
    ],
    "title": "1531-E1",
    "statement": "E1. Сортировка слияниемограничение по времени на тест2 секундыограничение по памяти на тест512 мегабайтвводстандартный вводвыводстандартный выводРассмотрим следующий код сортировки слиянием на языке Python:def sort(a):n = len(a)b = [0 for i in range(n)]log = []def mergeSort(l, r):if r - l <= 1:returnm = (l + r) >> 1mergeSort(l, m)mergeSort(m, r)i, j, k = l, m, lwhile i < m and j < r:if a[i] < a[j]:log.append('0')b[k] = a[i]i += 1else:log.append('1')b[k] = a[j]j += 1k += 1while i < m:b[k] = a[i]i += 1k += 1while j < r:b[k] = a[j]j += 1k += 1for p in range(l, r):a[p] = b[p]mergeSort(0, n)return \"\".join(log)Как можно заметить, этот код использует логирование — важнейший инструмент разработки.Старший разработчик ВКонтакте Вася сгенерировал перестановку $$$a$$$ (массив из $$$n$$$ различных целых чисел от $$$1$$$ до $$$n$$$), дал её на вход функцииsortи получил на выходе строку $$$s$$$. На следующий день строку $$$s$$$ Вася нашёл, а перестановка $$$a$$$ потерялась.Вася хочет восстановить любую перестановку $$$a$$$ такую, что вызов функцииsortот неё даст ту же строку $$$s$$$. Помогите ему!Входные данныеВвод содержит непустую строку $$$s$$$, состоящую из символов0и1.В этой версии задачидля любого теста существует перестановка длины $$$16$$$, удовлетворяющая условию. Тем не менее, ваш ответ может иметь любую длину, в том числе отличную от $$$16$$$.Выходные данныеВ первой строке выведите целое число $$$n$$$ — длину перестановки.Во второй строке выведите $$$n$$$ различных целых чисел $$$a_0, a_1, \\\\ldots, a_{n-1}$$$ ($$$1 \\\\le a_i \\\\le n$$$) — элементы перестановки.Если существует несколько вариантов ответа, выведите любой из них.ПримерыВходные данные00000000000000000000000000000000Выходные данные16 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16Входные данные11111111111111111111111111111111Выходные данные16 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1Входные данные101011010001100100011011001111011000011110010Выходные данные16 13 6 1 7 12 5 4 15 14 16 10 11 3 8 9 2",
    "source": "CF",
    "vjudge": false
}