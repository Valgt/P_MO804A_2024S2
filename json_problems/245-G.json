{
    "uid": "245-G",
    "url": "https://codeforces.com/contest/245/problem/G",
    "tags": [
        "brute force",
        " graphs"
    ],
    "title": "245-G",
    "statement": "G. Suggested Friendstime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutPolycarpus works as a programmer in a start-up social network. His boss gave his a task to develop a mechanism for determining suggested friends. Polycarpus thought much about the task and came to the folowing conclusion.Let's say that all friendship relationships in a social network are given asmusername pairsai,bi(ai≠bi). Each pairai,bimeans that usersaiandbiare friends. Friendship is symmetric, that is, ifaiis friends withbi, thenbiis also friends withai. Useryis asuggested friendfor userx, if the following conditions are met:x≠y;xandyaren't friends;among all network users who meet the first two conditions, useryhas most of all common friends with userx. Userzis a common friend of userxand usery(z≠x,z≠y), ifxandzare friends, andyandzare also friends.Your task is to help Polycarpus to implement a mechanism for determining suggested friends.InputThe first line contains a single integerm(1 ≤m≤ 5000)— the number of pairs of friends in the social network. Nextmlines contain pairs of names of the users who are friends with each other. Thei-th line contains two space-separated namesaiandbi(ai≠bi). The users' names are non-empty and consist of at most 20 uppercase and lowercase English letters.It is guaranteed that each pair of friends occurs only once in the input. For example, the input can't containx,yandy,xat the same time. It is guaranteed that distinct users have distinct names. It is guaranteed that each social network user has at least one friend. The last thing guarantees that each username occurs at least once in the input.OutputIn the first line print a single integern— the number of network users. In nextnlines print the number of suggested friends for each user. In thei-th line print the name of the userciand the number of his suggested friendsdiafter a space.You can print information about the users in any order.ExamplesInput5Mike GeraldKate MikeKate TankGerald TankGerald DavidOutput5Mike 1Gerald 1Kate 1Tank 1David 2Input4valera vanyavalera edikpasha valeraigor valeraOutput5valera 0vanya 3edik 3pasha 3igor 3NoteIn the first test case consider user David. Users Mike and Tank have one common friend (Gerald) with David. User Kate has no common friends with David. That's why David's suggested friends are users Mike and Tank.",
    "source": "CF",
    "vjudge": false
}