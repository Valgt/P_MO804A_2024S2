{
    "uid": "1694-B",
    "url": "https://codeforces.com/contest/1694/problem/B",
    "tags": [
        "constructive algorithms",
        " greedy"
    ],
    "title": "1694-B",
    "statement": "B. Paranoid Stringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's call a binary string $$$T$$$ of length $$$m$$$ indexed from $$$1$$$ to $$$m$$$paranoidif we can obtain a string of length $$$1$$$ by performing the following two kinds of operations $$$m-1$$$ times in any order :Select any substring of $$$T$$$ that is equal to01, and then replace it with1.Select any substring of $$$T$$$ that is equal to10, and then replace it with0.For example, if $$$T = $$$001, we can select the substring $$$[T_2T_3]$$$ and perform the first operation. So we obtain $$$T = $$$01.You are given a binary string $$$S$$$ of length $$$n$$$ indexed from $$$1$$$ to $$$n$$$. Find the number of pairs of integers $$$(l, r)$$$ $$$1 \\\\le l \\\\le r \\\\le n$$$ such that $$$S[l \\\\ldots r]$$$ (the substring of $$$S$$$ from $$$l$$$ to $$$r$$$) is aparanoidstring.InputThe first line contains an integer $$$t$$$ ($$$1 \\\\le t \\\\le 1000$$$) — the number of test cases. The description of test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the size of $$$S$$$.The second line of each test case contains a binary string $$$S$$$ of $$$n$$$ characters $$$S_1S_2 \\\\ldots S_n$$$. ($$$S_i = $$$0or $$$S_i = $$$1for each $$$1 \\\\le i \\\\le n$$$)It is guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output the number of pairs of integers $$$(l, r)$$$ $$$1 \\\\le l \\\\le r \\\\le n$$$ such that $$$S[l \\\\ldots r]$$$ (the substring of $$$S$$$ from $$$l$$$ to $$$r$$$) is aparanoidstring.ExampleInput511201310041001511111Output1 3 4 8 5NoteIn the first sample, $$$S$$$ already has length $$$1$$$ and doesn't need any operations.In the second sample, all substrings of $$$S$$$ areparanoid. For the entire string, it's enough to perform the first operation.In the third sample, all substrings of $$$S$$$ areparanoidexcept $$$[S_2S_3]$$$, because we can't perform any operations on it, and $$$[S_1S_2S_3]$$$ (the entire string).",
    "source": "CF",
    "vjudge": false
}