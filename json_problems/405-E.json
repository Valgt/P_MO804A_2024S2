{
    "uid": "405-E",
    "url": "https://codeforces.com/contest/405/problem/E",
    "tags": [
        "dfs and similar",
        " graphs"
    ],
    "title": "405-E",
    "statement": "E. Graph Cuttingtime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutLittle Chris is participating in a graph cutting contest. He's a pro. The time has come to test his skills to the fullest.Chris is given a simple undirected connected graph withnvertices (numbered from 1 ton) andmedges. The problem is to cut it into edge-distinct paths of length 2. Formally, Chris has to partition all edges of the graph into pairs in such a way that the edges in a single pair are adjacent and each edge must be contained in exactly one pair.For example, the figure shows a way Chris can cut a graph. The first sample test contains the description of this graph.You are given a chance to compete with Chris. Find a way to cut the given graph or determine that it is impossible!InputThe first line of input contains two space-separated integersnandm(1 ≤n,m≤ 105), the number of vertices and the number of edges in the graph. The nextmlines contain the description of the graph's edges. Thei-th line contains two space-separated integersaiandbi(1 ≤ai,bi≤n;ai≠bi), the numbers of the vertices connected by thei-th edge. It is guaranteed that the given graph is simple (without self-loops and multi-edges) and connected.Note: since the size of the input and output could be very large, don't use slow output techniques in your language. For example, do not use input and output streams (cin, cout) in C++.OutputIf it is possible to cut the given graph into edge-distinct paths of length 2, outputlines. In thei-th line print three space-separated integersxi,yiandzi, the description of thei-th path. The graph should contain this path, i.e., the graph should contain edges(xi,yi)and(yi,zi). Each edge should appear in exactly one path of length 2. If there are multiple solutions, output any of them.If it is impossible to cut the given graph, print\"No solution\"(without quotes).ExamplesInput8 121 22 33 44 11 32 43 53 65 66 76 87 8Output1 2 41 3 21 4 35 3 65 6 86 7 8Input3 31 22 33 1OutputNo solutionInput3 21 22 3Output1 2 3",
    "source": "CF",
    "vjudge": false
}