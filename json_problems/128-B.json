{
    "uid": "128-B",
    "url": "https://codeforces.com/contest/128/problem/B",
    "tags": [
        "brute force",
        " constructive algorithms",
        " hashing",
        " implementation",
        " string suffix structures",
        " strings"
    ],
    "title": "128-B",
    "statement": "B. Stringtime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutOne day in the IT lesson Anna and Maria learned about the lexicographic order.Stringxis lexicographically less than stringy, if eitherxis a prefix ofy(andx≠y), or there exists suchi(1 ≤i≤min(|x|, |y|)), thatxi<yi, and for anyj(1 ≤j<i)xj=yj. Here|a|denotes the length of the stringa. The lexicographic comparison of strings is implemented by operator < in modern programming languages​​.The teacher gave Anna and Maria homework. She gave them a string of lengthn. They should write out all substrings of the given string, including the whole initial string, and the equal substrings (for example, one should write out the following substrings from the string \"aab\": \"a\", \"a\", \"aa\", \"ab\", \"aab\", \"b\"). The resulting strings should be sorted in the lexicographical order. The cunning teacher doesn't want to check all these strings. That's why she said to find only thek-th string from the list. Help Anna and Maria do the homework.InputThe first line contains a non-empty string that only consists of small Latin letters (\"a\"-\"z\"), whose length does not exceed105. The second line contains the only integerk(1 ≤k≤ 105).OutputPrint the string Anna and Maria need — thek-th (in the lexicographical order) substring of the given string. If the total number of substrings is less thank, print a string saying \"No such line.\" (without the quotes).ExamplesInputaa2OutputaInputabc5OutputbcInputabab7OutputbNoteIn the second sample before string \"bc\" follow strings \"a\", \"ab\", \"abc\", \"b\".",
    "source": "CF",
    "vjudge": false
}