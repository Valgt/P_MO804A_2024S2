{
    "uid": "1291-F",
    "url": "https://codeforces.com/contest/1291/problem/F",
    "tags": [
        "graphs",
        " interactive"
    ],
    "title": "1291-F",
    "statement": "F. Coffee Varieties (easy version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is the easy version of the problem. You can find the hard version in the Div. 1 contest. Both versions only differ in the number of times you can ask your friend to taste coffee.This is an interactive problem.You're considering moving to another city, where one of your friends already lives. There are $$$n$$$ cafés in this city, where $$$n$$$ is a power of two. The $$$i$$$-th café produces a single variety of coffee $$$a_i$$$.As you're a coffee-lover, before deciding to move or not,you want to know the number $$$d$$$ of distinct varieties of coffeesproduced in this city.You don't know the values $$$a_1, \\\\ldots, a_n$$$. Fortunately, your friend has a memory of size $$$k$$$, where $$$k$$$ is a power of two.Once per day, you can ask him to taste a cup of coffee produced by the café $$$c$$$, and he will tell you if he tasted a similar coffee during the last $$$k$$$ days.You can also ask him to take a medication that will reset his memory. He will forget all previous cups of coffee tasted. You can reset his memory at most $$$30\\\\ 000$$$ times.More formally, the memory of your friend is a queue $$$S$$$. Doing a query on café $$$c$$$ will:Tell you if $$$a_c$$$ is in $$$S$$$;Add $$$a_c$$$ at the back of $$$S$$$;If $$$|S| > k$$$, pop the front element of $$$S$$$.Doing a reset request will pop all elements out of $$$S$$$.Your friend can taste at most $$$\\\\dfrac{2n^2}{k}$$$ cups of coffee in total. Find the diversity $$$d$$$ (number of distinct values in the array $$$a$$$).Note that asking your friend to reset his memorydoes not counttowards the number of times you ask your friend to taste a cup of coffee.In some test cases the behavior of the interactoris adaptive. It means that the array $$$a$$$ may benot fixedbefore the start of the interaction and maydepend on your queries. It is guaranteed that at any moment of the interaction, there is at least one array $$$a$$$ consistent with all the answers given so far.InputThe first line contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\\\le k \\\\le n \\\\le 1024$$$, $$$k$$$ and $$$n$$$ are powers of two).It is guaranteed that $$$\\\\dfrac{2n^2}{k} \\\\le 20\\\\ 000$$$.InteractionYou begin the interaction by reading $$$n$$$ and $$$k$$$.To ask your friend to taste a cup of coffee produced by the café $$$c$$$, in a separate line output? $$$c$$$Where $$$c$$$ must satisfy $$$1 \\\\le c \\\\le n$$$. Don't forget to flush, to get the answer.In response, you will receive a single letterY(yes) orN(no), telling you if variety $$$a_c$$$ is one of the last $$$k$$$ varieties of coffee in his memory.To reset the memory of your friend, in a separate line output the single letterRin upper case. You can do this operation at most $$$30\\\\ 000$$$ times.When you determine the number $$$d$$$ of different coffee varieties, output! $$$d$$$In case your query is invalid, you asked more than $$$\\\\frac{2n^2}{k}$$$ queries of type?or you asked more than $$$30\\\\ 000$$$ queries of typeR, the program will print the letterEand will finish interaction. You will receive aWrong Answerverdict. Make sure to exit immediately to avoid getting other verdicts.After printing a query do not forget to output end of line and flush the output. Otherwise, you will getIdleness limit exceeded. To do this, use:fflush(stdout)orcout.flush()in C++;System.out.flush()in Java;flush(output)in Pascal;stdout.flush()in Python;see documentation for other languages.Hack formatThe first line should contain the wordfixedThe second line should contain two integers $$$n$$$ and $$$k$$$, separated by space ($$$1 \\\\le k \\\\le n \\\\le 1024$$$, $$$k$$$ and $$$n$$$ are powers of two).It must hold that $$$\\\\dfrac{2n^2}{k} \\\\le 20\\\\ 000$$$.The third line should contain $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$, separated by spaces ($$$1 \\\\le a_i \\\\le n$$$).ExamplesInput4 2 N N Y N N N NOutput? 1 ? 2 ? 3 ? 4 R ? 4 ? 1 ? 2 ! 3Input8 8 N N N N Y YOutput? 2 ? 6 ? 4 ? 5 ? 2 ? 5 ! 6NoteIn the first example, the array is $$$a = [1, 4, 1, 3]$$$. The city produces $$$3$$$ different varieties of coffee ($$$1$$$, $$$3$$$ and $$$4$$$).The successive varieties of coffee tasted by your friend are $$$1, 4, \\\\textbf{1}, 3, 3, 1, 4$$$ (bold answers correspond toYanswers). Note that between the two? 4asks, there is a reset memory requestR, so the answer to the second? 4ask isN. Had there been no reset memory request, the answer to the second? 4ask isY.In the second example, the array is $$$a = [1, 2, 3, 4, 5, 6, 6, 6]$$$. The city produces $$$6$$$ different varieties of coffee.The successive varieties of coffee tasted by your friend are $$$2, 6, 4, 5, \\\\textbf{2}, \\\\textbf{5}$$$.",
    "source": "CF",
    "vjudge": false
}