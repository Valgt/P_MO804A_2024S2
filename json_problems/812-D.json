{
    "uid": "812-D",
    "url": "https://codeforces.com/contest/812/problem/D",
    "tags": [
        "dfs and similar",
        " graphs",
        " implementation",
        " trees"
    ],
    "title": "812-D",
    "statement": "D. Sagheer and Kindergartentime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSagheer is working at a kindergarten. There arenchildren andmdifferent toys. These children use well-defined protocols for playing with the toys:Each child has a lovely set of toys that he loves to play with. He requests the toys one after another at distinct moments of time. A child starts playing if and only if he is granted all the toys in his lovely set.If a child starts playing, then sooner or later he gives the toys back. No child keeps the toys forever.Children request toys at distinct moments of time. No two children request a toy at the same time.If a child is granted a toy, he never gives it back until he finishes playing with his lovely set.If a child is not granted a toy, he waits until he is granted this toy. He can't request another toy while waiting.If two children are waiting for the same toy, then the child who requested it first will take the toy first.Children don't like to play with each other. That's why they never share toys. When a child requests a toy, then granting the toy to this child depends on whether the toy is free or not. If the toy is free, Sagheer will give it to the child. Otherwise, the child has to wait for it and can't request another toy.Children are smart and can detect if they have to wait forever before they get the toys they want. In such case they start crying. In other words, a crying set is a set of children in which each child is waiting for a toy that is kept by another child in the set.Now, we have reached a scenario where all the children made all the requests for their lovely sets, except for one childxthat still has one last request for his lovely set. Some children are playing while others are waiting for a toy, but no child is crying, and no one has yet finished playing. If the childxis currently waiting for some toy, he makes his last request just after getting that toy. Otherwise, he makes the request right away. When childxwill make his last request, how many children will start crying?You will be given the scenario andqindependentqueries. Each query will be of the formxymeaning that the last request of the childxis for the toyy. Your task is to help Sagheer find the size of themaximalcrying set when childxmakes his last request.InputThe first line contains four integersn,m,k,q(1 ≤n,m,k,q≤ 105) — the number of children, toys, scenario requests and queries.Each of the nextklines contains two integersa,b(1 ≤a≤nand1 ≤b≤m) — a scenario request meaning childarequests toyb. The requests are given in the order they are made by children.Each of the nextqlines contains two integersx,y(1 ≤x≤nand1 ≤y≤m) — the request to be added to the scenario meaning childxwill request toyyjust after getting the toy he is waiting for (if any).It is guaranteed that the scenario requests are consistent and no child is initially crying. All the scenario requests are distinct and no query coincides with a scenario request.OutputFor each query, print on a single line the number of children who will start crying when childxmakes his last request for toyy. Please answer all queries independent of each other.ExamplesInput3 3 5 11 12 23 31 22 33 1Output3Input5 4 7 21 12 22 15 13 34 44 15 35 4Output02NoteIn the first example, child1is waiting for toy2, which child2has, while child2is waiting for top3, which child3has. When child3makes his last request, the toy he requests is held by child1. Each of the three children is waiting for a toy held by another child and no one is playing, so all the three will start crying.In the second example, at the beginning, childiis holding toyifor1 ≤i≤ 4. Children1and3have completed their lovely sets. After they finish playing, toy3will be free while toy1will be taken by child2who has just completed his lovely set. After he finishes, toys1and2will be free and child5will take toy1. Now:In the first query, child5will take toy3and after he finishes playing, child4can play.In the second query, child5will request toy4which is held by child4. At the same time, child4is waiting for toy1which is now held by child5. None of them can play and they will start crying.",
    "source": "CF",
    "vjudge": false
}