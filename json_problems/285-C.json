{
    "uid": "285-C",
    "url": "https://codeforces.com/contest/285/problem/C",
    "tags": [
        "greedy",
        " implementation",
        " sortings"
    ],
    "title": "285-C",
    "statement": "C. Building Permutationtime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutPermutationpis an ordered set of integersp1,p2,  ...,pn, consisting ofndistinct positive integers, each of them doesn't exceedn. We'll denote thei-th element of permutationpaspi. We'll call numbernthe size or the length of permutationp1,p2,  ...,pn.You have a sequence of integersa1,a2, ...,an. In one move, you are allowed to decrease or increase any number by one. Count the minimum number of moves, needed to build a permutation from this sequence.InputThe first line contains integern(1 ≤n≤ 3·105) — the size of the sought permutation. The second line containsnintegersa1,a2, ...,an(- 109≤ai≤ 109).OutputPrint a single number — the minimum number of moves.Please, do not use the%lldspecifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the%I64dspecifier.ExamplesInput23 0Output2Input3-1 -1 2Output6NoteIn the first sample you should decrease the first number by one and then increase the second number by one. The resulting permutation is(2, 1).In the second sample you need 6 moves to build permutation(1, 3, 2).",
    "source": "CF",
    "vjudge": false
}