{
    "uid": "652-C",
    "url": "https://codeforces.com/contest/652/problem/C",
    "tags": [
        "combinatorics",
        " sortings",
        " two pointers"
    ],
    "title": "652-C",
    "statement": "C. Foe Pairstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a permutationpof lengthn. Also you are givenmfoe pairs(ai,bi)(1 ≤ai,bi≤n,ai≠bi).Your task is to count the number of different intervals(x,y)(1 ≤x≤y≤n) that do not contain any foe pairs. So you shouldn't count intervals(x,y)that contain at least one foe pair in it (the positions and order of the values from the foe pair are not important).Consider some example:p= [1, 3, 2, 4]and foe pairs are{(3, 2), (4, 2)}. The interval(1, 3)is incorrect because it contains a foe pair(3, 2). The interval(1, 4)is also incorrect because it contains two foe pairs(3, 2)and(4, 2). But the interval(1, 2)is correct because it doesn't contain any foe pair.InputThe first line contains two integersnandm(1 ≤n,m≤ 3·105) — the length of the permutationpand the number of foe pairs.The second line containsndistinct integerspi(1 ≤pi≤n) — the elements of the permutationp.Each of the nextmlines contains two integers(ai,bi)(1 ≤ai,bi≤n,ai≠bi) — thei-th foe pair. Note a foe pair can appear multiple times in the given list.OutputPrint the only integerc— the number of different intervals(x,y)that does not contain any foe pairs.Note that the answer can be too large, so you should use64-bit integer type to store it. InC++you can use thelong longinteger type and inJavayou can uselonginteger type.ExamplesInput4 21 3 2 43 22 4Output5Input9 59 7 2 3 1 4 6 5 81 64 52 77 22 7Output20NoteIn the first example the intervals from the answer are(1, 1),(1, 2),(2, 2),(3, 3)and(4, 4).",
    "source": "CF",
    "vjudge": false
}