{
    "uid": "756-F",
    "url": "https://codeforces.com/contest/756/problem/F",
    "tags": [
        "expression parsing",
        " math",
        " number theory"
    ],
    "title": "756-F",
    "statement": "F. Long numbertime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputConsider the following grammar:<expression> ::= <term> | <expression> '+' <term><term> ::= <number> | <number> '-' <number> | <number> '(' <expression> ')'<number> ::= <pos_digit> | <number> <digit><digit> ::= '0' | <pos_digit><pos_digit> ::= '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'This grammar describes a number in decimal system using the following rules:<number>describes itself,<number>-<number>(l-r,l≤r) describes integer which is concatenation of all integers fromltor, written without leading zeros. For example,8-11describes891011,<number>(<expression>)describes integer which is concatenation of <number> copies of integer described by<expression>,<expression>+<term>describes integer which is concatenation of integers described by<expression>and<term>.For example,2(2-4+1)+2(2(17))describes the integer2341234117171717.You are given an expression in the given grammar. Print the integer described by it modulo109+ 7.InputThe only line contains a non-empty string at most105characters long which is valid according to the given grammar. In particular, it means that in termsl-rl≤rholds.OutputPrint single integer — the number described by the expression modulo109+ 7.ExamplesInput8-11Output891011Input2(2-4+1)+2(2(17))Output100783079Input1234-5678Output745428774Input1+2+3+4-5+6+7-9Output123456789",
    "source": "CF",
    "vjudge": false
}