{
    "uid": "445-A",
    "url": "https://codeforces.com/contest/445/problem/A",
    "tags": [
        "dfs and similar",
        " implementation"
    ],
    "title": "445-A",
    "statement": "A. DZY Loves Chessboardtime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutDZY loves chessboard, and he enjoys playing with it.He has a chessboard ofnrows andmcolumns. Some cells of the chessboard are bad, others are good. For every good cell, DZY wants to put a chessman on it. Each chessman is either white or black. After putting all chessmen, DZY wants that no two chessmen with the same color are on two adjacent cells. Two cells are adjacent if and only if they share a common edge.You task is to find any suitable placement of chessmen on the given chessboard.InputThe first line contains two space-separated integersnandm(1 ≤n,m≤ 100).Each of the nextnlines contains a string ofmcharacters: thej-th character of thei-th string is either \".\" or \"-\". A \".\" means that the corresponding cell (in thei-th row and thej-th column) is good, while a \"-\" means it is bad.OutputOutput must containnlines, each line must contain a string ofmcharacters. Thej-th character of thei-th string should be either \"W\", \"B\" or \"-\". Character \"W\" means the chessman on the cell is white, \"B\" means it is black, \"-\" means the cell is a bad cell.If multiple answers exist, print any of them. It is guaranteed that at least one answer exists.ExamplesInput1 1.OutputBInput2 2....OutputBWWBInput3 3.-.-----.OutputB-B-----BNoteIn the first sample, DZY puts a single black chessman. Of course putting a white one is also OK.In the second sample, all4cells are good. No two same chessmen share an edge in the sample output.In the third sample, no good cells are adjacent. So you can just put3chessmen, no matter what their colors are.",
    "source": "CF",
    "vjudge": false
}