{
    "uid": "1391-B",
    "url": "https://codeforces.com/contest/1391/problem/B",
    "tags": [
        "brute force",
        " greedy",
        " implementation"
    ],
    "title": "1391-B",
    "statement": "B. Fix Youtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputConsider a conveyor belt represented using a grid consisting of $$$n$$$ rows and $$$m$$$ columns. The cell in the $$$i$$$-th row from the top and the $$$j$$$-th column from the left is labelled $$$(i,j)$$$.Every cell, except $$$(n,m)$$$, has a directionR(Right) orD(Down) assigned to it. If the cell $$$(i,j)$$$ is assigned directionR, any luggage kept on that will move to the cell $$$(i,j+1)$$$. Similarly, if the cell $$$(i,j)$$$ is assigned directionD, any luggage kept on that will move to the cell $$$(i+1,j)$$$. If at any moment, the luggage moves out of the grid, it is considered to be lost.There is a counter at the cell $$$(n,m)$$$ from where all luggage is picked. A conveyor belt is calledfunctionalif and only if any luggage reaches the counter regardless of which cell it is placed in initially. More formally, for every cell $$$(i,j)$$$, any luggage placed in this cell should eventually end up in the cell $$$(n,m)$$$.This may not hold initially; you are, however, allowed tochangethe directions of some cells to make the conveyor belt functional. Please determine the minimum amount of cells you have to change.Please note that it is always possible to make any conveyor belt functional by changing the directions of some set of cells.InputEach test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\\\le t \\\\le 10$$$). Description of the test cases follows.The first line of each test case contains two integers $$$n, m$$$ ($$$1 \\\\le n \\\\le 100$$$, $$$1 \\\\le m \\\\le 100$$$)  — the number of rows and columns, respectively.The following $$$n$$$ lines each contain $$$m$$$ characters. The $$$j$$$-th character in the $$$i$$$-th line, $$$a_{i,j}$$$ is the initial direction of the cell $$$(i, j)$$$. Please note that $$$a_{n,m}=$$$C.OutputFor each case, output in a new line the minimum number of cells that you have to change to make the conveyor belt functional.ExampleInput4 3 3 RRD DDR RRC 1 4 DDDC 6 9 RDDDDDRRR RRDDRRDDD RRDRDRRDR DDDDRDDRR DRRDRDDDR DDRDRRDDC 1 1 COutput1 3 9 0NoteIn the first case, just changing the direction of $$$(2,3)$$$ toDis enough.You can verify that the resulting belt is functional. For example, if we place any luggage at $$$(2,2)$$$, it first moves to $$$(3,2)$$$ and then to $$$(3,3)$$$.In the second case, we have no option but to change the first $$$3$$$ cells fromDtoRmaking the grid equal toRRRC.",
    "source": "CF",
    "vjudge": false
}