{
    "uid": "40-E",
    "url": "https://codeforces.com/contest/40/problem/E",
    "tags": [
        "combinatorics"
    ],
    "title": "40-E",
    "statement": "E. Number Tabletime limit per test2 secondsmemory limit per test216 megabytesinputstdinoutputstdoutAs it has been found out recently, all the Berland's current economical state can be described using a simple tablen×min size.n— the number of days in each Berland month,m— the number of months. Thus, a table cell corresponds to a day and a month of the Berland's year. Each cell will contain either1, or-1, which means the state's gains in a particular month, on a particular day.1corresponds to profits,-1corresponds to losses. It turned out important for successful development to analyze the data on the state of the economy of the previous year, however when the treasurers referred to the archives to retrieve the data, it turned out that the table had been substantially damaged. In some table cells the number values had faded and were impossible to be deciphered. It is known that the number of cells in which the data had been preserved is strictly less thanmax(n,m). However, there is additional information — the product of the numbers in each line and column equaled-1. Your task is to find out how many different tables may conform to the preserved data. As the answer to the task can be quite large, you have to find it modulop.InputThe first line contains integersnandm(1 ≤n,m≤ 1000). The second line contains the integerk(0 ≤k<max(n,m)) — the number of cells in which the data had been preserved. The nextklines contain the data on the state of the table in the preserved cells. Each line is of the form \"abc\", wherea(1 ≤a≤n) — the number of the table row,b(1 ≤b≤m) — the number of the column,c— the value containing in the cell (1or-1). They are numbered starting from1. It is guaranteed that no two lines with sameaandbvalues exist. The last line contains an integerp(2 ≤p≤ 109+ 7).OutputPrint the number of different tables that could conform to the preserved data modulop.ExamplesInput2 20100Output2Input2 211 1 -1100Output1",
    "source": "CF",
    "vjudge": false
}