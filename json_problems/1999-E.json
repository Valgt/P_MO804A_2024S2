{
    "uid": "1999-E",
    "url": "https://codeforces.com/contest/1999/problem/E",
    "tags": [
        "dp",
        " implementation",
        " math"
    ],
    "title": "1999-E",
    "statement": "E. Triple Operationstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOn the board Ivy wrote down all integers from $$$l$$$ to $$$r$$$, inclusive.In an operation, she does the following:pick two numbers $$$x$$$ and $$$y$$$ on the board, erase them, and in their place write the numbers $$$3x$$$ and $$$\\\\lfloor \\\\frac{y}{3} \\\\rfloor$$$. (Here $$$\\\\lfloor \\\\bullet \\\\rfloor$$$ denotes rounding down to the nearest integer).What is the minimum number of operations Ivy needs to make all numbers on the board equal $$$0$$$? We have a proof that this is always possible.InputThe first line contains an integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$) — the number of test cases.The only line of each test case contains two integers $$$l$$$ and $$$r$$$ ($$$1 \\\\leq l < r \\\\leq 2 \\\\cdot 10^5$$$).OutputFor each test case, output a single integer — the minimum number of operations needed to make all numbers on the board equal $$$0$$$.ExampleInput41 32 4199999 20000019 84Output5 6 36 263NoteIn the first test case, we can perform $$$5$$$ operations as follows: $$$$$$ 1,2,3 \\\\xrightarrow[x=1,\\\\,y=2]{} 3,0,3 \\\\xrightarrow[x=0,\\\\,y=3]{} 1,0,3 \\\\xrightarrow[x=0,\\\\,y=3]{} 1,0,1 \\\\xrightarrow[x=0,\\\\,y=1]{} 0,0,1 \\\\xrightarrow[x=0,\\\\,y=1]{} 0,0,0 .$$$$$$",
    "source": "CF",
    "vjudge": false
}