{
    "uid": "618-E",
    "url": "https://codeforces.com/contest/618/problem/E",
    "tags": [
        "data structures",
        " geometry"
    ],
    "title": "618-E",
    "statement": "E. Robot Armtime limit per test8 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRoger is a robot. He has an arm that is a series ofnsegments connected to each other. The endpoints of thei-th segment are initially located at points(i- 1, 0)and(i, 0). The endpoint at(i- 1, 0)is colored red and the endpoint at(i, 0)is colored blue for all segments. Thus, the blue endpoint of thei-th segment is touching the red endpoint of the(i+ 1)-th segment for all validi.Roger can move his arm in two different ways:He can choose some segment and some value. This is denoted as choosing the segment numberiand picking some positivel. This change happens as follows: the red endpoint of segment numberiand segments from1toi- 1are all fixed in place. Imagine a ray from the red endpoint to the blue endpoint. The blue endpoint and segmentsi+ 1throughnare translatedlunits in the direction of this ray.In this picture, the red point labeledAand segments beforeAstay in place, while the blue point labeledBand segments afterBgets translated.He can choose a segment and rotate it. This is denoted as choosing the segment numberi, and an anglea. The red endpoint of thei-th segment will stay fixed in place. The blue endpoint of that segment and segmentsi+ 1tonwill rotate clockwise by an angle ofadegrees around the red endpoint.In this picture, the red point labeledAand segments beforeAstay in place, while the blue point labeledBand segments afterBget rotated around pointA.Roger will move his armmtimes. These transformations are a bit complicated, and Roger easily loses track of where the blue endpoint of the last segment is. Help him compute the coordinates of the blue endpoint of the last segment after applying each operation. Note that these operations are cumulative, and Roger's arm may intersect itself arbitrarily during the moves.InputThe first line of the input will contain two integersnandm(1 ≤n,m≤ 300 000) — the number of segments and the number of operations to perform.Each of the nextmlines contains three integersxi,yiandzidescribing a move. Ifxi= 1, this line describes a move of type1, whereyidenotes the segment number andzidenotes the increase in the length. Ifxi= 2, this describes a move of type 2, whereyidenotes the segment number, andzidenotes the angle in degrees. (1 ≤xi≤ 2, 1 ≤yi≤n, 1 ≤zi≤ 359)OutputPrintmlines. Thei-th line should contain two real values, denoting the coordinates of the blue endpoint of the last segment after applying operations1, ...,i. Your answer will be considered correct if its absolute or relative error does not exceed10- 4.Namely, let's assume that your answer for a particular value of a coordinate isaand the answer of the jury isb. The checker program will consider your answer correct iffor all coordinates.ExamplesInput5 41 1 32 3 902 5 481 4 1Output8.0000000000 0.00000000005.0000000000 -3.00000000004.2568551745 -2.66913060644.2568551745 -3.6691306064NoteThe following pictures shows the state of the arm after each operation. The coordinates of pointFare printed after applying each operation. For simplicity, we only show the blue endpoints of a segment (with the exception for the red endpoint of the first segment). For instance, the point labeledBis the blue endpoint for segment1and also the red endpoint for segment2.Initial state:Extend segment1by3.Rotate segment3by90degrees clockwise.Rotate segment5by48degrees clockwise.Extend segment4by1.",
    "source": "CF",
    "vjudge": false
}