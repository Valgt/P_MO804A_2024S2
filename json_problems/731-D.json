{
    "uid": "731-D",
    "url": "https://codeforces.com/contest/731/problem/D",
    "tags": [
        "brute force",
        " data structures",
        " greedy",
        " sortings"
    ],
    "title": "731-D",
    "statement": "D. 80-th Level Archeologytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputArcheologists have found a secret pass in the dungeon of one of the pyramids of Cycleland. To enter the treasury they have to open an unusual lock on the door. The lock consists ofnwords, each consisting of some hieroglyphs. The wall near the lock has a round switch. Each rotation of this switch changes the hieroglyphs according to some rules. The instruction nearby says that the door will open only if words written on the lock would be sorted inlexicographical order(the definition of lexicographical comparison in given in notes section).The rule that changes hieroglyphs is the following. One clockwise rotation of the round switch replaces each hieroglyph with the next hieroglyph in alphabet, i.e. hieroglyphx(1 ≤x≤c- 1) is replaced with hieroglyph(x+ 1), and hieroglyphcis replaced with hieroglyph1.Help archeologist determine, how many clockwise rotations they should perform in order to open the door, or determine that this is impossible, i.e. no cyclic shift of the alphabet will make the sequence of words sorted lexicographically.InputThe first line of the input contains two integersnandc(2 ≤n≤ 500 000,1 ≤c≤ 106) — the number of words, written on the lock, and the number of different hieroglyphs.Each of the followingnlines contains the description of one word. Thei-th of these lines starts with integerli(1 ≤li≤ 500 000), that denotes the length of thei-th word, followed byliintegerswi, 1,wi, 2, ...,wi,li(1 ≤wi,j≤c) — the indices of hieroglyphs that make up thei-th word. Hieroglyph with index1is the smallest in the alphabet and with indexc— the biggest.It's guaranteed, that the total length of all words doesn't exceed106.OutputIf it is possible to open the door by rotating the round switch, print integerx(0 ≤x≤c- 1) that defines the required number of clockwise rotations. If there are several validx, print any of them.If it is impossible to open the door by this method, print- 1.ExamplesInput4 32 3 21 13 2 3 14 2 3 1 2Output1Input2 52 4 22 4 2Output0Input4 41 21 31 41 2Output-1NoteWorda1,a2, ...,amof lengthmislexicographically not greaterthan wordb1,b2, ...,bkof lengthk, if one of two conditions hold:at first positioni, such thatai≠bi, the characteraigoes earlier in the alphabet than characterbi, i.e.ahas smaller character in the first position where they differ;if there is no such positioniandm≤k, i.e. the first word is a prefix of the second or two words are equal.The sequence of words is said to be sorted in lexicographical order if each word (except the last one) is lexicographically not greater than the next word.In the first sample, after the round switch is rotated1position clockwise the words look as follows:1 323 1 23 1 2 3In the second sample, words are already sorted in lexicographical order.In the last sample, one can check that no shift of the alphabet will work.",
    "source": "CF",
    "vjudge": false
}