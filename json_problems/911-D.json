{
    "uid": "911-D",
    "url": "https://codeforces.com/contest/911/problem/D",
    "tags": [
        "brute force",
        " math"
    ],
    "title": "911-D",
    "statement": "D. Inversion Countingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA permutation of sizenis an array of sizensuch that each integer from1tonoccurs exactly once in this array. An inversion in a permutationpis a pair of indices(i,j)such thati>jandai<aj. For example, a permutation[4, 1, 3, 2]contains4inversions:(2, 1),(3, 1),(4, 1),(4, 3).You are given a permutationaof sizenandmqueries to it. Each query is represented by two indiceslandrdenoting that you have to reverse the segment[l,r]of the permutation. For example, ifa= [1, 2, 3, 4]and a queryl= 2,r= 4is applied, then the resulting permutation is[1, 4, 3, 2].After each query you have to determine whether the number of inversions is odd or even.InputThe first line contains one integern(1 ≤n≤ 1500) — the size of the permutation.The second line containsnintegersa1,a2, ...,an(1 ≤ai≤n) — the elements of the permutation. These integers are pairwise distinct.The third line contains one integerm(1 ≤m≤ 2·105) — the number of queries to process.Thenmlines follow,i-th line containing two integersli,ri(1 ≤li≤ri≤n) denoting thati-th query is to reverse a segment[li,ri]of the permutation. All queries are performed one after another.OutputPrintmlines.i-th of them must be equal tooddif the number of inversions in the permutation afteri-th query is odd, andevenotherwise.ExamplesInput31 2 321 22 3OutputoddevenInput41 2 4 341 11 41 42 3OutputoddoddoddevenNoteThe first example:after the first querya= [2, 1, 3], inversion:(2, 1);after the second querya= [2, 3, 1], inversions:(3, 1),(3, 2).The second example:a= [1, 2, 4, 3], inversion:(4, 3);a= [3, 4, 2, 1], inversions:(3, 1),(4, 1),(3, 2),(4, 2),(4, 3);a= [1, 2, 4, 3], inversion:(4, 3);a= [1, 4, 2, 3], inversions:(3, 2),(4, 2).",
    "source": "CF",
    "vjudge": false
}