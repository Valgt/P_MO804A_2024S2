{
    "uid": "638-D",
    "url": "https://codeforces.com/contest/638/problem/D",
    "tags": [
        "brute force",
        " dfs and similar",
        " graphs"
    ],
    "title": "638-D",
    "statement": "D. Three-dimensional Turtle Super Computertime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA super computer has been built in the Turtle Academy of Sciences. The computer consists ofn·m·kCPUs. The architecture was the paralellepiped of sizen×m×k, split into1 × 1 × 1cells, each cell contains exactly one CPU. Thus, each CPU can be simultaneously identified as a group of three numbers from the layer number from1ton, the line number from1tomand the column number from1tok.In the process of the Super Computer's work the CPUs can send each other messages by the famous turtle scheme: CPU(x,y,z)can send messages to CPUs(x+ 1,y,z),(x,y+ 1,z)and(x,y,z+ 1)(of course, if they exist), there is no feedback, that is, CPUs(x+ 1,y,z),(x,y+ 1,z)and(x,y,z+ 1)cannot send messages to CPU(x,y,z).Over time some CPUs broke down and stopped working. Such CPUs cannot send messages, receive messages or serve as intermediates in transmitting messages. We will say that CPU(a,b,c)controlsCPU(d,e,f), if there is a chain of CPUs(xi,yi,zi), such that(x1=a,y1=b,z1=c),(xp=d,yp=e,zp=f)(here and belowpis the length of the chain) and the CPU in the chain with numberi(i<p) can send messages to CPUi+ 1.Turtles are quite concerned about the denial-proofness of the system of communication between the remaining CPUs. For that they want to know the number of critical CPUs. A CPU(x,y,z)iscritical, if turning it off will disrupt some control, that is, if there are two distinctive from(x,y,z)CPUs:(a,b,c)and(d,e,f), such that(a,b,c)controls(d,e,f)before(x,y,z)is turned off and stopped controlling it after the turning off.InputThe first line contains three integersn,mandk(1 ≤n,m,k≤ 100) — the dimensions of the Super Computer.Thennblocks follow, describing the current state of the processes. The blocks correspond to the layers of the Super Computer in the order from1ton. Each block consists ofmlines,kcharacters in each — the description of a layer in the format of anm×ktable. Thus, the state of the CPU(x,y,z)is corresponded to thez-th character of they-th line of the block numberx. Character \"1\" corresponds to a working CPU and character \"0\" corresponds to a malfunctioning one. The blocks are separated by exactly one empty line.OutputPrint a single integer — the number of critical CPUs, that is, such that turning only this CPU off will disrupt some control.ExamplesInput2 2 3000000111111Output2Input3 3 3111111111111111111111111111Output19Input1 1 100101010101Output0NoteIn the first sample the whole first layer of CPUs is malfunctional. In the second layer when CPU(2, 1, 2)turns off, it disrupts the control by CPU(2, 1, 3)over CPU(2, 1, 1), and when CPU(2, 2, 2)is turned off, it disrupts the control over CPU(2, 2, 3)by CPU(2, 2, 1).In the second sample all processors except for the corner ones are critical.In the third sample there is not a single processor controlling another processor, so the answer is0.",
    "source": "CF",
    "vjudge": false
}