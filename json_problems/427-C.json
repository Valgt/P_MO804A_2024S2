{
    "uid": "427-C",
    "url": "https://codeforces.com/contest/427/problem/C",
    "tags": [
        "dfs and similar",
        " graphs",
        " two pointers"
    ],
    "title": "427-C",
    "statement": "C. Checkpoststime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutYour city hasnjunctions. There aremone-wayroads between the junctions. As a mayor of the city, you have to ensure the security of all the junctions.To ensure the security, you have to build some police checkposts. Checkposts can only be built in a junction. A checkpost at junctionican protect junctionjif eitheri=jor the police patrol car can go tojfromiand then come back toi.Building checkposts costs some money. As some areas of the city are more expensive than others, building checkpost at some junctions might cost more money than other junctions.You have to determine the minimum possible money needed to ensure the security of all the junctions. Also you have to find the number of ways to ensure the security in minimum price andin addition in minimum number of checkposts. Two ways are different if any of the junctions contains a checkpost in one of them and do not contain in the other.InputIn the first line, you will be given an integern, number of junctions(1 ≤n≤ 105). In the next line,nspace-separated integers will be given. Theithinteger is the cost of building checkpost at theithjunction (costs will be non-negative and will not exceed109).The next line will contain an integerm(0 ≤m≤ 3·105). And each of the nextmlines contains two integersuiandvi(1 ≤ui,vi≤n;u≠v). A pairui,vimeans, that there is a one-way road which goes fromuitovi. There will not be more than one road between two nodes in the same direction.OutputPrint two integers separated by spaces. The first one is the minimum possible money needed to ensure the security of all the junctions. And the second one is the number of ways you can ensure the security modulo1000000007(109+ 7).ExamplesInput31 2 331 22 33 2Output3 1Input52 8 0 6 061 41 32 43 44 55 1Output8 2Input101 3 2 2 1 3 1 4 10 10121 22 33 13 44 55 65 76 47 38 99 1010 9Output15 6Input27 9121 22 1Output7 1",
    "source": "CF",
    "vjudge": false
}