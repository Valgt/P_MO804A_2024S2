{
    "uid": "666-E",
    "url": "https://codeforces.com/contest/666/problem/E",
    "tags": [
        "data structures",
        " string suffix structures"
    ],
    "title": "666-E",
    "statement": "E. Forensic Examinationtime limit per test6 secondsmemory limit per test768 megabytesinputstandard inputoutputstandard outputThe country of Reberland is the archenemy of Berland. Recently the authorities of Berland arrested a Reberlandian spy who tried to bring the leaflets intended for agitational propaganda to Berland illegally . The most leaflets contain substrings of the Absolutely Inadmissible Swearword and maybe even the whole word.Berland legal system uses the difficult algorithm in order to determine the guilt of the spy. The main part of this algorithm is the following procedure.All themleaflets that are brought by the spy are numbered from1tom. After that it's needed to get the answer toqqueries of the following kind: \"In which leaflet in the segment of numbers[l,r]the substring of the Absolutely Inadmissible Swearword[pl,pr]occurs more often?\".The expert wants you to automate that procedure because this time texts of leaflets are too long. Help him!InputThe first line contains the strings(1 ≤ |s| ≤ 5·105) — the Absolutely Inadmissible Swearword. The stringsconsists of only lowercase English letters.The second line contains the only integerm(1 ≤m≤ 5·104) — the number of texts of leaflets for expertise.Each of the nextmlines contains the only stringti— the text of thei-th leaflet. The sum of lengths of all leaflet texts doesn't exceed5·104. The text of the leaflets consists of only lowercase English letters.The next line contains integerq(1 ≤q≤ 5·105) — the number of queries for expertise.Finally, each of the lastqlines contains four integersl,r,pl,pr(1 ≤l≤r≤m, 1 ≤pl≤pr≤ |s|), where|s|is the length of the Absolutely Inadmissible Swearword.OutputPrintqlines. Thei-th of them should contain two integers — the number of the text with the most occurences and the number of occurences of the substring[pl,pr]of the strings. If there are several text numbers print the smallest one.ExamplesInputsuffixtree3suffixtreesareawesomecartesiantreeisworsethansegmenttreenyeeheeheee21 2 1 101 3 9 10Output1 13 4",
    "source": "CF",
    "vjudge": false
}