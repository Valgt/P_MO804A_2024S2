{
    "uid": "180-F",
    "url": "https://codeforces.com/contest/180/problem/F",
    "tags": [
        "constructive algorithms",
        " implementation",
        " math"
    ],
    "title": "180-F",
    "statement": "F. Mathematical Analysis Rocks!time limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutStudents of group 199 have written their lectures dismally. Now an exam on Mathematical Analysis is approaching and something has to be done asap (that is, quickly). Let's number the students of the group from 1 ton. Each studenti(1 ≤i≤n) has a best friendp[i](1 ≤p[i] ≤n). In fact, each student is a best friend ofexactly onestudent. In other words, allp[i]are different. It is possible that the group also has some really \"special individuals\" for whoi=p[i].Each student wrote exactly one notebook of lecture notes. We know that the students agreed to act by the following algorithm:on the first day of revising each student studies his own Mathematical Analysis notes,in the morning of each following day each student gives the notebook to his best friend and takes a notebook from the student who calls him the best friend.Thus, on the second day the studentp[i](1 ≤i≤n) studies thei-th student's notes, on the third day the notes go to studentp[p[i]]and so on. Due to some characteristics of the boys' friendship (see paragraph 1), each day each student has exactly one notebook to study.You are given two sequences that describe the situation on the third and fourth days of revising:a1,a2, ...,an, whereaimeans the student who gets thei-th student's notebook on the third day of revising;b1,b2, ...,bn, wherebimeans the student who gets thei-th student's notebook on the fourth day of revising.You do not know arrayp, that is you do not know who is the best friend to who. Write a program that findspby the given sequencesaandb.InputThe first line contains integern(1 ≤n≤ 105) — the number of students in the group. The second line contains sequence of different integersa1,a2, ...,an(1 ≤ai≤n). The third line contains the sequence of different integersb1,b2, ...,bn(1 ≤bi≤n).OutputPrint sequencenof different integersp[1],p[2], ...,p[n](1 ≤p[i] ≤n). It is guaranteed that the solution exists and that it is unique.ExamplesInput42 1 4 33 4 2 1Output4 3 1 2Input55 2 3 1 41 3 2 4 5Output4 3 2 5 1Input21 22 1Output2 1",
    "source": "CF",
    "vjudge": false
}