{
    "uid": "457-E",
    "url": "https://codeforces.com/contest/457/problem/E",
    "tags": [
        "constructive algorithms",
        " flows",
        " math"
    ],
    "title": "457-E",
    "statement": "E. Flow Optimalitytime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutThere is a computer network consisting ofnnodes numbered 1 throughn. There are links in the network that connect pairs of nodes. A pair of nodes may have multiple links between them, but no node has a link to itself.Each link supports unlimited bandwidth (in either direction), however a link may only transmit in a single direction at any given time. The cost of sending data across a link is proportional to the square of the bandwidth. Specifically, each link has a positive weight, and the cost of sending data across the link is the weight times the square of the bandwidth.The network is connected (there is a series of links from any node to any other node), and furthermore designed to remain connected in the event of any single node failure.You needed to send data from node 1 to nodenat a bandwidth of some positive numberk. That is, you wish to assign a bandwidth to each link so that the bandwidth into a node minus the bandwidth out of a node is-kfor node 1,kfor noden, and 0 for all other nodes. The individual bandwidths do not need to be integers.Wishing to minimize the total cost, you drew a diagram of the network, then gave the task to an intern to solve. The intern claimed to have solved the task and written the optimal bandwidths on your diagram, but then spilled coffee on it, rendering much of it unreadable (including parts of the original diagram, and the value ofk).From the information available, determine if the intern's solution may have been optimal. That is, determine if there exists a valid network, total bandwidth, and optimal solution which is a superset of the given information. Furthermore, determine the efficiency of the intern's solution (if possible), where efficiency is defined as total cost divided by total bandwidth.InputInput will begin with two integersnandm(2 ≤n≤ 200000;0 ≤m≤ 200000), the number of nodes and number of known links in the network, respectively. Following this aremlines with four integers each:f,t,w,b(1 ≤f≤n; 1 ≤t≤n;f≠t; 1 ≤w≤ 100; 0 ≤b≤ 100). This indicates there is a link between nodesfandtwith weightwand carryingbbandwidth. The direction of bandwidth is fromftot.OutputIf the intern's solution is definitely not optimal, print \"BADx\", wherexis the first link in the input that violates the optimality of the solution. If the intern's solution may be optimal, print the efficiency of the solution if it can be determined rounded to the nearest integer, otherwise print \"UNKNOWN\".ExamplesInput4 51 2 1 21 3 4 12 3 2 12 4 4 13 4 1 2Output6Input5 52 3 1 13 4 1 14 2 1 11 5 1 11 5 100 100OutputBAD 3Input6 41 3 31 411 5 59 262 6 53 584 6 97 93OutputUNKNOWNInput7 51 7 2 12 3 1 14 5 1 06 1 10 01 3 1 1OutputBAD 4NoteAlthough the known weights and bandwidths happen to always be integers, the weights and bandwidths of the remaining links are not restricted to integers.",
    "source": "CF",
    "vjudge": false
}