{
    "uid": "723-F",
    "url": "https://codeforces.com/contest/723/problem/F",
    "tags": [
        "dsu",
        " graphs",
        " greedy",
        " implementation"
    ],
    "title": "723-F",
    "statement": "F. st-Spanning Treetime limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an undirected connected graph consisting ofnvertices andmedges. There are no loops and no multiple edges in the graph.You are also given two distinct verticessandt, and two valuesdsanddt. Your task is to build any spanning tree of the given graph (note that the graph is not weighted), such that the degree of the vertexsdoesn't exceedds, and the degree of the vertextdoesn't exceeddt, or determine, that there is no such spanning tree.Thespanning treeof the graphGis a subgraph which is a tree and contains all vertices of the graphG. In other words, it is a connected graph which containsn- 1edges and can be obtained by removing some of the edges fromG.The degree of a vertex is the number of edges incident to this vertex.InputThe first line of the input contains two integersnandm(2 ≤n≤ 200 000,1 ≤m≤min(400 000,n·(n- 1) / 2)) — the number of vertices and the number of edges in the graph.The nextmlines contain the descriptions of the graph's edges. Each of the lines contains two integersuandv(1 ≤u,v≤n,u≠v) — the ends of the corresponding edge. It is guaranteed that the graph contains no loops and no multiple edges and that it is connected.The last line contains four integerss,t,ds,dt(1 ≤s,t≤n,s≠t,1 ≤ds,dt≤n- 1).OutputIf the answer doesn't exist print \"No\" (without quotes) in the only line of the output.Otherwise, in the first line print \"Yes\" (without quotes). In the each of the next(n- 1)lines print two integers — the description of the edges of the spanning tree. Each of the edges of the spanning tree must be printed exactly once.You can output edges in any order. You can output the ends of each edge in any order.If there are several solutions, print any of them.ExamplesInput3 31 22 33 11 2 1 1OutputYes3 21 3Input7 87 41 35 45 73 22 46 11 26 4 1 4OutputYes1 35 73 27 42 46 1",
    "source": "CF",
    "vjudge": false
}