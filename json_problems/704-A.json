{
    "uid": "704-A",
    "url": "https://codeforces.com/contest/704/problem/A",
    "tags": [
        "brute force",
        " data structures",
        " implementation"
    ],
    "title": "704-A",
    "statement": "A. Thortime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThor is getting used to the Earth. As a gift Loki gave him a smartphone. There arenapplications on this phone. Thor is fascinated by this phone. He has only one minor issue: he can't count the number of unread notifications generated by those applications (maybe Loki put a curse on it so he can't).qevents are about to happen (in chronological order). They are of three types:Applicationxgenerates a notification (this new notification is unread).Thor reads all notifications generated so far by applicationx(he may re-read some notifications).Thor reads the firsttnotifications generated by phone applications (notifications generated in firsttevents of the first type). It's guaranteed that there were at leasttevents of the first type before this event. Please note that he doesn't read firsttunread notifications, he just reads the very firsttnotifications generated on his phone and he may re-read some of them in this operation.Please help Thor and tell him the number of unread notifications after each event. You may assume that initially there are no notifications in the phone.InputThe first line of input contains two integersnandq(1 ≤n,q≤ 300 000) — the number of applications and the number of events to happen.The nextqlines contain the events. Thei-th of these lines starts with an integertypei— type of thei-th event. Iftypei= 1ortypei= 2then it is followed by an integerxi. Otherwise it is followed by an integerti(1 ≤typei≤ 3, 1 ≤xi≤n, 1 ≤ti≤q).OutputPrint the number of unread notifications after each event.ExamplesInput3 41 31 11 22 3Output1232Input4 61 21 41 23 31 31 3Output123012NoteIn the first sample:Application3generates a notification (there is1unread notification).Application1generates a notification (there are2unread notifications).Application2generates a notification (there are3unread notifications).Thor reads the notification generated by application3, there are2unread notifications left.In the second sample test:Application2generates a notification (there is1unread notification).Application4generates a notification (there are2unread notifications).Application2generates a notification (there are3unread notifications).Thor reads first three notifications and since there are only three of them so far, there will be no unread notification left.Application3generates a notification (there is1unread notification).Application3generates a notification (there are2unread notifications).",
    "source": "CF",
    "vjudge": false
}