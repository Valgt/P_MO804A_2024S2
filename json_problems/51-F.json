{
    "uid": "51-F",
    "url": "https://codeforces.com/contest/51/problem/F",
    "tags": [
        "dfs and similar",
        " dp",
        " graphs",
        " trees"
    ],
    "title": "51-F",
    "statement": "F. Caterpillartime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutAn undirected graph is called acaterpillarif it is a connected graph without cycles and it has such a pathpthat any vertex is located at a distance of at most 1 from the pathp. The caterpillar can contain loops (edges from a vertex to itself) but cannot contain multiple (parallel) edges.The picture contains an example of a caterpillar:You are given an undirected graphG. You are allowed to do amerging operations, each such operation merges two vertices into one vertex. For that two any verticesaandb(a≠b) are chosen. These verteces are deleted together with their edges (which are incident to at least one of the verticesaorb) but a new vertexwis added together with edges(x,w)for each edge (a,w) and/or (b,w). If there was the edge(a,b)it transforms to the loop(w,w). The resulting graph (after the merging operation) may contain multiple (parallel) edges between pairs of vertices and loops. Let us note that this operation decreases the number of vertices of graph by 1 but leaves the number of edges in the graph unchanged.The merging operation can be informally described as a unity of two vertices of the graph into one with the natural transformation of the graph edges.You may apply this operation consecutively and make the given graph to be a caterpillar. Write a program that will print the minimal number of merging operations required to make the given graph a caterpillar.InputThe first line contains a pair of integersn,m(1 ≤n≤ 2000;0 ≤m≤ 105), wherenrepresents the number of vertices in the graph andmis the number of edges in it. Then the followingmlines contain edge descriptions, one edge description per line. Every line contains a pair of integersai,bi(1 ≤ai,bi≤n;ai≠bi),ai,biwhich represent the indices of the vertices connected by the edge. The vertices are numbered from 1 ton. In the given graph it will be no more than one edge between any pair of vertices. The given graph is not necessarily connected.OutputPrint the minimal required number of operations.ExamplesInput4 41 22 33 44 2Output2Input6 31 23 45 6Output2Input7 61 22 31 44 51 66 7Output1",
    "source": "CF",
    "vjudge": false
}