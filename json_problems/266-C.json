{
    "uid": "266-C",
    "url": "https://codeforces.com/contest/266/problem/C",
    "tags": [
        "constructive algorithms",
        " greedy",
        " math"
    ],
    "title": "266-C",
    "statement": "C. Below the Diagonaltime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutYou are given a square matrix consisting ofnrows andncolumns. We assume that the rows are numbered from1tonfrom top to bottom and the columns are numbered from1tonfrom left to right. Some cells (n- 1cells in total) of the the matrix are filled with ones, the remaining cells are filled with zeros. We can apply the following operations to the matrix:Swapi-th andj-th rows of the matrix;Swapi-th andj-th columns of the matrix.You are asked to transform the matrix into a special form using these operations. In that special form all the ones must be in the cells that lie below the main diagonal. Cell of the matrix, which is located on the intersection of thei-th row and of thej-th column, lies below the main diagonal ifi>j.InputThe first line contains an integern(2 ≤n≤ 1000)— the number of rows and columns. Then follown- 1lines that contain one's positions, one per line. Each position is described by two integersxk,yk(1 ≤xk,yk≤n), separated by a space. A pair(xk,yk)means that the cell, which is located on the intersection of thexk-th row and of theyk-th column, contains one.It is guaranteed that all positions are distinct.OutputPrint the description of your actions. These actions should transform the matrix to the described special form.In the first line you should print a non-negative integerm(m≤ 105)— the number of actions. In each of the nextmlines print three space-separated integerst,i,j(1 ≤t≤ 2, 1 ≤i,j≤n,i≠j), wheret= 1if you want to swap rows,t= 2if you want to swap columns, andiandjdenote the numbers of rows or columns respectively.Please note, that you do not need to minimize the number of operations, but their number should not exceed105. If there are several solutions, you may print any of them.ExamplesInput21 2Output22 1 21 1 2Input33 11 3Output32 2 31 1 31 1 2Input32 13 2Output0",
    "source": "CF",
    "vjudge": false
}