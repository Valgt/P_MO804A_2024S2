{
    "uid": "865-F",
    "url": "https://codeforces.com/contest/865/problem/F",
    "tags": [
        "bitmasks",
        " brute force",
        " divide and conquer",
        " math",
        " meet-in-the-middle"
    ],
    "title": "865-F",
    "statement": "F. Egg Roulettetime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe game of Egg Roulette is played between two players. Initially2Rraw eggs and2Ccooked eggs are placed randomly into a carton. The shells are left on so there is no way to distinguish a raw egg from a cooked egg. One at a time, a player will select an egg, and then smash the egg on his/her forehead. If the egg was cooked, not much happens, but if the egg was raw, it will make quite the mess. This continues until one player has brokenRraw eggs, at which point that player is declared the loser and the other player wins.The order in which players take turns can be described as a string of 'A' and 'B' characters, where thei-th character tells which player should choose thei-th egg. Traditionally, players take turns going one after the other. That is, they follow the ordering \"ABABAB...\". This isn't very fair though, because the second player will win more often than the first. We'd like you to find a better ordering for the players to take their turns. Let's define the unfairness of an ordering as the absolute difference between the first player's win probability and the second player's win probability. We're interested in orderings that minimize the unfairness. We only consider an ordering valid if it contains the same number of 'A's as 'B's.You will also be given a stringSof length2(R+C)containing only 'A', 'B', and '?' characters. An ordering is said to matchSif it only differs fromSin positions whereScontains a '?'. Of the valid orderings that minimize unfairness, how many matchS?InputThe first line of input will contain integersRandC(1 ≤R,C≤ 20,R+C≤ 30).The second line of input will contain the stringSof length2(R+C)consisting only of characters 'A', 'B', '?'.OutputPrint the number of valid orderings that minimize unfairness and matchS.ExamplesInput1 1??BBOutput0Input2 4?BA??B??A???Output1Input4 14????A??BB?????????????AB????????????Output314NoteIn the first test case, the minimum unfairness is0, and the orderings that achieve it are \"ABBA\" and \"BAAB\", neither of which matchS. Note that an ordering such as \"ABBB\" would also have an unfairness of0, but is invalid because it does not contain the same number of 'A's as 'B's.In the second example, the only matching ordering is \"BBAAABABABBA\".",
    "source": "CF",
    "vjudge": false
}