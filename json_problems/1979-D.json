{
    "uid": "1979-D",
    "url": "https://codeforces.com/contest/1979/problem/D",
    "tags": [
        "bitmasks",
        " brute force",
        " constructive algorithms",
        " dp",
        " greedy",
        " hashing",
        " strings"
    ],
    "title": "1979-D",
    "statement": "D. Fixing a Binary Stringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a binary string $$$s$$$ of length $$$n$$$, consisting of zeros and ones. You can perform the following operationexactly once:Choose an integer $$$p$$$ ($$$1 \\\\le p \\\\le n$$$).Reverse the substring $$$s_1 s_2 \\\\ldots s_p$$$. After this step, the string $$$s_1 s_2 \\\\ldots s_n$$$ will become $$$s_p s_{p-1} \\\\ldots s_1 s_{p+1} s_{p+2} \\\\ldots s_n$$$.Then, perform a cyclic shift of the string $$$s$$$ to the left $$$p$$$ times. After this step, the initial string $$$s_1s_2 \\\\ldots s_n$$$ will become $$$s_{p+1}s_{p+2} \\\\ldots s_n s_p s_{p-1} \\\\ldots s_1$$$.For example, if you apply the operation to the string110001100110with $$$p=3$$$, after the second step, the string will become011001100110, and after the third step, it will become001100110011.A string $$$s$$$ is called$$$k$$$-properif two conditions are met:$$$s_1=s_2=\\\\ldots=s_k$$$;$$$s_{i+k} \\\\neq s_i$$$ for any $$$i$$$ ($$$1 \\\\le i \\\\le n - k$$$).For example, with $$$k=3$$$, the strings000,111000111, and111000are $$$k$$$-proper, while the strings000000,001100, and1110000are not.You are given an integer $$$k$$$, whichis a divisorof $$$n$$$. Find an integer $$$p$$$ ($$$1 \\\\le p \\\\le n$$$) such that after performing the operation, the string $$$s$$$ becomes $$$k$$$-proper, or determine that it is impossible. Note that if the string is initially $$$k$$$-proper, you still need to apply exactly one operation to it.InputEach test consists of multiple test cases. The first line contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\\\le k \\\\le n$$$, $$$2 \\\\le n \\\\le 10^5$$$) — the length of the string $$$s$$$ and the value of $$$k$$$. It is guaranteed that $$$k$$$is a divisorof $$$n$$$.The second line of each test case contains a binary string $$$s$$$ of length $$$n$$$, consisting of the characters0and1.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output a single integer — the value of $$$p$$$ to make the string $$$k$$$-proper, or $$$-1$$$ if it is impossible.If there are multiple solutions, output any of them.ExampleInput78 4111000014 2111012 31110001000115 5000006 11010018 40111000112 2110001100110Output3 -1 7 5 4 -1 3NoteIn the first test case, if you apply the operation with $$$p=3$$$, after the second step of the operation, the string becomes11100001, and after the third step, it becomes00001111. This string is $$$4$$$-proper.In the second test case, it can be shown that there is no operation after which the string becomes $$$2$$$-proper.In the third test case, if you apply the operation with $$$p=7$$$, after the second step of the operation, the string becomes100011100011, and after the third step, it becomes000111000111. This string is $$$3$$$-proper.In the fourth test case, after the operation with any $$$p$$$, the string becomes $$$5$$$-proper.",
    "source": "CF",
    "vjudge": false
}