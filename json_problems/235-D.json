{
    "uid": "235-D",
    "url": "https://codeforces.com/contest/235/problem/D",
    "tags": [
        "graphs"
    ],
    "title": "235-D",
    "statement": "D. Graph Gametime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutIn computer science, there is a method called \"Divide And Conquer By Node\" to solve some hard problems about paths on a tree. Let's desribe how this method works by function:solve(t)(tis a tree):Chose a nodex(it's common to chose weight-center) in treet. Let's call this step \"Line A\".Deal with all paths that passx.Then deletexfrom treet.After thattbecomes some subtrees.Applysolveon each subtree.This ends whenthas only one node because after deleting it, there's nothing.Now, WJMZBMR has mistakenly believed that it's ok to chose any node in \"Line A\". So he'll chose a node at random. To make the situation worse, he thinks a \"tree\" should have the same number of edges and nodes! So this procedure becomes like that.Let's define the variabletotalCost. Initially the value oftotalCostequal to0. So,solve(t)(nowtis a graph):totalCost=totalCost+ (sizeoft). The operation \"=\" means assignment.(Sizeoft)means the number of nodes int.Choose a nodexin graphtat random (uniformly among all nodes oft).Then deletexfrom grapht.After thattbecomes some connected components.Applysolveon each component.He'll applysolveon a connected graph withnnodes andnedges. He thinks it will work quickly, but it's very slow. So he wants to know the expectation oftotalCostof this procedure. Can you help him?InputThe first line contains an integern(3 ≤n≤ 3000) — the number of nodes and edges in the graph. Each of the nextnlines contains two space-separated integersai,bi(0 ≤ai,bi≤n- 1)indicating an edge between nodesaiandbi.Consider that the graph nodes are numbered from0to(n- 1). It's guaranteed that there are no self-loops, no multiple edges in that graph. It's guaranteed that the graph is connected.OutputPrint a single real number — the expectation oftotalCost. Your answer will be considered correct if its absolute or relative error does not exceed10- 6.ExamplesInput53 42 32 40 41 2Output13.166666666666666Input30 11 20 2Output6.000000000000000Input50 11 22 03 04 1Output13.166666666666666NoteConsider the second example. No matter what we choose first, thetotalCostwill always be3 + 2 + 1 = 6.",
    "source": "CF",
    "vjudge": false
}