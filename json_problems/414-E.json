{
    "uid": "414-E",
    "url": "https://codeforces.com/contest/414/problem/E",
    "tags": [
        "data structures"
    ],
    "title": "414-E",
    "statement": "E. Mashmokh's Designed Problemtime limit per test4 secondsmemory limit per test512 megabytesinputstdinoutputstdoutAfter a lot of trying, Mashmokh designed a problem and it's your job to solve it.You have a treeTwithnvertices. Each vertex has a unique index from 1 ton. The root ofThas index1. For each vertex of this treev, you are given a list of its children in a specific order. You must perform three types of query on this tree:find distance (the number of edges in the shortest path) betweenuandv;givenvandh, disconnectvfrom its father and connect it to itsh-th ancestor; more formally, let's denote the path fromvto the root byx1,x2, ...,xl(h<l), so thatx1=vandxlis root; disconnectvfrom its father (x2) and connect it toxh+ 1; vertexvmust be added to the end of the child-list of vertexxh+ 1;in the vertex sequence produced by calling function dfs(root) find the latest vertex that has distancekfrom the root.The pseudo-code of function dfs(v):// ls[v]: list of children of vertex v// its i-th element is ls[v][i]// its size is size(ls[v])sequence result = empty sequence;void dfs(vertex now){add now to end of result;for(int i = 1; i <= size(ls[v]); i = i + 1) //loop from i = 1 to i = size(ls[v])dfs(ls[v][i]);}InputThe first line of input contains two space-separated integersn,m(2 ≤n≤ 105; 1 ≤m≤ 105), the number of vertices ofTand number of queries to perform.Thei-th of the followingnlines contains an integerli(0 ≤li≤n), number ofi-th vertex's children. Thenlispace-separated integers follow, thej-th of them is the index ofj-th child ofi-th vertex. Note that the order of these vertices is important.Each of the followingmlines has one of the following format: \"1vu\", \"2vh\", or \"3k\". The first number in the line is the type of query to perform according to the problem statement. The next numbers are description of the query.It's guaranteed that all the queries are correct. For example, in the second-type queryhis at least 2 and at most distance ofvfrom root. Also in the third-type query there is at least one vertex with distancekfrom the root at the time the query is given.OutputFor each query of the first or third type output one line containing the result of the query.ExamplesInput4 91 21 31 401 1 42 4 21 3 43 13 22 3 21 1 23 13 2Output3224134Input2 21 201 2 13 1Output12",
    "source": "CF",
    "vjudge": false
}