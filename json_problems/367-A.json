{
    "uid": "367-A",
    "url": "https://codeforces.com/contest/367/problem/A",
    "tags": [
        "data structures",
        " implementation"
    ],
    "title": "367-A",
    "statement": "A. Sereja and Algorithmtime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutSereja loves all sorts of algorithms. He has recently come up with a new algorithm, which receives a string as an input. Let's represent the input string of the algorithm asq=q1q2...qk. The algorithm consists of two steps:Find any continuous subsequence (substring) of three characters of stringq, which doesn't equal to either string \"zyx\", \"xzy\", \"yxz\". Ifqdoesn't contain any such subsequence, terminate the algorithm, otherwise go to step 2.Rearrange the letters of the found subsequence randomly and go to step 1.Sereja thinks that the algorithm works correctly on stringqif there is a non-zero probability that the algorithm will be terminated. But if the algorithm anyway will work for infinitely long on a string, then we consider the algorithm to work incorrectly on this string.Sereja wants to test his algorithm. For that, he has strings=s1s2...sn, consisting ofncharacters. The boy conducts a series ofmtests. As thei-th test, he sends substringslisli+ 1...sri(1 ≤li≤ri≤n)to the algorithm input. Unfortunately, the implementation of his algorithm works too long, so Sereja asked you to help. For each test(li,ri)determine if the algorithm works correctly on this test or not.InputThe first line contains non-empty strings, its length (n) doesn't exceed105. It is guaranteed that stringsonly contains characters: 'x', 'y', 'z'.The second line contains integerm(1 ≤m≤ 105)— the number of tests. Nextmlines contain the tests. Thei-th line contains a pair of integersli,ri(1 ≤li≤ri≤n).OutputFor each test, print \"YES\" (without the quotes) if the algorithm works correctly on the corresponding test and \"NO\" (without the quotes) otherwise.ExamplesInputzyxxxxxxyyz55 51 31 111 43 6OutputYESYESNOYESNONoteIn the first example, in test one and two the algorithm will always be terminated in one step. In the fourth test you can get string \"xzyx\" on which the algorithm will terminate. In all other tests the algorithm doesn't work correctly.",
    "source": "CF",
    "vjudge": false
}