{
    "uid": "679-E",
    "url": "https://codeforces.com/contest/679/problem/E",
    "tags": [
        "data structures"
    ],
    "title": "679-E",
    "statement": "E. Bear and Bad Powers of 42time limit per test5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLimak, a bear, isn't good at handling queries. So, he asks you to do it.We say that powers of42(numbers1, 42, 1764, ...) arebad. Other numbers aregood.You are given a sequence ofngood integerst1,t2, ...,tn. Your task is to handleqqueries of three types:1 i— printtiin a separate line.2 a b x— forsettitox. It's guaranteed thatxis a good number.3 a b x— forincreasetibyx. After this repeat the process while at least onetiis bad.You can note that after each query alltiare good.InputThe first line of the input contains two integersnandq(1 ≤n,q≤ 100 000) — the size of Limak's sequence and the number of queries, respectively.The second line of the input containsnintegerst1,t2, ...,tn(2 ≤ti≤ 109) — initial elements of Limak's sequence. Alltiare good.Then,qlines follow. Thei-th of them describes thei-th query. The first number in the line is an integertypei(1 ≤typei≤ 3) — the type of the query. There is at least one query of the first type, so the output won't be empty.In queries of the second and the third type there is1 ≤a≤b≤n.In queries of the second type an integerx(2 ≤x≤ 109) is guaranteed to be good.In queries of the third type an integerx(1 ≤x≤ 109) may be bad.OutputFor each query of the first type, print the answer in a separate line.ExampleInput6 1240 1700 7 1672 4 17223 2 4 421 21 33 2 6 501 21 41 62 3 4 413 1 5 11 11 31 5Output1742491842181418224344107NoteAfter a query3 2 4 42the sequence is40, 1742, 49, 1714, 4, 1722.After a query3 2 6 50the sequence is40, 1842, 149, 1814, 104, 1822.After a query2 3 4 41the sequence is40, 1842, 41, 41, 104, 1822.After a query3 1 5 1the sequence is43, 1845, 44, 44, 107, 1822.",
    "source": "CF",
    "vjudge": false
}