{
    "uid": "424-D",
    "url": "https://codeforces.com/contest/424/problem/D",
    "tags": [
        "binary search",
        " brute force",
        " constructive algorithms",
        " data structures",
        " dp"
    ],
    "title": "424-D",
    "statement": "D. Biathlon Tracktime limit per test4.5 secondsmemory limit per test256 megabytesinputstdinoutputstdoutRecently an official statement of the world Olympic Committee said that the Olympic Winter Games 2030 will be held in Tomsk. The city officials decided to prepare for the Olympics thoroughly and to build all the necessary Olympic facilities as early as possible. First, a biathlon track will be built.To construct a biathlon track a plot of land was allocated, which is a rectangle divided inton×midentical squares. Each of the squares has two coordinates: the number of the row (from 1 ton), where it is located, the number of the column (from 1 tom), where it is located. Also each of the squares is characterized by its height. During the sports the biathletes will have to move from one square to another. If a biathlete moves from a higher square to a lower one, he makes a descent. If a biathlete moves from a lower square to a higher one, he makes an ascent. If a biathlete moves between two squares with the same height, then he moves on flat ground.The biathlon track should be a border of some rectangular area of the allocated land on which biathletes will move in the clockwise direction. It is known that on one move on flat ground an average biathlete spendstpseconds, an ascent takestuseconds, a descent takestdseconds. The Tomsk Administration wants to choose the route so that the average biathlete passes it in as close totseconds as possible. In other words, the difference between timetsof passing the selected track andtshould be minimum.For a better understanding you can look at the first sample of the input data. In this samplen= 6,m= 7, and the administration wants the track covering time to be as close tot= 48seconds as possible, also,tp= 3,tu= 6andtd= 2. If we consider the rectangle shown on the image by arrows, the average biathlete can move along the boundary in a clockwise direction in exactly48seconds. The upper left corner of this track is located in the square with the row number4, column number3and the lower right corner is at square with row number6, column number7.Among other things the administration wants all sides of the rectangle which boundaries will be the biathlon track to consist of no less than three squares and to be completely contained within the selected land.You are given the description of the given plot of land and all necessary time values. You are to write the program to find the most suitable rectangle for a biathlon track. If there are several such rectangles, you are allowed to print any of them.InputThe first line of the input contains three integersn,mandt(3 ≤n,m≤ 300,1 ≤t≤ 109) — the sizes of the land plot and the desired distance covering time.The second line also contains three integerstp,tuandtd(1 ≤tp,tu,td≤ 100) — the time the average biathlete needs to cover a flat piece of the track, an ascent and a descent respectively.Thennlines follow, each line containsmintegers that set the heights of each square of the given plot of land. Each of the height values is a positive integer, not exceeding106.OutputIn a single line of the output print four positive integers — the number of the row and the number of the column of the upper left corner and the number of the row and the number of the column of the lower right corner of the rectangle that is chosen for the track.ExamplesInput6 7 483 6 25 4 8 3 3 7 94 1 6 8 7 1 11 6 4 6 4 8 67 2 6 1 6 9 41 9 8 6 3 9 24 5 6 8 4 3 7Output4 3 6 7",
    "source": "CF",
    "vjudge": false
}