{
    "uid": "599-C",
    "url": "https://codeforces.com/contest/599/problem/C",
    "tags": [
        "sortings"
    ],
    "title": "599-C",
    "statement": "C. Day at the Beachtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day Squidward, Spongebob and Patrick decided to go to the beach. Unfortunately, the weather was bad, so the friends were unable to ride waves. However, they decided to spent their time building sand castles.At the end of the day there werencastles built by friends. Castles are numbered from1ton, and the height of thei-th castle is equal tohi. When friends were about to leave, Squidward noticed, that castles are not ordered by their height, and this looks ugly. Now friends are going to reorder the castles in a way to obtain that conditionhi≤hi+ 1holds for allifrom1ton- 1.Squidward suggested the following process of sorting castles:Castles are split intoblocks— groups ofconsecutivecastles. Therefore the block fromitojwill include castlesi,i+ 1, ...,j. A block may consist of a single castle.The partitioning is chosen in such a way that every castle is a part ofexactlyone block.Each block is sorted independently from other blocks, that is the sequencehi,hi+ 1, ...,hjbecomes sorted.The partitioning should satisfy the condition that after each block is sorted, the sequencehibecomes sorted too. This may always be achieved by saying that the whole sequence is a single block.Even Patrick understands that increasing the number of blocks in partitioning will ease the sorting process. Now friends ask you to count the maximum possible number of blocks in a partitioning that satisfies all the above requirements.InputThe first line of the input contains a single integern(1 ≤n≤ 100 000) — the number of castles Spongebob, Patrick and Squidward made from sand during the day.The next line containsnintegershi(1 ≤hi≤ 109). Thei-th of these integers corresponds to the height of thei-th castle.OutputPrint the maximum possible number of blocks in a valid partitioning.ExamplesInput31 2 3Output3Input42 1 3 2Output2NoteIn the first sample the partitioning looks like that: [1][2][3].In the second sample the partitioning is: [2, 1][3, 2]",
    "source": "CF",
    "vjudge": false
}