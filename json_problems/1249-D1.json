{
    "uid": "1249-D1",
    "url": "https://codeforces.com/contest/1249/problem/D1",
    "tags": [
        "greedy"
    ],
    "title": "1249-D1",
    "statement": "D1. Too Many Segments (easy version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between easy and hard versions is constraints.You are given $$$n$$$ segments on the coordinate axis $$$OX$$$. Segments can intersect, lie inside each other and even coincide. The $$$i$$$-th segment is $$$[l_i; r_i]$$$ ($$$l_i \\\\le r_i$$$) and it covers all integer points $$$j$$$ such that $$$l_i \\\\le j \\\\le r_i$$$.The integer point is calledbadif it is covered bystrictly morethan $$$k$$$ segments.Your task is to remove the minimum number of segments so that there are nobadpoints at all.InputThe first line of the input contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\\\le k \\\\le n \\\\le 200$$$) — the number of segments and the maximum number of segments by which each integer point can be covered.The next $$$n$$$ lines contain segments. The $$$i$$$-th line contains two integers $$$l_i$$$ and $$$r_i$$$ ($$$1 \\\\le l_i \\\\le r_i \\\\le 200$$$) — the endpoints of the $$$i$$$-th segment.OutputIn the first line print one integer $$$m$$$ ($$$0 \\\\le m \\\\le n$$$) — the minimum number of segments you need to remove so that there are nobadpoints.In the second line print $$$m$$$distinctintegers $$$p_1, p_2, \\\\dots, p_m$$$ ($$$1 \\\\le p_i \\\\le n$$$) — indices of segments you remove in any order. If there are multiple answers, you can print any of them.ExamplesInput7 2 11 11 9 11 7 8 8 9 7 8 9 11 7 9Output3 1 4 7Input5 1 29 30 30 30 29 29 28 30 30 30Output3 1 2 4Input6 1 2 3 3 3 2 3 2 2 2 3 2 3Output4 1 3 5 6",
    "source": "CF",
    "vjudge": false
}