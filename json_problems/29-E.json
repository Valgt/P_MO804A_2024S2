{
    "uid": "29-E",
    "url": "https://codeforces.com/contest/29/problem/E",
    "tags": [
        "graphs",
        " shortest paths"
    ],
    "title": "29-E",
    "statement": "E. Quarreltime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutFriends Alex and Bob live in Bertown. In this town there arencrossroads, some of them are connected by bidirectional roads of equal length. Bob lives in a house at the crossroads number1, Alex — in a house at the crossroads numbern.One day Alex and Bob had a big quarrel, and they refused to see each other. It occurred that today Bob needs to get from his house to the crossroadsnand Alex needs to get from his house to the crossroads1. And they don't want to meet at any of the crossroads, but they can meet in the middle of the street, when passing it in opposite directions. Alex and Bob asked you, as their mutual friend, to help them with this difficult task.Find for Alex and Bob such routes with equal number of streets that the guys can follow these routes and never appear at the same crossroads at the same time. They are allowed to meet in the middle of the street when moving toward each other (see Sample 1). Among all possible routes, select such that the number of streets in it is the least possible. Until both guys reach their destinations, none of them can stay without moving.The guys are moving simultaneously with equal speeds, i.e. it is possible that when one of them reaches some of the crossroads, the other one leaves it. For example, Alex can move from crossroad1to crossroad2, while Bob moves from crossroad2to crossroad3.If the required routes don't exist, your program should output-1.InputThe first line contains two integersnandm(2 ≤n≤ 500, 1 ≤m≤ 10000) — the amount of crossroads and the amount of roads. Each of the followingmlines contains two integers — the numbers of crossroads connected by the road. It is guaranteed that no road connects a crossroads with itself and no two crossroads are connected by more than one road.OutputIf the required routes don't exist, output-1. Otherwise, the first line should contain integerk— the length of shortest routes (the length of the route is the amount of roads in it). The next line should containk+ 1integers — Bob's route, i.e. the numbers ofk+ 1crossroads passed by Bob. The last line should contain Alex's route in the same format. If there are several optimal solutions, output any of them.ExamplesInput2 11 2Output11 22 1Input7 51 22 77 62 33 4Output-1Input7 61 22 77 62 33 41 5Output61 2 3 4 3 2 77 6 7 2 1 5 1",
    "source": "CF",
    "vjudge": false
}