{
    "uid": "360-A",
    "url": "https://codeforces.com/contest/360/problem/A",
    "tags": [
        "greedy",
        " implementation"
    ],
    "title": "360-A",
    "statement": "A. Levko and Array Recoverytime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutLevko loves arraya1,a2, ... ,an, consisting of integers, very much. That is why Levko is playing with arraya, performing all sorts of operations with it. Each operation Levko performs is of one of two types:Increase all elements fromlitoribydi. In other words, perform assignmentsaj=aj+difor alljthat meet the inequationli≤j≤ri.Find the maximum of elements fromlitori. That is, calculate the value.Sadly, Levko has recently lost his array. Fortunately, Levko has records of all operations he has performed on arraya. Help Levko, given the operation records, find at least one suitable array. The results of all operations for the given array must coincide with the record results. Levko clearly remembers that all numbers in his array didn't exceed109in their absolute value, so he asks you to find such an array.InputThe first line contains two integersnandm(1 ≤n,m≤ 5000) — the size of the array and the number of operations in Levko's records, correspondingly.Nextmlines describe the operations, thei-th line describes thei-th operation. The first integer in thei-th line is integerti(1 ≤ti≤ 2) that describes the operation type. Ifti= 1, then it is followed by three integersli,rianddi(1 ≤li≤ri≤n,- 104≤di≤ 104) — the description of the operation of the first type. Ifti= 2, then it is followed by three integersli,riandmi(1 ≤li≤ri≤n,- 5·107≤mi≤ 5·107) — the description of the operation of the second type.The operations are given in the order Levko performed them on his array.OutputIn the first line print \"YES\" (without the quotes), if the solution exists and \"NO\" (without the quotes) otherwise.If the solution exists, then on the second line printnintegersa1,a2, ... ,an(|ai| ≤ 109)— the recovered array.ExamplesInput4 51 2 3 12 1 2 82 3 4 71 1 3 32 3 4 8OutputYES4 7 4 7Input4 51 2 3 12 1 2 82 3 4 71 1 3 32 3 4 13OutputNO",
    "source": "CF",
    "vjudge": false
}