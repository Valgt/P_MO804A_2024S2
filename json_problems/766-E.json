{
    "uid": "766-E",
    "url": "https://codeforces.com/contest/766/problem/E",
    "tags": [
        "bitmasks",
        " constructive algorithms",
        " data structures",
        " dfs and similar",
        " dp",
        " math",
        " trees"
    ],
    "title": "766-E",
    "statement": "E. Mahmoud and a xor triptime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMahmoud and Ehab live in a country withncities numbered from1tonand connected byn- 1undirected roads. It's guaranteed that you can reach any city from any other using these roads. Each city has a numberaiattached to it.We define the distance from cityxto cityyas thexorof numbers attached to the cities on the path fromxtoy(including bothxandy). In other words if values attached to the cities on the path fromxtoyform an arraypof lengthlthen the distance between them is, whereis bitwisexoroperation.Mahmoud and Ehab want to choose two cities and make a journey from one to another. The index of the start city is always less than or equal to the index of the finish city (they may start and finish in the same city and in this case the distance equals the number attached to that city). They can't determine the two cities so they try every city as a start and every city with greater index as a finish. They want to know the total distance between all pairs of cities.InputThe first line contains integern(1 ≤n≤ 105) — the number of cities in Mahmoud and Ehab's country.Then the second line containsnintegersa1,a2, ...,an(0 ≤ai≤ 106) which represent the numbers attached to the cities. Integeraiis attached to the cityi.Each of the nextn-  1lines contains two integersuandv(1  ≤u,v≤n,u≠v), denoting that there is an undirected road between citiesuandv. It's guaranteed that you can reach any city from any other using these roads.OutputOutput one number denoting the total distance between all pairs of cities.ExamplesInput31 2 31 22 3Output10Input51 2 3 4 51 22 33 43 5Output52Input510 9 8 7 61 22 33 43 5Output131NoteA bitwisexortakes two bit integers of equal length and performs the logicalxoroperation on each pair of corresponding bits. The result in each position is1if only the first bit is1or only the second bit is1, but will be0if both are0or both are1. You can read more about bitwisexoroperation here:https://en.wikipedia.org/wiki/Bitwise_operation#XOR.In the first sample the available paths are:city1to itself with a distance of1,city2to itself with a distance of2,city3to itself with a distance of3,city1to city2with a distance of,city1to city3with a distance of,city2to city3with a distance of.The total distance between all pairs of cities equals1 + 2 + 3 + 3 + 0 + 1 = 10.",
    "source": "CF",
    "vjudge": false
}