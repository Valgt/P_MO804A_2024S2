{
    "uid": "404-E",
    "url": "https://codeforces.com/contest/404/problem/E",
    "tags": [
        "binary search",
        " greedy",
        " implementation"
    ],
    "title": "404-E",
    "statement": "E. Maze 1Dtime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutValera has a strip infinite in both directions and consisting of cells. The cells are numbered by integers. The cell number0has a robot.The robot has instructions — the sequence of moves that he must perform. In one move, the robot moves one cell to the left or one cell to the right, according to instructions. Before the robot starts moving, Valera puts obstacles in some cells of the strip, excluding cell number0. If the robot should go into the cell with an obstacle according the instructions, it will skip this move.Also Valera indicates the finish cell in which the robot has to be after completing the entire instructions. The finishing cell should be different from the starting one. It is believed that the robotcompleted the instructions successfully, if during the process of moving he visited the finish cell exactly once — at its last move. Moreover, the latter move cannot be skipped.Let's assume thatkis the minimum number of obstacles that Valera must put to make the robot able to complete the entire sequence of instructions successfully and end up in some finishing cell. You need to calculate in how many ways Valera can choosekobstacles and the finishing cell so that the robot is able to complete the instructions successfully.InputThe first line contains a sequence of characters without spacess1s2...sn(1 ≤n≤ 106), consisting only of letters \"L\" and \"R\". If charactersiequals \"L\", then the robot on thei-th move must try to move one cell to the left. If thesi-th character equals \"R\", then the robot on thei-th move must try to move one cell to the right.OutputPrint a single integer — the required number of ways. It's guaranteed that this number fits into 64-bit signed integer type.ExamplesInputRROutput1InputRRLOutput1NoteIn the first sample Valera mustn't add any obstacles and his finishing cell must be cell2.In the second sample, Valera must add an obstacle in cell number1, and his finishing cell must be cell number- 1. In this case robot skips the first two moves and on the third move he goes straight from the starting cell to the finishing one. But if Valera doesn't add any obstacles, or adds an obstacle to another cell, then the robot visits the finishing cell more than once.",
    "source": "CF",
    "vjudge": false
}