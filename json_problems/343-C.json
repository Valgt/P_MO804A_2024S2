{
    "uid": "343-C",
    "url": "https://codeforces.com/contest/343/problem/C",
    "tags": [
        "binary search",
        " greedy",
        " two pointers"
    ],
    "title": "343-C",
    "statement": "C. Read Timetime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutMad scientist Mike does not use slow hard disks. His modification of a hard drive has not one, butndifferent heads that can read data in parallel.When viewed from the side, Mike's hard drive is an endless array of tracks. The tracks of the array are numbered from left to right with integers, starting with 1. In the initial state thei-th reading head is above the track numberhi. For each of the reading heads, the hard drive's firmware can move the head exactly one track to the right or to the left, or leave it on the current track. During the operation each head's movement does not affect the movement of the other heads: the heads can change their relative order; there can be multiple reading heads above any of the tracks. A track is consideredreadif at least one head has visited this track. In particular, all of the tracks numberedh1,h2,...,hnhave been read at the beginning of the operation.Mike needs to read the data onmdistinct tracks with numbersp1,p2,...,pm. Determine the minimum time the hard drive firmware needs to move the heads and read all the given tracks. Note that an arbitrary number of other tracks can also be read.InputThe first line of the input contains two space-separated integersn,m(1 ≤n,m≤ 105) — the number of disk heads and the number of tracks to read, accordingly. The second line containsndistinct integershiin ascending order (1 ≤hi≤ 1010,hi<hi+ 1) — the initial positions of the heads. The third line containsmdistinct integerspiin ascending order (1 ≤pi≤ 1010,pi<pi+ 1) - the numbers of tracks to read.Please, do not use the%lldspecifier to read or write 64-bit integers in С++. It is recommended to use thecin,coutstreams or the%I64dspecifier.OutputPrint a single number — the minimum time required, in seconds, to read all the needed tracks.ExamplesInput3 42 5 61 3 6 8Output2Input3 31 2 31 2 3Output0Input1 2165142 200Output81NoteThe first test coincides with the figure. In this case the given tracks can be read in 2 seconds in the following way:during the first second move the 1-st head to the left and let it stay there;move the second head to the left twice;move the third head to the right twice (note that the 6-th track has already been read at the beginning).One cannot read the tracks in 1 second as the 3-rd head is at distance 2 from the 8-th track.",
    "source": "CF",
    "vjudge": false
}