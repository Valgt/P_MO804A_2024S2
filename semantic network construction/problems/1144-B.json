{"uid": "1144-B", "url": "https://codeforces.com/contest/1144/problem/B", "tags": ["greedy", " implementation", " sortings"], "title": "1144-B", "statement": "B. Parity Alternated Deletionstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp has an array $$$a$$$ consisting of $$$n$$$ integers.He wants to play a game with this array. The game consists of several moves. On the first move he chooses any element and deletes it (after the first move the array contains $$$n-1$$$ elements). For each of the next moves he chooses any element with the only restriction: its parity should differ from the parity of the element deleted on the previous move. In other words, he alternates parities (even-odd-even-odd-... or odd-even-odd-even-...) of the removed elements. Polycarp stops if he can't make a move.Formally:If it is the first move, he chooses any element and deletes it;If it is the second or any next move:if the last deleted element wasodd, Polycarp chooses anyevenelement and deletes it;if the last deleted element waseven, Polycarp chooses anyoddelement and deletes it.If after some move Polycarp cannot make a move, the game ends.Polycarp's goal is tominimizethe sum ofnon-deletedelements of the array after end of the game. If Polycarp can delete the whole array, then the sum ofnon-deletedelements is zero.Help Polycarp find this value.InputThe first line of the input contains one integer $$$n$$$ ($$$1 \\\\le n \\\\le 2000$$$) — the number of elements of $$$a$$$.The second line of the input contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$0 \\\\le a_i \\\\le 10^6$$$), where $$$a_i$$$ is the $$$i$$$-th element of $$$a$$$.OutputPrint one integer — theminimumpossible sum ofnon-deletedelements of the array after end of the game.ExamplesInput5 1 5 7 8 2Output0Input6 5 1 2 4 6 3Output0Input2 1000000 1000000Output1000000", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "24a037a6", "template_md5": "35d339e4", "result": "You are given an array of $n$ integers.  You can repeatedly delete an element from the array, with the following rule:\n\n* The parity (evenness or oddness) of the deleted element must alternate with the parity of the previously deleted element.\n\nFor example, if you delete an even number first, you must delete an odd number next, and so on.\n\nThe goal is to find the minimum possible sum of the remaining elements in the array after you can no longer make any more deletions. If you can delete all the elements, the sum is 0. \n\n\n\nLet me know if you'd like help with the solution!"}, {"prompt_md5": "34bb5b1b", "template_md5": "465699a0", "result": "You are given a list of numbers. You can repeatedly remove a number from the list, but the parity (evenness or oddness) of the removed number must alternate with the previous removal.  Find the smallest possible sum of the numbers that remain in the list after you can no longer make a removal."}]}