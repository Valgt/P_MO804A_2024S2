{"uid": "1346-F", "url": "https://codeforces.com/contest/1346/problem/F", "tags": ["*special", " data structures", " greedy", " math"], "title": "1346-F", "statement": "F. Dune II: Battle For Arrakistime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou're at the last mission in one very old and very popular strategy game Dune II: Battle For Arrakis. The map of the mission can be represented as a rectangular matrix of size $$$n \\\\times m$$$. Initially, there are $$$a_{i, j}$$$ units of your army in the cell $$$(i, j)$$$.You want to prepare for the final battle, so you want to move all your army intoexactly one cellof the map (i.e. $$$nm-1$$$ cells should contain $$$0$$$ units of the army and the remaining cell should contain the entire army).To do this, you can do some (possibly, zero) number of moves. During one move, you can selectexactly one unitfrom some cell and move it to one of the adjacentby sidecells. I.e. from the cell $$$(i, j)$$$ you can move the unit to cells:$$$(i - 1, j)$$$;$$$(i, j - 1)$$$;$$$(i + 1, j)$$$;$$$(i, j + 1)$$$.Of course, you want to move all your army intoexactly one cellas fast as possible. So, you want to know theminimumnumber of moves you need to do that.And, of course, life goes on, so the situation on the map changes. There are $$$q$$$ updates, the $$$i$$$-th update is denoted by three integers $$$x, y, z$$$. This update affects the army in the cell $$$(x, y)$$$: after this update, the number of units in the cell $$$(x, y)$$$ becomes $$$z$$$ (i.e. you replace $$$a_{x, y}$$$ with $$$z$$$).Also, you want to determine, for each $$$i$$$, theminimumnumber of moves needed to move your entire army intoexactly one cellwith the first $$$i$$$ updates applied to the initial map. In other words, the map after the $$$i$$$-th update equals theinitialmap with the first $$$i$$$ updates applied to it.InputThe first line of the input contains three integers $$$n, m$$$ and $$$q$$$ ($$$1 \\\\le n, m \\\\le 1000; 1 \\\\le q \\\\le 5000$$$) — the size of the matrix and the number of updates correspondingly.The next $$$n$$$ lines contain $$$m$$$ integers each, where the $$$j$$$-th integer in the $$$i$$$-th line is $$$a_{i, j}$$$ ($$$1 \\\\le a_{i, j} \\\\le 10^9$$$) — the number of units in the cell $$$(i, j)$$$.The next $$$q$$$ lines contain three integers each, where the $$$i$$$-th line contains three integers $$$x_i, y_i$$$ and $$$z_i$$$ ($$$1 \\\\le x_i \\\\le n; 1 \\\\le y_i \\\\le m; 1 \\\\le z_i \\\\le 10^9$$$) — the cell in which the number of units updates and the new number of units in this cell correspondingly.OutputPrint $$$q+1$$$ integers $$$r_0, r_1, r_2, \\\\dots, r_n$$$, where $$$r_0$$$ is theminimumnumber of moves you need to move all your army intoexactly one cell, and $$$r_i$$$ for all $$$i$$$ from $$$1$$$ to $$$q$$$ is theminimumnumber of moves you need to move all your army intoexactly one cellafter the first $$$i$$$ updates.ExamplesInput3 3 1 1 2 3 2 1 2 1 1 2 2 3 100Output21 22Input4 4 3 2 5 6 3 4 8 10 5 2 6 7 1 8 4 2 1 1 1 8 2 3 4 4 4 5Output123 135 129 145", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "1b4a05ad", "template_md5": "35d339e4", "result": "You are given a rectangular grid of size $n \\times m$ representing a battlefield. Each cell in the grid contains a number of units. Your goal is to move all the units into a single cell as quickly as possible.\n\nYou can move one unit at a time from a cell to one of its four adjacent cells (up, down, left, right).\n\nThere are $q$ updates that change the number of units in certain cells.\n\nFor each update, you need to determine the minimum number of moves required to consolidate all units into a single cell after applying that update.\n\n**Input:**\n\n* The first line contains three integers: $n$, $m$, and $q$ (the grid size and the number of updates).\n* The next $n$ lines contain $m$ integers each, representing the initial number of units in each cell.\n* The next $q$ lines contain three integers each: $x$, $y$, and $z$ (the cell coordinates and the new number of units).\n\n**Output:**\n\nPrint $q+1$ integers:\n\n* The first integer is the minimum number of moves required to consolidate all units into a single cell with the initial configuration.\n* The next $q$ integers are the minimum number of moves required for each update, after applying the corresponding updates to the initial configuration."}, {"prompt_md5": "45f3b8b7", "template_md5": "465699a0", "result": "You have a grid of cells, each containing a number. You want to move all the numbers into a single cell as quickly as possible. You can move one number at a time to an adjacent cell.  You are given a series of updates that change the numbers in the grid.  For each update, find the minimum number of moves needed to consolidate all the numbers into a single cell."}]}