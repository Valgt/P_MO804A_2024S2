{"uid": "1661-D", "url": "https://codeforces.com/contest/1661/problem/D", "tags": ["data structures", " greedy"], "title": "1661-D", "statement": "D. Progressions Coveringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two arrays: an array $$$a$$$ consisting of $$$n$$$ zeros and an array $$$b$$$ consisting of $$$n$$$ integers.You can apply the following operation to the array $$$a$$$ an arbitrary number of times: choose some subsegment of $$$a$$$ of length $$$k$$$ and add the arithmetic progression $$$1, 2, \\\\ldots, k$$$ to this subsegment — i. e. add $$$1$$$ to the first element of the subsegment, $$$2$$$ to the second element, and so on. The chosen subsegment should be inside the borders of the array $$$a$$$ (i.e., if the left border of the chosen subsegment is $$$l$$$, then the condition $$$1 \\\\le l \\\\le l + k - 1 \\\\le n$$$ should be satisfied). Note that the progression added is always $$$1, 2, \\\\ldots, k$$$ but not the $$$k, k - 1, \\\\ldots, 1$$$ or anything else (i.e., the leftmost element of the subsegment always increases by $$$1$$$, the second element always increases by $$$2$$$ and so on).Your task is to find theminimumpossible number of operations required to satisfy the condition $$$a_i \\\\ge b_i$$$ for each $$$i$$$ from $$$1$$$ to $$$n$$$. Note that the condition $$$a_i \\\\ge b_i$$$ should be satisfied for all elements at once.InputThe first line of the input contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\\\le k \\\\le n \\\\le 3 \\\\cdot 10^5$$$) — the number of elements in both arrays and the length of the subsegment, respectively.The second line of the input contains $$$n$$$ integers $$$b_1, b_2, \\\\ldots, b_n$$$ ($$$1 \\\\le b_i \\\\le 10^{12}$$$), where $$$b_i$$$ is the $$$i$$$-th element of the array $$$b$$$.OutputPrint one integer — theminimumpossible number of operations required to satisfy the condition $$$a_i \\\\ge b_i$$$ for each $$$i$$$ from $$$1$$$ to $$$n$$$.ExamplesInput3 3 5 4 6Output5Input6 3 1 2 3 2 2 3Output3Input6 3 1 2 4 1 2 3Output3Input7 3 50 17 81 25 42 39 96Output92NoteConsider the first example. In this test, we don't really have any choice, so we need to add at least five progressions to make the first element equals $$$5$$$. The array $$$a$$$ becomes $$$[5, 10, 15]$$$.Consider the second example. In this test, let's add one progression on the segment $$$[1; 3]$$$ and two progressions on the segment $$$[4; 6]$$$. Then, the array $$$a$$$ becomes $$$[1, 2, 3, 2, 4, 6]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "96831d65", "template_md5": "35d339e4", "result": "You are given two arrays,  'a' and 'b', both of size 'n'. Array 'a' contains only zeros. You can perform the following operation on array 'a' any number of times:\n\n1. Choose a subsegment of 'a' with length 'k'.\n2. Add the arithmetic progression  (1, 2, ..., k) to this subsegment. This means adding 1 to the first element, 2 to the second element, and so on.\n\nThe goal is to find the minimum number of operations needed to make all elements of array 'a' greater than or equal to the corresponding elements in array 'b'. \n\n**Input:**\n\n* The first line contains two integers, 'n' and 'k' (1 ≤ k ≤ n ≤ 3 * 10^5), representing the size of the arrays and the length of the subsegment.\n* The second line contains 'n' integers, b1, b2, ..., bn (1 ≤ bi ≤ 10^12), representing the elements of array 'b'.\n\n**Output:**\n\n* Print a single integer representing the minimum number of operations required."}, {"prompt_md5": "b22bba91", "template_md5": "465699a0", "result": "You have two arrays of the same length. You can repeatedly add a sequence of increasing numbers to a section of the first array.  Find the fewest times you need to do this to make all the numbers in the first array greater than or equal to the corresponding numbers in the second array."}]}