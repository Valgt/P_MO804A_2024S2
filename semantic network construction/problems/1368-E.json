{"uid": "1368-E", "url": "https://codeforces.com/contest/1368/problem/E", "tags": ["constructive algorithms", " graphs", " greedy"], "title": "1368-E", "statement": "E. Ski Accidentstime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputArthur owns a ski resort on a mountain. There are $$$n$$$ landing spots on the mountain numbered from $$$1$$$ to $$$n$$$ from the top to the foot of the mountain. The spots are connected with one-directional ski tracks. All tracks go towards the foot of the mountain, so there areno directed cyclesformed by the tracks. There areat most two tracks leaving each spot, but many tracks may enter the same spot.A skier can start skiing from one spot and stop in another spot if there is a sequence of tracks that lead from the starting spot and end in the ending spot. Unfortunately, recently there were many accidents, because the structure of the resort allows a skier to go through dangerous paths, by reaching high speed and endangering himself and the other customers. Here, a path is called dangerous, if it consists of at least two tracks.Arthur wants to secure his customers by closing some of the spots in a way that there are no dangerous paths in the resort. When a spot is closed, all tracks entering and leaving that spot become unusable.Formally, after closing some of the spots,there should not be a path that consists of two or more tracks.Arthur doesn't want to close too many spots. He will be happy to find any way to closeat most $$$\\\\frac{4}{7}n$$$ spotsso that the remaining part is safe. Help him find any suitable way to do so.InputThe first line contains a single positive integer $$$T$$$ — the number of test cases. $$$T$$$ test case description follows.The first line of each description contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\\\leq n \\\\leq 2 \\\\cdot 10^5$$$) — the number of landing spots and tracks respectively.The following $$$m$$$ lines describe the tracks. Each of these lines contains two integers $$$x$$$ and $$$y$$$ ($$$1 \\\\leq x < y \\\\leq n$$$) — indices of the starting and finishing spots for the respective track. It is guaranteed that at most two tracks start at each spot. There may be tracks in which starting and finishing spots both coincide.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, print a single integer $$$k$$$ ($$$0 \\\\leq k \\\\leq \\\\frac{4}{7}n$$$) — the number of spots to be closed. In the next line, print $$$k$$$ distinct integers — indices of all spots to be closed, in any order.If there are several answers, you may output any of them. Note that youdon't have to minimize $$$k$$$. It can be shown that a suitable answer always exists.ExampleInput2 4 6 1 2 1 3 2 3 2 4 3 4 3 4 7 6 1 2 1 3 2 4 2 5 3 6 3 7Output2 3 4  4 4 5 6 7NoteIn the first sample case, closing any two spots is suitable.In the second sample case, closing only the spot $$$1$$$ is also suitable.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "7556625d", "template_md5": "35d339e4", "result": "There are $n$ landing spots numbered from 1 to $n$.  There are $m$ ski tracks, where each track connects two spots.  Tracks only go downhill, so there are no cycles.  \n\nA dangerous path is a path that consists of at least two tracks.  \n\nYou need to close some spots so that there are no dangerous paths left.  You can close at most $\\frac{4}{7}n$ spots.\n\n**Input:**\n\n* The first line contains the number of test cases, $T$.\n* For each test case:\n    * The first line contains two integers, $n$ (the number of spots) and $m$ (the number of tracks).\n    * The next $m$ lines each contain two integers, $x$ and $y$, representing a track from spot $x$ to spot $y$.\n\n**Output:**\n\n* For each test case:\n    * Print the number of spots to close, $k$.\n    * Print $k$ distinct integers, the indices of the spots to close."}, {"prompt_md5": "dcca2c95", "template_md5": "465699a0", "result": "You are given a list of points connected by one-way paths.  You need to close some points so that no path has more than one connection. Find the minimum number of points to close."}]}