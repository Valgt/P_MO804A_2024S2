{"uid": "77-C", "url": "https://codeforces.com/contest/77/problem/C", "tags": ["dfs and similar", " dp", " dsu", " greedy", " trees"], "title": "77-C", "statement": "C. Beavermuncher-0xFFtime limit per test3 secondsmemory limit per test256 megabytesinputstdinoutputstdout\"Eat a beaver, save a tree!\" — That will be the motto of ecologists' urgent meeting in Beaverley Hills.And the whole point is that the population of beavers on the Earth has reached incredible sizes! Each day their number increases in several times and they don't even realize how much their unhealthy obsession with trees harms the nature and the humankind. The amount of oxygen in the atmosphere has dropped to 17 per cent and, as the best minds of the world think, that is not the end.In the middle of the 50-s of the previous century a group of soviet scientists succeed in foreseeing the situation with beavers and worked out a secret technology to clean territory. The technology bears a mysterious title \"Beavermuncher-0xFF\". Now the fate of the planet lies on the fragile shoulders of a small group of people who has dedicated their lives to science.The prototype is ready, you now need to urgently carry out its experiments in practice.You are given a tree, completely occupied by beavers. A tree is a connected undirected graph without cycles. The tree consists ofnvertices, thei-th vertex containskibeavers.\"Beavermuncher-0xFF\" works by the following principle: being at some vertexu, it can go to the vertexv, if they are connected by an edge, and eatexactly onebeaver located at the vertexv. It is impossible to move to the vertexvif there are no beavers left inv. \"Beavermuncher-0xFF\"cannotjust stand at some vertex and eat beavers in it. \"Beavermuncher-0xFF\" must move without stops.Why does the \"Beavermuncher-0xFF\" works like this? Because the developers have not provided place for the battery in it and eating beavers is necessary for converting their mass into pure energy.It is guaranteed that the beavers will be shocked by what is happening, which is why they will not be able to move from a vertex of the tree to another one. As for the \"Beavermuncher-0xFF\", it can move along each edge in both directions while conditions described above are fulfilled.The root of the tree is located at the vertexs. This means that the \"Beavermuncher-0xFF\" begins its mission at the vertexsand it must return there at the end of experiment, because no one is going to take it down from a high place.Determine the maximum number of beavers \"Beavermuncher-0xFF\" can eat and return to the starting vertex.InputThe first line contains integern— the number of vertices in the tree (1 ≤n≤ 105). The second line containsnintegerski(1 ≤ki≤ 105) — amounts of beavers on corresponding vertices. Followingn- 1lines describe the tree. Each line contains two integers separated by space. These integers represent two vertices connected by an edge. Vertices are numbered from1ton. The last line contains integers— the number of the starting vertex (1 ≤s≤n).OutputPrint the maximum number of beavers munched by the \"Beavermuncher-0xFF\".Please, do not use%lldspecificator to write 64-bit integers in C++. It is preferred to usecout(also you may use%I64d).ExamplesInput51 3 1 3 22 53 44 51 54Output6Input32 1 13 21 23Output2", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a0ed5b8c", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices. Each vertex has a number of beavers ($k_i$) associated with it.  The tree is rooted at vertex $s$.\n\nYou have a device that can move along the edges of the tree, eating one beaver from each vertex it visits. The device starts at the root and must return to the root.\n\nFind the maximum number of beavers the device can eat."}, {"prompt_md5": "a5ca1f39", "template_md5": "465699a0", "result": "You are given a tree-shaped graph where each node has a number of items. You start at a specific node and can move to any directly connected node that has items. You can take one item from each node you visit.  Find the maximum number of items you can take and return to the starting node."}]}