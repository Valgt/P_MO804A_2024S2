{"uid": "1659-D", "url": "https://codeforces.com/contest/1659/problem/D", "tags": ["constructive algorithms", " data structures", " greedy", " implementation", " math", " two pointers"], "title": "1659-D", "statement": "D. Reverse Sort Sumtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSuppose you had an array $$$A$$$ of $$$n$$$ elements, each of which is $$$0$$$ or $$$1$$$.Let us define a function $$$f(k,A)$$$ which returns another array $$$B$$$, the result of sorting the first $$$k$$$ elements of $$$A$$$ in non-decreasing order. For example, $$$f(4,[0,1,1,0,0,1,0]) = [0,0,1,1,0,1,0]$$$. Note that the first $$$4$$$ elements were sorted.Now consider the arrays $$$B_1, B_2,\\\\ldots, B_n$$$ generated by $$$f(1,A), f(2,A),\\\\ldots,f(n,A)$$$. Let $$$C$$$ be the array obtained by taking the element-wise sum of $$$B_1, B_2,\\\\ldots, B_n$$$.For example, let $$$A=[0,1,0,1]$$$. Then we have $$$B_1=[0,1,0,1]$$$, $$$B_2=[0,1,0,1]$$$, $$$B_3=[0,0,1,1]$$$, $$$B_4=[0,0,1,1]$$$. Then $$$C=B_1+B_2+B_3+B_4=[0,1,0,1]+[0,1,0,1]+[0,0,1,1]+[0,0,1,1]=[0,2,2,4]$$$.You are given $$$C$$$. Determine a binary array $$$A$$$ that would give $$$C$$$ when processed as above. It is guaranteed that an array $$$A$$$ exists for given $$$C$$$ in the input.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 1000$$$)  — the number of test cases.Each test case has two lines. The first line contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 2 \\\\cdot 10^5$$$).The second line contains $$$n$$$ integers $$$c_1, c_2, \\\\ldots, c_n$$$ ($$$0 \\\\leq c_i \\\\leq n$$$). It is guaranteed that a valid array $$$A$$$ exists for the given $$$C$$$.The sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output a single line containing $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$a_i$$$ is $$$0$$$ or $$$1$$$). If there are multiple answers, you may output any of them.ExampleInput542 4 2 470 3 4 2 3 2 730 0 040 0 0 431 2 3Output1 1 0 1  0 1 1 0 0 0 1  0 0 0  0 0 0 1  1 0 1NoteHere's the explanation for the first test case. Given that $$$A=[1,1,0,1]$$$, we can construct each $$$B_i$$$:$$$B_1=[\\\\color{blue}{1},1,0,1]$$$;$$$B_2=[\\\\color{blue}{1},\\\\color{blue}{1},0,1]$$$;$$$B_3=[\\\\color{blue}{0},\\\\color{blue}{1},\\\\color{blue}{1},1]$$$;$$$B_4=[\\\\color{blue}{0},\\\\color{blue}{1},\\\\color{blue}{1},\\\\color{blue}{1}]$$$And then, we can sum up each column above to get $$$C=[1+1+0+0,1+1+1+1,0+0+1+1,1+1+1+1]=[2,4,2,4]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d89416bd", "template_md5": "35d339e4", "result": "You are given an array $C$ of $n$ integers.  \n\nYou need to find a binary array $A$ (an array containing only 0s and 1s) of the same length such that:\n\n1.  You create a sequence of arrays $B_1, B_2, ..., B_n$ where each $B_i$ is formed by sorting the first $i$ elements of $A$ in non-decreasing order.\n\n2.  The array $C$ is the element-wise sum of all the arrays $B_1, B_2, ..., B_n$.\n\nIn other words, if $A = [a_1, a_2, ..., a_n]$, then:\n\n$C = B_1 + B_2 + ... + B_n$\n\nwhere:\n\n* $B_1 = [a_1]$\n* $B_2 = [a_1, a_2]$\n* $B_3 = [a_1, a_2, a_3]$\n* ...\n* $B_n = [a_1, a_2, ..., a_n]$ \n\nYou are guaranteed that a valid array $A$ exists for the given $C$. \n\n\n\nInput:\n\n* The first line contains the number of test cases $t$.\n* Each test case has two lines. The first line contains the length of the array $n$. The second line contains the $n$ integers of array $C$.\n\nOutput:\n\n* For each test case, output a single line containing the $n$ integers of array $A$."}, {"prompt_md5": "716bbfb5", "template_md5": "465699a0", "result": "You are given a sum of numbers. This sum is the result of adding up the results of sorting parts of a binary array (an array containing only 0s and 1s).  You need to find one possible binary array that would produce this sum."}]}