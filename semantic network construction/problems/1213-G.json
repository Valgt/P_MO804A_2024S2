{"uid": "1213-G", "url": "https://codeforces.com/contest/1213/problem/G", "tags": ["divide and conquer", " dsu", " graphs", " sortings", " trees"], "title": "1213-G", "statement": "G. Path Queriestime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a weighted tree consisting of $$$n$$$ vertices. Recall that a tree is a connected graph without cycles. Vertices $$$u_i$$$ and $$$v_i$$$ are connected by an edge with weight $$$w_i$$$.You are given $$$m$$$ queries. The $$$i$$$-th query is given as an integer $$$q_i$$$. In this query you need to calculate the number of pairs of vertices $$$(u, v)$$$ ($$$u < v$$$) such that the maximum weight of an edge on a simple path between $$$u$$$ and $$$v$$$ doesn't exceed $$$q_i$$$.InputThe first line of the input contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\\\le n, m \\\\le 2 \\\\cdot 10^5$$$) — the number of vertices in the tree and the number of queries.Each of the next $$$n - 1$$$ lines describes an edge of the tree. Edge $$$i$$$ is denoted by three integers $$$u_i$$$, $$$v_i$$$ and $$$w_i$$$ — the labels of vertices it connects ($$$1 \\\\le u_i, v_i \\\\le n$$$, $$$u_i \\\\ne v_i$$$) and the weight of the edge ($$$1 \\\\le w_i \\\\le 2 \\\\cdot 10^5$$$). It is guaranteed that the given edges form a tree.The last line of the input contains $$$m$$$ integers $$$q_1, q_2, \\\\dots, q_m$$$ ($$$1 \\\\le q_i \\\\le 2 \\\\cdot 10^5$$$), where $$$q_i$$$ is the maximum weight of an edge in the $$$i$$$-th query.OutputPrint $$$m$$$ integers — the answers to the queries. The $$$i$$$-th value should be equal to the number of pairs of vertices $$$(u, v)$$$ ($$$u < v$$$) such that the maximum weight of an edge on a simple path between $$$u$$$ and $$$v$$$ doesn't exceed $$$q_i$$$.Queries are numbered from $$$1$$$ to $$$m$$$ in the order of the input.ExamplesInput7 5 1 2 1 3 2 3 2 4 1 4 5 2 5 7 4 3 6 2 5 2 3 4 1Output21 7 15 21 3Input1 2 1 2Output0 0Input3 3 1 2 1 2 3 2 1 3 2Output1 3 3NoteThe picture shows the tree from the first example:", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a2e37445", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices. Each pair of vertices is connected by an edge with a weight. You are given $m$ queries. Each query is a number $q_i$. For each query, you need to find the number of pairs of vertices $(u, v)$ where $u < v$ and the maximum weight of an edge on the path between $u$ and $v$ is less than or equal to $q_i$. \n\n**Input:**\n\n* The first line contains two integers $n$ and $m$ ($1 \\le n, m \\le 2 \\cdot 10^5$) - the number of vertices and the number of queries.\n* The next $n-1$ lines describe the edges of the tree. Each line contains three integers $u_i$, $v_i$, and $w_i$ ($1 \\le u_i, v_i \\le n$, $u_i \\ne v_i$, $1 \\le w_i \\le 2 \\cdot 10^5$) - the labels of the vertices connected by the edge and the weight of the edge.\n* The last line contains $m$ integers $q_1, q_2, ..., q_m$ ($1 \\le q_i \\le 2 \\cdot 10^5$) - the maximum edge weights for each query.\n\n**Output:**\n\nPrint $m$ integers - the answers to the queries. The $i$-th value should be the number of pairs of vertices $(u, v)$ where $u < v$ and the maximum weight of an edge on the path between $u$ and $v$ is less than or equal to $q_i$."}, {"prompt_md5": "ce0be4ae", "template_md5": "465699a0", "result": "You are given a tree (a connected network without cycles) with weighted edges.  You need to answer multiple queries. Each query asks for the number of pairs of nodes in the tree where the heaviest edge on the path between them is less than or equal to a given weight."}]}