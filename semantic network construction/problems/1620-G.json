{"uid": "1620-G", "url": "https://codeforces.com/contest/1620/problem/G", "tags": ["bitmasks", " combinatorics", " dp"], "title": "1620-G", "statement": "G. Subsequences Galoretime limit per test10 secondsmemory limit per test1024 megabytesinputstandard inputoutputstandard outputFor a sequence of strings $$$[t_1, t_2, \\\\dots, t_m]$$$, let's define the function $$$f([t_1, t_2, \\\\dots, t_m])$$$ as the number of different strings (including the empty string) that are subsequences ofat least onestring $$$t_i$$$. $$$f([]) = 0$$$ (i. e. the number of such strings for an empty sequence is $$$0$$$).You are given a sequence of strings $$$[s_1, s_2, \\\\dots, s_n]$$$. Every string in this sequence consists of lowercase Latin letters and issorted(i. e., each string begins with several (maybe zero) charactersa, then several (maybe zero) charactersb, ..., ends with several (maybe zero) charactersz).For each of $$$2^n$$$ subsequences of $$$[s_1, s_2, \\\\dots, s_n]$$$, calculate the value of the function $$$f$$$ modulo $$$998244353$$$.InputThe first line contains one integer $$$n$$$ ($$$1 \\\\le n \\\\le 23$$$) — the number of strings.Then $$$n$$$ lines follow. The $$$i$$$-th line contains the string $$$s_i$$$ ($$$1 \\\\le |s_i| \\\\le 2 \\\\cdot 10^4$$$), consisting of lowercase Latin letters. Each string $$$s_i$$$ is sorted.OutputSince printing up to $$$2^{23}$$$ integers would be really slow, you should do the following:For each of the $$$2^n$$$ subsequences (which we denote as $$$[s_{i_1}, s_{i_2}, \\\\dots, s_{i_k}]$$$), calculate $$$f([s_{i_1}, s_{i_2}, \\\\dots, s_{i_k}])$$$, take it modulo $$$998244353$$$, then multiply it by $$$k \\\\cdot (i_1 + i_2 + \\\\dots + i_k)$$$. Print the XOR of all $$$2^n$$$ integers you get.The indices $$$i_1, i_2, \\\\dots, i_k$$$ in the description of each subsequences are $$$1$$$-indexed (i. e. are from $$$1$$$ to $$$n$$$).ExamplesInput3 a b cOutput92Input2 aa aOutput21Input2 a aOutput10Input2 abcd aabbOutput124Input3 ddd aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaabbbbbbbbbbbcccccccccccciiiiiiiiiiiiiiiiiiiiiiooooooooooqqqqqqqqqqqqqqqqqqvvvvvzzzzzzzzzzzzOutput15706243380", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "42d1f7fd", "template_md5": "35d339e4", "result": "You are given a list of sorted strings.  Each string consists of lowercase letters from 'a' to 'z'.  \n\nFor each possible subsequence of these strings (including the empty subsequence), calculate the number of different strings that are subsequences of at least one string in the subsequence.  \n\nThe result for each subsequence should be multiplied by the length of the subsequence.  \n\nFinally, calculate the XOR of all these results.\n\nOutput the final XOR value modulo 998244353."}, {"prompt_md5": "4d31a023", "template_md5": "465699a0", "result": "You are given a list of sorted strings.  For every possible subset of these strings, count the number of unique strings that can be formed by taking characters from at least one of the strings in the subset. Multiply this count by the size of the subset and take the result modulo a large number. Finally, calculate the XOR of all these results."}]}