{"uid": "1525-D", "url": "https://codeforces.com/contest/1525/problem/D", "tags": ["dp", " flows", " graph matchings", " greedy"], "title": "1525-D", "statement": "D. Armchairstime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputThere are $$$n$$$ armchairs, numbered from $$$1$$$ to $$$n$$$ from left to right. Some armchairs are occupied by people (at most one person per armchair), others are not. The number of occupied armchairs is not greater than $$$\\\\frac{n}{2}$$$.For some reason, you would like to tell people to move from their armchairs to some other ones. If the $$$i$$$-th armchair is occupied by someone and the $$$j$$$-th armchair is not, you can tell the person sitting in the $$$i$$$-th armchair to move to the $$$j$$$-th armchair. The time it takes a person to move from the $$$i$$$-th armchair to the $$$j$$$-th one is $$$|i - j|$$$ minutes. You may perform this operation any number of times, but these operations must be done sequentially, i. e. you cannot tell a person to move until the person you asked to move in the last operation has finished moving to their destination armchair.You want to achieve the following situation: every seat that was initially occupied must be free. What is the minimum time you need to do it?InputThe first line contains one integer $$$n$$$ ($$$2 \\\\le n \\\\le 5000$$$) — the number of armchairs.The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$0 \\\\le a_i \\\\le 1$$$). $$$a_i = 1$$$ means that the $$$i$$$-th armchair is initially occupied, $$$a_i = 0$$$ means that it is initially free. The number of occupied armchairs is at most $$$\\\\frac{n}{2}$$$.OutputPrint one integer — the minimum number of minutes you have to spend to achieve the following situation: every seat that was initially occupied must be free.ExamplesInput7 1 0 0 1 0 0 1Output3Input6 1 1 1 0 0 0Output9Input5 0 0 0 0 0Output0NoteIn the first test, you can perform the following sequence:ask a person to move from armchair $$$1$$$ to armchair $$$2$$$, it takes $$$1$$$ minute;ask a person to move from armchair $$$7$$$ to armchair $$$6$$$, it takes $$$1$$$ minute;ask a person to move from armchair $$$4$$$ to armchair $$$5$$$, it takes $$$1$$$ minute.In the second test, you can perform the following sequence:ask a person to move from armchair $$$1$$$ to armchair $$$4$$$, it takes $$$3$$$ minutes;ask a person to move from armchair $$$2$$$ to armchair $$$6$$$, it takes $$$4$$$ minutes;ask a person to move from armchair $$$4$$$ to armchair $$$5$$$, it takes $$$1$$$ minute;ask a person to move from armchair $$$3$$$ to armchair $$$4$$$, it takes $$$1$$$ minute.In the third test, no seat is occupied so your goal is achieved instantly.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5c5f4524", "template_md5": "35d339e4", "result": "You have $n$ chairs numbered from 1 to $n$. Some chairs are occupied (1) and some are empty (0). You can move an occupied person to an empty chair. The time it takes to move a person from chair $i$ to chair $j$ is $|i-j|$.\n\nYour goal is to move all occupied people to empty chairs. What is the minimum time it takes to do this? \n\nInput:\n\n* The first line contains the number of chairs, $n$.\n* The second line contains $n$ numbers, where each number is either 0 or 1, representing whether a chair is empty or occupied.\n\nOutput:\n\n* The minimum time to move all occupied people to empty chairs."}, {"prompt_md5": "0916902c", "template_md5": "465699a0", "result": "You have a row of chairs, some are occupied and some are empty. You can move an occupied person to an empty chair, taking a certain amount of time depending on how far they move.  What is the least amount of time it takes to move all the occupied people so that no chairs are occupied?"}]}