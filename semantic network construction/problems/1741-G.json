{"uid": "1741-G", "url": "https://codeforces.com/contest/1741/problem/G", "tags": ["bitmasks", " brute force", " dfs and similar", " dp", " flows", " graphs", " shortest paths"], "title": "1741-G", "statement": "G. Kirill and Companytime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputKirill lives on a connected undirected graph of $$$n$$$ vertices and $$$m$$$ edges at vertex $$$1$$$. One fine evening he gathered $$$f$$$ friends, the $$$i$$$-th friend lives at the vertex $$$h_i$$$. So all friends are now in the vertex $$$1$$$, the $$$i$$$-th friend must get to his home to the vertex $$$h_i$$$.The evening is about to end and it is time to leave. It turned out that $$$k$$$ ($$$k \\\\le 6$$$) of his friends have no cars, and they would have to walk if no one gives them a ride. One friend with a car can give a ride toanynumber of friends without cars, but only if he can give them a ride by driving along one of theshortestpaths to his house.For example, in the graph below, a friend from vertex $$$h_i=5$$$ can give a ride to friends from the following sets of vertices: $$$[2, 3]$$$, $$$[2, 4]$$$, $$$[2]$$$, $$$[3]$$$, $$$[4]$$$, but can't give a ride to friend from vertex $$$6$$$ or a set $$$[3, 4]$$$.The vertices where friends without cars live are highlighted in green, and with cars — in red.Kirill wants as few friends as possible to have to walk. Help him find theminimumpossible number.InputThe first line of input data contains an integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^3$$$) — the number of test cases in the test.The first line of the test case contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\\\le n \\\\le 10^4$$$, $$$n-1 \\\\le m \\\\le min (10^4, $$$$$$ \\\\frac{n \\\\cdot (n - 1)}{2} $$$$$$)$$$) — the number of vertices and edges, respectively.The next $$$m$$$ lines of the test case contain a description of the edges, two integers each $$$u$$$ and $$$v$$$ ($$$1 \\\\le u, v \\\\le n$$$, $$$u \\\\ne v$$$) — indexes of vertices connected by an edge. It is guaranteed that there is at most one edge between any pair of vertices (i.e. no multiple edges in the graph).Then follows line containing the number $$$f$$$ ($$$1 \\\\le f \\\\le 10^4$$$) — the number of Kirill's friends.The next line of the test case contains $$$f$$$ integers: $$$h_1, h_2, \\\\dots, h_f$$$ ($$$2 \\\\le h_i \\\\le n$$$) — the vertices in which they live. Some vertices may be repeated.The next line of the set contains the number $$$k$$$ ($$$1 \\\\le k \\\\le min(6, f)$$$) — the number of friends without cars.The last line of each test case contains $$$k$$$ integers: $$$p_1, p_2, \\\\dots, p_k$$$ ($$$1 \\\\le p_i \\\\le f$$$, $$$p_i < p_{i+1}$$$) — indexes of friends without cars.It is guaranteed that the sum of $$$n$$$ over all cases does not exceed $$$10^4$$$, as well as the sums of $$$m$$$ and $$$f$$$.OutputOutput $$$t$$$ lines, each of which contains the answer to the corresponding test case. As an answer, output a single integer —the minimumpossible number of friends who will have to walk.ExamplesInput36 71 22 32 43 54 53 66 552 3 4 5 641 2 3 56 71 22 32 43 54 53 66 562 3 4 5 6 541 2 3 54 41 21 32 33 433 4 221 3Output2 1 1Input32 11 232 2 231 2 33 31 21 32 342 2 2 331 2 44 43 13 21 42 453 2 2 4 231 3 4Output3 1 0NoteThe first test case of the first example is explained in the statement.In the second test case of the first example, two friends with cars live at vertex $$$5$$$, one can give a ride to friends from vertices $$$2$$$ and $$$3$$$, and the second from vertex $$$4$$$, only a friend from vertex $$$6$$$ will have to walk.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "dea2bd23", "template_md5": "35d339e4", "result": "You are given a connected undirected graph with $n$ vertices and $m$ edges.  There are $f$ people, each living at a different vertex.  $k$ of these people do not have cars.  Each person with a car can give a ride to any number of people without cars, but only if they can drive along one of the shortest paths to their own home.\n\nYour task is to find the minimum number of people who will have to walk.\n\n**Input:**\n\n* $t$: the number of test cases\n* For each test case:\n    * $n$: the number of vertices\n    * $m$: the number of edges\n    * $m$ lines, each containing two integers $u$ and $v$, representing an edge between vertices $u$ and $v$.\n    * $f$: the number of people\n    * $f$ lines, each containing an integer $h_i$, representing the vertex where person $i$ lives.\n    * $k$: the number of people without cars\n    * $k$ lines, each containing an integer $p_i$, representing the index of person $i$ who does not have a car.\n\n**Output:**\n\n* For each test case, output a single integer representing the minimum number of people who will have to walk."}, {"prompt_md5": "93678f24", "template_md5": "465699a0", "result": "You are given a graph with nodes and edges. Some nodes represent people with cars, others represent people without cars.  Each person without a car needs to get to their designated home node.  A person with a car can give rides to others along the shortest path to their home. Find the minimum number of people who will have to walk."}]}