{"uid": "1721-B", "url": "https://codeforces.com/contest/1721/problem/B", "tags": ["implementation"], "title": "1721-B", "statement": "B. Deadly Lasertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe robot is placed in the top left corner of a grid, consisting of $$$n$$$ rows and $$$m$$$ columns, in a cell $$$(1, 1)$$$.In one step, it can move into a cell, adjacent by a side to the current one:$$$(x, y) \\\\rightarrow (x, y + 1)$$$;$$$(x, y) \\\\rightarrow (x + 1, y)$$$;$$$(x, y) \\\\rightarrow (x, y - 1)$$$;$$$(x, y) \\\\rightarrow (x - 1, y)$$$.The robot can't move outside the grid.The cell $$$(s_x, s_y)$$$ contains a deadly laser. If the robot comes into some cell that has distance less than or equal to $$$d$$$ to the laser, it gets evaporated. The distance between two cells $$$(x_1, y_1)$$$ and $$$(x_2, y_2)$$$ is $$$|x_1 - x_2| + |y_1 - y_2|$$$.Print the smallest number of steps that the robot can take to reach the cell $$$(n, m)$$$ without getting evaporated or moving outside the grid. If it's not possible to reach the cell $$$(n, m)$$$, print-1.The laser is neither in the starting cell, nor in the ending cell. The starting cell always has distance greater than $$$d$$$ to the laser.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of testcases.The only line of each testcase contains five integers $$$n, m, s_x, s_y, d$$$ ($$$2 \\\\le n, m \\\\le 1000$$$; $$$1 \\\\le s_x \\\\le n$$$; $$$1 \\\\le s_y \\\\le m$$$; $$$0 \\\\le d \\\\le n + m$$$) — the size of the grid, the cell that contains the laser and the evaporating distance of the laser.The laser is neither in the starting cell, nor in the ending cell ($$$(s_x, s_y) \\\\neq (1, 1)$$$ and $$$(s_x, s_y) \\\\neq (n, m)$$$). The starting cell $$$(1, 1)$$$ always has distance greater than $$$d$$$ to the laser ($$$|s_x - 1| + |s_y - 1| > d$$$).OutputFor each testcase, print a single integer. If it's possible to reach the cell $$$(n, m)$$$ from $$$(1, 1)$$$ without getting evaporated or moving outside the grid, then print the smallest amount of steps it can take the robot to reach it. Otherwise, print-1.ExampleInput32 3 1 3 02 3 1 3 15 5 3 4 1Output3 -1 8", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5fb9a1be", "template_md5": "35d339e4", "result": "You are given a grid of size $n \\times m$. There is a laser at a specific cell $(s_x, s_y)$. The robot starts at cell $(1,1)$.  The robot can move one cell at a time, either up, down, left, or right.  The distance between two cells $(x_1, y_1)$ and $(x_2, y_2)$ is $|x_1 - x_2| + |y_1 - y_2|$.\n\nIf the robot moves to a cell within a distance of $d$ from the laser, it is destroyed.\n\nFind the minimum number of steps the robot needs to take to reach the cell $(n, m)$ without being destroyed. If it's impossible to reach $(n, m)$ safely, print -1."}, {"prompt_md5": "6b48db94", "template_md5": "465699a0", "result": "A robot starts at the top left corner of a grid and must reach the bottom right corner.  The robot can move one space at a time, horizontally or vertically. There is a dangerous spot on the grid. The robot cannot move into a space that is a certain distance or less from the dangerous spot. Find the fewest moves the robot can make to reach the destination without getting too close to the dangerous spot. If it's impossible, say so."}]}