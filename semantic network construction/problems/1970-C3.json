{"uid": "1970-C3", "url": "https://codeforces.com/contest/1970/problem/C3", "tags": ["dfs and similar", " dp", " games", " trees"], "title": "1970-C3", "statement": "C3. Game on Tree (Hard)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is the hard version of the problem. The only difference in this version is the constraint on $$$t$$$.Ron and Hermione are playing a game on a tree of $$$n$$$ nodes that are initially inactive. The game consists of $$$t$$$ rounds, each of which starts with a stone on exactly one node, which is considered as activated. A move consists of picking an inactive neighbor of the node with a stone on it and moving the stone there (thus activating this neighbor). Ron makes the first move, after which he alternates with Hermione until no valid move is available. The player that cannot make a move loses the round. If both players play optimally, who wins each round of this game?Note that all the rounds are played with the same tree; only the starting node changes. Moreover, after each round, all active nodes are considered inactive again.InputThe first line contains integers $$$n$$$ ($$$2 \\\\leq n \\\\leq 2\\\\times 10^5$$$), $$$t$$$ ($$$1 \\\\leq t \\\\leq n$$$), the number of nodes in the tree and the number of rounds, respectively.The next $$$n-1$$$ lines contain two integers $$$1 \\\\leq u, v \\\\leq n$$$ each, corresponding to an edge of the tree.The next line contains $$$t$$$ integers $$$1 \\\\leq u_1 , \\\\dots , u_t \\\\leq n$$$, corresponding to the node where the stone is initially put.OutputThe output consists of $$$t$$$ lines, each line being either \"Ron\" or \"Hermione\".ExamplesInput5 21 21 33 43 51 2OutputRon RonInput6 31 22 31 44 54 61 4 6OutputHermione Ron Hermione", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "c3486c51", "template_md5": "35d339e4", "result": "There is a tree with $n$ nodes.  The game is played over $t$ rounds. In each round, a stone starts at a specific node.  Players take turns moving the stone to an inactive neighbor node. A player loses if they cannot make a move.  \n\nGiven the tree structure and the starting nodes for each round, determine who wins each round if both players play optimally. \n\nInput:\n\n* The first line contains two integers, $n$ (the number of nodes) and $t$ (the number of rounds).\n* The next $n-1$ lines describe the tree edges, each line containing two integers $u$ and $v$ representing an edge between nodes $u$ and $v$.\n* The last line contains $t$ integers, each representing the starting node for a round.\n\nOutput:\n\n* Output $t$ lines, each line containing \"Player 1\" or \"Player 2\" indicating the winner of the corresponding round."}, {"prompt_md5": "e431b3e7", "template_md5": "465699a0", "result": "Two players take turns moving a stone on a tree.  In each turn, the stone can be moved to any inactive neighbor of the currently active node. The first player to have no legal moves loses.  Given a tree and a list of starting nodes, determine who wins each round if both players play optimally."}]}