{"uid": "1438-D", "url": "https://codeforces.com/contest/1438/problem/D", "tags": ["bitmasks", " constructive algorithms", " math"], "title": "1438-D", "statement": "D. Powerful Kseniatime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputKsenia has an array $$$a$$$ consisting of $$$n$$$ positive integers $$$a_1, a_2, \\\\ldots, a_n$$$.In one operation she can do the following:choose three distinct indices $$$i$$$, $$$j$$$, $$$k$$$, and thenchange all of $$$a_i, a_j, a_k$$$ to $$$a_i \\\\oplus a_j \\\\oplus a_k$$$ simultaneously, where $$$\\\\oplus$$$ denotes thebitwise XOR operation.She wants to make all $$$a_i$$$ equalin at most $$$n$$$ operations, or to determine that it is impossible to do so. She wouldn't ask for your help, but please, help her!InputThe first line contains one integer $$$n$$$ ($$$3 \\\\leq n \\\\leq 10^5$$$) — the length of $$$a$$$.The second line contains $$$n$$$ integers, $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\leq a_i \\\\leq 10^9$$$) — elements of $$$a$$$.OutputPrintYESorNOin the first line depending on whether it is possible to make all elements equal in at most $$$n$$$ operations.If it is possible, print an integer $$$m$$$ ($$$0 \\\\leq m \\\\leq n$$$), which denotes the number of operations you do.In each of the next $$$m$$$ lines, print three distinct integers $$$i, j, k$$$, representing one operation.If there are many such operation sequences possible, print any. Note that you donothave to minimize the number of operations.ExamplesInput5 4 2 1 7 2OutputYES 1 1 3 4Input4 10 4 49 22OutputNONoteIn the first example, the array becomes $$$[4 \\\\oplus 1 \\\\oplus 7, 2, 4 \\\\oplus 1 \\\\oplus 7, 4 \\\\oplus 1 \\\\oplus 7, 2] = [2, 2, 2, 2, 2]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "db5840fc", "template_md5": "35d339e4", "result": "You are given an array of $n$ positive integers. You can perform the following operation any number of times:\n\n1. Choose three distinct indices $i$, $j$, and $k$.\n2. Change the values at indices $i$, $j$, and $k$ to the bitwise XOR of the original values at those indices ($a_i \\oplus a_j \\oplus a_k$).\n\nDetermine if it is possible to make all the elements of the array equal using at most $n$ operations. If it is possible, output the minimum number of operations required and a sequence of operations that achieve this."}, {"prompt_md5": "42e58d19", "template_md5": "465699a0", "result": "You are given a list of numbers. You can choose three different numbers from the list and replace them with their sum (using the bitwise XOR operation).  Can you make all the numbers in the list the same using at most the same number of operations as the length of the list? If so, show one way to do it."}]}