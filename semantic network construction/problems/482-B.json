{"uid": "482-B", "url": "https://codeforces.com/contest/482/problem/B", "tags": ["constructive algorithms", " data structures", " trees"], "title": "482-B", "statement": "B. Interesting Arraytime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutWe'll call an array ofnnon-negative integersa[1],a[2], ...,a[n]interesting, if it meetsmconstraints. Thei-th of themconstraints consists of three integersli,ri,qi(1 ≤li≤ri≤n) meaning that valueshould be equal toqi.Your task is to find anyinterestingarray ofnelements or state that such array doesn't exist.Expressionx&ymeans the bitwise AND of numbersxandy. In programming languages C++, Java and Python this operation is represented as \"&\", in Pascal — as \"and\".InputThe first line contains two integersn,m(1 ≤n≤ 105,1 ≤m≤ 105) — the number of elements in the array and the number of limits.Each of the nextmlines contains three integersli,ri,qi(1 ≤li≤ri≤n,0 ≤qi< 230) describing thei-th limit.OutputIf theinterestingarray exists, in the first line print \"YES\" (without the quotes) and in the second line printnintegersa[1],a[2], ...,a[n](0 ≤a[i] < 230) decribing theinterestingarray. If there are multiple answers, print any of them.If theinterestingarray doesn't exist, print \"NO\" (without the quotes) in the single line.ExamplesInput3 11 3 3OutputYES3 3 3Input3 21 3 31 3 2OutputNO", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "7e7e8071", "template_md5": "35d339e4", "result": "You are given an integer $n$ and $m$.  You need to create an array of $n$ non-negative integers.  There are $m$ constraints, each constraint is defined by three integers $l_i$, $r_i$, and $q_i$.  The $i$-th constraint means that all the elements in the array from index $l_i$ to $r_i$ (inclusive) must be equal to $q_i$.\n\nDetermine if it is possible to create such an array. If it is possible, output \"YES\" followed by the array. If it is not possible, output \"NO\"."}, {"prompt_md5": "1671d593", "template_md5": "465699a0", "result": "You are given a list of length *n* and *m* rules. Each rule specifies a range of positions in the list and a target value.  You need to create a list of *n* numbers that satisfies all the rules.  If it's possible, output \"YES\" followed by the list. If it's not possible, output \"NO\"."}]}