{"uid": "191-C", "url": "https://codeforces.com/contest/191/problem/C", "tags": ["data structures", " dfs and similar", " trees"], "title": "191-C", "statement": "C. Fools and Roadstime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutThey say that Berland has exactly two problems, fools and roads. Besides, Berland hasncities, populated by the fools and connected by the roads. All Berland roads are bidirectional. As there are many fools in Berland, between each pair of cities there is a path (or else the fools would get upset). Also, between each pair of cities there is no more than one simple path (or else the fools would get lost).But that is not the end of Berland's special features. In this country fools sometimes visit each other and thus spoil the roads. The fools aren't very smart, so they always use only the simple paths.A simple pathis the path which goes through every Berland city not more than once.The Berland government knows the paths which the fools use. Help the government count for each road, how many distinct fools can go on it.Note how the fools' paths are given in the input.InputThe first line contains a single integern(2 ≤n≤ 105) — the number of cities.Each of the nextn- 1lines contains two space-separated integersui,vi(1 ≤ui,vi≤n,ui≠vi), that means that there is a road connecting citiesuiandvi.The next line contains integerk(0 ≤k≤ 105) — the number of pairs of fools who visit each other.Nextklines contain two space-separated numbers. Thei-th line(i> 0)contains numbersai,bi(1 ≤ai,bi≤n). That means that the fool number2i- 1lives in cityaiand visits the fool number2i, who lives in citybi. The given pairs describe simple paths, because between every pair of cities there is only one simple path.OutputPrintn- 1integer. The integers should be separated by spaces. Thei-th number should equal the number of fools who can go on thei-th road. The roads are numbered starting from one in the order, in which they occur in the input.ExamplesInput51 21 32 42 521 43 5Output2 1 1 1Input53 44 51 42 432 31 33 5Output3 1 1 1NoteIn the first sample the fool number one goes on the first and third road and the fool number 3 goes on the second, first and fourth ones.In the second sample, the fools number 1, 3 and 5 go on the first road, the fool number 5 will go on the second road, on the third road goes the fool number 3, and on the fourth one goes fool number 1.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e6136114", "template_md5": "35d339e4", "result": "There are $n$ cities connected by $n-1$ bidirectional roads.  Each pair of cities has exactly one path between them.  \n\nSome pairs of people travel between cities, always using the single path between them.  You are given a list of these traveling pairs.\n\nFor each road, count how many distinct people travel on it. \n\n\n\nLet me know if you'd like help with the algorithm to solve this problem!"}, {"prompt_md5": "4046f8b5", "template_md5": "465699a0", "result": "You are given a list of connected cities and the paths that pairs of people travel between them.  Count how many people travel on each road."}]}