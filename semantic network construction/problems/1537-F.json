{"uid": "1537-F", "url": "https://codeforces.com/contest/1537/problem/F", "tags": ["constructive algorithms", " dfs and similar", " dsu", " graphs", " greedy", " math"], "title": "1537-F", "statement": "F. Figure Fixingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a connected undirected graph made of $$$n$$$ nodes and $$$m$$$ edges. The $$$i$$$-th node has a value $$$v_i$$$ and a target value $$$t_i$$$.In an operation, you can choose an edge $$$(i, j)$$$ and add $$$k$$$ to both $$$v_i$$$ and $$$v_j$$$, where $$$k$$$ can be anyinteger. In particular, $$$k$$$ can be negative.Your task to determine if it is possible that by doing some finite number of operations (possibly zero), you can achieve for every node $$$i$$$, $$$v_i = t_i$$$.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 1000$$$), the number of test cases. Then the test cases follow.The first line of each test case contains two integers $$$n$$$, $$$m$$$ ($$$2 \\\\leq n \\\\leq 2\\\\cdot 10^5$$$, $$$n-1\\\\leq m\\\\leq \\\\min(2\\\\cdot 10^5, \\\\frac{n(n-1)}{2})$$$) — the number of nodes and edges respectively.The second line contains $$$n$$$ integers $$$v_1\\\\ldots, v_n$$$ ($$$-10^9 \\\\leq v_i \\\\leq 10^9$$$) — initial values of nodes.The third line contains $$$n$$$ integers $$$t_1\\\\ldots, t_n$$$ ($$$-10^9 \\\\leq t_i \\\\leq 10^9$$$) — target values of nodes.Each of the next $$$m$$$ lines contains two integers $$$i$$$ and $$$j$$$ representing an edge between node $$$i$$$ and node $$$j$$$ ($$$1 \\\\leq i, j \\\\leq n$$$, $$$i\\\\ne j$$$).It is guaranteed that the graph is connected and there is at most one edge between the same pair of nodes.It is guaranteed that the sum of $$$n$$$ over all testcases does not exceed $$$2 \\\\cdot 10^5$$$ and the sum of $$$m$$$ over all testcases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, if it is possible for every node to reach its target after some number of operations, print \"YES\". Otherwise, print \"NO\".ExampleInput2 4 4 5 1 2 -3 3 3 10 1 1 2 1 4 3 2 3 4 4 4 5 8 6 6 -3 1 15 4 1 2 1 4 3 2 3 4OutputYES NONoteHere is a visualization of the first test case (the orange values denote the initial values and the blue ones the desired values):One possible order of operations to obtain the desired values for each node is the following:Operation $$$1$$$: Add $$$2$$$ to nodes $$$2$$$ and $$$3$$$.Operation $$$2$$$: Add $$$-2$$$ to nodes $$$1$$$ and $$$4$$$.Operation $$$3$$$: Add $$$6$$$ to nodes $$$3$$$ and $$$4$$$.Now we can see that in total we added $$$-2$$$ to node $$$1$$$, $$$2$$$ to node $$$2$$$, $$$8$$$ to node $$$3$$$ and $$$4$$$ to node $$$4$$$ which brings each node exactly to it's desired value.For the graph from the second test case it's impossible to get the target values.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d759aa46", "template_md5": "35d339e4", "result": "You are given a connected graph with $n$ nodes and $m$ edges. Each node has a starting value ($v_i$) and a target value ($t_i$).\n\nYou can perform operations on the graph:\n\n* Choose an edge between two nodes ($i$ and $j$).\n* Add a value $k$ to both nodes $v_i$ and $v_j$.\n\nDetermine if it's possible to make the value of every node equal to its target value by performing a finite number of these operations (possibly zero).\n\n**Input:**\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains $n$ and $m$ (number of nodes and edges).\n    * The second line contains the starting values of the nodes ($v_1, v_2, ..., v_n$).\n    * The third line contains the target values of the nodes ($t_1, t_2, ..., t_n$).\n    * The next $m$ lines each contain two integers representing an edge between two nodes.\n\n**Output:**\n\n* For each test case, print \"YES\" if it's possible to reach the target values, otherwise print \"NO\"."}, {"prompt_md5": "a12634af", "template_md5": "465699a0", "result": "You have a network of connected points. Each point has a current value and a target value. You can change the value of any two connected points by adding the same number to both.  Can you make the value of every point equal to its target value?"}]}