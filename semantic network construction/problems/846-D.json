{"uid": "846-D", "url": "https://codeforces.com/contest/846/problem/D", "tags": ["binary search", " data structures"], "title": "846-D", "statement": "D. Monitortime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecently Luba bought a monitor. Monitor is a rectangular matrix of sizen×m. But then she started to notice that some pixels cease to work properly. Luba thinks that the monitor will become broken the first moment when it contains a squarek×kconsisting entirely of broken pixels. She knows thatqpixels are already broken, and for each of them she knows the moment when it stopped working. Help Luba to determine when the monitor became broken (or tell that it's still not broken even after allqpixels stopped working).InputThe first line contains four integer numbersn,m,k,q(1 ≤n,m≤ 500, 1 ≤k≤min(n,m), 0 ≤q≤n·m)— the length and width of the monitor, the size of a rectangle such that the monitor is broken if there is a broken rectangle with this size, and the number of broken pixels.Each of nextqlines contain three integer numbersxi,yi,ti(1 ≤xi≤n, 1 ≤yi≤m, 0 ≤t≤ 109)— coordinates ofi-th broken pixel (its row and column in matrix) and the moment it stopped working. Each pixel is listed at most once.We consider that pixel is already broken at momentti.OutputPrint one number — the minimum moment the monitor became broken, or \"-1\" if it's still not broken after theseqpixels stopped working.ExamplesInput2 3 2 52 1 82 2 81 2 11 3 42 3 2Output8Input3 3 2 51 2 22 2 12 3 53 2 102 1 100Output-1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d332db4e", "template_md5": "35d339e4", "result": "You are given a rectangular grid of size $n \\times m$.  Some pixels in the grid are broken. You know the coordinates $(x_i, y_i)$ and the time $t_i$ when each broken pixel stopped working.\n\nDetermine the minimum time when a square of size $k \\times k$ is entirely made up of broken pixels, or report \"-1\" if this never happens."}, {"prompt_md5": "e0702096", "template_md5": "465699a0", "result": "You are given a grid of squares. Some squares are initially broken.  More squares will break over time.  Find the earliest time when a square of a given size is entirely broken. If this never happens, output -1."}]}