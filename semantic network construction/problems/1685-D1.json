{"uid": "1685-D1", "url": "https://codeforces.com/contest/1685/problem/D1", "tags": ["constructive algorithms", " dfs and similar", " dsu"], "title": "1685-D1", "statement": "D1. Permutation Weight (Easy Version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is an easy version of the problem. The difference between the easy and hard versions is that in this version, you can output any permutation with the smallest weight.You are given a permutation $$$p_1, p_2, \\\\ldots, p_n$$$ of integers from $$$1$$$ to $$$n$$$.Let's define the weight of the permutation $$$q_1, q_2, \\\\ldots, q_n$$$ of integers from $$$1$$$ to $$$n$$$ as $$$$$$|q_1 - p_{q_{2}}| + |q_2 - p_{q_{3}}| + \\\\ldots + |q_{n-1} - p_{q_{n}}| + |q_n - p_{q_{1}}|$$$$$$You want your permutation to be as lightweight as possible. Find any permutation $$$q$$$ with the smallest possible weight.InputThe first line of the input contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 100$$$)  — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 200$$$)  — the size of the permutation.The second line of each test case contains $$$n$$$ integers $$$p_1, p_2, \\\\ldots, p_n$$$ ($$$1 \\\\le p_i \\\\le n$$$, all $$$p_i$$$ are distinct)  — the elements of the permutation.The sum of $$$n$$$ over all test cases doesn't exceed $$$400$$$.OutputFor each test case, output $$$n$$$ integers $$$q_1, q_2, \\\\ldots, q_n$$$ ($$$1 \\\\le q_i \\\\le n$$$, all $$$q_i$$$ are distinct)  — one of the permutations with the smallest weight.ExampleInput322 142 3 1 455 4 3 2 1Output1 2  1 3 4 2  1 4 2 3 5NoteIn the first test case, there are two permutations of length $$$2$$$: $$$(1, 2)$$$ and $$$(2, 1)$$$. Permutation $$$(1, 2)$$$ has weight $$$|1 - p_2| + |2 - p_1| = 0$$$, and permutation $$$(2, 1)$$$ has the same weight: $$$|2 - p_1| + |1 - p_2| = 0$$$. You can output any of these permutations in this version.In the second test case, the weight of the permutation $$$(1, 3, 4, 2)$$$ is $$$|1 - p_3| + |3 - p_4| + |4 - p_2| + |2 - p_1| = |1 - 1| + |3 - 4| + |4 - 3| + |2 - 2| = 2$$$. There are no permutations with smaller weights.In the third test case, the weight of the permutation $$$(1, 4, 2, 3, 5)$$$ is $$$|1 - p_4| + |4 - p_2| + |2 - p_3| + |3 - p_5| + |5 - p_1| = |1 - 2| + |4 - 4| + |2 - 3| + |3 - 1| + |5 - 5| = 4$$$. There are no permutations with smaller weights.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "305c7102", "template_md5": "35d339e4", "result": "You are given a permutation of numbers from 1 to n.  A permutation is a way to order the numbers.\n\nThe weight of a permutation is calculated as follows:\n\n$$|q_1 - p_{q_{2}}| + |q_2 - p_{q_{3}}| + ... + |q_{n-1} - p_{q_{n}}| + |q_n - p_{q_{1}}|$$\n\nwhere:\n\n* $q_1, q_2, ..., q_n$ is the permutation you want to find.\n* $p_1, p_2, ..., p_n$ is the given permutation.\n\nFind any permutation $q$ that has the smallest possible weight.\n\n**Input:**\n\n* The first line contains the number of test cases, *t*.\n* For each test case:\n    * The first line contains the size of the permutation, *n*.\n    * The second line contains the *n* numbers of the permutation.\n\n**Output:**\n\nFor each test case, output the *n* numbers of the permutation *q* with the smallest possible weight."}, {"prompt_md5": "63107172", "template_md5": "465699a0", "result": "You are given a list of numbers.  You need to rearrange the numbers into a new list. The goal is to find a rearrangement that minimizes the sum of the absolute differences between each number in the new list and the number at the corresponding position in the original list. Output any such rearrangement."}]}