{"uid": "1750-B", "url": "https://codeforces.com/contest/1750/problem/B", "tags": ["brute force", " greedy", " implementation"], "title": "1750-B", "statement": "B. Maximum Substringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA binary string is a string consisting only of the characters0and1. You are given a binary string $$$s$$$.For some non-empty substring$$$^\\\\dagger$$$ $$$t$$$ of string $$$s$$$ containing $$$x$$$ characters0and $$$y$$$ characters1, define itscostas:$$$x \\\\cdot y$$$, if $$$x > 0$$$ and $$$y > 0$$$;$$$x^2$$$, if $$$x > 0$$$ and $$$y = 0$$$;$$$y^2$$$, if $$$x = 0$$$ and $$$y > 0$$$.Given a binary string $$$s$$$ of length $$$n$$$, find the maximum cost across all its non-empty substrings.$$$^\\\\dagger$$$ A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.InputEach test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^5$$$) — the number of test cases. The description of test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the length of the string $$$s$$$.The second line of each test case contains a binary string $$$s$$$ of length $$$n$$$.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, print a single integer — the maximum cost across all substrings.ExampleInput6511100711001106011110710010104100010Output9 12 16 12 9 1NoteIn the first test case, we can take a substring $$$111$$$. It contains $$$3$$$ characters1and $$$0$$$ characters0. So $$$a = 3$$$, $$$b = 0$$$ and its cost is $$$3^2 = 9$$$.In the second test case, we can take the whole string. It contains $$$4$$$ characters1and $$$3$$$ characters0. So $$$a = 4$$$, $$$b = 3$$$ and its cost is $$$4 \\\\cdot 3 = 12$$$.In the third test case, we can can take a substring $$$1111$$$ and its cost is $$$4^2 = 16$$$.In the fourth test case, we can take the whole string and cost is $$$4 \\\\cdot 3 = 12$$$.In the fifth test case, we can take a substring $$$000$$$ and its cost is $$$3 \\\\cdot 3 = 9$$$.In the sixth test case, we can only take the substring $$$0$$$ and its cost is $$$1 \\\\cdot 1 = 1$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "570fb728", "template_md5": "35d339e4", "result": "You are given a binary string (a string consisting only of 0s and 1s).  Find the maximum cost of any non-empty substring of the string.\n\nThe cost of a substring is calculated as follows:\n\n* If the substring has both 0s and 1s, the cost is the product of the number of 0s and the number of 1s.\n* If the substring has only 0s, the cost is the square of the number of 0s.\n* If the substring has only 1s, the cost is the square of the number of 1s."}, {"prompt_md5": "38a704e1", "template_md5": "465699a0", "result": "You are given a string of 0s and 1s. Find the highest possible value you can get by picking a section (substring) of the string and applying the following rules:\n\n* If the section has both 0s and 1s, the value is the number of 0s times the number of 1s.\n* If the section has only 0s, the value is the square of the number of 0s.\n* If the section has only 1s, the value is the square of the number of 1s."}]}