{"uid": "825-D", "url": "https://codeforces.com/contest/825/problem/D", "tags": ["binary search", " greedy", " implementation"], "title": "825-D", "statement": "D. Suitable Replacementtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two stringssandtconsisting of small Latin letters, stringscan also contain'?'characters.Suitabilityof stringsis calculated by following metric:Any two letters can be swapped positions, these operations can be performed arbitrary number of times over any pair of positions. Among all resulting stringss, you choose the one with the largest number ofnon-intersectingoccurrences of stringt.Suitabilityis this number of occurrences.You should replace all'?'characters with small Latin letters in such a way that thesuitabilityof stringsis maximal.InputThe first line contains strings(1 ≤ |s| ≤ 106).The second line contains stringt(1 ≤ |t| ≤ 106).OutputPrint stringswith'?'replaced with small Latin letters in such a way thatsuitabilityof that string is maximal.If there are multiple strings with maximalsuitabilitythen print any of them.ExamplesInput?aa?abOutputbaabInput??b?zaOutputazbzInputabcdabacabaOutputabcdNoteIn the first example string\"baab\"can be transformed to\"abab\"with swaps, this one hassuitabilityof2. That means that string\"baab\"also hassuitabilityof2.In the second example maximalsuitabilityyou can achieve is1and there are several dozens of such strings,\"azbz\"is just one of them.In the third example there are no'?'characters and thesuitabilityof the string is0.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "06204f1d", "template_md5": "35d339e4", "result": "You are given two strings,  *s* and *t*.  *s* can contain '?' characters.\n\nThe goal is to replace all the '?' characters in *s* with lowercase letters so that the \"suitability\" of *s* is maximized.\n\nThe suitability of a string is calculated as follows:\n\n1. You can swap any two letters in the string any number of times.\n2. Count the number of non-overlapping occurrences of string *t* within the modified string *s*.\n\nThe suitability of *s* is this count.\n\nOutput the modified string *s* with the '?' characters replaced to achieve the maximum suitability. If there are multiple strings that achieve the maximum suitability, output any one of them."}, {"prompt_md5": "2f914ea5", "template_md5": "465699a0", "result": "You are given two strings, one with some \"?\" characters.  Replace the \"?\" characters with letters to make the first string as similar as possible to the second string.  Similarity is measured by how many times the second string can be found within the first string, without overlapping.  Print the resulting string."}]}