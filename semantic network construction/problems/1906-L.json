{"uid": "1906-L", "url": "https://codeforces.com/contest/1906/problem/L", "tags": ["constructive algorithms"], "title": "1906-L", "statement": "L. Palindromic Parenthesestime limit per test1 secondmemory limit per test1024 megabytesinputstandard inputoutputstandard outputConstruct a parentheses sequence consisting of $$$N$$$ characters such that it isbalancedand the length of itslongest palindromic subsequence (LPS)is exactly $$$K$$$. Determine whether such a construction is possible. If there are several possible sequences, construct any of them.A parentheses sequence consists of only character(and). A parentheses sequence isbalancedif each character(has a corresponding character)and the pairs of parentheses are properly nested. For example,(),(()),(())(), and((())())are balanced. However,)(,((), and())are not balanced.A sequence ispalindromicif it reads the same backwards as forwards. For example,((,),())(, and(()((are palindromic. However,(),)(, and(())are not palindromic.Asubsequencecan be derived from another sequence by removing zero or more characters without changing the order of the remaining characters. For example,(,))),())(, and(())()are subsequence of(())(). However,)((and((()))are not subsequence of(())().Thelongest palindromic subsequence (LPS)of a sequence is a subsequence with the maximum number of characters, derived from that sequence and it is palindromic. For example, the LPS of sequence(())()is())(, which can be obtained by removing the second and sixth characters. Therefore, the length of the LPS of(())()is $$$4$$$.InputInput consists of two integers $$$N$$$ $$$K$$$ ($$$2 \\\\leq N \\\\leq 2000; 1 \\\\leq K \\\\leq N$$$). $$$N$$$ is an even number.OutputIf there is no such parentheses sequence such that it is balanced and the length of its LPS is exactly $$$K$$$, then output-1.Otherwise, output a string of $$$N$$$ characters, representing the parentheses sequence. If there are several possible answers, output any of them.ExamplesInput6 4Output(())()Input6 3Output(()())Input4 1Output-1Input14 11Output()((())()())()NoteExplanation for the sample input/output #2The LPS of(()())is either(((by removing all)characters, or)))by removing all(characters.The output((()))also satisfies the requirements.Explanation for the sample input/output #3The only possible balanced parentheses sequences are(())and()(). The length of the LPS of(())and()()are $$$2$$$ and $$$3$$$, respectively.Explanation for the sample input/output #4The LPS of()((())()())()is)())()())(), which can be obtained by removing the first, fourth, and fifth characters.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5a961d30", "template_md5": "35d339e4", "result": "Given two integers $N$ and $K$ ($2 \\leq N \\leq 2000$, $1 \\leq K \\leq N$ and $N$ is even), determine if you can construct a balanced parentheses sequence of length $N$ whose longest palindromic subsequence has length $K$. \n\nIf such a sequence exists, output it. Otherwise, output -1.\n\n**Definitions:**\n\n* **Balanced parentheses sequence:** A sequence of '(' and ')' characters where every '(' has a corresponding ')' and the parentheses are nested correctly (e.g., () , (()) , ((())) are balanced, while )( , ((), and ()) are not).\n* **Longest palindromic subsequence (LPS):** The longest subsequence within a sequence that reads the same backward as forward (e.g., the LPS of  (())() is ())."}, {"prompt_md5": "4066689d", "template_md5": "465699a0", "result": "Given a number of slots (N) and a target length (K), construct a sequence of parentheses that is balanced and has a longest palindromic subsequence of length K. If this is not possible, output -1."}]}