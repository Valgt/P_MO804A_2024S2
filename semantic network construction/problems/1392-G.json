{"uid": "1392-G", "url": "https://codeforces.com/contest/1392/problem/G", "tags": ["bitmasks", " dfs and similar", " dp", " math", " shortest paths"], "title": "1392-G", "statement": "G. Omkar and Piestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOmkar has a pie tray with $$$k$$$ ($$$2 \\\\leq k \\\\leq 20$$$) spots. Each spot in the tray contains either a chocolate pie or a pumpkin pie. However, Omkar does not like the way that the pies are currently arranged, and has another ideal arrangement that he would prefer instead.To assist Omkar, $$$n$$$ elves have gathered in a line to swap the pies in Omkar's tray. The $$$j$$$-th elf from the left is able to swap the pies at positions $$$a_j$$$ and $$$b_j$$$ in the tray.In order to get as close to his ideal arrangement as possible, Omkar may choose a contiguous subsegment of the elves and then pass his pie tray through the subsegment starting from the left. However, since the elves have gone to so much effort to gather in a line, they request that Omkar's chosen segment contain at least $$$m$$$ ($$$1 \\\\leq m \\\\leq n$$$) elves.Formally, Omkar may choose two integers $$$l$$$ and $$$r$$$ satisfying $$$1 \\\\leq l \\\\leq r \\\\leq n$$$ and $$$r - l + 1 \\\\geq m$$$ so that first the pies in positions $$$a_l$$$ and $$$b_l$$$ will be swapped, then the pies in positions $$$a_{l + 1}$$$ and $$$b_{l + 1}$$$ will be swapped, etc. until finally the pies in positions $$$a_r$$$ and $$$b_r$$$ are swapped.Help Omkar choose a segment of elves such that the amount of positions in Omkar's final arrangement that contain the same type of pie as in his ideal arrangement is the maximum possible.Note that since Omkar has a big imagination, it might be that the amounts of each type of pie in his original arrangement and in his ideal arrangement do not match.InputThe first line contains three integers $$$n$$$, $$$m$$$, and $$$k$$$ ($$$1 \\\\leq m \\\\leq n \\\\leq 10^6$$$ and $$$2 \\\\leq k \\\\leq 20$$$)  — the number of elves, the minimum subsegment length, and the number of spots in Omkar's tray respectively.The second and third lines each contain a string of length $$$k$$$ consisting of $$$0$$$s and $$$1$$$s that represent initial arrangement of pies and ideal arrangement of pies; the $$$j$$$-th character in each string is equal to $$$0$$$ if the $$$j$$$-th spot in the arrangement contains a chocolate pie and is equal to $$$1$$$ if the $$$j$$$-th spot in the arrangement contains a pumpkin pie. It is not guaranteed that the two strings have the same amount of $$$0$$$s or the same amount of $$$1$$$s.$$$n$$$ lines follow. The $$$j$$$-th of these lines contains two integers $$$a_j$$$ and $$$b_j$$$ ($$$1 \\\\leq a_j, b_j \\\\leq k$$$, $$$a_j \\\\neq b_j$$$) which indicate that the $$$j$$$-th elf from the left can swap the pies at positions $$$a_j$$$ and $$$b_j$$$ in the tray.OutputOutput two lines.The first line should contain a single integer $$$s$$$ ($$$0 \\\\leq s \\\\leq k$$$) equal to the amount of positions that contain the same type of pie in Omkar's final arrangement and in Omkar's ideal arrangement; $$$s$$$ should be the maximum possible.The second line should contain two integers $$$l$$$ and $$$r$$$ satisfying $$$1 \\\\leq l \\\\leq r \\\\leq n$$$ and $$$r - l + 1 \\\\geq m$$$, indicating that Omkar should pass his tray through the subsegment $$$l, l + 1, \\\\dots, r$$$ to achieve a final arrangement with $$$s$$$ positions having the same type of pie as his ideal arrangement.If there are multiple answers you may output any of them.ExamplesInput4 2 5 11000 00011 1 3 3 5 4 2 3 4Output5 1 3Input4 3 5 11000 00011 1 3 1 5 2 4 1 5Output3 1 4NoteIn the first test case, the swaps will go like this:Swap $$$1$$$ and $$$3$$$:11000becomes01100Swap $$$3$$$ and $$$5$$$:01100becomes01001Swap $$$4$$$ and $$$2$$$:01001becomes00011The final arrangement is the same as the ideal arrangement00011, so there are $$$5$$$ positions with the same type of pie, which is optimal.In the second test case, the swaps will go like this:Swap $$$1$$$ and $$$3$$$:11000becomes01100Swap $$$1$$$ and $$$5$$$:01100becomes01100Swap $$$4$$$ and $$$2$$$:01100becomes00110Swap $$$1$$$ and $$$5$$$:00110becomes00110The final arrangement has $$$3$$$ positions with the same type of pie as the ideal arrangement00011, those being positions $$$1$$$, $$$2$$$, and $$$4$$$. In this case the subsegment of elves $$$(l, r) = (2, 3)$$$ is more optimal, but that subsegment is only length $$$2$$$ and therefore does not satisfy the constraint that the subsegment be of length at least $$$m = 3$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d416878c", "template_md5": "35d339e4", "result": "There are $k$ spots on a tray. Each spot can have either a chocolate pie or a pumpkin pie. You have a target arrangement of pies. There are $n$ elves, each elf can swap two specific spots on the tray. You need to choose a contiguous group of at least $m$ elves to swap the pies. The goal is to maximize the number of spots that have the same type of pie in the final arrangement as in the target arrangement.\n\nOutput the maximum number of matching spots and the indices of the elves to use. \n\n\nInput:\n\n* $n$: number of elves\n* $m$: minimum number of elves in a group\n* $k$: number of spots on the tray\n* Two strings of length $k$: the current arrangement and the target arrangement (0 for chocolate, 1 for pumpkin)\n* $n$ lines, each line containing two integers: the spots to swap for each elf\n\nOutput:\n\n* The maximum number of matching spots\n* Two integers: the starting and ending indices of the group of elves to use"}, {"prompt_md5": "70678fa9", "template_md5": "465699a0", "result": "You have a tray with spots, each containing either a chocolate or pumpkin pie. You have a target arrangement of pies. Elves can swap pairs of pies on the tray. You need to choose a group of at least  'm' elves, and have them swap pies in a contiguous order, to get as many spots in the final arrangement matching the target arrangement as possible. Output the maximum number of matching spots and the group of elves to use."}]}