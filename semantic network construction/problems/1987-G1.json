{"uid": "1987-G1", "url": "https://codeforces.com/contest/1987/problem/G1", "tags": ["divide and conquer", " dp", " trees"], "title": "1987-G1", "statement": "G1. Spinning Round (Easy Version)time limit per test7 secondsmemory limit per test1024 megabytesinputstandard inputoutputstandard outputThis is the easy version of the problem. The only difference between the two versions are the allowed characters in $$$s$$$. In the easy version, $$$s$$$ only contains the character?. You can make hacks only if both versions of the problem are solved.You are given a permutation $$$p$$$ of length $$$n$$$. You are also given a string $$$s$$$ of length $$$n$$$, consisting only of the character?.For each $$$i$$$ from $$$1$$$ to $$$n$$$:Define $$$l_i$$$ as the largest index $$$j < i$$$ such that $$$p_j > p_i$$$. If there is no such index, $$$l_i := i$$$.Define $$$r_i$$$ as the smallest index $$$j > i$$$ such that $$$p_j > p_i$$$. If there is no such index, $$$r_i := i$$$.Initially, you have an undirected graph with $$$n$$$ vertices (numbered from $$$1$$$ to $$$n$$$) and no edges. Then, for each $$$i$$$ from $$$1$$$ to $$$n$$$, add one edge to the graph:If $$$s_i =$$$L, add the edge $$$(i, l_i)$$$ to the graph.If $$$s_i =$$$R, add the edge $$$(i, r_i)$$$ to the graph.If $$$s_i =$$$?, either add the edge $$$(i, l_i)$$$ or the edge $$$(i, r_i)$$$ to the graph at your choice.Find the maximum possible diameter$$$^{\\\\text{∗}}$$$ over allconnectedgraphs that you can form. Output $$$-1$$$ if it is not possible to form any connected graphs.$$$^{\\\\text{∗}}$$$ Let $$$d(s, t)$$$ denote the smallest number of edges on any path between $$$s$$$ and $$$t$$$.The diameter of the graph is defined as the maximum value of $$$d(s, t)$$$ over all pairs of vertices $$$s$$$ and $$$t$$$.InputEach test contains multiple test cases. The first line of input contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 2 \\\\cdot 10^4$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 4 \\\\cdot 10^5$$$) — the length of the permutation $$$p$$$.The second line of each test case contains $$$n$$$ integers $$$p_1,p_2,\\\\ldots, p_n$$$ ($$$1 \\\\le p_i \\\\le n$$$) — the elements of $$$p$$$, which are guaranteed to form a permutation.The third line of each test case contains a string $$$s$$$ of length $$$n$$$. It is guaranteed that it consists only of the character?.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$4 \\\\cdot 10^5$$$.OutputFor each test case, output the maximum possible diameter over all connected graphs that you form, or $$$-1$$$ if it is not possible to form any connected graphs.ExampleInput852 1 4 3 5?????21 2??33 1 2???75 3 1 6 4 2 7???????55 2 1 3 4?????66 2 3 4 5 1??????81 7 5 6 2 8 4 3????????126 10 7 1 8 5 12 2 11 3 4 9????????????Output4 1 2 6 4 5 5 8NoteIn the first test case, here are some possible connected graphs that you can form (the labels are indices):In the second test case, the only connected graph has a diameter of $$$1$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f3fb5c2b", "template_md5": "35d339e4", "result": "You are given a permutation of length $n$ and a string of length $n$ consisting only of '?'. \n\nFor each index $i$ from 1 to $n$:\n\n*  $l_i$ is the largest index $j < i$ such that $p_j > p_i$. If there is no such index, $l_i = i$.\n*  $r_i$ is the smallest index $j > i$ such that $p_j > p_i$. If there is no such index, $r_i = i$.\n\nYou can build a graph with $n$ vertices (numbered 1 to $n$). For each $i$:\n\n* If $s_i = 'L'$, add an edge between $i$ and $l_i$.\n* If $s_i = 'R'$, add an edge between $i$ and $r_i$.\n* If $s_i = '?', add either edge $(i, l_i)$ or $(i, r_i)$.\n\nFind the maximum possible diameter of any connected graph you can build. The diameter of a graph is the longest shortest path between any two vertices. Output $-1$ if it's not possible to build a connected graph."}, {"prompt_md5": "7653889c", "template_md5": "465699a0", "result": "You are given a list of numbers and a string of question marks.  For each number in the list, you can connect it to a previous or next number in the list based on the string.  The goal is to find the longest distance between any two connected numbers in the resulting graph."}]}