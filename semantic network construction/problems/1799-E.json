{"uid": "1799-E", "url": "https://codeforces.com/contest/1799/problem/E", "tags": ["constructive algorithms", " dfs and similar", " dsu", " geometry", " greedy", " implementation", " math"], "title": "1799-E", "statement": "E. City Uniontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given $$$n \\\\times m$$$ grid. Some cells are filled and some are empty.Acityis a maximal (by inclusion) set of filled cells such that it is possible to get from any cell in the set to any other cell in the set by moving to adjacent (by side) cells, without moving into any cells not in the set. In other words, a city is a connected component of filled cells with edges between adjacent (by side) cells.Initially, there aretwo citieson the grid. You want to change some empty cells into filled cells so that both of the following are satisfied:There isone cityon the resulting grid.The shortest path between any two filled cells, achievable only by moving onto filled cells, is equal to the Manhattan distance between them.TheManhattan distancebetween two cells $$$(a, b)$$$ and $$$(c, d)$$$ is equal to $$$|a - c| + |b - d|$$$.Find a way to add filled cells that satisfies these conditions and minimizes the total number of filled cells.InputInput consists of multiple test cases. The first line contains a single integer $$$t$$$, the number of test cases ($$$1 \\\\le t \\\\le 5000$$$).The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\\\le n, m \\\\le 50$$$, $$$nm \\\\geq 3$$$).The next $$$n$$$ lines describe the grid. The $$$i$$$-th line contains a string $$$s_i$$$ of length $$$m$$$. $$$s_{i,j}$$$ is '#' if the cell in position $$$(i, j)$$$ is filled, and '.' if it is empty.It is guaranteed that there areexactly two citiesin the initial grid.It is guaranteed that the sum of $$$n\\\\cdot m$$$ over all test cases does not exceed $$$25\\\\,000$$$.OutputFor each test case, output $$$n$$$ lines, each containing a string of length $$$m$$$, describing the grid you create in the same format as the input.If there are multiple possible answers with the minimum number of filled cells print any.ExampleInput111 3#.#2 2.##.4 4..##...##...##..6 6.##...##..............##.....#...###6 5.#..#.#..#.#..#.#.##.#...##...5 5######...##.#.##...######4 4.##.##.##.##.##.5 5..###....#.....#....#....5 6.##...##....#....#....##...##.6 5..##....##....##....##....##..5 4..##..#...#.#...#...Output###  .# ##  ..## ..## ###. ##..  .##... ###... ..#... ..#### ...### ...###  .#### .#### .#### .#### .#... ##...  ##### ##### ##### ##### #####  .##. #### #### .##.  ..### ..### ..#.. ###.. #....  .##... ###... ###### ...### ...##.  ..##. ..### ..### ###.. ###.. .##..  ..## ..#. ..#. ###. #...NoteIn the first test case, we can add a single filled cell between the two cities to connect them. We can verify that the second condition is satisfied.In the second test case, we can also connect the cities with a single filled cell, while satisfying the second condition.In the third test case, note that if we filled the 3 cells in the top left, the cities would be connected, but the second condition would not be satisfied for cells $$$(4, 2)$$$ and $$$(2, 4)$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "7ce585bd", "template_md5": "35d339e4", "result": "You are given a grid of $n \\times m$ cells. Some cells are filled ('#') and some are empty ('.').  \n\nA \"city\" is a group of connected filled cells where you can move between any two cells in the group by only moving to adjacent cells (up, down, left, right).\n\nInitially, there are two separate cities on the grid. You want to change some empty cells to filled cells to meet these conditions:\n\n1. There is only one city on the resulting grid.\n2. The shortest path between any two filled cells is the Manhattan distance between them. The Manhattan distance between two cells $(a,b)$ and $(c,d)$ is  $|a-c| + |b-d|$.\n\nFind the smallest number of cells you need to fill to satisfy these conditions. \n\n\n\nLet me know if you'd like help with any part of the problem!"}, {"prompt_md5": "c5f0a36a", "template_md5": "465699a0", "result": "You are given a grid of squares, some filled and some empty.  There are two separate groups of filled squares (cities).  You can add filled squares to the grid.  Your goal is to add the fewest filled squares possible to combine the two cities into one, while ensuring that the shortest distance between any two filled squares is the same as the straight-line distance between them."}]}