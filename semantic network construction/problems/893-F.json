{"uid": "893-F", "url": "https://codeforces.com/contest/893/problem/F", "tags": ["data structures", " trees"], "title": "893-F", "statement": "F. Subtree Minimum Querytime limit per test6 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given a rooted tree consisting ofnvertices. Each vertex has a number written on it; numberaiis written on vertexi.Let's denoted(i,j)as the distance between verticesiandjin the tree (that is, the number of edges in the shortest path fromitoj). Also let's denote thek-blocked subtreeof vertexxas the set of verticesysuch that both these conditions are met:xis an ancestor ofy(every vertex is an ancestor of itself);d(x,y) ≤k.You are givenmqueries to the tree.i-th query is represented by two numbersxiandki, and the answer to this query is the minimum value ofajamong such verticesjsuch thatjbelongs toki-blocked subtree ofxi.Write a program that would process these queries quickly!Note that the queries are given in a modified way.InputThe first line contains two integersnandr(1 ≤r≤n≤ 100000) — the number of vertices in the tree and the index of the root, respectively.The second line containsnintegersa1,a2, ...,an(1 ≤ai≤ 109) — the numbers written on the vertices.Thenn- 1lines follow, each containing two integersxandy(1 ≤x,y≤n) and representing an edge between verticesxandy. It is guaranteed that these edges form a tree.Next line contains one integerm(1 ≤m≤ 106) — the number of queries to process.Thenmlines follow,i-th line containing two numberspiandqi, which can be used to restorei-th query (1 ≤pi,qi≤n).i-th query can be restored as follows:Letlastbe the answer for previous query (or0ifi= 1). Thenxi= ((pi+last)modn) + 1, andki= (qi+last)modn.OutputPrintmintegers.i-th of them has to be equal to the answer toi-th query.ExampleInput5 21 3 2 3 52 35 13 44 121 22 3Output25", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "aea87786", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices. Each vertex has a number written on it, $a_i$ on vertex $i$.  \n\nThe distance between two vertices $i$ and $j$ is denoted as $d(i,j)$ (the number of edges in the shortest path between them).\n\nThe $k$-blocked subtree of vertex $x$ is the set of vertices $y$ such that:\n\n* $x$ is an ancestor of $y$\n* $d(x,y) \\le k$\n\nYou are given $m$ queries. The $i$-th query is represented by two numbers $x_i$ and $k_i$. The answer to the $i$-th query is the minimum value of $a_j$ among all vertices $j$ that belong to the $k_i$-blocked subtree of $x_i$.\n\n**Input:**\n\n* The first line contains two integers $n$ and $r$ (1 ≤ $r$ ≤ $n$ ≤ 100000) - the number of vertices and the index of the root, respectively.\n* The second line contains $n$ integers $a_1, a_2, ..., a_n$ (1 ≤ $a_i$ ≤ 10⁹) - the numbers written on the vertices.\n* The next $n-1$ lines each contain two integers $x$ and $y$ (1 ≤ $x$, $y$ ≤ $n$) representing an edge between vertices $x$ and $y$.\n* The next line contains one integer $m$ (1 ≤ $m$ ≤ 10⁶) - the number of queries.\n* The next $m$ lines each contain two integers $p_i$ and $q_i$ which can be used to restore the $i$-th query. The $i$-th query can be restored as follows:\n    * Let $last$ be the answer for the previous query (or 0 if $i$ = 1).\n    * Then $x_i$ = $((p_i + last) \\mod n) + 1$\n    * And $k_i$ = $(q_i + last) \\mod n$\n\n**Output:**\n\nPrint $m$ integers. The $i$-th of them has to be equal to the answer to the $i$-th query."}, {"prompt_md5": "b8e1f560", "template_md5": "465699a0", "result": "You are given a tree with numbered nodes.  For each query, you are given a starting node and a distance. Find the smallest number on a node within that distance from the starting node."}]}