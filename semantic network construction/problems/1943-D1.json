{"uid": "1943-D1", "url": "https://codeforces.com/contest/1943/problem/D1", "tags": ["brute force", " combinatorics", " dp", " math"], "title": "1943-D1", "statement": "D1. Counting Is Fun (Easy Version)time limit per test3 secondsmemory limit per test1024 megabytesinputstandard inputoutputstandard outputThis is the easy version of the problem. The only difference between the two versions is the constraint on $$$n$$$. You can make hacks only if both versions of the problem are solved.An array $$$b$$$ of $$$m$$$ non-negative integers is said to begoodif all the elements of $$$b$$$ can be made equal to $$$0$$$ using the following operation some (possibly, zero) times:Select twodistinctindices $$$l$$$ and $$$r$$$ ($$$1 \\\\leq l \\\\color{red}{<} r \\\\leq m$$$) and subtract $$$1$$$ from all $$$b_i$$$ such that $$$l \\\\leq i \\\\leq r$$$.You are given two positive integers $$$n$$$, $$$k$$$ and a prime number $$$p$$$.Over all $$$(k+1)^n$$$ arrays of length $$$n$$$ such that $$$0 \\\\leq a_i \\\\leq k$$$ for all $$$1 \\\\leq i \\\\leq n$$$, count the number of good arrays.Since the number might be too large, you are only required to find it modulo $$$p$$$.InputEach test contains multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^3$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains three positive integers $$$n$$$, $$$k$$$ and $$$p$$$ ($$$3 \\\\leq n \\\\leq 400$$$, $$$1 \\\\leq k \\\\leq n$$$, $$$10^8 < p < 10^9$$$) — the length of the array $$$a$$$, the upper bound on the elements of $$$a$$$ and modulus $$$p$$$.It is guaranteed that the sum of $$$n^2$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$, and $$$p$$$ is prime.OutputFor each test case, on a new line, output the number of good arrays modulo $$$p$$$.ExampleInput43 1 9982448534 1 9982443533 2 998244353343 343 998244353Output4 7 10 456615865NoteIn the first test case, the $$$4$$$ good arrays $$$a$$$ are:$$$[0,0,0]$$$;$$$[0,1,1]$$$;$$$[1,1,0]$$$;$$$[1,1,1]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d7b29544", "template_md5": "35d339e4", "result": "You are given three integers $n$, $k$, and $p$.  \n\nYou need to find the number of arrays of length $n$ where each element is between 0 and $k$ (inclusive), such that you can make all elements of the array equal to 0 by repeatedly performing the following operation:\n\n* Choose two distinct indices $l$ and $r$ ($1 \\le l < r \\le n$)\n* Subtract 1 from all elements of the array from index $l$ to $r$ (inclusive).\n\nSince the number of good arrays might be very large, you only need to find the answer modulo $p$. \n\n\n\nLet me know if you'd like help with any specific part of the problem or need further clarification!"}, {"prompt_md5": "b4171bef", "template_md5": "465699a0", "result": "You are given a number 'n' and a number 'k'.  You need to find how many ways you can make an array of length 'n' with numbers from 0 to 'k' inclusive, such that you can make all the numbers in the array equal to 0 by repeatedly subtracting 1 from a range of numbers in the array.  The answer should be given modulo 'p'."}]}