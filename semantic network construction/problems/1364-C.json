{"uid": "1364-C", "url": "https://codeforces.com/contest/1364/problem/C", "tags": ["brute force", " constructive algorithms", " greedy"], "title": "1364-C", "statement": "C. Ehab and Prefix MEXstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputGiven an array $$$a$$$ of length $$$n$$$, find another array, $$$b$$$, of length $$$n$$$ such that:for each $$$i$$$ $$$(1 \\\\le i \\\\le n)$$$ $$$MEX(\\\\{b_1$$$, $$$b_2$$$, $$$\\\\ldots$$$, $$$b_i\\\\})=a_i$$$.The $$$MEX$$$ of a set of integers is the smallest non-negative integer that doesn't belong to this set.If such array doesn't exist, determine this.InputThe first line contains an integer $$$n$$$ ($$$1 \\\\le n \\\\le 10^5$$$) — the length of the array $$$a$$$.The second line contains $$$n$$$ integers $$$a_1$$$, $$$a_2$$$, $$$\\\\ldots$$$, $$$a_n$$$ ($$$0 \\\\le a_i \\\\le i$$$) — the elements of the array $$$a$$$.It's guaranteed that $$$a_i \\\\le a_{i+1}$$$ for $$$1\\\\le i < n$$$.OutputIf there's no such array, print a single line containing $$$-1$$$.Otherwise, print a single line containing $$$n$$$ integers $$$b_1$$$, $$$b_2$$$, $$$\\\\ldots$$$, $$$b_n$$$ ($$$0 \\\\le b_i \\\\le 10^6$$$)If there are multiple answers, print any.ExamplesInput3 1 2 3Output0 1 2Input4 0 0 0 2Output1 3 4 0Input3 1 1 3Output0 2 1NoteIn the second test case, other answers like $$$[1,1,1,0]$$$, for example, are valid.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "2a3a53fd", "template_md5": "35d339e4", "result": "Given an array of $n$ integers $a = (a_1, a_2, ..., a_n)$, find another array $b = (b_1, b_2, ..., b_n)$ of the same length such that for each $i$ from 1 to $n$:\n\n$MEX({b_1, b_2, ..., b_i}) = a_i$\n\nThe $MEX$ of a set of integers is the smallest non-negative integer that is not in the set.\n\nIf no such array $b$ exists, print -1. Otherwise, print the array $b$.\n\n**Constraints:**\n\n* $1 \\le n \\le 10^5$\n* $0 \\le a_i \\le i$\n* $a_i \\le a_{i+1}$ for $1 \\le i < n$\n* $0 \\le b_i \\le 10^6$"}, {"prompt_md5": "e3cfbb99", "template_md5": "465699a0", "result": "Given a list of numbers, find another list of numbers where the smallest missing non-negative number in the first  'i' numbers of the second list is equal to the i-th number in the first list. If no such list exists, say so."}]}