{"uid": "1550-C", "url": "https://codeforces.com/contest/1550/problem/C", "tags": ["brute force", " geometry", " greedy", " implementation"], "title": "1550-C", "statement": "C. Manhattan Subarraystime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSuppose you have two points $$$p = (x_p, y_p)$$$ and $$$q = (x_q, y_q)$$$. Let's denote the Manhattan distance between them as $$$d(p, q) = |x_p - x_q| + |y_p - y_q|$$$.Let's say that three points $$$p$$$, $$$q$$$, $$$r$$$ form abadtriple if $$$d(p, r) = d(p, q) + d(q, r)$$$.Let's say that an array $$$b_1, b_2, \\\\dots, b_m$$$ isgoodif it is impossible to choose threedistinctindices $$$i$$$, $$$j$$$, $$$k$$$ such that the points $$$(b_i, i)$$$, $$$(b_j, j)$$$ and $$$(b_k, k)$$$ form a bad triple.You are given an array $$$a_1, a_2, \\\\dots, a_n$$$. Calculate the number ofgoodsubarrays of $$$a$$$. A subarray of the array $$$a$$$ is the array $$$a_l, a_{l + 1}, \\\\dots, a_r$$$ for some $$$1 \\\\le l \\\\le r \\\\le n$$$.Note that, according to the definition, subarrays of length $$$1$$$ and $$$2$$$ aregood.InputThe first line contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 5000$$$) — the number of test cases.The first line of each test case contains one integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the length of array $$$a$$$.The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\le a_i \\\\le 10^9$$$).It's guaranteed that the sum of $$$n$$$ doesn't exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, print the number ofgoodsubarrays of array $$$a$$$.ExampleInput3 4 2 4 1 3 5 6 9 1 9 6 2 13 37Output10 12 3NoteIn the first test case, it can be proven that any subarray of $$$a$$$ isgood. For example, subarray $$$[a_2, a_3, a_4]$$$ is good since it contains only three elements and:$$$d((a_2, 2), (a_4, 4)) = |4 - 3| + |2 - 4| = 3$$$ $$$<$$$ $$$d((a_2, 2), (a_3, 3)) + d((a_3, 3), (a_4, 4)) = 3 + 1 + 2 + 1 = 7$$$;$$$d((a_2, 2), (a_3, 3))$$$ $$$<$$$ $$$d((a_2, 2), (a_4, 4)) + d((a_4, 4), (a_3, 3))$$$;$$$d((a_3, 3), (a_4, 4))$$$ $$$<$$$ $$$d((a_3, 3), (a_2, 2)) + d((a_2, 2), (a_4, 4))$$$;In the second test case, for example, subarray $$$[a_1, a_2, a_3, a_4]$$$ isnotgood, since it contains abadtriple $$$(a_1, 1)$$$, $$$(a_2, 2)$$$, $$$(a_4, 4)$$$:$$$d((a_1, 1), (a_4, 4)) = |6 - 9| + |1 - 4| = 6$$$;$$$d((a_1, 1), (a_2, 2)) = |6 - 9| + |1 - 2| = 4$$$;$$$d((a_2, 2), (a_4, 4)) = |9 - 9| + |2 - 4| = 2$$$;So, $$$d((a_1, 1), (a_4, 4)) = d((a_1, 1), (a_2, 2)) + d((a_2, 2), (a_4, 4))$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f684188e", "template_md5": "35d339e4", "result": "You are given an array of integers.  \n\nDefine a \"bad triple\" as three distinct indices $i$, $j$, and $k$ such that the points $(a_i, i)$, $(a_j, j)$, and $(a_k, k)$ satisfy the following equation:\n\n $$d( (a_i, i), (a_k, k) ) = d( (a_i, i), (a_j, j) ) + d( (a_j, j), (a_k, k) )$$\n\nwhere $d( (x_1, y_1), (x_2, y_2) )$ is the Manhattan distance between the two points:  $|x_1 - x_2| + |y_1 - y_2|$.\n\nA subarray is considered \"good\" if it is impossible to form a bad triple using its elements.\n\nFor each subarray of the given array, determine if it is good or not.  Count the number of good subarrays."}, {"prompt_md5": "85adbaba", "template_md5": "465699a0", "result": "You are given a list of numbers.  Determine the number of sublists (contiguous sections) within the list where no three numbers in the sublist form a specific type of relationship based on their positions in the list."}]}