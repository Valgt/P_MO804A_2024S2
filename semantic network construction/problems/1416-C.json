{"uid": "1416-C", "url": "https://codeforces.com/contest/1416/problem/C", "tags": ["bitmasks", " data structures", " divide and conquer", " dp", " greedy", " math", " sortings", " strings", " trees"], "title": "1416-C", "statement": "C. XOR Inversetime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given an array $$$a$$$ consisting of $$$n$$$ non-negative integers. You have to choose a non-negative integer $$$x$$$ and form a new array $$$b$$$ of size $$$n$$$ according to the following rule: for all $$$i$$$ from $$$1$$$ to $$$n$$$, $$$b_i = a_i \\\\oplus x$$$ ($$$\\\\oplus$$$ denotes the operationbitwise XOR).An inversion in the $$$b$$$ array is a pair of integers $$$i$$$ and $$$j$$$ such that $$$1 \\\\le i < j \\\\le n$$$ and $$$b_i > b_j$$$.You should choose $$$x$$$ in such a way that the number of inversions in $$$b$$$ is minimized. If there are several options for $$$x$$$ — output the smallest one.InputFirst line contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 3 \\\\cdot 10^5$$$) — the number of elements in $$$a$$$.Second line contains $$$n$$$ space-separated integers $$$a_1$$$, $$$a_2$$$, ..., $$$a_n$$$ ($$$0 \\\\le a_i \\\\le 10^9$$$), where $$$a_i$$$ is the $$$i$$$-th element of $$$a$$$.OutputOutput two integers: the minimum possible number of inversions in $$$b$$$, and the minimum possible value of $$$x$$$, which achieves those number of inversions.ExamplesInput4 0 1 3 2Output1 0Input9 10 7 9 10 7 5 5 3 5Output4 14Input3 8 10 3Output0 8NoteIn the first sample it is optimal to leave the array as it is by choosing $$$x = 0$$$.In the second sample the selection of $$$x = 14$$$ results in $$$b$$$: $$$[4, 9, 7, 4, 9, 11, 11, 13, 11]$$$. It has $$$4$$$ inversions:$$$i = 2$$$, $$$j = 3$$$;$$$i = 2$$$, $$$j = 4$$$;$$$i = 3$$$, $$$j = 4$$$;$$$i = 8$$$, $$$j = 9$$$.In the third sample the selection of $$$x = 8$$$ results in $$$b$$$: $$$[0, 2, 11]$$$. It has no inversions.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "2947af1b", "template_md5": "35d339e4", "result": "You are given an array of $n$ non-negative integers. You need to choose a non-negative integer $x$ and create a new array $b$ of the same size. Each element in $b$ is calculated by performing a bitwise XOR operation ($ \\oplus $) between the corresponding element in the original array and $x$.\n\nAn inversion in the new array $b$ is a pair of indices $i$ and $j$ (where $1 \\le i < j \\le n$) such that the element at index $i$ is greater than the element at index $j$.\n\nYour goal is to find the smallest possible value of $x$ that minimizes the number of inversions in the new array $b$. If there are multiple values of $x$ that achieve the minimum number of inversions, output the smallest one."}, {"prompt_md5": "6519dcf8", "template_md5": "465699a0", "result": "You are given a list of numbers.  You can add the same number to each number in the list.  What number should you add to minimize the number of pairs of numbers in the new list where the first number is larger than the second number?"}]}