{"uid": "555-D", "url": "https://codeforces.com/contest/555/problem/D", "tags": ["binary search", " implementation", " math"], "title": "555-D", "statement": "D. Case of a Top Secrettime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAndrewid the Android is a galaxy-famous detective. Now he is busy with a top secret case, the details of which are not subject to disclosure.However, he needs help conducting one of the investigative experiment. There arenpegs put on a plane, they are numbered from1ton, the coordinates of thei-th of them are(xi, 0). Then, we tie to the bottom of one of the pegs a weight on a tight rope of lengthl(thus, its coordinates will be equal to(xi,  -l), whereiis the number of the used peg). Then the weight is pushed to the right, so that it starts to rotate counterclockwise. At the same time, if the weight during rotation touches some of the other pegs, it then begins to rotate around that peg. Suppose that each peg itself is very thin and does not affect the rope length while weight is rotating around it.More formally, if at some moment the segment of the rope contains one or more pegs in addition to the peg around which the weight is rotating, the weight will then rotate around the farthermost one of them on a shorter segment of a rope. In particular, if the segment of the rope touches some peg by its endpoint, it is considered that the weight starts to rotate around that peg on a segment of the rope of length0.At some moment the weight will begin to rotate around some peg, without affecting the rest of the pegs. Andrewid interested in determining the number of this peg.Andrewid preparedmqueries containing initial conditions for pushing the weight, help him to determine for each of them, around what peg the weight will eventually rotate.InputThe first line contains integersnandm(1 ≤n,m≤ 2·105) — the number of pegs and queries.The next line containsnintegersx1,x2, ...,xn(- 109≤xi≤ 109) — the coordinates of the pegs. It is guaranteed that the coordinates of all the pegs are distinct integers.Nextmlines contain the descriptions of the queries of pushing the weight, each consists of two integersai(1 ≤ai≤n) andli(1 ≤li≤ 109) — the number of the starting peg and the length of the rope.OutputPrintmlines, thei-th line should contain the number of the peg around which the weight will eventually rotate after thei-th push.ExamplesInput3 20 3 52 31 8Output32Input4 41 5 7 151 42 153 161 28Output2431NotePicture to the first sample test:Picture to the second sample test:Note that in the last query weight starts to rotate around the peg 1 attached to a rope segment of length 0.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e905230b", "template_md5": "465699a0", "result": "You are given a line of points. A weight is attached to one of the points by a rope of a given length. The weight is pushed and will rotate around the points it touches.  The weight will eventually rotate around the furthest point it touches on the rope. For multiple starting points and rope lengths, determine the point the weight will eventually rotate around."}, {"prompt_md5": "881a2f2d", "template_md5": "35d339e4", "result": "There are $n$ pegs arranged on a line, numbered from 1 to $n$. Each peg has a coordinate $x_i$. A weight is attached to the bottom of one of the pegs with a rope of length $l$. The weight is pushed to the right and starts rotating counterclockwise.\n\nIf the weight touches another peg during rotation, it will start rotating around that peg. The weight will always rotate around the farthest peg it touches on the shortest segment of the rope.\n\nFor each query, you are given the starting peg number ($a_i$) and the rope length ($l_i$). Determine the number of the peg the weight will eventually rotate around.\n\n**Input:**\n\n* The first line contains two integers, $n$ and $m$ ($1 \\le n, m \\le 2 \\cdot 10^5$), representing the number of pegs and queries, respectively.\n* The second line contains $n$ integers, $x_1, x_2, ..., x_n$ (-10^9 $\\le x_i \\le 10^9), representing the coordinates of the pegs.\n* The next $m$ lines each contain two integers, $a_i$ ($1 \\le a_i \\le n$) and $l_i$ ($1 \\le l_i \\le 10^9$), representing the starting peg number and rope length for each query.\n\n**Output:**\n\nPrint $m$ lines, each containing the number of the peg the weight will eventually rotate around for the corresponding query."}]}