{"uid": "1626-B", "url": "https://codeforces.com/contest/1626/problem/B", "tags": ["greedy", " strings"], "title": "1626-B", "statement": "B. Minor Reductiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a decimal representation of an integer $$$x$$$ without leading zeros.You have to perform the following reduction on itexactly once: take two neighboring digits in $$$x$$$ and replace them with their sum without leading zeros (if the sum is $$$0$$$, it's represented as a single $$$0$$$).For example, if $$$x = 10057$$$, the possible reductions are:choose the first and the second digits $$$1$$$ and $$$0$$$, replace them with $$$1+0=1$$$; the result is $$$1057$$$;choose the second and the third digits $$$0$$$ and $$$0$$$, replace them with $$$0+0=0$$$; the result is also $$$1057$$$;choose the third and the fourth digits $$$0$$$ and $$$5$$$, replace them with $$$0+5=5$$$; the result is still $$$1057$$$;choose the fourth and the fifth digits $$$5$$$ and $$$7$$$, replace them with $$$5+7=12$$$; the result is $$$10012$$$.What's the largest number that can be obtained?InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of testcases.Each testcase consists of a single integer $$$x$$$ ($$$10 \\\\le x < 10^{200000}$$$). $$$x$$$ doesn't contain leading zeros.The total length of the decimal representations of $$$x$$$ over all testcases doesn't exceed $$$2 \\\\cdot 10^5$$$.OutputFor each testcase, print a single integer — the largest number that can be obtained after the reduction is applied exactly once. The number should not contain leading zeros.ExampleInput21005790Output10012 9NoteThe first testcase of the example is already explained in the statement.In the second testcase, there is only one possible reduction: the first and the second digits.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "83b0106d", "template_md5": "35d339e4", "result": "You are given a large number $x$ without any leading zeros. You can perform one operation: choose any two adjacent digits in $x$ and replace them with their sum (if the sum is 0, replace them with a single 0).  What is the largest number you can get after performing this operation exactly once?\n\nInput:\n\n* The first line contains the number of test cases, $t$ ($1 \\le t \\le 10^4$).\n* Each test case contains a single integer $x$ ($10 \\le x < 10^{200000}$).  \n\nOutput:\n\n* For each test case, print the largest number you can get after performing the operation once."}, {"prompt_md5": "3a7505d5", "template_md5": "465699a0", "result": "You are given a large number. You can combine any two adjacent digits in the number and replace them with their sum (if the sum is 0, use 0). What is the largest number you can make by doing this only once?"}]}