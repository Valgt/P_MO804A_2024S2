{"uid": "1220-F", "url": "https://codeforces.com/contest/1220/problem/F", "tags": ["binary search", " data structures"], "title": "1220-F", "statement": "F. Gardener Alextime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputGardener Alex loves to grow trees. We remind that tree is a connected acyclic graph on $$$n$$$ vertices.Today he decided to grow a rooted binary tree. A binary tree is a tree where any vertex has no more than two sons. Luckily, Alex has a permutation of numbers from $$$1$$$ to $$$n$$$ which he was presented at his last birthday, so he decided to grow a tree according to this permutation. To do so he does the following process: he finds a minimum element and makes it a root of the tree. After that permutation is divided into two parts: everything that is to the left of the minimum element, and everything that is to the right. The minimum element on the left part becomes the left son of the root, and the minimum element on the right part becomes the right son of the root. After that, this process is repeated recursively on both parts.Now Alex wants to grow a forest of trees: one tree for each cyclic shift of the permutation. He is interested in what cyclic shift gives the tree of minimum depth. Unfortunately, growing a forest is a hard and long process, but Alex wants the answer right now. Will you help him?We remind that cyclic shift of permutation $$$a_1, a_2, \\\\ldots, a_k, \\\\ldots, a_n$$$ for $$$k$$$ elements to the left is the permutation $$$a_{k + 1}, a_{k + 2}, \\\\ldots, a_n, a_1, a_2, \\\\ldots, a_k$$$.InputFirst line contains an integer number $$$n ~ (1 \\\\leqslant n \\\\leqslant 200\\\\,000)$$$ â€” length of the permutation.Second line contains $$$n$$$ integer numbers $$$a_1, a_2, \\\\ldots, a_n ~ (1 \\\\leqslant a_i \\\\leqslant n)$$$, and it is guaranteed that all numbers occur exactly one time.OutputPrint two numbers separated with space: minimum possible depth of a tree and how many elements we need to shift left to achieve this depth. The number of elements should be a number from $$$0$$$ to $$$n - 1$$$. If there are several possible answers, print any of them.ExampleInput4 1 2 3 4Output3 3NoteThe following picture depicts all possible trees for sample test and cyclic shifts on which they are achieved.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6221f1b2", "template_md5": "35d339e4", "result": "Given a permutation of numbers from 1 to $n$, find the minimum depth of a binary tree that can be constructed from this permutation, and the number of elements to shift left in the permutation to achieve this minimum depth.\n\nThe tree is constructed as follows:\n\n1. Find the minimum element in the permutation. This becomes the root of the tree.\n2. Divide the permutation into two parts: elements to the left of the minimum and elements to the right of the minimum.\n3. Find the minimum element in the left part and make it the left child of the root.\n4. Find the minimum element in the right part and make it the right child of the root.\n5. Recursively repeat steps 2-4 on the left and right parts.\n\nA cyclic shift of a permutation is obtained by moving elements to the left by a certain number of positions. For example, a cyclic shift of the permutation $(1, 2, 3, 4)$ by 2 positions to the left is $(3, 4, 1, 2)$.\n\n\nThe depth of a tree is the length of the longest path from the root to a leaf."}, {"prompt_md5": "d77c076c", "template_md5": "465699a0", "result": "Given a permutation of numbers, find the smallest possible depth of a binary tree that can be constructed from it, and the number of positions to shift the permutation to achieve this depth.  The tree is built by repeatedly finding the minimum element in the remaining permutation and making it a child of the current root."}]}