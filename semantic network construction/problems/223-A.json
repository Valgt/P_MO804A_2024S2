{"uid": "223-A", "url": "https://codeforces.com/contest/223/problem/A", "tags": ["data structures", " expression parsing", " implementation"], "title": "223-A", "statement": "A. Bracket Sequencetime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutAbracket sequenceis a string, containing only characters \"(\", \")\", \"[\" and \"]\".Acorrect bracket sequenceis a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example, bracket sequences \"()[]\", \"([])\" are correct (the resulting expressions are: \"(1)+[1]\", \"([1+1]+1)\"), and \"](\" and \"[\" are not.The empty string is a correct bracket sequence by definition.Asubstrings[l...r](1 ≤l≤r≤ |s|)of strings=s1s2...s|s|(where|s|is the length of strings) is the stringslsl+ 1...sr.The empty string is a substring of any string by definition.You are given a bracket sequence, not necessarily correct. Find its substring which is a correct bracket sequence and contains as many opening square brackets «[» as possible.InputThe first and the only line contains the bracket sequence as a string, consisting only of characters \"(\", \")\", \"[\" and \"]\". It is guaranteed that the string is non-empty and its length doesn't exceed105characters.OutputIn the first line print a single integer — the number of brackets «[» in the required bracket sequence. In the second line print the optimal sequence. If there are more than one optimal solutions print any of them.ExamplesInput([])Output1([])Input(((Output0", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e9350422", "template_md5": "35d339e4", "result": "You are given a string of parentheses and brackets.  Find the longest substring within the string that is a valid bracket sequence (meaning it can be turned into a correct mathematical expression) and contains the most opening square brackets \"[\".\n\nOutput the number of opening square brackets in the longest valid substring, followed by the substring itself. \n\nIf there are multiple valid substrings with the same maximum number of opening brackets, output any one of them."}, {"prompt_md5": "803e972e", "template_md5": "465699a0", "result": "Given a string of parentheses and brackets, find the longest substring that forms a valid expression (like \"(1)+[1]\") and contains the most opening square brackets. Print the number of opening square brackets and the substring itself."}]}