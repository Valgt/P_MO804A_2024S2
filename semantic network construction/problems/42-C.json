{"uid": "42-C", "url": "https://codeforces.com/contest/42/problem/C", "tags": ["brute force", " constructive algorithms"], "title": "42-C", "statement": "C. Safe crackingtime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutRight now you are to solve a very, very simple problem — to crack the safe. Four positive integers stand one by one on a circle protecting the safe. You know that to unlock this striking safe you have to make all four numbers equal to one. Operations are as follows: you may choose two adjacent numbers and increase both by one; you may choose two adjacent even numbers and divide both by two. Nothing else. Crack the safe!InputThe single line of the input contains four space-separated integer positive numbers not greater than109each — four numbers on the circle in consecutive order.OutputThe output should contain\"-1\"(quotes for clarity) if the safe is secure, that is it's impossible to crack it. Otherwise, output should contain the sequence of operations (one operations per line) leading to unlocking the safe. You don't have to minimize the number of operations, but it should not exceed 1000. To make things clear, assume numbers stand on positions 1 through 4. Each operation is encoded by two symbols. If the following operation is dividing then first symbol is'/'; otherwise it's'+'(addition). The second symbol is the position of the first number in pair in consecutive order. (see samples for clarification).If there are several solutions, output any of them.ExamplesInput1 1 1 1OutputInput1 2 4 2Output/2/3Input3 3 1 1Output+1/1/1Input2 1 2 4Output/3/4", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ce52efc5", "template_md5": "35d339e4", "result": "You are given four positive integers.  These integers are arranged in a circle. You can perform two types of operations:\n\n1. **Addition:** Choose any two adjacent integers and increase both of them by 1.\n2. **Division:** Choose any two adjacent even integers and divide both of them by 2.\n\nYour goal is to change all four integers to 1. If it's impossible to achieve this, output \"-1\". Otherwise, output a sequence of operations (one per line) that will transform the integers into 1. Each operation is represented by two symbols:\n\n* '/' for division\n* '+' for addition\n\nThe second symbol is the position of the first number in the pair (1 through 4). \n\nFor example:\n\n* '/2/3' means divide the integers at positions 2 and 3 by 2.\n* '+1' means increase the integer at position 1 by 1.\n\n\n\nLet me know if you'd like to see more examples!"}, {"prompt_md5": "9fb8ea0b", "template_md5": "465699a0", "result": "You are given four numbers arranged in a circle. You can perform two types of operations:\n\n1. Increase two adjacent numbers by 1.\n2. Divide two adjacent even numbers by 2.\n\nDetermine if it's possible to make all four numbers equal to 1. If possible, list the sequence of operations needed.  If not possible, say \"not possible\"."}]}