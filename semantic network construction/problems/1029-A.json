{"uid": "1029-A", "url": "https://codeforces.com/contest/1029/problem/A", "tags": ["implementation", " strings"], "title": "1029-A", "statement": "A. Many Equal Substringstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string $$$t$$$ consisting of $$$n$$$ lowercase Latin letters and an integer number $$$k$$$.Let's define a substring of some string $$$s$$$ with indices from $$$l$$$ to $$$r$$$ as $$$s[l \\\\dots r]$$$.Your task is to construct such string $$$s$$$ of minimum possible length that there are exactly $$$k$$$ positions $$$i$$$ such that $$$s[i \\\\dots i + n - 1] = t$$$. In other words, your task is to construct such string $$$s$$$ of minimum possible length that there are exactly $$$k$$$ substrings of $$$s$$$ equal to $$$t$$$.It is guaranteed that the answer is always unique.InputThe first line of the input contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\\\le n, k \\\\le 50$$$) â€” the length of the string $$$t$$$ and the number of substrings.The second line of the input contains the string $$$t$$$ consisting of exactly $$$n$$$ lowercase Latin letters.OutputPrint such string $$$s$$$ of minimum possible length that there are exactly $$$k$$$ substrings of $$$s$$$ equal to $$$t$$$.It is guaranteed that the answer is always unique.ExamplesInput3 4abaOutputababababaInput3 2catOutputcatcat", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "453614b9", "template_md5": "35d339e4", "result": "You are given a string  $t$ of length $n$ and an integer $k$.  \n\nYour task is to create the shortest possible string $s$ that contains exactly $k$ substrings that are equal to $t$.  \n\nA substring of a string is a continuous sequence of characters within that string. For example, \"aba\" is a substring of \"abababa\".\n\n\nLet me know if you'd like help with any part of solving this problem!"}, {"prompt_md5": "435448d4", "template_md5": "465699a0", "result": "You are given a short word and a number.  Find the shortest possible word that contains that original word exactly that many times as a substring."}]}