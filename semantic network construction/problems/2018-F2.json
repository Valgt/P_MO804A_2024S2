{"uid": "2018-F2", "url": "https://codeforces.com/contest/2018/problem/F2", "tags": ["dp", " greedy", " math"], "title": "2018-F2", "statement": "F2. Speedbreaker Counting (Medium Version)time limit per test10 secondsmemory limit per test1024 megabytesinputstandard inputoutputstandard outputDRG - Limbo⠀This is the medium version of the problem. In the three versions, the constraints on $$$n$$$ and the time limit are different. You can make hacks only if all the versions of the problem are solved.This is the statement ofProblem D1B:There are $$$n$$$ cities in a row, numbered $$$1, 2, \\\\ldots, n$$$ left to right.At time $$$1$$$, you conquer exactly one city, called thestarting city.At time $$$2, 3, \\\\ldots, n$$$, you can choose a city adjacent to the ones conquered so far and conquer it.You win if, for each $$$i$$$, you conquer city $$$i$$$ at a time no later than $$$a_i$$$. A winning strategy may or may not exist, also depending on the starting city. How many starting cities allow you to win?For each $$$0 \\\\leq k \\\\leq n$$$, count the number of arrays of positive integers $$$a_1, a_2, \\\\ldots, a_n$$$ such that$$$1 \\\\leq a_i \\\\leq n$$$ for each $$$1 \\\\leq i \\\\leq n$$$;the answer toProblem D1Bis $$$k$$$.The answer can be very large, so you have to calculate it modulo a given prime $$$p$$$.InputEach test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\\\le t \\\\le 500$$$). The description of the test cases follows.The only line of each test case contains two integers $$$n$$$, $$$p$$$ ($$$1 \\\\le n \\\\le 500$$$, $$$10^8 \\\\leq p \\\\leq 10^9$$$, $$$p$$$ is prime) — the number of cities and the modulo.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$500$$$.OutputFor each test case, output $$$n+1$$$ integers: the $$$i$$$-th integer should be the number of arrays that satisfy the conditions for $$$k = i-1$$$.ExampleInput111 9982443532 9982443533 9982443534 9982443535 9982443536 9982443537 9982443538 9982443539 99824435310 10227585710 999662017Output0 1  1 2 1  14 7 4 2  183 34 19 16 4  2624 209 112 120 48 12  42605 1546 793 992 468 216 36  785910 13327 6556 9190 4672 2880 864 144  16382863 130922 61939 94992 50100 36960 14256 4608 576  382823936 1441729 657784 1086596 583344 488700 216000 96480 23040 2880  20300780 17572114 7751377 13641280 7376068 6810552 3269700 1785600 576000 144000 14400  944100756 17572114 7751377 13641280 7376068 6810552 3269700 1785600 576000 144000 14400NoteIn the first test case,arrays with $$$1$$$ good starting city: $$$[1]$$$.In the second test case,arrays with $$$0$$$ good starting cities: $$$[1, 1]$$$;arrays with $$$1$$$ good starting city: $$$[1, 2]$$$, $$$[2, 1]$$$;arrays with $$$2$$$ good starting cities: $$$[2, 2]$$$.In the third test case,arrays with $$$0$$$ good starting cities: $$$[1, 1, 1]$$$, $$$[1, 1, 2]$$$, $$$[1, 1, 3]$$$, $$$[1, 2, 1]$$$, $$$[1, 2, 2]$$$, $$$[1, 3, 1]$$$, $$$[1, 3, 2]$$$, $$$[2, 1, 1]$$$, $$$[2, 1, 2]$$$, $$$[2, 2, 1]$$$, $$$[2, 2, 2]$$$, $$$[2, 3, 1]$$$, $$$[2, 3, 2]$$$, $$$[3, 1, 1]$$$;arrays with $$$1$$$ good starting city: $$$[1, 2, 3]$$$, $$$[1, 3, 3]$$$, $$$[2, 1, 3]$$$, $$$[3, 1, 2]$$$, $$$[3, 1, 3]$$$, $$$[3, 2, 1]$$$, $$$[3, 3, 1]$$$;arrays with $$$2$$$ good starting cities: $$$[2, 2, 3]$$$, $$$[2, 3, 3]$$$, $$$[3, 2, 2]$$$, $$$[3, 3, 2]$$$;arrays with $$$3$$$ good starting cities: $$$[3, 2, 3]$$$, $$$[3, 3, 3]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ad710970", "template_md5": "35d339e4", "result": "You have $n$ cities numbered from 1 to $n$. You start at city 1 at time 1.  At each subsequent time step (2, 3, ..., $n$), you can conquer an adjacent city to the ones you've already conquered.\n\nFor each time step $i$, you must conquer city $i$ by time $a_i$.  \n\nYou win if you conquer all cities by their respective deadlines.\n\nGiven a number $p$, find the number of possible starting cities that allow you to win for each possible number of winning arrays ($k$) from 0 to $n$. The answer for each $k$ should be calculated modulo $p$.\n\n\n\nLet me know if you'd like me to elaborate on any part of the problem!"}, {"prompt_md5": "ddd0b03f", "template_md5": "465699a0", "result": "You have a line of cities. You start at one city and can move to adjacent cities at each subsequent time step. You need to conquer each city by a certain time limit.  \n\nFor each possible starting city, count how many sets of time limits allow you to conquer all cities on time.  The answer can be very large, so calculate it modulo a given prime number."}]}