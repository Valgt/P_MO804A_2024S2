{"uid": "164-C", "url": "https://codeforces.com/contest/164/problem/C", "tags": ["flows", " graphs"], "title": "164-C", "statement": "C. Machine Programmingtime limit per test5 secondsmemory limit per test256 megabytesinputstdinoutputstdoutOne remarkable day company \"X\" receivedkmachines. And they were not simple machines, they were mechanical programmers! This was the last unsuccessful step before switching to android programmers, but that's another story.The company has nowntasks, for each of them we know the start time of its executionsi, the duration of its executionti, and the company profit from its completionci. Any machine can perform any task, exactly one at a time. If a machine has started to perform the task, it is busy at all moments of time fromsitosi+ti- 1, inclusive, and it cannot switch to another task.You are required to select a set of tasks which can be done with thesekmachines, and which will bring the maximum total profit.InputThe first line contains two integer numbersnandk(1 ≤n≤ 1000,1 ≤k≤ 50) — the numbers of tasks and machines, correspondingly.The nextnlines contain space-separated groups of three integerssi,ti,ci(1 ≤si,ti≤ 109,1 ≤ci≤ 106),siis the time where they start executing thei-th task,tiis the duration of thei-th task andciis the profit of its execution.OutputPrintnintegersx1,x2, ...,xn. Numberxishould equal1, if taskishould be completed and otherwise it should equal0.If there are several optimal solutions, print any of them.ExamplesInput3 12 7 51 3 34 1 3Output0 1 1Input5 21 5 41 4 51 3 24 1 25 6 1Output1 1 0 0 1NoteIn the first sample the tasks need to be executed at moments of time 2 ... 8, 1 ... 3 and 4 ... 4, correspondingly. The first task overlaps with the second and the third ones, so we can execute either task one (profit 5) or tasks two and three (profit 6).", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "2bfe0580", "template_md5": "465699a0", "result": "You have a number of tasks, each with a start time, duration, and profit. You also have a number of machines, each capable of doing one task at a time.  Choose a subset of tasks that can be completed by the machines without overlap, maximizing the total profit."}, {"prompt_md5": "b21681af", "template_md5": "35d339e4", "result": "You are given $n$ tasks, each with a start time ($s_i$), duration ($t_i$), and profit ($c_i$). You also have $k$ machines. Each machine can perform one task at a time.  A machine is busy from its start time until its task is finished.\n\nYour goal is to choose a subset of the tasks that can be completed using the machines to maximize the total profit.  \n\n**Input:**\n\n* The first line contains two integers, $n$ and $k$ ($1 \\le n \\le 1000$, $1 \\le k \\le 50$), representing the number of tasks and machines, respectively.\n* The next $n$ lines each contain three integers, $s_i$, $t_i$, and $c_i$ ($1 \\le s_i, t_i \\le 10^9$, $1 \\le c_i \\le 10^6$), representing the start time, duration, and profit of each task.\n\n**Output:**\n\n* Print $n$ integers, $x_1, x_2, ..., x_n$. \n* If task $i$ should be completed, $x_i$ should be 1. \n* If task $i$ should not be completed, $x_i$ should be 0."}]}