{"uid": "666-D", "url": "https://codeforces.com/contest/666/problem/D", "tags": ["brute force", " geometry"], "title": "666-D", "statement": "D. Chain Reactiontime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputGroup of Berland scientists, with whom you have a close business relationship, makes a research in the area of peaceful nuclear energy. In particular, they found that a group of four nanobots, placed on a surface of a plate, can run a powerful chain reaction under certain conditions.To be precise, researchers introduced a rectangular Cartesian coordinate system on a flat plate and selected four distinct points with integer coordinates where bots will be placed initially. Next each bot will be assigned with one of the four directions (up, down, left or right) parallel to the coordinate axes. After that, each bot is shifted by an integer distance (which may be different for different bots) along its direction. The chain reaction starts, if the bots are in the corners of a square withpositive areawith sides parallel to the coordinate axes.Each corner of the square must contain one nanobot.This reaction will be stronger, if bots spend less time to move. We can assume that bots move with unit speed. In other words, the lesser is the maximum length traveled by bot, the stronger is reaction.Scientists have prepared a set of plates and selected starting position for the bots for each plate. Now they ask you to assign the direction for each bot to move afterlandingsuch that the maximum length traveled by bot is as small as possible.InputThe first line contains an integer numbert(1 ≤t≤ 50) — the number of plates.tdescriptions of plates follow. A description of each plate consists of four lines. Each line consists of a pair of integers numbersxi,yi(- 108≤xi,yi≤ 108) — coordinates of the next bot. All bots are in different locations.Note, though, the problem can include several records in one test, you can hack other people's submissions only with the test of one plate, i.e. parametertin a hack test should be equal to1.OutputPrint answers for all plates separately. First goes a single integer number in a separate line. If scientists have made an unfortunate mistake and nanobots are not able to form the desired square, print-1. Otherwise, print the minimum possible length of the longest bot's path.If a solution exists, in the next four lines print two integer numbers — positions of each bot after moving. Print bots' positions in the order they are specified in the input data.If there are multiple solution, you can print any of them.ExamplesInput21 11 -1-1 1-1 -11 12 24 46 6Output01 11 -1-1 1-1 -1-1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6dc23f49", "template_md5": "35d339e4", "result": "You are given a set of plates, each with four points on it.  Each point represents the starting position of a nanobot.  \n\nThe goal is to determine the minimum distance any nanobot needs to travel to form a square with the other three nanobots.  \n\n**Input:**\n\n* The first line contains the number of plates (t).\n* For each plate, four lines follow, each containing the x and y coordinates of a nanobot's starting position.\n\n**Output:**\n\n* For each plate:\n    * If a square cannot be formed, print -1.\n    * Otherwise, print the minimum distance any nanobot needs to travel.\n    * Print the final x and y coordinates of each nanobot after it moves.\n\n**Constraints:**\n\n* $1 \\le t \\le 50$\n* $-10^8 \\le x, y \\le 10^8$ \n\n\n\nLet me know if you'd like me to elaborate on any part of the problem!"}, {"prompt_md5": "0e2c33ba", "template_md5": "465699a0", "result": "You are given the starting positions of four points on a grid.  You need to determine the directions each point should move (up, down, left, or right) so that they end up forming a square. The goal is to minimize the furthest distance any point travels. If it's impossible to form a square, output -1."}]}