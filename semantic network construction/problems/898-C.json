{"uid": "898-C", "url": "https://codeforces.com/contest/898/problem/C", "tags": ["implementation", " strings"], "title": "898-C", "statement": "C. Phone Numberstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has several phone books, in which he recorded the telephone numbers of his friends. Each of his friends can have one or several phone numbers.Vasya decided to organize information about the phone numbers of friends. You will be givennstrings — all entries from Vasya's phone books. Each entry starts with a friend's name. Then follows the number of phone numbers in the current entry, and then the phone numbers themselves. It is possible that several identical phones are recorded in the same record.Vasya also believes that if the phone numberais a suffix of the phone numberb(that is, the numberbends up witha), and both numbers are written by Vasya as the phone numbers of the same person, thenais recorded without the city code and it should not be taken into account.The task is to print organized information about the phone numbers of Vasya's friends. It is possible that two different people have the same number. If one person has two numbersxandy, andxis a suffix ofy(that is,yends inx), then you shouldn't print numberx. If the number of a friend in the Vasya's phone books is recorded several times in the same format, it is necessary to take it into account exactly once.Read the examples to understand statement and format of the output better.InputFirst line contains the integern(1 ≤n≤ 20) — number of entries in Vasya's phone books.The followingnlines are followed by descriptions of the records in the format described in statement. Names of Vasya's friends are non-empty strings whose length does not exceed10. They consists only of lowercase English letters. Number of phone numbers in one entry is not less than1is not more than10. The telephone numbers consist of digits only. If you represent a phone number as a string, then its length will be in range from1to10. Phone numbers can contain leading zeros.OutputPrint out the ordered information about the phone numbers of Vasya's friends. First outputm— number of friends that are found in Vasya's phone books.The followingmlines must contain entries in the following format \"name number_of_phone_numbers phone_numbers\". Phone numbers should be separated by a space. Each record must contain all the phone numbers of current friend.Entries can be displayed in arbitrary order, phone numbers for one record can also be printed in arbitrary order.ExamplesInput2ivan 1 00123masha 1 00123Output2masha 1 00123ivan 1 00123Input3karl 2 612 12petr 1 12katya 1 612Output3katya 1 612petr 1 12karl 1 612Input4ivan 3 123 123 456ivan 2 456 456ivan 8 789 3 23 6 56 9 89 2dasha 2 23 789Output2dasha 2 23 789ivan 4 789 123 2 456", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "7f419e04", "template_md5": "35d339e4", "result": "You are given a list of phone book entries. Each entry has a name followed by a number of phone numbers and then the phone numbers themselves.  \n\nSome phone numbers are suffixes of other phone numbers in the same entry (e.g., 123 is a suffix of 12345).  \n\nYour task is to output a list of unique phone numbers for each person, removing any phone numbers that are suffixes of other phone numbers listed for the same person.  \n\n**Input:**\n\n* The first line contains an integer $n$ (1 ≤ $n$ ≤ 20), the number of entries.\n* The following $n$ lines describe the entries, each in the format: \n    * Name\n    * Number of phone numbers\n    * Phone number 1\n    * Phone number 2\n    * ...\n\n**Output:**\n\n* The first line contains an integer $m$, the number of unique people.\n* The following $m$ lines describe each person, in the format:\n    * Name\n    * Number of phone numbers\n    * Phone number 1\n    * Phone number 2\n    * ..."}, {"prompt_md5": "264628e5", "template_md5": "465699a0", "result": "You are given a list of entries, each containing a name and a list of phone numbers. Some phone numbers are suffixes of others.  Output a list of unique names, each associated with a list of their phone numbers, excluding any numbers that are suffixes of other numbers listed for the same person."}]}