{"uid": "1006-D", "url": "https://codeforces.com/contest/1006/problem/D", "tags": ["implementation"], "title": "1006-D", "statement": "D. Two Strings Swapstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two strings $$$a$$$ and $$$b$$$ consisting of lowercase English letters, both of length $$$n$$$. The characters of both strings have indices from $$$1$$$ to $$$n$$$, inclusive.You are allowed to do the followingchanges:Choose any index $$$i$$$ ($$$1 \\\\le i \\\\le n$$$) and swap characters $$$a_i$$$ and $$$b_i$$$;Choose any index $$$i$$$ ($$$1 \\\\le i \\\\le n$$$) and swap characters $$$a_i$$$ and $$$a_{n - i + 1}$$$;Choose any index $$$i$$$ ($$$1 \\\\le i \\\\le n$$$) and swap characters $$$b_i$$$ and $$$b_{n - i + 1}$$$.Note that if $$$n$$$ is odd, you are formally allowed to swap $$$a_{\\\\lceil\\\\frac{n}{2}\\\\rceil}$$$ with $$$a_{\\\\lceil\\\\frac{n}{2}\\\\rceil}$$$ (and the same with the string $$$b$$$) but this move is useless. Also you can swap two equal characters but this operation is useless as well.You have to make these strings equal by applying any number ofchangesdescribed above, in any order. But it is obvious that it may be impossible to make two strings equal by these swaps.In onepreprocess moveyou can replace a character in $$$a$$$ with another character. In other words, in a singlepreprocess moveyou can choose any index $$$i$$$ ($$$1 \\\\le i \\\\le n$$$), any character $$$c$$$ and set $$$a_i := c$$$.Your task is to find the minimum number ofpreprocess movesto apply in such a way that after them you can make strings $$$a$$$ and $$$b$$$ equal by applying some number ofchangesdescribed in the list above.Note that the number ofchangesyou make after thepreprocess movesdoes not matter. Also note that you cannot applypreprocess movesto the string $$$b$$$ or make anypreprocess movesafter the firstchangeis made.InputThe first line of the input contains one integer $$$n$$$ ($$$1 \\\\le n \\\\le 10^5$$$) — the length of strings $$$a$$$ and $$$b$$$.The second line contains the string $$$a$$$ consisting of exactly $$$n$$$ lowercase English letters.The third line contains the string $$$b$$$ consisting of exactly $$$n$$$ lowercase English letters.OutputPrint a single integer — the minimum number ofpreprocess movesto apply beforechanges, so that it is possible to make the string $$$a$$$ equal to string $$$b$$$ with a sequence ofchangesfrom the list above.ExamplesInput7abacababacabaaOutput4Input5zcabddbaczOutput0NoteIn the first examplepreprocess movesare as follows: $$$a_1 := $$$'b', $$$a_3 := $$$'c', $$$a_4 := $$$'a' and $$$a_5:=$$$'b'. Afterwards, $$$a = $$$\"bbcabba\". Then we can obtain equal strings by the following sequence ofchanges: $$$swap(a_2, b_2)$$$ and $$$swap(a_2, a_6)$$$. There is no way to use fewer than $$$4$$$preprocess movesbefore a sequence ofchangesto make string equal, so the answer in this example is $$$4$$$.In the second example nopreprocess movesare required. We can use the following sequence ofchangesto make $$$a$$$ and $$$b$$$ equal: $$$swap(b_1, b_5)$$$, $$$swap(a_2, a_4)$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ef763ad6", "template_md5": "35d339e4", "result": "You are given two strings,  *a* and *b*, both of length *n*. You can perform the following operations:\n\n1. Swap the characters at index *i* in both strings (*a<sub>i</sub>* and *b<sub>i</sub>*).\n2. Swap the characters at index *i* in string *a* with the character at index *n - i + 1* in string *a*.\n3. Swap the characters at index *i* in string *b* with the character at index *n - i + 1* in string *b*.\n\nYou can perform any number of these operations in any order.\n\nBefore performing any of these operations, you can perform a \"preprocess move\" which allows you to replace any character in string *a* with any other character.\n\nThe goal is to find the minimum number of \"preprocess moves\" needed so that you can make string *a* equal to string *b* using only the operations listed above."}, {"prompt_md5": "2e554517", "template_md5": "465699a0", "result": "You have two strings of the same length. You can change characters in the first string, and then swap characters within each string or swap corresponding characters between the two strings. Find the fewest character changes needed to make the strings identical."}]}