{"uid": "896-C", "url": "https://codeforces.com/contest/896/problem/C", "tags": ["data structures", " probabilities"], "title": "896-C", "statement": "C. Willem, Chtholly and Seniorioustime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output— Willem...— What's the matter?— It seems that there's something wrong with Seniorious...— I'll have a look...Seniorious is made by linking special talismans in particular order.After over 500 years, the carillon is now in bad condition, so Willem decides to examine it thoroughly.Seniorious hasnpieces of talisman. Willem puts them in a line, thei-th of which is an integerai.In order to maintain it, Willem needs to performmoperations.There are four types of operations:1lrx: For eachisuch thatl≤i≤r, assignai+xtoai.2lrx: For eachisuch thatl≤i≤r, assignxtoai.3lrx: Print thex-th smallest number in the index range[l,r], i.e. the element at thex-th position if all the elementsaisuch thatl≤i≤rare taken and sorted into an array of non-decreasing integers. It's guaranteed that1 ≤x≤r-l+ 1.4lrxy: Print the sum of thex-th power ofaisuch thatl≤i≤r, moduloy, i.e..InputThe only line contains four integersn,m,seed,vmax(1 ≤n,m≤ 105, 0 ≤seed< 109+ 7, 1 ≤vmax≤ 109).The initial values and operations are generated using following pseudo code:def rnd():ret = seedseed = (seed * 7 + 13) mod 1000000007return retfor i = 1 to n:a[i] = (rnd() mod vmax) + 1for i = 1 to m:op = (rnd() mod 4) + 1l = (rnd() mod n) + 1r = (rnd() mod n) + 1if (l > r):swap(l, r)if (op == 3):x = (rnd() mod (r - l + 1)) + 1else:x = (rnd() mod vmax) + 1if (op == 4):y = (rnd() mod vmax) + 1Hereopis the type of the operation mentioned in the legend.OutputFor each operation of types3or4, output a line containing the answer.ExamplesInput10 10 7 9Output2103Input10 10 9 9Output1133NoteIn the first example, the initial array is{8, 9, 7, 2, 3, 1, 5, 6, 4, 8}.The operations are:2 6 7 91 3 10 84 4 6 2 41 4 5 82 1 7 14 7 9 4 41 2 7 94 5 8 1 12 5 7 54 3 10 8 5", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "01257bca", "template_md5": "35d339e4", "result": "You are given an array of $n$ integers, $a_1, a_2, ..., a_n$. You need to perform $m$ operations on this array. There are four types of operations:\n\n1. **Update:** For each index $i$ in the range $l$ to $r$ (inclusive), add $x$ to $a_i$.\n2. **Assign:** For each index $i$ in the range $l$ to $r$ (inclusive), set $a_i$ to $x$.\n3. **k-th smallest:** Find the $x$-th smallest element in the range $l$ to $r$ (inclusive).\n4. **Power sum:** Calculate the sum of the $x$-th power of each element in the range $l$ to $r$ (inclusive), modulo $y$.\n\nYou are given the values of $n$, $m$, a seed value, and a maximum value $vmax$. The initial array and the operations are generated randomly using the given seed value and the pseudocode provided.\n\nFor each operation of type 3 or 4, output the result."}, {"prompt_md5": "ca80b1cf", "template_md5": "465699a0", "result": "You are given a list of numbers. You can perform the following operations on the list:\n\n1. Add a value to each number in a given range.\n2. Set each number in a given range to a specific value.\n3. Find the k-th smallest number in a given range.\n4. Calculate the sum of the k-th power of each number in a given range, modulo a given value.\n\nFor each operation of type 3 or 4, output the result."}]}