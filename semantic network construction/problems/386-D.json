{"uid": "386-D", "url": "https://codeforces.com/contest/386/problem/D", "tags": ["dp", " graphs", " implementation", " shortest paths"], "title": "386-D", "statement": "D. Game with Pointstime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutYou are playing the following game. There arenpoints on a plane. They are the vertices of a regularn-polygon. Points are labeled with integer numbers from1ton. Each pair of distinct points is connected by a diagonal, which is colored in one of 26 colors. Points are denoted by lowercase English letters. There are three stones positioned on three distinct vertices. All stones are the same. With one move you can move the stone to another free vertex along some diagonal. The color of this diagonal must be the same as the color of the diagonal, connecting another two stones.Your goal is to move stones in such way that the only vertices occupied by stones are1,2and3. You must achieve such position using minimal number of moves. Write a program which plays this game in an optimal way.InputIn the first line there is one integern(3 ≤n≤ 70) — the number of points. In the second line there are three space-separated integer from1ton— numbers of vertices, where stones are initially located.Each of the followingnlines containsnsymbols — the matrix denoting the colors of the diagonals. Colors are denoted by lowercase English letters. The symboljof lineidenotes the color of diagonal between pointsiandj. Matrix is symmetric, soj-th symbol ofi-th line is equal toi-th symbol ofj-th line. Main diagonal is filled with '*' symbols because there is no diagonal, connecting point to itself.OutputIf there is no way to put stones on vertices1,2and3, print-1on a single line. Otherwise, on the first line print minimal required number of moves and in the next lines print the description of each move, one move per line. To describe a move print two integers. The point from which to remove the stone, and the point to which move the stone. If there are several optimal solutions, print any of them.ExamplesInput42 3 4*abaa*abba*babb*Output14 1Input42 3 4*abca*abba*bcbb*Output-1NoteIn the first example we can move stone from point4to point1because this points are connected by the diagonal of color 'a' and the diagonal connection point2and3, where the other stones are located, are connected by the diagonal of the same color. After that stones will be on the points1,2and3.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "10714c0d", "template_md5": "35d339e4", "result": "You are given a regular $n$-polygon ($3 \\le n \\le 70$) with points labeled from 1 to $n$. Each pair of distinct points is connected by a diagonal, which is colored one of 26 colors.  There are three stones initially placed on three different vertices of the polygon.\n\nYou can move a stone to another empty vertex along a diagonal, but the color of the diagonal must match the color of the diagonal connecting the other two stones.\n\nYour goal is to move the stones so that they are only on vertices 1, 2, and 3. Find the minimum number of moves required to achieve this, and list the moves. If it's impossible, print -1.\n\n**Input:**\n\n* The first line contains an integer $n$.\n* The second line contains three space-separated integers representing the initial positions of the stones.\n* Each of the following $n$ lines contains $n$ characters representing the colors of the diagonals. The $j$-th character of the $i$-th line represents the color of the diagonal between points $i$ and $j$. The matrix is symmetric.\n\n**Output:**\n\n* If it's impossible to achieve the goal, print -1.\n* Otherwise, print the minimum number of moves required.\n* Then, on each of the following lines, print two integers representing a move (the starting vertex and the ending vertex)."}, {"prompt_md5": "63a0491b", "template_md5": "465699a0", "result": "You have 3 objects on a star-shaped arrangement of points. Each point is connected to other points by colored lines. You can move an object along a line if the line's color matches the color of a line connecting two other objects.  Your goal is to move the objects to specific points (1, 2, and 3) using the fewest moves possible. If it's impossible, say so."}]}