{"uid": "1616-C", "url": "https://codeforces.com/contest/1616/problem/C", "tags": ["brute force", " geometry", " implementation", " math"], "title": "1616-C", "statement": "C. Representative Edgestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAn array $$$a_1, a_2, \\\\ldots, a_n$$$ isgoodif and only if for every subsegment $$$1 \\\\leq l \\\\leq r \\\\leq n$$$, the following holds: $$$a_l + a_{l + 1} + \\\\ldots + a_r = \\\\frac{1}{2}(a_l + a_r) \\\\cdot (r - l + 1)$$$.You are given an array of integers $$$a_1, a_2, \\\\ldots, a_n$$$. In one operation, you can replace any one element of this array with any real number. Find the minimum number of operations you need to make this array good.InputThe first line of input contains one integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 100$$$): the number of test cases.Each of the next $$$t$$$ lines contains the description of a test case.In the first line you are given one integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 70$$$): the number of integers in the array.The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$-100 \\\\leq a_i \\\\leq 100$$$): the initial array.OutputFor each test case, print one integer: the minimum number of elements that you need to replace to make the given array good.ExampleInput5 4 1 2 3 4 4 1 1 2 2 2 0 -1 6 3 -2 4 -1 -4 0 1 -100Output0 2 0 3 0NoteIn the first test case, the array is good already.In the second test case, one of the possible good arrays is $$$[1, 1, \\\\underline{1}, \\\\underline{1}]$$$ (replaced elements are underlined).In the third test case, the array is good already.In the fourth test case, one of the possible good arrays is $$$[\\\\underline{-2.5}, -2, \\\\underline{-1.5}, -1, \\\\underline{-0.5}, 0]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ba171b00", "template_md5": "35d339e4", "result": "You are given an array of integers.  An array is \"good\" if for every subsegment of the array, the sum of the elements in that subsegment is equal to half the average of the first and last elements of the subsegment, multiplied by the number of elements in the subsegment.\n\nFor example, if the subsegment is [2, 4, 6], the sum is 12. The average of the first and last elements is (2+6)/2 = 4.  Half of that, multiplied by the number of elements (3) is 6. So, the array is good in this case.\n\nYou can change any element in the array to any real number. Find the minimum number of changes needed to make the array \"good\"."}, {"prompt_md5": "05ad60b9", "template_md5": "465699a0", "result": "You are given a list of numbers.  You can change any number in the list to any other number.  Find the fewest changes needed so that the sum of all numbers in any sublist is equal to the average of the first and last numbers in that sublist, multiplied by the number of elements in the sublist."}]}