{"uid": "1732-B", "url": "https://codeforces.com/contest/1732/problem/B", "tags": ["brute force", " dp", " greedy", " implementation"], "title": "1732-B", "statement": "B. Ugutime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA binary string is a string consisting only of the characters0and1. You are given a binary string $$$s_1 s_2 \\\\ldots s_n$$$. It is necessary to make this string non-decreasing in the least number of operations. In other words, each character should be not less than the previous. In one operation, you can do the following:Select an arbitrary index $$$1 \\\\leq i \\\\leq n$$$ in the string;For all $$$j \\\\geq i$$$, change the value in the $$$j$$$-th position to the opposite, that is, if $$$s_j = 1$$$, then make $$$s_j = 0$$$, and vice versa.What is the minimum number of operations needed to make the string non-decreasing?InputEach test consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$) — the number of test cases. The description of test cases follows.The first line of each test cases a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 10^5$$$) — the length of the string.The second line of each test case contains a binary string $$$s$$$ of length $$$n$$$.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output a single integer — the minimum number of operations that are needed to make the string non-decreasing.ExampleInput811210310141100511001610001010000011000070101010Output0 1 2 1 2 3 1 5NoteIn the first test case, the string is already non-decreasing.In the second test case, you can select $$$i = 1$$$ and then $$$s = \\\\mathtt{01}$$$.In the third test case, you can select $$$i = 1$$$ and get $$$s = \\\\mathtt{010}$$$, and then select $$$i = 2$$$. As a result, we get $$$s = \\\\mathtt{001}$$$, that is, a non-decreasing string.In the sixth test case, you can select $$$i = 5$$$ at the first iteration and get $$$s = \\\\mathtt{100001}$$$. Then choose $$$i = 2$$$, then $$$s = \\\\mathtt{111110}$$$. Then we select $$$i = 1$$$, getting the non-decreasing string $$$s = \\\\mathtt{000001}$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "7a7840d9", "template_md5": "35d339e4", "result": "You are given a binary string, which is a string consisting only of 0s and 1s.  You can perform the following operation on the string:\n\n* Choose an index  $i$ in the string.\n* Flip all the characters from index $i$ to the end of the string (change 0s to 1s and 1s to 0s).\n\nThe goal is to make the string non-decreasing, meaning each character is greater than or equal to the previous character. Find the minimum number of operations needed to achieve this."}, {"prompt_md5": "9bb17247", "template_md5": "465699a0", "result": "You are given a string of 0s and 1s. You can flip any part of the string (from a chosen position to the end) to make it all 0s or all 1s.  Find the fewest flips needed to make the string non-decreasing (each digit is greater than or equal to the one before it)."}]}