{"uid": "1739-D", "url": "https://codeforces.com/contest/1739/problem/D", "tags": ["binary search", " data structures", " dfs and similar", " graphs", " greedy", " trees"], "title": "1739-D", "statement": "D. Reset K Edgestime limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a rooted tree, consisting of $$$n$$$ vertices. The vertices are numbered from $$$1$$$ to $$$n$$$, the root is the vertex $$$1$$$.You can perform the following operationat most$$$k$$$ times:choose an edge $$$(v, u)$$$ of the tree such that $$$v$$$ is a parent of $$$u$$$;remove the edge $$$(v, u)$$$;add an edge $$$(1, u)$$$ (i. e. make $$$u$$$ with its subtree a child of the root).The heightof a tree is the maximum depth of its vertices, and the depth of a vertex is the number of edges on the path from the root to it. For example, the depth of vertex $$$1$$$ is $$$0$$$, since it's the root, and the depth of all its children is $$$1$$$.What's the smallest height of the tree that can be achieved?InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of testcases.The first line of each testcase contains two integers $$$n$$$ and $$$k$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$; $$$0 \\\\le k \\\\le n - 1$$$) — the number of vertices in the tree and the maximum number of operations you can perform.The second line contains $$$n-1$$$ integers $$$p_2, p_3, \\\\dots, p_n$$$ ($$$1 \\\\le p_i < i$$$) — the parent of the $$$i$$$-th vertex. Vertex $$$1$$$ is the root.The sum of $$$n$$$ over all testcases doesn't exceed $$$2 \\\\cdot 10^5$$$.OutputFor each testcase, print a single integer — the smallest height of the tree that can achieved by performingat most$$$k$$$ operations.ExampleInput55 11 1 2 25 21 1 2 26 01 2 3 4 56 11 2 3 4 54 31 1 1Output2 1 5 3 1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "15b7cbbd", "template_md5": "35d339e4", "result": "You are given a tree with $n$ nodes, numbered from 1 to $n$. Node 1 is the root. You can perform the following operation at most $k$ times:\n\n1. Choose an edge $(v, u)$ in the tree where $v$ is the parent of $u$.\n2. Remove the edge $(v, u)$.\n3. Add a new edge $(1, u)$ making $u$ and its subtree a child of the root.\n\nThe height of a tree is the maximum depth of any node in the tree. The depth of a node is the number of edges on the path from the root to that node.\n\nFind the smallest possible height of the tree after performing the operation at most $k$ times. \n\n\n\nInput:\n\n* The first line contains an integer $t$ ($1 \\le t \\le 10^4$) representing the number of test cases.\n* For each test case:\n    * The first line contains two integers $n$ and $k$ ($2 \\le n \\le 2 \\cdot 10^5$, $0 \\le k \\le n - 1$) representing the number of nodes and the maximum number of operations.\n    * The second line contains $n-1$ integers $p_2, p_3, ..., p_n$ ($1 \\le p_i < i$) representing the parent of each node (node 1 is the root).\n\nOutput:\n\nFor each test case, print a single integer representing the smallest possible height of the tree."}, {"prompt_md5": "5c0ca8a4", "template_md5": "465699a0", "result": "You have a tree with a root. You can change the tree by moving some branches to be directly connected to the root, up to a certain number of times. What is the shortest possible height of the tree after these changes?"}]}