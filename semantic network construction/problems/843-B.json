{"uid": "843-B", "url": "https://codeforces.com/contest/843/problem/B", "tags": ["brute force", " interactive", " probabilities"], "title": "843-B", "statement": "B. Interactive LowerBoundtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is an interactive problem.You are given asortedin increasing order singly linked list. You should find the minimum integer in the list which is greater than or equal tox.More formally, there is a singly liked list built on an array ofnelements. Element with indexicontains two integers:valueiis the integer value in this element, andnextithat is the index of the next element of the singly linked list (or-1, if the current element is the last). The list is sorted, i.e. ifnexti≠  - 1, thenvaluenexti>valuei.You are given the number of elements in the listn, the index of the first elementstart, and the integerx.You can make up to2000queries of the following two types:? i(1 ≤i≤n) — ask the valuesvalueiandnexti,! ans— give the answer for the problem: the minimum integer, greater than or equal tox, or! -1, if there are no such integers. Your program should terminate after this query.Write a program that solves this problem.InputThe first line contains three integersn,start,x(1 ≤n≤ 50000,1 ≤start≤n,0 ≤x≤ 109) — the number of elements in the list, the index of the first element and the integerx.OutputTo print the answer for the problem, print! ans, whereansis the minimum integer in the list greater than or equal tox, or-1, if there is no such integer.InteractionTo make a query of the first type, print? i(1 ≤i≤n), whereiis the index of element you want to know information about.After each query of type?read two integersvalueiandnexti(0 ≤valuei≤ 109,- 1 ≤nexti≤n,nexti≠ 0).It is guaranteed that ifnexti≠  - 1, thenvaluenexti>valuei, and that the array values give a valid singly linked list withstartbeing the first element.Note that you can't ask more than1999queries of the type?.Ifnexti=  - 1andvaluei=  - 1, then it means that you asked more queries than allowed, or asked an invalid query. Your program should immediately terminate (for example, by callingexit(0)). You will receive \"Wrong Answer\", it means that you asked more queries than allowed, or asked an invalid query. If you ignore this, you can get other verdicts since your program will continue to read from a closed stream.Your solution will get \"Idleness Limit Exceeded\", if you don't print anything or forget toflushthe output, including the final answer.Toflushyou can use (just after printing a query and line end):fflush(stdout)in C++;System.out.flush()in Java;stdout.flush()in Python;flush(output)in Pascal;For other languages see documentation.Hacks formatFor hacks, use the following format:In the first line print three integersn,start,x(1 ≤n≤ 50000,1 ≤start≤n,0 ≤x≤ 109).In the nextnlines print the description of the elements of the list: in thei-th line print two integersvalueiandnexti(0 ≤valuei≤ 109,- 1 ≤nexti≤n,nexti≠ 0).The printed structure should be a valid singly linked list. In particular, it should be possible to reach all elements fromstartby following linksnexti, and the last elementendshould have-1in thenextend.ExampleInput5 3 8097 -158 516 281 179 4Output? 1? 2? 3? 4? 5! 81NoteYou can read more about singly linked list by the following link:https://en.wikipedia.org/wiki/Linked_list#Singly_linked_listThe illustration for the first sample case. Start and finish elements are marked dark.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "57349583", "template_md5": "35d339e4", "result": "You are given a sorted singly linked list.  You need to find the smallest integer in the list that is greater than or equal to a given value $x$.\n\nHere's how the list is structured:\n\n* Each element in the list contains two values:\n    * `value`: The integer value of the element.\n    * `next`: The index of the next element in the list (or -1 if it's the last element).\n\n* The list is sorted, meaning if `next` is not -1, then the `value` of the next element is greater than the current element's `value`.\n\nYou can ask up to 2000 questions of two types:\n\n1. **? i**:  Ask for the `value` and `next` of the element at index `i`.\n2. **! ans**: Give the answer to the problem: the smallest integer in the list greater than or equal to $x$, or -1 if there is no such integer.\n\nYour program should terminate after giving the final answer."}, {"prompt_md5": "fd83b0a7", "template_md5": "465699a0", "result": "You are given a sorted list of numbers. You need to find the smallest number in the list that is greater than or equal to a given target number. You can ask for the value and the next number in the list for up to 2000 specific positions in the list.  After finding the answer, you need to output it."}]}