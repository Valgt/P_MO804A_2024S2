{"uid": "713-A", "url": "https://codeforces.com/contest/713/problem/A", "tags": ["data structures", " implementation"], "title": "713-A", "statement": "A. Sonya and Queriestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputToday Sonya learned about long integers and invited all her friends to share the fun. Sonya has an initially empty multiset with integers. Friends give hertqueries, each of one of the following type:+ai— add non-negative integeraito the multiset. Note, that she has a multiset, thus there may be many occurrences of the same integer.-ai— delete a single occurrence of non-negative integeraifrom the multiset. It's guaranteed, that there is at least oneaiin the multiset.?s— count the number of integers in the multiset (with repetitions) that match some patternsconsisting of0and1. In the pattern,0stands for the even digits, while1stands for the odd. Integerxmatches the patterns, if the parity of thei-th from the right digit in decimal notation matches thei-th from the right digit of the pattern. If the pattern is shorter than this integer, it's supplemented with0-s from the left. Similarly, if the integer is shorter than the pattern its decimal notation is supplemented with the0-s from the left.For example, if the pattern iss= 010, than integers92,2212,50and414match the pattern, while integers3,110,25and1030do not.InputThe first line of the input contains an integert(1 ≤t≤ 100 000) — the number of operation Sonya has to perform.Nexttlines provide the descriptions of the queries in order they appear in the input file. Thei-th row starts with a characterci— the type of the corresponding operation. Ifciis equal to '+' or '-' then it's followed by a space and an integerai(0 ≤ai< 1018) given without leading zeroes (unless it's0). Ifciequals '?' then it's followed by a space and a sequence of zeroes and onse, giving the pattern of length no more than18.It's guaranteed that there will be at least one query of type '?'.It's guaranteed that any time some integer is removed from the multiset, there will be at least one occurrence of this integer in it.OutputFor each query of the third type print the number of integers matching the given pattern. Each integer is counted as many times, as it appears in the multiset at this moment of time.ExamplesInput12+ 1+ 241? 1+ 361- 241? 0101+ 101? 101- 101? 101+ 4000? 0Output21211Input4+ 200+ 200- 200? 0Output1NoteConsider the integers matching the patterns from the queries of the third type. Queries are numbered in the order they appear in the input.1and241.361.101and361.361.4000.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0d26c258", "template_md5": "35d339e4", "result": "You are given a set of operations to perform on a collection of integers. \n\nThe operations are:\n\n* **+ai:** Add the integer *ai* to the collection.\n* **-ai:** Remove one occurrence of the integer *ai* from the collection.\n* **?s:** Count the number of integers in the collection that match a given binary pattern *s*. \n\nThe pattern *s* represents a sequence of 0s and 1s, where 0 represents an even digit and 1 represents an odd digit. An integer matches the pattern if the parity (evenness or oddness) of each digit in the integer matches the corresponding digit in the pattern. \n\nFor example, the pattern 010 matches the integers 92, 2212, 50, and 414 because:\n\n* 92: 9 is odd (1), 2 is even (0)\n* 2212: 2 is even (0), 2 is even (0), 1 is odd (1), 2 is even (0)\n* 50: 5 is odd (1), 0 is even (0)\n* 414: 4 is even (0), 1 is odd (1), 4 is even (0)\n\nThe integer 3 does not match the pattern 010 because 3 is odd (1) and the pattern has an even digit (0) in the first position.\n\nYour task is to process the given operations and output the count of integers matching each pattern query."}, {"prompt_md5": "24b6d703", "template_md5": "465699a0", "result": "You are given a set of numbers. You can add numbers to the set or remove one occurrence of a number from the set. You are also asked to count how many numbers in the set match a given pattern, where the pattern uses 0 to represent even digits and 1 to represent odd digits."}]}