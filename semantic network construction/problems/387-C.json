{"uid": "387-C", "url": "https://codeforces.com/contest/387/problem/C", "tags": ["greedy", " implementation"], "title": "387-C", "statement": "C. George and Numbertime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutGeorge is a cat, so he really likes to play. Most of all he likes to play with his array of positive integersb. During the game, George modifies the array by using special changes. Let's mark George's current array asb1,b2, ...,b|b|(record|b|denotes the current length of the array). Then one change is a sequence of actions:Choose two distinct indexesiandj(1 ≤i,j≤ |b|;i≠j), such thatbi≥bj.Get numberv=concat(bi,bj), whereconcat(x,y)is a number obtained by adding numberyto the end of the decimal record of numberx. For example,concat(500, 10) = 50010,concat(2, 2) = 22.Add numbervto the end of the array. The length of the array will increase by one.Remove from the array numbers with indexesiandj. The length of the array will decrease by two, and elements of the array will become re-numbered from1to current length of the array.George played for a long time with his arrayband received from arrayban array consisting of exactly one numberp. Now George wants to know: what is the maximum number of elements arraybcould contain originally? Help him find this number. Note that originally the array could contain onlypositiveintegers.InputThe first line of the input contains a single integerp(1 ≤p< 10100000). It is guaranteed that numberpdoesn't contain any leading zeroes.OutputPrint an integer — the maximum number of elements arraybcould contain originally.ExamplesInput9555Output4Input10000000005Output2Input800101Output3Input45Output1Input1000000000000001223300003342220044555Output17Input19992000Output1Input310200Output2NoteLet's consider the test examples:Originally arraybcan be equal to{5, 9, 5, 5}. The sequence of George's changes could have been:{5, 9, 5, 5} → {5, 5, 95} → {95, 55} → {9555}.Originally arraybcould be equal to{1000000000, 5}. Please note that the arraybcannot contain zeros.Originally arraybcould be equal to{800, 10, 1}.Originally arraybcould be equal to{45}. It cannot be equal to{4, 5}, because George can get only array{54}from this array in one operation.Note that the numbers can be very large.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "9f634fb7", "template_md5": "35d339e4", "result": "You are given a single positive integer $p$.  Determine the maximum number of positive integers that could have been combined to produce $p$ using the following operations:\n\n1. Choose two distinct indices $i$ and $j$ in the array, where $1 \\le i, j \\le |b|$ and $b_i \\ge b_j$.\n2. Create a new number $v$ by concatenating $b_i$ and $b_j$ (e.g., if $b_i = 500$ and $b_j = 10$, then $v = 50010$).\n3. Add $v$ to the end of the array.\n4. Remove the elements at indices $i$ and $j$ from the array.\n\nThe array can be modified repeatedly until it contains only a single element, which is $p$."}, {"prompt_md5": "0d6ad5a3", "template_md5": "465699a0", "result": "You are given a single number. Determine the maximum number of smaller numbers that could have been combined to produce this number, following these rules:\n\n1. You can combine two numbers, as long as the first number is greater than or equal to the second.\n2. The combined number is formed by appending the second number to the end of the first number.\n3. You can repeat this process multiple times."}]}