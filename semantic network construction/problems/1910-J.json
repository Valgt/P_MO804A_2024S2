{"uid": "1910-J", "url": "https://codeforces.com/contest/1910/problem/J", "tags": ["*special"], "title": "1910-J", "statement": "J. Two Colorstime limit per test4 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given a tree consisting of $$$n$$$ vertices. Some vertices of the tree are red, all other vertices are blue.Each edge of the tree has a positive weight. Let's define $$$d(x, y)$$$ as the distance between the vertices $$$x$$$ and $$$y$$$, i. e. the sum of weights of edges belonging to the simple path between $$$x$$$ and $$$y$$$.For each vertex, you have to choose an integer $$$v_i$$$. These integers should meet the following constraint: for every blue vertex $$$b$$$ and every red vertex $$$r$$$, $$$d(b, r) \\\\ge v_b + v_r$$$.You have to maximize the value of $$$\\\\sum \\\\limits_{i=1}^{n} v_i$$$.Note that the values of $$$v_i$$$ are not necessarily positive.InputThe first line contains one integer $$$n$$$ ($$$2 \\\\le n \\\\le 3 \\\\cdot 10^5$$$).The second line contains $$$n$$$ integers $$$c_1, c_2, \\\\dots, c_n$$$ ($$$0 \\\\le c_i \\\\le 1$$$). If the $$$i$$$-th vertex is red, $$$c_i = 1$$$, otherwise $$$c_i = 0$$$.Then $$$n-1$$$ lines follow. Each line contains three integers $$$x_i$$$, $$$y_i$$$ and $$$w_i$$$ ($$$1 \\\\le x_i, y_i \\\\le n$$$; $$$1 \\\\le w_i \\\\le 10^6$$$; $$$x_i \\\\ne y_i$$$) denoting an edge between the vertices $$$x_i$$$ and $$$y_i$$$ which has weight $$$w_i$$$. These edges form a tree.OutputIf the value of $$$\\\\sum \\\\limits_{i=1}^{n} v_i$$$ can be as big as possible, printInfinity. Otherwise, print one integer — the maximum possible value of $$$\\\\sum \\\\limits_{i=1}^{n} v_i$$$ you can get.ExamplesInput4 1 1 0 0 3 4 50 3 2 100 2 1 100Output350Input6 0 1 0 1 0 1 1 2 1 1 4 1 1 6 1 6 5 100 6 3 100Output203Input3 1 1 1 1 2 100 2 3 100OutputInfinityNoteIn the first example, you can assign $$$v_1 = 120, v_2 = 20, v_3 = 80, v_4 = 130$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "8d3028c5", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices. Some vertices are red, and the rest are blue. Each edge has a positive weight.\n\nFor each vertex, you need to choose an integer $v_i$.  These integers must satisfy the following condition for all blue vertex $b$ and red vertex $r$:\n\n$d(b, r) \\ge v_b + v_r$\n\nwhere $d(b, r)$ is the total weight of the edges on the path between vertices $b$ and $r$.\n\nYour goal is to maximize the sum of all $v_i$ values. If it's impossible to satisfy the condition, print \"Infinity\". Otherwise, print the maximum possible sum. \n\n\n\nLet me know if you'd like me to elaborate on any part of the problem!"}, {"prompt_md5": "00bfcfa8", "template_md5": "465699a0", "result": "You have a connected network of points. Some points are red, others are blue. Each connection between points has a weight.  You need to assign a number to each point. The sum of the numbers for a blue point and a red point connected by a link must be less than or equal to the weight of that link.  Find the largest possible sum of all the assigned numbers."}]}