{"uid": "842-D", "url": "https://codeforces.com/contest/842/problem/D", "tags": ["binary search", " data structures"], "title": "842-D", "statement": "D. Vitya and Strange Lessontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputToday at the lesson Vitya learned a very interesting function —mex.Mexof a sequence of numbers is the minimum non-negative number that is not present in the sequence as element. For example,mex([4, 33, 0, 1, 1, 5]) = 2andmex([1, 2, 3]) = 0.Vitya quickly understood all tasks of the teacher, but can you do the same?You are given an array consisting ofnnon-negative integers, andmqueries. Each query is characterized by one numberxand consists of the following consecutive steps:Perform the bitwise addition operation modulo2(xor) of each array element with the numberx.Findmexof the resulting array.Note that after each query the array changes.InputFirst line contains two integer numbersnandm(1 ≤n,m≤ 3·105) — number of elements in array and number of queries.Next line containsninteger numbersai(0 ≤ai≤ 3·105) — elements of then array.Each of nextmlines contains query — one integer numberx(0 ≤x≤ 3·105).OutputFor each query print the answer on a separate line.ExamplesInput2 21 313Output10Input4 30 1 5 6124Output200Input5 40 1 5 6 71145Output2202", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "8b869bb7", "template_md5": "35d339e4", "result": "You are given an array of $n$ non-negative integers. You will be given $m$ queries. Each query is characterized by a number $x$. For each query:\n\n1. Perform a bitwise XOR operation on each element of the array with $x$ (modulo 2).\n2. Find the minimum non-negative integer that is not present in the resulting array.\n\nOutput the result of the \"minimum non-negative integer not present\" operation for each query."}, {"prompt_md5": "fb857b4d", "template_md5": "465699a0", "result": "You are given a list of numbers. You will be asked multiple times to perform a special operation on the list: add a given number to each number in the list, but only keep the result after taking the remainder when divided by 2. After each operation, find the smallest non-negative number that is not present in the list.  Report the result for each operation."}]}