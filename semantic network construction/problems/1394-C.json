{"uid": "1394-C", "url": "https://codeforces.com/contest/1394/problem/C", "tags": ["binary search", " geometry", " ternary search"], "title": "1394-C", "statement": "C. Boboniu and Stringtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBoboniu definesBN-stringas a string $$$s$$$ of characters 'B' and 'N'.You can perform the following operations on the BN-string $$$s$$$:Remove a character of $$$s$$$.Remove a substring \"BN\" or \"NB\" of $$$s$$$.Add a character 'B' or 'N' to the end of $$$s$$$.Add a string \"BN\" or \"NB\" to the end of $$$s$$$.Note that a string $$$a$$$ is asubstringof a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.Boboniu thinks that BN-strings $$$s$$$ and $$$t$$$ aresimilarif and only if:$$$|s|=|t|$$$.There exists a permutation $$$p_1, p_2, \\\\ldots, p_{|s|}$$$ such that for all $$$i$$$ ($$$1\\\\le i\\\\le |s|$$$), $$$s_{p_i}=t_i$$$.Boboniu also defines $$$\\\\text{dist}(s,t)$$$, thedistancebetween $$$s$$$ and $$$t$$$, as the minimum number of operations that makes $$$s$$$similarto $$$t$$$.Now Boboniu gives you $$$n$$$ non-empty BN-strings $$$s_1,s_2,\\\\ldots, s_n$$$ and asks you to find anon-emptyBN-string $$$t$$$ such that the maximum distance to string $$$s$$$ is minimized, i.e. you need to minimize $$$\\\\max_{i=1}^n \\\\text{dist}(s_i,t)$$$.InputThe first line contains a single integer $$$n$$$ ($$$1\\\\le n\\\\le 3\\\\cdot 10^5$$$).Each of the next $$$n$$$ lines contains a string $$$s_i$$$ ($$$1\\\\le |s_i| \\\\le 5\\\\cdot 10^5$$$). It is guaranteed that $$$s_i$$$ only contains 'B' and 'N'. The sum of $$$|s_i|$$$ does not exceed $$$5\\\\cdot 10^5$$$.OutputIn the first line, print the minimum $$$\\\\max_{i=1}^n \\\\text{dist}(s_i,t)$$$.In the second line, print the suitable $$$t$$$.If there are several possible $$$t$$$'s, you can print any.ExamplesInput3 B N BNOutput1 BNInput10 N BBBBBB BNNNBBNBB NNNNBNBNNBNNNBBN NBNBN NNNNNN BNBNBNBBBBNNNNBBBBNNBBNBNBBNBBBBBBBB NNNNBN NBBBBBBBB NNNNNNOutput12 BBBBBBBBBBBBNNNNNNNNNNNNInput8 NNN NNN BBNNBBBN NNNBNN B NNN NNNNBNN NNNNNNNNNNNNNNNBNNNNNNNBNBOutput12 BBBBNNNNNNNNNNNNInput3 BNNNBNNNNBNBBNNNBBNNNNBBBBNNBBBBBBNBBBBBNBBBNNBBBNBNBBBN BBBNBBBBNNNNNBBNBBBNNNBB BBBBBBBBBBBBBBNBBBBBNBBBBBNBBBBNBOutput12 BBBBBBBBBBBBBBBBBBBBBBBBBBNNNNNNNNNNNNNoteIn the first example $$$\\\\text{dist(B,BN)}=\\\\text{dist(N,BN)}=1$$$, $$$\\\\text{dist(BN,BN)}=0$$$. So the maximum distance is $$$1$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "4af747ac", "template_md5": "35d339e4", "result": "You are given $n$ strings, each consisting only of the characters 'B' and 'N'.  \n\nFind a single string $t$ such that the maximum distance between $t$ and each of the input strings is minimized.\n\nThe distance between two strings is the minimum number of operations needed to make them the same.  The allowed operations are:\n\n* Remove a single character from a string.\n* Remove the substring \"BN\" or \"NB\" from a string.\n* Add a single character 'B' or 'N' to the end of a string.\n* Add the string \"BN\" or \"NB\" to the end of a string.\n\nTwo strings are considered the same if they have the same length and can be made identical by rearranging their characters.\n\nOutput the minimum maximum distance and the string $t$ that achieves it."}, {"prompt_md5": "5aa28be8", "template_md5": "465699a0", "result": "You are given a list of strings consisting only of 'B' and 'N'.  Find a single string that minimizes the maximum number of operations needed to transform each of the given strings into it.  The allowed operations are:\n\n* Remove a single character.\n* Remove the substring \"BN\" or \"NB\".\n* Add a 'B' or 'N' to the end.\n* Add the substring \"BN\" or \"NB\" to the end. \n\n\n\nTwo strings are considered similar if they have the same length and can be made identical by rearranging their characters."}]}