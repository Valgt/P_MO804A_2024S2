{"uid": "1105-E", "url": "https://codeforces.com/contest/1105/problem/E", "tags": ["bitmasks", " brute force", " dp", " meet-in-the-middle"], "title": "1105-E", "statement": "E. Helping Hiasattime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputHiasat registered a new account in NeckoForces and when his friends found out about that, each one of them asked to use his name as Hiasat's handle.Luckily for Hiasat, he can change his handle in some points in time. Also he knows the exact moments friends will visit his profile page. Formally, you are given a sequence of events of two types:$$$1$$$ — Hiasat can change his handle.$$$2$$$ $$$s$$$ — friend $$$s$$$ visits Hiasat's profile.The friend $$$s$$$ will be happy, if each time he visits Hiasat's profile his handle would be $$$s$$$.Hiasat asks you to help him, find the maximum possible number of happy friends he can get.InputThe first line contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\\\le n \\\\le 10^5, 1 \\\\le m \\\\le 40$$$) — the number of events and the number of friends.Then $$$n$$$ lines follow, each denoting an event of one of two types:$$$1$$$ — Hiasat can change his handle.$$$2$$$ $$$s$$$ — friend $$$s$$$ ($$$1 \\\\le |s| \\\\le 40$$$) visits Hiasat's profile.It's guaranteed, that each friend's name consists only of lowercase Latin letters.It's guaranteed, that the first event is always of the first type and each friend will visit Hiasat's profile at least once.OutputPrint a single integer — the maximum number of happy friends.ExamplesInput5 3 1 2 motarack 2 mike 1 2 lightOutput2Input4 3 1 2 alice 2 bob 2 tanyaromanovaOutput1NoteIn the first example, the best way is to change the handle to the \"motarack\" in the first event and to the \"light\" in the fourth event. This way, \"motarack\" and \"light\" will be happy, but \"mike\" will not.In the second example, you can choose either \"alice\", \"bob\" or \"tanyaromanova\" and only that friend will be happy.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "cf66a0aa", "template_md5": "35d339e4", "result": "You are given a sequence of events. Each event is either:\n\n* **Type 1:**  A handle change.\n* **Type 2:** A friend with a specific name visits the profile.\n\nThe goal is to maximize the number of friends who are happy. A friend is happy if their name matches the handle at the time they visit.\n\n**Input:**\n\n* The first line contains two integers,  $n$ (number of events) and $m$ (number of friends).\n* The next $n$ lines describe the events. \n    * A line starting with \"1\" means a handle change.\n    * A line starting with \"2\" followed by a friend's name means that friend visits.\n\n**Output:**\n\nPrint a single integer representing the maximum number of happy friends."}, {"prompt_md5": "8d1a5239", "template_md5": "465699a0", "result": "You are given a list of events: changing a username or a friend visiting the profile.  The goal is to maximize the number of friends who are happy. A friend is happy if their name matches the username when they visit.  You can change the username at any time before a friend visits."}]}