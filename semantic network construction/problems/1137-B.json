{"uid": "1137-B", "url": "https://codeforces.com/contest/1137/problem/B", "tags": ["greedy", " hashing", " strings"], "title": "1137-B", "statement": "B. Camp Scheduletime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputThe new camp by widely-known over the country Spring Programming Camp is going to start soon. Hence, all the team of friendly curators and teachers started composing the camp's schedule. After some continuous discussion, they came up with a schedule $$$s$$$, which can be represented as a binary string, in which the $$$i$$$-th symbol is '1' if students will write the contest in the $$$i$$$-th day and '0' if they will have a day off.At the last moment Gleb said that the camp will be the most productive if it runs with the schedule $$$t$$$ (which can be described in the same format as schedule $$$s$$$). Since the number of days in the current may be different from number of days in schedule $$$t$$$, Gleb required that the camp's schedule must be altered so that the number of occurrences of $$$t$$$ in it as a substring is maximum possible. At the same time,the number of contest days and days off shouldn't change, only their order may change.Could you rearrange the schedule in the best possible way?InputThe first line contains string $$$s$$$ ($$$1 \\\\leqslant |s| \\\\leqslant 500\\\\,000$$$), denoting the current project of the camp's schedule.The second line contains string $$$t$$$ ($$$1 \\\\leqslant |t| \\\\leqslant 500\\\\,000$$$), denoting the optimal schedule according to Gleb.Strings $$$s$$$ and $$$t$$$ contain characters '0' and '1' only.OutputIn the only line print the schedule having the largest number of substrings equal to $$$t$$$. Printed schedule should consist of characters '0' and '1' only and the number of zeros should be equal to the number of zeros in $$$s$$$ and the number of ones should be equal to the number of ones in $$$s$$$.In case there multiple optimal schedules, print any of them.ExamplesInput101101 110Output110110Input10010110 100011Output01100011Input10 11100Output01NoteIn the first example there are two occurrences, one starting from first position and one starting from fourth position.In the second example there is only one occurrence, which starts from third position. Note, that the answer is not unique. For example, if we move the first day (which is a day off) to the last position, the number of occurrences of $$$t$$$ wouldn't change.In the third example it's impossible to make even a single occurrence.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "309b080f", "template_md5": "35d339e4", "result": "You are given two binary strings,  $s$ and $t$, where each character is either '0' (representing a day off) or '1' (representing a contest day). \n\nThe goal is to rearrange the characters in string $s$ to maximize the number of times string $t$ appears as a substring within the rearranged string. The number of '0's and '1's in the rearranged string must remain the same as in the original string $s$.\n\nOutput the rearranged string $s$ that achieves the maximum number of occurrences of $t$. If there are multiple solutions, output any one of them."}, {"prompt_md5": "3e698d5e", "template_md5": "465699a0", "result": "You are given two strings,  's' and 't', where each character is either '0' or '1'.  's' represents the current schedule and 't' represents an ideal schedule.  Rearrange the characters in 's' to maximize the number of times 't' appears as a substring within the rearranged 's'. The number of '0's and '1's in the rearranged 's' must remain the same as in the original 's'."}]}