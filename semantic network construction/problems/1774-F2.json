{"uid": "1774-F2", "url": "https://codeforces.com/contest/1774/problem/F2", "tags": ["binary search", " brute force", " data structures", " implementation"], "title": "1774-F2", "statement": "F2. Magician and Pigs (Hard Version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is the hard version of the problem. The only difference between the two versions is the constraint on $$$n$$$ and $$$x$$$. You can make hacks only if both versions of the problem are solved.Little09 has been interested in magic for a long time, and it's so lucky that he meets a magician! The magician will perform $$$n$$$ operations, each of them is one of the following three:$$$1\\\\ x$$$: Create a pig with $$$x$$$ Health Points.$$$2\\\\ x$$$: Reduce the Health Point of all living pigs by $$$x$$$.$$$3$$$: Repeat all previous operations. Formally, assuming that this is the $$$i$$$-th operation in the operation sequence, perform the first $$$i-1$$$ operations (including \"Repeat\" operations involved) in turn.A pig will die when its Health Point is less than or equal to $$$0$$$.Little09 wants to know how many living pigs there are after all the operations. Please, print the answer modulo $$$998\\\\,244\\\\,353$$$.InputThe first line contains a single integer $$$n$$$ ($$$1\\\\leq n\\\\leq 8\\\\cdot 10^5$$$)  — the number of operations.Each of the following $$$n$$$ lines contains an operation given in the form described in the problem statement. It's guaranteed that $$$1\\\\leq x\\\\leq 10^9$$$ in operations of the first two types.OutputPrint a single integer  — the number of living pigs after all the operations, modulo $$$998\\\\,244\\\\,353$$$.ExamplesInput4 1 8 2 3 3 3Output2Input6 1 5 1 6 2 2 3 1 4 3Output5Input12 2 1 1 15 1 9 3 1 12 2 2 1 13 3 2 1 1 9 1 8 3Output17NoteIn the first example, the operations are equivalent to repeating four times: create a pig with $$$8$$$ Health Points and then reduce the Health Points of all living pigs by $$$3$$$. It is easy to find that there are two living pigs in the end with $$$2$$$ and $$$5$$$ Health Points.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "635035e2", "template_md5": "465699a0", "result": "You are given a sequence of operations. Each operation can be:\n\n* Create a unit with a certain amount of health.\n* Reduce the health of all units by a certain amount.\n* Repeat all previous operations.\n\nDetermine the number of surviving units after all operations, considering units die when their health reaches zero or below.  The answer should be given modulo 998244353."}, {"prompt_md5": "b7d2abfe", "template_md5": "35d339e4", "result": "You are given a sequence of operations. Each operation is one of the following:\n\n* $1\\ x$: Create a pig with $x$ Health Points.\n* $2\\ x$: Reduce the Health Point of all living pigs by $x$.\n* $3$: Repeat all previous operations.\n\nA pig dies when its Health Point is less than or equal to 0.\n\nDetermine the number of living pigs after all the operations, modulo $998244353$. \n\nInput:\n\n* The first line contains an integer $n$ ($1 \\le n \\le 8 \\cdot 10^5$) — the number of operations.\n* Each of the following $n$ lines contains an operation in the format described above. It is guaranteed that $1 \\le x \\le 10^9$ in operations of the first two types.\n\nOutput:\n\n* Print a single integer — the number of living pigs after all the operations, modulo $998244353$."}]}