{"uid": "1853-A", "url": "https://codeforces.com/contest/1853/problem/A", "tags": ["brute force", " greedy", " math"], "title": "1853-A", "statement": "A. Desortingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputCall an array $$$a$$$ of length $$$n$$$sortedif $$$a_1 \\\\leq a_2 \\\\leq \\\\ldots \\\\leq a_{n-1} \\\\leq a_n$$$.Ntarsis has an array $$$a$$$ of length $$$n$$$.He is allowed to perform one type of operation on it (zero or more times):Choose an index $$$i$$$ ($$$1 \\\\leq i \\\\leq n-1$$$).Add $$$1$$$ to $$$a_1, a_2, \\\\ldots, a_i$$$.Subtract $$$1$$$ from $$$a_{i+1}, a_{i+2}, \\\\ldots, a_n$$$.The values of $$$a$$$ can be negative after an operation.Determine the minimum operations needed to make $$$a$$$not sorted.InputEach test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\\\le t \\\\le 100$$$). The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$2 \\\\leq n \\\\leq 500$$$) — the length of the array $$$a$$$.The next line contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\leq a_i \\\\leq 10^9$$$) — the values of array $$$a$$$.It is guaranteed that the sum of $$$n$$$ across all test cases does not exceed $$$500$$$.OutputOutput the minimum number of operations needed to make the arraynot sorted.ExampleInput421 141 8 10 1331 3 231 9 14Output1 2 0 3NoteIn the first case, we can perform $$$1$$$ operation to make the array not sorted:Pick $$$i = 1$$$. The array $$$a$$$ then becomes $$$[2, 0]$$$, which is not sorted.In the second case, we can perform $$$2$$$ operations to make the array not sorted:Pick $$$i = 3$$$. The array $$$a$$$ then becomes $$$[2, 9, 11, 12]$$$.Pick $$$i = 3$$$. The array $$$a$$$ then becomes $$$[3, 10, 12, 11]$$$, which is not sorted.It can be proven that $$$1$$$ and $$$2$$$ operations are the minimal numbers of operations in the first and second test cases, respectively.In the third case, the array isalreadynot sorted, so we perform $$$0$$$ operations.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "1abfa9f9", "template_md5": "35d339e4", "result": "You are given an array of $n$ integers. You can perform the following operation any number of times:\n\n* Choose an index $i$ ($1 \\le i \\le n-1$).\n* Add 1 to the elements at indices 1 through $i$.\n* Subtract 1 from the elements at indices $i+1$ through $n$.\n\nThe goal is to find the minimum number of operations needed to make the array not sorted. \n\n**Input:**\n\n* The first line contains the number of test cases $t$ ($1 \\le t \\le 100$).\n* For each test case:\n    * The first line contains an integer $n$ ($2 \\le n \\le 500$) - the length of the array.\n    * The next line contains $n$ integers $a_1, a_2, ..., a_n$ ($1 \\le a_i \\le 10^9$) - the elements of the array.\n\n**Output:**\n\n* For each test case, output the minimum number of operations needed to make the array not sorted."}, {"prompt_md5": "dfe344b6", "template_md5": "465699a0", "result": "You are given a list of numbers. You can perform an operation that increases the first some numbers in the list and decreases the rest. What is the fewest operations needed to make the list not sorted?"}]}