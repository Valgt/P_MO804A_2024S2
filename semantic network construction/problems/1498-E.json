{"uid": "1498-E", "url": "https://codeforces.com/contest/1498/problem/E", "tags": ["brute force", " graphs", " greedy", " interactive", " sortings"], "title": "1498-E", "statement": "E. Two Housestime limit per test3.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is an interactive problem. Remember to flush your output while communicating with the testing program.You may usefflush(stdout)in C++,system.out.flush()in Java,stdout.flush()in Python orflush(output)in Pascal to flush the output. If you use some other programming language, consult its documentation. You may also refer to the guide on interactive problems:https://codeforces.com/blog/entry/45307.There is a city in which Dixit lives. In the city, there are $$$n$$$ houses. There isexactly one directed road between every pair of houses.For example, consider two houses A and B, then there is a directed road either from A to B or from B to A but not both. The number of roads leading to the $$$i$$$-th house is $$$k_i$$$.Two houses A and B arebi-reachableif A is reachable from BandB is reachable from A. We say that house B is reachable from house A when there is a path from house A to house B.Dixit wants to buy two houses in the city, that is, one for living and one for studying. Of course, he would like to travel from one house to another. So, he wants to find a pair of bi-reachable houses A and B. Among all such pairs, he wants to choose one with the maximum value of $$$|k_A - k_B|$$$, where $$$k_i$$$ is the number of roads leading to the house $$$i$$$. If more than one optimal pair exists, any of them is suitable.Since Dixit is busy preparing CodeCraft, can you help him find the desired pair of houses, or tell him that no such houses exist?In the problem input, you arenotgiven the direction of each road. You are given — for each house — only the number of incoming roads to that house ($$$k_i$$$).You are allowed to ask only one type of query from the judge: give two houses A and B, and the judge answers whether B is reachable from A. There isno upper limit on the number of queries. But,you cannot ask more queries after the judge answers \"Yes\" to any of your queries.Also, you cannot ask the same query twice.Once you have exhausted all your queries (or the judge responds \"Yes\" to any of your queries), your program must output its guess for the two houses and quit.See the Interaction section below for more details.InputThe first line contains a single integer $$$n$$$ ($$$3 \\\\le n \\\\le 500$$$) denoting the number of houses in the city. The next line contains $$$n$$$ space-separated integers $$$k_1, k_2, \\\\dots, k_n$$$ ($$$0 \\\\le k_i \\\\le n - 1$$$), the $$$i$$$-th of them represents the number of incoming roads to the $$$i$$$-th house.InteractionTo ask a query, print \"? A B\" $$$(1 \\\\leq A,B \\\\leq N, A\\\\neq B)$$$. The judge will respond \"Yes\" if house B is reachable from house A, or \"No\" otherwise.To output the final answer, print \"! A B\", where A and B are bi-reachable with the maximum possible value of $$$|k_A - k_B|$$$. If there does not exist such pair of houses A and B, output \"! 0 0\".After outputting the final answer, your program must terminate immediately, otherwise you will receive Wrong Answer verdict.You cannot ask the same query twice.There is no upper limit to the number of queries you ask, but, you cannot ask more queries after the judge answers \"Yes\" to any of your queries.Your program must now output the final answer (\"! A B\" or \"! 0 0\") and terminate.If you ask a query in incorrect format or repeat a previous query, you will get Wrong Answer verdict.After printing a query do not forget to output the end of the line and flush the output. Otherwise, you will get the Idleness limit exceeded error. To do this, use:fflush(stdout)orcout.flush()in C++;System.out.flush()in Java;flush(output)in Pascal;stdout.flush()in Python;see documentation for other languages.ExamplesInput3 1 1 1 YesOutput? 1 2 ! 1 2Input4 1 2 0 3 No No No No No NoOutput? 2 1 ? 1 3 ? 4 1 ? 2 3 ? 4 2 ? 4 3 ! 0 0NoteIn the first sample input, we are given a city of three houses with one incoming road each. The user program asks one query: \"? 1 2\": asking whether we can reach from house $$$1$$$ to house $$$2$$$. The judge responds with \"Yes\". The user program now concludes that this is sufficient information to determine the correct answer. So, it outputs \"! 1 2\" and quits.In the second sample input, the user program queries for six different pairs of houses, and finally answers \"! 0 0\" as it is convinced that no two houses as desired in the question exist in this city.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5d23238b", "template_md5": "35d339e4", "result": "There are $n$ houses, and each house has a certain number of roads leading to it ($k_i$ for the $i$-th house). You can ask the judge if one house is reachable from another.  \n\nYou need to find two houses, A and B, that are reachable from each other (meaning you can go from A to B and from B to A) and have the largest possible difference in the number of roads leading to them ($|k_A - k_B|$). If no such pair exists, output 0 0.\n\nYou can ask the judge a limited number of questions about reachability, but you can't ask the same question twice. Once you get a \"Yes\" answer, you can't ask any more questions.\n\nOutput your answer in the format \"! A B\" where A and B are the houses you found, or \"! 0 0\" if no such pair exists."}, {"prompt_md5": "76cdf3d3", "template_md5": "465699a0", "result": "You are given a list of numbers representing the number of connections each house has. You need to find two houses that are connected to each other (meaning you can travel from one to the other) and have the largest difference in the number of connections. If no such pair exists, output 0 0. You can ask questions to determine if a pair of houses are connected."}]}