{"uid": "1368-D", "url": "https://codeforces.com/contest/1368/problem/D", "tags": ["bitmasks", " greedy", " math"], "title": "1368-D", "statement": "D. AND, OR and square sumtime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputGottfried learned about binary number representation. He then came up with this task and presented it to you.You are given a collection of $$$n$$$ non-negative integers $$$a_1, \\\\ldots, a_n$$$. You are allowed to perform the following operation: choose two distinct indices $$$1 \\\\leq i, j \\\\leq n$$$. If before the operation $$$a_i = x$$$, $$$a_j = y$$$, then after the operation $$$a_i = x~\\\\mathsf{AND}~y$$$, $$$a_j = x~\\\\mathsf{OR}~y$$$, where $$$\\\\mathsf{AND}$$$ and $$$\\\\mathsf{OR}$$$ are bitwise AND and OR respectively (refer to the Notes section for formal description). The operation may be performed any number of times (possibly zero).After all operations are done, compute $$$\\\\sum_{i=1}^n a_i^2$$$ — the sum of squares of all $$$a_i$$$. What is the largest sum of squares you can achieve?InputThe first line contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 2 \\\\cdot 10^5$$$).The second line contains $$$n$$$ integers $$$a_1, \\\\ldots, a_n$$$ ($$$0 \\\\leq a_i < 2^{20}$$$).OutputPrint a single integer — the largest possible sum of squares that can be achieved after several (possibly zero) operations.ExamplesInput1 123Output15129Input3 1 3 5Output51Input2 349525 699050Output1099509530625NoteIn the first sample no operation can be made, thus the answer is $$$123^2$$$.In the second sample we can obtain the collection $$$1, 1, 7$$$, and $$$1^2 + 1^2 + 7^2 = 51$$$.If $$$x$$$ and $$$y$$$ are represented in binary with equal number of bits (possibly with leading zeros), then each bit of $$$x~\\\\mathsf{AND}~y$$$ is set to $$$1$$$ if and only if both corresponding bits of $$$x$$$ and $$$y$$$ are set to $$$1$$$. Similarly, each bit of $$$x~\\\\mathsf{OR}~y$$$ is set to $$$1$$$ if and only if at least one of the corresponding bits of $$$x$$$ and $$$y$$$ are set to $$$1$$$. For example, $$$x = 3$$$ and $$$y = 5$$$ are represented as $$$011_2$$$ and $$$101_2$$$ (highest bit first). Then, $$$x~\\\\mathsf{AND}~y = 001_2 = 1$$$, and $$$x~\\\\mathsf{OR}~y = 111_2 = 7$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "8c79c6bd", "template_md5": "35d339e4", "result": "You are given a list of $n$ non-negative integers $a_1, a_2, ..., a_n$. You can perform the following operation any number of times:\n\n1. Choose two distinct indices $i$ and $j$ from the list.\n2. Set $a_i$ to the bitwise AND of its current value and $a_j$.\n3. Set $a_j$ to the bitwise OR of its current value and $a_i$.\n\nAfter performing these operations, find the largest possible sum of the squares of all the integers in the list.\n\n**Input:**\n\n* The first line contains an integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) representing the number of integers in the list.\n* The second line contains $n$ integers $a_1, a_2, ..., a_n$ ($0 \\le a_i < 2^{20}$).\n\n**Output:**\n\n* Print a single integer representing the largest possible sum of squares. \n\n\n\nLet me know if you'd like me to elaborate on the bitwise AND and OR operations."}, {"prompt_md5": "cf1760ce", "template_md5": "465699a0", "result": "You are given a list of numbers. You can repeatedly choose two different numbers from the list and swap them, where the new values are the bitwise AND and bitwise OR of the original numbers. What is the largest possible sum of squares of all the numbers in the list after performing these swaps?"}]}