{"uid": "1374-C", "url": "https://codeforces.com/contest/1374/problem/C", "tags": ["greedy", " strings"], "title": "1374-C", "statement": "C. Move Bracketstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a bracket sequence $$$s$$$ of length $$$n$$$, where $$$n$$$ is even (divisible by two). The string $$$s$$$ consists of $$$\\\\frac{n}{2}$$$ opening brackets '(' and $$$\\\\frac{n}{2}$$$ closing brackets ')'.In one move, you can chooseexactly one bracketand move it to the beginning of the string or to the end of the string (i.e. you choose some index $$$i$$$, remove the $$$i$$$-th character of $$$s$$$ and insert it before or after all remaining characters of $$$s$$$).Your task is to find the minimum number of moves required to obtainregular bracket sequencefrom $$$s$$$. It can be proved that the answer always exists under the given constraints.Recall what the regular bracket sequence is:\"()\" is regular bracket sequence;if $$$s$$$ is regular bracket sequence then \"(\" + $$$s$$$ + \")\" is regular bracket sequence;if $$$s$$$ and $$$t$$$ are regular bracket sequences then $$$s$$$ + $$$t$$$ is regular bracket sequence.For example, \"()()\", \"(())()\", \"(())\" and \"()\" are regular bracket sequences, but \")(\", \"()(\" and \")))\" are not.You have to answer $$$t$$$ independent test cases.InputThe first line of the input contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 2000$$$) — the number of test cases. Then $$$t$$$ test cases follow.The first line of the test case contains one integer $$$n$$$ ($$$2 \\\\le n \\\\le 50$$$) — the length of $$$s$$$. It is guaranteed that $$$n$$$ is even. The second line of the test case containg the string $$$s$$$ consisting of $$$\\\\frac{n}{2}$$$ opening and $$$\\\\frac{n}{2}$$$ closing brackets.OutputFor each test case, print the answer — the minimum number of moves required to obtainregular bracket sequencefrom $$$s$$$. It can be proved that the answer always exists under the given constraints.ExampleInput4 2 )( 4 ()() 8 ())()()( 10 )))((((())Output1 0 1 3NoteIn the first test case of the example, it is sufficient to move the first bracket to the end of the string.In the third test case of the example, it is sufficient to move the last bracket to the beginning of the string.In the fourth test case of the example, we can choose last three openning brackets, move them to the beginning of the string and obtain \"((()))(())\".", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "eaf43d0a", "template_md5": "35d339e4", "result": "You are given a string of $n$ brackets, where $n$ is even. The string contains an equal number of opening brackets '(' and closing brackets ')'.\n\nYou can perform the following operation:\n\n* Choose one bracket in the string.\n* Move it to the beginning of the string.\n* Move it to the end of the string.\n\nThe goal is to find the minimum number of operations required to make the string a valid bracket sequence.\n\nA valid bracket sequence follows these rules:\n\n*  \"()\" is a valid bracket sequence.\n* If $s$ is a valid bracket sequence, then \"($\" + $s$ + \")\" is also a valid bracket sequence.\n* If $s$ and $t$ are valid bracket sequences, then $s$ + $t$ is also a valid bracket sequence.\n\nFor example, \"()()\", \"(())()\", \"(())\", and \"()\" are valid bracket sequences.  \")(\", \"()(\", and \")))\" are not valid bracket sequences.\n\n\n\nYou are given $t$ test cases. For each test case, you will be given the string of brackets.  Output the minimum number of operations required to make the string a valid bracket sequence."}, {"prompt_md5": "63e72675", "template_md5": "465699a0", "result": "You are given a string of parentheses. You can move any one parenthesis to the beginning or end of the string in one step. What is the fewest steps needed to make the string a valid sequence of parentheses?"}]}