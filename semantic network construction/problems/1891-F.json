{"uid": "1891-F", "url": "https://codeforces.com/contest/1891/problem/F", "tags": ["data structures", " dfs and similar", " trees"], "title": "1891-F", "statement": "F. A Growing Treetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a rooted tree with the root at vertex $$$1$$$, initially consisting of a single vertex. Each vertex has a numerical value, initially set to $$$0$$$. There are also $$$q$$$ queries of two types:The first type: add a child vertex with the number $$$sz + 1$$$ to vertex $$$v$$$, where $$$sz$$$ is the current size of the tree. The numerical value of the new vertex will be $$$0$$$.The second type: add $$$x$$$ to the numerical values of all vertices in the subtree of vertex $$$v$$$.After all queries, output the numerical value of all of the vertices in the final tree.InputThe first line contains a single integer $$$T$$$ ($$$1 \\\\leq T \\\\leq 10^4$$$) — the number of test cases. The descriptions of the test cases follow.The first line of each test case contains a single integer $$$q$$$ ($$$1 \\\\leq q \\\\leq 5 \\\\cdot 10^5$$$) — the number of queries.The following $$$q$$$ lines can fall into two cases:The first type of query: The $$$i$$$-th line contains two integers $$$t_i$$$ ($$$t_i = 1$$$), $$$v_i$$$. You need to add a child with the number $$$sz + 1$$$ to vertex $$$v_i$$$, where $$$sz$$$ is the current size of the tree. It is guaranteed that $$$1 \\\\leq v_i \\\\leq sz$$$.The second type of query: The $$$i$$$-th line contains three integers $$$t_i$$$ ($$$t_i = 2$$$), $$$v_i$$$, $$$x_i$$$ ($$$-10^9 \\\\leq x_i \\\\leq 10^9$$$). You need to add $$$x_i$$$ to all numerical values of vertices in the subtree of $$$v_i$$$. It is guaranteed that $$$1 \\\\leq v_i \\\\leq sz$$$, where $$$sz$$$ is the current size of the tree.It is guaranteed that the sum of $$$q$$$ across all test cases does not exceed $$$5 \\\\cdot 10^5$$$.OutputFor each test case, output the numerical value of each vertex of the final tree after all queries have been performed.ExampleInput392 1 31 12 2 11 12 3 21 32 1 41 32 3 252 1 11 12 1 -11 12 1 151 11 12 1 12 1 32 2 10Output7 5 8 6 2  1 0 1  4 14 4NoteIn the first case, the final tree with the assigned numerical values will look like this:The final tree with the assigned numerical values", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d4e24a8a", "template_md5": "35d339e4", "result": "You are given a tree with a root at vertex 1. Each vertex has a numerical value, initially 0. There are $q$ queries of two types:\n\n1. **Add a child:** Add a new vertex with a value of 0 as a child of vertex $v$. The new vertex will be numbered $sz + 1$, where $sz$ is the current size of the tree.\n\n2. **Add to subtree:** Add $x$ to the numerical value of all vertices in the subtree of vertex $v$.\n\nAfter all queries, output the numerical value of each vertex in the tree. \n\n\nInput:\n\n* The first line contains the number of test cases, $T$.\n* For each test case:\n    * The first line contains the number of queries, $q$.\n    * The following $q$ lines describe the queries:\n        * For type 1 query: Two integers, $t_i = 1$ and $v_i$.\n        * For type 2 query: Three integers, $t_i = 2$, $v_i$, and $x_i$.\n\nOutput:\n\n* For each test case, output the numerical value of each vertex in the tree after all queries."}, {"prompt_md5": "ef067ff7", "template_md5": "465699a0", "result": "You are given a tree that starts with one node. You can add new nodes as children of existing nodes and add a value to all nodes in a subtree. After a series of these operations, output the value of each node in the tree."}]}