{"uid": "1749-C", "url": "https://codeforces.com/contest/1749/problem/C", "tags": ["binary search", " data structures", " games", " greedy", " implementation"], "title": "1749-C", "statement": "C. Number Gametime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlice and Bob are playing a game. They have an array of positive integers $$$a$$$ of size $$$n$$$.Before starting the game, Alice chooses an integer $$$k \\\\ge 0$$$. The game lasts for $$$k$$$ stages, the stages are numbered from $$$1$$$ to $$$k$$$. During the $$$i$$$-th stage, Alice must remove an element from the array that is less than or equal to $$$k - i + 1$$$. After that, if the array is not empty, Bob must add $$$k - i + 1$$$ to an arbitrary element of the array. Note that both Alice's move and Bob's move are two parts of the same stage of the game. If Alice can't delete an element during some stage, she loses. If the $$$k$$$-th stage ends and Alice hasn't lost yet, she wins.Your task is to determine the maximum value of $$$k$$$ such that Alice can win if both players play optimally. Bob plays against Alice, so he tries to make her lose the game, if it's possible.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 100$$$) — the number of test cases.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 100$$$) — the size of the array $$$a$$$.The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\le a_i \\\\le n$$$).OutputFor each test case, print one integer — the maximum value of $$$k$$$ such that Alice can win if both players play optimally.ExampleInput431 1 244 4 4 41151 3 2 1 1Output2 0 1 3", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d9097afc", "template_md5": "35d339e4", "result": "You are given an array of positive integers.  Two players take turns.\n\n* **Player 1's turn:**  Remove an element from the array that is less than or equal to a decreasing number ($k$, $k-1$, $k-2$, etc.). If no such element exists, Player 1 loses.\n* **Player 2's turn:** Add the same decreasing number ($k$, $k-1$, $k-2$, etc.) to an arbitrary element in the array.\n\nThe game continues for $k$ turns. If Player 1 doesn't lose before the $k$th turn, Player 1 wins.\n\nFind the largest possible value of $k$ such that Player 1 can guarantee a win if both players play optimally."}, {"prompt_md5": "ab1d79fa", "template_md5": "465699a0", "result": "Two players take turns modifying a list of numbers.  The first player can remove a number from the list if it's less than or equal to a decreasing counter. The second player can add the counter to any number in the list. The first player wins if they can keep playing until the counter reaches zero. Determine the largest counter value that allows the first player to always win, assuming both players play optimally."}]}