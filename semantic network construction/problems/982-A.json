{"uid": "982-A", "url": "https://codeforces.com/contest/982/problem/A", "tags": ["brute force", " constructive algorithms"], "title": "982-A", "statement": "A. Rowtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou're given a row with $$$n$$$ chairs. We call a seating of people \"maximal\" if the two following conditions hold:There are no neighbors adjacent to anyone seated.It's impossible to seat one more person without violating the first rule.The seating is given as a string consisting of zeros and ones ($$$0$$$ means that the corresponding seat is empty, $$$1$$$ — occupied). The goal is to determine whether this seating is \"maximal\".Note that the first and last seats arenotadjacent (if $$$n \\\\ne 2$$$).InputThe first line contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 1000$$$) — the number of chairs.The next line contains a string of $$$n$$$ characters, each of them is either zero or one, describing the seating.OutputOutput \"Yes\" (without quotation marks) if the seating is \"maximal\". Otherwise print \"No\".You are allowed to print letters in whatever case you'd like (uppercase or lowercase).ExamplesInput3101OutputYesInput41011OutputNoInput510001OutputNoNoteIn sample case one the given seating is maximal.In sample case two the person at chair three has a neighbour to the right.In sample case three it is possible to seat yet another person into chair three.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ad752d7f", "template_md5": "35d339e4", "result": "You are given a row of $n$ chairs. Each chair can be either empty (0) or occupied (1).  \n\nDetermine if the arrangement of people in the chairs is \"maximal\". A maximal arrangement has the following properties:\n\n1. No two occupied chairs are next to each other.\n2. You cannot fit another person into the row without breaking the first rule.\n\n**Input:**\n\n* The first line contains an integer $n$ ($1 \\le n \\le 1000$) representing the number of chairs.\n* The second line contains a string of $n$ characters, where each character is either 0 or 1, representing the seating arrangement.\n\n**Output:**\n\nPrint \"Yes\" if the seating arrangement is maximal. Otherwise, print \"No\"."}, {"prompt_md5": "470c9767", "template_md5": "465699a0", "result": "You are given a row of seats. Some seats are occupied (1) and some are empty (0).  Determine if it's impossible to add another person to the row without having two people sitting next to each other."}]}