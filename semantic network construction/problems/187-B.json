{"uid": "187-B", "url": "https://codeforces.com/contest/187/problem/B", "tags": ["dp", " shortest paths"], "title": "187-B", "statement": "B. AlgoRacetime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutPMP is getting a warrior. He is practicing a lot, but the results are not acceptable yet. This time instead of programming contests, he decided to compete in a car racing to increase the spirit of victory. He decides to choose a competition that also exhibits algorithmic features.AlgoRace is a special league of car racing where different teams compete in a country ofncities. Cities are numbered1throughn. Every two distinct cities in the country are connected with one bidirectional road. Each competing team should introduce one driver and a set of cars.The competition is held inrrounds. Ini-th round, drivers will start at citysiand finish at cityti. Drivers are allowed to change their cars at mostkitimes. Changing cars can take place in any city in no time. One car can be used multiple times in one round, but total number of changes should not exceedki. Drivers can freely choose their path to destination.PMP has preparedmtype of purpose-built cars. Beside for PMP’s driving skills, depending on properties of the car and the road, a car traverses each road in each direction in different times.PMP Warriors wants to devise best strategies of choosing car and roads in each round to maximize the chance of winning the cup. For each round they want to find the minimum time required to finish it.InputThe first line contains three space-separated integersn,m,r(2 ≤n≤ 60, 1 ≤m≤ 60, 1 ≤r≤ 105) — the number of cities, the number of different types of cars and the number of rounds in the competition, correspondingly.Nextmsets ofn×nmatrices of integers between0to106(inclusive) will follow — describing the time one car requires to traverse different roads. Thek-th integer inj-th line of thei-th set is the time thati-th car requires to traverse the road fromj-th city tok-th city. These matrices are not necessarily symmetric, but their diagonal is always zero.Nextrlines contain description of the rounds. Thei-th of these lines contains space-separated integerssi,ti,ki(1 ≤si,ti≤n,si≠ti, 0 ≤ki≤ 1000) — the number of starting city, finishing city and the number of possible car changes ini-th round, correspondingly.OutputFor each round you should print the minimum required time to complete the round in a single line.ExamplesInput4 2 30 1 5 62 0 3 61 3 0 16 6 7 00 3 5 62 0 1 61 3 0 26 6 7 01 4 21 4 11 4 3Output343Input4 2 30 7 3 38 0 10 51 1 0 48 9 2 00 3 3 97 0 4 93 8 0 44 8 9 02 3 32 1 31 2 2Output453NoteIn the first sample, in all rounds PMP goes from city #1 to city #2, then city #3 and finally city #4. But the sequences of types of the cars he uses are (1, 2, 1) in the first round and (1, 2, 2) in the second round. In the third round, although he can change his car three times, he uses the same strategy as the first round which only needs two car changes.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ee21e974", "template_md5": "35d339e4", "result": "There are $n$ cities connected by bidirectional roads. Each road has a different travel time depending on the car used. \n\nThere are $m$ types of cars, and each car has a time matrix representing the travel time for each road. The matrix is not necessarily symmetric.\n\nThere are $r$ rounds of racing. In each round, a driver starts at city $s_i$, finishes at city $t_i$, and can change cars at most $k_i$ times.\n\nFor each round, find the minimum time required to complete the race. \n\n\nInput:\n\n* $n$, $m$, $r$ (number of cities, number of car types, number of rounds)\n* $m$ matrices of size $n \\times n$ representing the travel time for each car type.\n* $r$ lines, each containing $s_i$, $t_i$, $k_i$ (starting city, finishing city, maximum car changes).\n\nOutput:\n\n* $r$ lines, each containing the minimum time required to complete a round."}, {"prompt_md5": "a94153b5", "template_md5": "465699a0", "result": "You are given a map with cities connected by roads. Each road has different travel times depending on the type of vehicle used.  You need to find the fastest way to travel between a starting city and a destination city for a series of trips, allowing for a limited number of vehicle changes per trip."}]}