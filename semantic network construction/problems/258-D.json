{"uid": "258-D", "url": "https://codeforces.com/contest/258/problem/D", "tags": ["dp", " math", " probabilities"], "title": "258-D", "statement": "D. Little Elephant and Broken Sortingtime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutThe Little Elephant loves permutations of integers from1tonvery much. But most of all he loves sorting them. To sort a permutation, the Little Elephant repeatedly swaps some elements. As a result, he must receive a permutation1, 2, 3, ...,n.This time the Little Elephant has permutationp1,p2, ...,pn. Its sorting program needs to make exactlymmoves, during thei-th move it swaps elements that are at that moment located at theai-th and thebi-th positions. But the Little Elephant's sorting program happened to break down and now on every step it can equiprobably either do nothing or swap the required elements.Now the Little Elephant doesn't even hope that the program will sort the permutation, but he still wonders: if he runs the program and gets some permutation, how much will the result of sorting resemble the sorted one? For that help the Little Elephant find the mathematical expectation of the number of permutation inversions after all moves of the program are completed.We'll call a pair of integersi,j(1 ≤i<j≤n)aninversionin permutatuonp1,p2, ...,pn, if the following inequality holds:pi>pj.InputThe first line contains two integersnandm(1 ≤n,m≤ 1000,n> 1)— the permutation size and the number of moves. The second line containsndistinct integers, not exceedingn— the initial permutation. Nextmlines each contain two integers: thei-th line contains integersaiandbi(1 ≤ai,bi≤n,ai≠bi)— the positions of elements that were changed during thei-th move.OutputIn the only line print a single real number — the answer to the problem. The answer will be considered correct if its relative or absolute error does not exceed10- 6.ExamplesInput2 11 21 2Output0.500000000Input4 31 3 2 41 22 31 4Output3.000000000", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0998f6c9", "template_md5": "35d339e4", "result": "You are given a permutation of integers from 1 to $n$.  A sorting program will make exactly $m$ moves. On each move, it will either do nothing or swap the elements at positions $a_i$ and $b_i$.  However, on each move, the program has a 50% chance of doing nothing.\n\nWhat is the expected number of inversions in the permutation after all the moves are completed?\n\nAn inversion in a permutation is a pair of integers $(i, j)$ where $1 \\le i < j \\le n$ and $p_i > p_j$."}, {"prompt_md5": "a0c8c4b6", "template_md5": "465699a0", "result": "You are given a list of numbers and a set of instructions to swap pairs of numbers in the list. Each instruction has a 50% chance of being executed. What is the average number of times you will need to rearrange the numbers in the list to be in order after following the instructions?"}]}