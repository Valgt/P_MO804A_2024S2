{"uid": "396-C", "url": "https://codeforces.com/contest/396/problem/C", "tags": ["data structures", " graphs", " trees"], "title": "396-C", "statement": "C. On Changing Treetime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutYou are given a rooted tree consisting ofnvertices numbered from1ton. The root of the tree is a vertex number1.Initially all vertices contain number0. Then comeqqueries, each query has one of the two types:The format of the query:1vxk. In response to the query, you need to add to the number at vertexvnumberx; to the numbers at thedescendantsof vertexvat distance1, addx-k; and so on, to the numbers written in the descendants of vertexvat distancei, you need to addx- (i·k). The distance between two vertices is the number of edges in the shortest path between these vertices.The format of the query:2v. In reply to the query you should print the number written in vertexvmodulo1000000007(109+ 7).Process the queries given in the input.InputThe first line contains integern(1 ≤n≤ 3·105) — the number of vertices in the tree. The second line containsn- 1integersp2,p3, ...pn(1 ≤pi<i), wherepiis the number of the vertex that is the parent of vertexiin the tree.The third line contains integerq(1 ≤q≤ 3·105) — the number of queries. Nextqlines contain the queries, one per line. The first number in the line istype. It represents the type of the query. Iftype= 1, then next follow space-separated integersv,x,k(1 ≤v≤n;0 ≤x< 109+ 7;0 ≤k< 109+ 7). Iftype= 2, then next follows integerv(1 ≤v≤n) — the vertex where you need to find the value of the number.OutputFor each query of the second type print on a single line the number written in the vertex from the query. Print the number modulo1000000007(109+ 7).ExamplesInput31 131 1 2 12 12 2Output21NoteYou can read about a rooted tree here:http://en.wikipedia.org/wiki/Tree_(graph_theory).", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "8deb9f7a", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices numbered from 1 to $n$. The root of the tree is vertex 1.  Initially, all vertices have a value of 0.\n\nYou will be given $q$ queries. Each query can be one of two types:\n\n* **Type 1:**  \n   -  You are given three integers: $v$, $x$, and $k$. \n   -  Add $x$ to the value at vertex $v$.\n   -  Add $x-k$ to the values at all descendants of vertex $v$ that are one distance away.\n   -  Add $x-(2*k)$ to the values at all descendants of vertex $v$ that are two distances away.\n   -  And so on, until you reach the furthest descendants of vertex $v$.\n\n* **Type 2:**\n   - You are given an integer $v$.\n   - Print the value at vertex $v$ modulo 1000000007 ($10^9 + 7$).\n\nProcess all the queries and print the results."}, {"prompt_md5": "9f630341", "template_md5": "465699a0", "result": "You are given a tree-like structure with numbered nodes.  You can perform two types of operations:\n\n1. **Add values:** Add a value to a node and distribute decreasing values to its children and grandchildren, and so on.\n2. **Get value:**  Retrieve the value stored in a specific node. \n\n\nYou need to process a series of these operations and output the result of the \"get value\" operations."}]}