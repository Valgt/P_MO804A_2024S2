{"uid": "1830-A", "url": "https://codeforces.com/contest/1830/problem/A", "tags": ["dfs and similar", " dp", " graphs", " trees"], "title": "1830-A", "statement": "A. Copil Copac Draws Treestime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputCopil Copac is given a list of $$$n-1$$$ edges describing a tree of $$$n$$$ vertices. He decides to draw it using the following algorithm:Step $$$0$$$: Draws the first vertex (vertex $$$1$$$). Go to step $$$1$$$.Step $$$1$$$: For every edge in the input, in order: if the edge connects an already drawn vertex $$$u$$$ to an undrawn vertex $$$v$$$, he will draw the undrawn vertex $$$v$$$ and the edge. After checking every edge, go to step $$$2$$$.Step $$$2$$$: If all the vertices are drawn, terminate the algorithm. Else, go to step $$$1$$$.The number of readings is defined as the number of times Copil Copac performs step $$$1$$$.Find the number of readings needed by Copil Copac to draw the tree.InputEach test contains multiple test cases. The first line of input contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$) — the number of test cases. The description of test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the number of vertices of the tree.The following $$$n - 1$$$ lines of each test case contain two integers $$$u_i$$$ and $$$v_i$$$ ($$$1 \\\\le u_i, v_i \\\\le n$$$, $$$u_i \\\\neq v_i$$$) — indicating that $$$(u_i,v_i)$$$ is the $$$i$$$-th edge in the list. It is guaranteed that the given edges form a tree.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output the number of readings Copil Copac needs to draw the tree.ExampleInput264 51 31 23 41 675 62 42 71 31 24 5Output2 3NoteIn the first test case:After the first reading, the tree will look like this:After the second reading:Therefore, Copil Copac needs $$$2$$$ readings to draw the tree.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "dae2581a", "template_md5": "35d339e4", "result": "You are given a list of $n-1$ edges that describe a tree with $n$ vertices.  The tree is drawn in a specific way:\n\n1. Draw the first vertex (vertex 1).\n2. For each edge in the list:\n    * If the edge connects a drawn vertex to an undrawn vertex, draw the undrawn vertex and the edge.\n3. Repeat step 2 until all vertices are drawn.\n\nThe number of readings is the number of times step 2 is performed.\n\nFind the number of readings needed to draw the tree.\n\nInput:\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains the number of vertices, $n$.\n    * The next $n-1$ lines each contain two integers, $u_i$ and $v_i$, representing an edge between vertices $u_i$ and $v_i$.\n\nOutput:\n\nFor each test case, output the number of readings needed to draw the tree."}, {"prompt_md5": "5385d976", "template_md5": "465699a0", "result": "You are given a list of connections between points.  The connections form a tree structure.  A process is described that draws the points one by one, following the connections.  Find the minimum number of steps this process takes to draw all the points."}]}