{"uid": "1184-E2", "url": "https://codeforces.com/contest/1184/problem/E2", "tags": ["dfs and similar", " graphs", " shortest paths", " trees"], "title": "1184-E2", "statement": "E2. Daleks' Invasion (medium)time limit per test15 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter a successful field test, Heidi is considering deploying a trap along some Corridor, possibly not the first one. She wants to avoid meeting the Daleks inside the Time Vortex, so for abundance of caution she considers placing the trapsonlyalong those Corridors that arenotgoing to be used according to the current Daleks' plan – which is to use a minimum spanning tree of Corridors. Heidi knows that all energy requirements for different Corridors are now different, and that the Daleks have a single unique plan which they are intending to use.Your task is to calculate the number $$$E_{max}(c)$$$, which is defined in the same way as in the easy version – i.e., the largest $$$e \\\\le 10^9$$$ such that if we changed the energy of corridor $$$c$$$ to $$$e$$$, the Daleks might use it – but now foreverycorridor that Heidi considers.InputThe first line: number $$$n$$$ of destinations, number $$$m$$$ of Time Corridors ($$$2 \\\\leq n \\\\leq 10^5$$$, $$$n - 1 \\\\leq m \\\\leq 10^6$$$). The next $$$m$$$ lines: destinations $$$a$$$, $$$b$$$ and energy $$$e$$$ ($$$1 \\\\leq a, b \\\\leq n$$$, $$$a \\\\neq b$$$, $$$0 \\\\leq e \\\\leq 10^9$$$).No pair $$$\\\\{a, b\\\\}$$$ will repeat. The graph is guaranteed to be connected. All energy requirements $$$e$$$ are distinct.OutputOutput $$$m-(n-1)$$$ lines, each containing one integer: $$$E_{max}(c_i)$$$ for the $$$i$$$-th Corridor $$$c_i$$$ from the input that is not part of the current Daleks' plan (minimum spanning tree).ExampleInput3 31 2 82 3 33 1 4Output4NoteIf $$$m = n-1$$$, then you need not output anything.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6fc27278", "template_md5": "35d339e4", "result": "Given a connected graph with $n$ nodes and $m$ edges, each edge having a distinct positive weight. Find for each edge not in the minimum spanning tree of the graph, the largest weight it can have while still being part of some spanning tree. \n\nInput:\n\n* The first line contains two integers, $n$ and $m$, representing the number of nodes and edges, respectively.\n* The next $m$ lines each contain three integers, $a$, $b$, and $e$, representing an edge between nodes $a$ and $b$ with weight $e$.\n\nOutput:\n\n* Output $m-(n-1)$ lines, each containing an integer representing the largest weight an edge not in the minimum spanning tree can have while still being part of some spanning tree. If $m=n-1$, output nothing."}, {"prompt_md5": "e48ccd7a", "template_md5": "465699a0", "result": "Given a connected graph with distinct edge weights, find the maximum weight each edge can have before it becomes part of the minimum spanning tree."}]}