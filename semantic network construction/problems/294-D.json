{"uid": "294-D", "url": "https://codeforces.com/contest/294/problem/D", "tags": ["brute force", " implementation", " number theory"], "title": "294-D", "statement": "D. Shaass and Painter Robottime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutShaass thinks a kitchen with all white floor tiles is so boring. His kitchen floor is made ofn·msquare tiles forming an×mrectangle. Therefore he's decided to color some of the tiles in black so that the floor looks like a checkerboard, which is no two side-adjacent tiles should have the same color.Shaass wants to use a painter robot to color the tiles. In the beginning the robot is standing in a border tile(xs,ys)facing a diagonal direction (i.e. upper-left, upper-right, down-left or down-right). As the robot walks in the kitchen he paints every tile he passes even if it's painted before. Painting each tile consumes one unit of black paint. If at any moment the robot hits a wall of the kitchen he changes his direction according the reflection rules. Note that a tile gets painted when the robot enters the tile from another tile, in other words changing direction in the same tile doesn't lead to any painting. The first tile the robot is standing on, is also painted.The robot stops painting the first moment the floor is checkered. Given the dimensions of the kitchen and the position of the robot, find out the amount of paint the robot consumes before it stops painting the floor.Let's consider an examples depicted below.If the robot starts at tile number 1 (the tile(1, 1)) of the left grid heading to down-right it'll pass tiles 1354236 and consumes 7 units of black paint on his way until he stops at tile number 6. But if it starts at tile number 1 in the right grid heading to down-right it will get stuck in a loop painting tiles 1, 2, and 3.InputThe first line of the input contains two integersnandm,(2 ≤n,m≤ 105). The second line contains two integersxsandys(1 ≤xs≤n, 1 ≤ys≤m)and the direction robot is facing initially. Direction is one of the strings: \"UL\" (upper-left direction), \"UR\" (upper-right), \"DL\" (down-left) or \"DR\" (down-right).Note, that record(xs,ys)denotes the tile that is located at thexs-th row from the top and at theys-th column from the left of the kitchen.It's guaranteed that the starting position will be a border tile (a tile with less than four side-adjacent tiles).OutputPrint the amount of paint the robot consumes to obtain a checkered kitchen floor. Or print-1if it never happens.Please do not use the%lldspecificator to read or write 64-bit integers in С++. It is preferred to use thecin,coutstreams or the%I64dspecificator.ExamplesInput3 41 1 DROutput7Input3 43 3 DROutput11Input3 31 1 DROutput-1Input3 31 2 DLOutput4", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "31480c54", "template_md5": "35d339e4", "result": "You are given a rectangular floor made of $n \\times m$ tiles.  The goal is to color the floor in a checkerboard pattern using a robot. The robot starts at a border tile ($x_s$, $y_s$) facing one of four directions: up-left, up-right, down-left, or down-right. The robot moves one tile at a time, painting each tile it enters. When the robot hits a wall, it changes direction according to the following rules:\n\n* Up-left becomes down-left\n* Up-right becomes down-right\n* Down-left becomes up-left\n* Down-right becomes up-right\n\nThe robot continues painting until the floor is checkered (no two adjacent tiles have the same color).\n\nGiven the dimensions of the floor ($n$, $m$), the starting position ($x_s$, $y_s$), and the initial direction, determine the amount of paint the robot consumes. If the robot gets stuck in a loop and never creates a checkered pattern, output -1."}, {"prompt_md5": "fdfa5747", "template_md5": "465699a0", "result": "A robot paints a rectangular floor with black paint, starting at a corner tile and moving diagonally. The robot paints every tile it passes, and changes direction when it hits a wall.  The goal is to find the amount of paint used until the floor has a checkerboard pattern (no two adjacent tiles are the same color)."}]}