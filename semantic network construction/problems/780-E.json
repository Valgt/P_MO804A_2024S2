{"uid": "780-E", "url": "https://codeforces.com/contest/780/problem/E", "tags": ["constructive algorithms", " dfs and similar", " graphs"], "title": "780-E", "statement": "E. Underground Labtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe evil Bumbershoot corporation produces clones for gruesome experiments in a vast underground lab. On one occasion, the corp cloned a boy Andryusha who was smarter than his comrades. Immediately Andryusha understood that something fishy was going on there. He rallied fellow clones to go on a feud against the evil corp, and they set out to find an exit from the lab. The corp had to reduce to destroy the lab complex.The lab can be pictured as a connected graph withnvertices andmedges.kclones of Andryusha start looking for an exit in some of the vertices. Each clone can traverse any edge once per second. Any number of clones are allowed to be at any vertex simultaneously. Each clone is allowed to stop looking at any time moment, but he must look at his starting vertex at least. The exit can be located at any vertex of the lab, hence each vertex must be visited by at least one clone.Each clone can visit at mostvertices before the lab explodes.Your task is to choose starting vertices and searching routes for the clones. Each route can have at mostvertices.InputThe first line contains three integersn,m, andk(1 ≤n≤ 2·105,n- 1 ≤m≤ 2·105,1 ≤k≤n) — the number of vertices and edges in the lab, and the number of clones.Each of the nextmlines contains two integersxiandyi(1 ≤xi,yi≤n) — indices of vertices connected by the respective edge. The graph is allowed to have self-loops and multiple edges.The graph is guaranteed to be connected.OutputYou should printklines.i-th of these lines must start with an integerci() — the number of vertices visited byi-th clone, followed byciintegers — indices of vertices visited by this clone in the order of visiting. You have to print each vertex every time it is visited, regardless if it was visited earlier or not.It is guaranteed that a valid answer exists.ExamplesInput3 2 12 13 1Output3 2 1 3Input5 4 21 21 31 41 5Output3 2 1 33 4 1 5NoteIn the first sample case there is only one clone who may visit vertices in order (2, 1, 3), which fits the constraint of 6 vertices per clone.In the second sample case the two clones can visited vertices in order (2, 1, 3) and (4, 1, 5), which fits the constraint of 5 vertices per clone.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ad62b4eb", "template_md5": "35d339e4", "result": "You are given a connected graph with $n$ vertices and $m$ edges.  There are $k$ starting points in the graph. Each starting point represents a search agent. Each agent can travel along any edge once per unit of time.  \n\nEach agent must start and end at its starting point.  Each agent can visit at most $v$ vertices before a time limit expires.\n\nYour task is to determine a set of paths for each agent such that every vertex in the graph is visited at least once.\n\n**Input:**\n\n* The first line contains three integers: $n$, $m$, and $k$ ($1 \\le n \\le 2 \\cdot 10^5$, $n-1 \\le m \\le 2 \\cdot 10^5$, $1 \\le k \\le n$).\n* The next $m$ lines each contain two integers $x_i$ and $y_i$ ($1 \\le x_i, y_i \\le n$), representing an edge between vertices $x_i$ and $y_i$.\n\n**Output:**\n\n* Print $k$ lines.\n* The $i$-th line starts with an integer $c_i$ (the number of vertices visited by the $i$-th agent), followed by $c_i$ integers representing the order in which the $i$-th agent visits the vertices."}, {"prompt_md5": "bff07a77", "template_md5": "465699a0", "result": "You are given a connected graph with a certain number of nodes and edges.  You need to determine starting points and paths for a given number of explorers to visit every node in the graph. Each explorer can visit a limited number of nodes before they must return to their starting point.  You need to find a set of paths that allow all nodes to be visited."}]}