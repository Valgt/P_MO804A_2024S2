{"uid": "1250-A", "url": "https://codeforces.com/contest/1250/problem/A", "tags": ["implementation"], "title": "1250-A", "statement": "A. Berstagramtime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputPolycarp recently signed up to a new social network Berstagram. He immediately published $$$n$$$ posts there. He assigned numbers from $$$1$$$ to $$$n$$$ to all posts and published them one by one. So, just after publishing Polycarp's news feed contained posts from $$$1$$$ to $$$n$$$ — the highest post had number $$$1$$$, the next one had number $$$2$$$, ..., the lowest post had number $$$n$$$.After that he wrote down all likes from his friends. Likes were coming consecutively from the $$$1$$$-st one till the $$$m$$$-th one. You are given a sequence $$$a_1, a_2, \\\\dots, a_m$$$ ($$$1 \\\\le a_j \\\\le n$$$), where $$$a_j$$$ is the post that received the $$$j$$$-th like.News feed in Berstagram works in the following manner. Let's assume the $$$j$$$-th like was given to post $$$a_j$$$. If this post is not the highest (first) one then it changes its position with the one above. If $$$a_j$$$ is the highest post nothing changes.For example, if $$$n=3$$$, $$$m=5$$$ and $$$a=[3,2,1,3,3]$$$, then Polycarp's news feed had the following states:before the first like: $$$[1, 2, 3]$$$;after the first like: $$$[1, 3, 2]$$$;after the second like: $$$[1, 2, 3]$$$;after the third like: $$$[1, 2, 3]$$$;after the fourth like: $$$[1, 3, 2]$$$;after the fifth like: $$$[3, 1, 2]$$$.Polycarp wants to know the highest (minimum) and the lowest (maximum) positions for each post. Polycarp considers all moments of time, including the moment \"before all likes\".InputThe first line contains two integer numbers $$$n$$$ and $$$m$$$ ($$$1 \\\\le n \\\\le 10^5$$$, $$$1 \\\\le m \\\\le 4 \\\\cdot10^5$$$) — number of posts and number of likes.The second line contains integers $$$a_1, a_2, \\\\dots, a_m$$$ ($$$1 \\\\le a_j \\\\le n$$$), where $$$a_j$$$ is the post that received the $$$j$$$-th like.OutputPrint $$$n$$$ pairs of integer numbers. The $$$i$$$-th line should contain the highest (minimum) and the lowest (maximum) positions of the $$$i$$$-th post. You should take into account positions at all moments of time: before all likes, after each like and after all likes. Positions are numbered from $$$1$$$ (highest) to $$$n$$$ (lowest).ExamplesInput3 5 3 2 1 3 3Output1 2 2 3 1 3Input10 6 7 3 5 7 3 6Output1 2 2 3 1 3 4 7 4 5 6 7 5 7 8 8 9 9 10 10", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "99fbe3a7", "template_md5": "35d339e4", "result": "You are given two numbers, $n$ and $m$. $n$ represents the number of posts and $m$ represents the number of likes. \n\nYou are also given a sequence of $m$ numbers, $a_1, a_2, ..., a_m$, where each $a_j$ represents the post that received the $j$-th like.\n\nInitially, the posts are ordered from 1 to $n$.  When a like is given to a post, if the post is not the highest (first) post, it swaps positions with the post above it. If the post is the highest post, nothing changes.\n\nYour task is to determine the highest (minimum) and lowest (maximum) positions for each post at all times: before any likes, after each like, and after all likes. \n\nOutput $n$ pairs of numbers, where the $i$-th pair represents the highest and lowest positions of the $i$-th post."}, {"prompt_md5": "7c8dcf8d", "template_md5": "465699a0", "result": "You are given a list of numbers representing the order of posts. Then you are given another list of numbers representing the order in which likes were given to those posts.  Each like moves the liked post up one position in the list, unless it is already at the top.  Find the highest and lowest position each post occupies throughout the process."}]}