{"uid": "1027-F", "url": "https://codeforces.com/contest/1027/problem/F", "tags": ["binary search", " dfs and similar", " dsu", " graph matchings", " graphs"], "title": "1027-F", "statement": "F. Session in BSUtime limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp studies in Berland State University. Soon he will have to take his exam. He has to pass exactly $$$n$$$ exams.For the each exam $$$i$$$ there are known two days: $$$a_i$$$ — day of the first opportunity to pass the exam, $$$b_i$$$ — day of the second opportunity to pass the exam ($$$a_i < b_i$$$). Polycarpcan pass at most one examduring each day. For each exam Polycarp chooses by himself which day he will pass this exam. He has to pass all the $$$n$$$ exams.Polycarp wants to pass all the exams as soon as possible. Print the minimum index of day by which Polycarp can pass all the $$$n$$$ exams, or print-1if he cannot pass all the exams at all.InputThe first line of the input contains one integer $$$n$$$ ($$$1 \\\\le n \\\\le 10^6$$$) — the number of exams.The next $$$n$$$ lines contain two integers each: $$$a_i$$$ and $$$b_i$$$ ($$$1 \\\\le a_i < b_i \\\\le 10^9$$$), where $$$a_i$$$ is the number of day of the first passing the $$$i$$$-th exam and $$$b_i$$$ is the number of day of the second passing the $$$i$$$-th exam.OutputIf Polycarp cannot pass all the $$$n$$$ exams, print-1. Otherwise print the minimum index of day by which Polycarp can do that.ExamplesInput21 51 7Output5Input35 131 51 7Output7Input310 4040 8010 80Output80Input399 10099 10099 100Output-1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6af72178", "template_md5": "35d339e4", "result": "There are $n$ exams. Each exam has two possible days it can be taken: $a_i$ and $b_i$ ($a_i < b_i$). You can only take one exam per day. Find the earliest day you can take all $n$ exams. If it's impossible to take all exams, output -1."}, {"prompt_md5": "883ebab4", "template_md5": "465699a0", "result": "You have a list of tasks, each with two possible due dates. You can only complete one task per day. Find the latest possible day you can complete all the tasks. If it's impossible to complete all tasks, return -1."}]}