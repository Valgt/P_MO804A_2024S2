{"uid": "1665-C", "url": "https://codeforces.com/contest/1665/problem/C", "tags": ["binary search", " greedy", " sortings", " trees"], "title": "1665-C", "statement": "C. Tree Infectiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA tree is a connected graph without cycles. A rooted tree has a special vertex called the root. The parent of a vertex $$$v$$$ (different from root) is the previous to $$$v$$$ vertex on the shortest path from the root to the vertex $$$v$$$. Children of the vertex $$$v$$$ are all vertices for which $$$v$$$ is the parent.You are given a rooted tree with $$$n$$$ vertices. The vertex $$$1$$$ is the root. Initially, all vertices are healthy.Each second you dotwooperations, thespreadingoperation and, after that, theinjectionoperation:Spreading: foreachvertex $$$v$$$, if at least one child of $$$v$$$ is infected, you can spread the disease by infecting at most one other child of $$$v$$$ of your choice.Injection: you can choose any healthy vertex and infect it.This process repeats each second until the whole tree is infected. You need to find the minimal number of seconds needed to infect the whole tree.InputThe input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases. Description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the number of the vertices in the given tree.The second line of each test case contains $$$n - 1$$$ integers $$$p_2, p_3, \\\\ldots, p_n$$$ ($$$1 \\\\le p_i \\\\le n$$$), where $$$p_i$$$ is the ancestor of the $$$i$$$-th vertex in the tree.It is guaranteed that the given graph is a tree.It is guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case you should output a single integer — the minimal number of seconds needed to infect the whole tree.ExampleInput571 1 1 2 2 455 5 1 42133 161 1 1 1 1Output4 4 2 3 4NoteThe image depicts the tree from the first test case during each second.A vertex is black if it is not infected. A vertex is blue if it is infected byinjectionduring the previous second. A vertex is green if it is infected byspreadingduring the previous second. A vertex is red if it is infected earlier than the previous second.Note that you are able to choose which vertices are infected byspreadingand byinjections.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "45b2dbe9", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices, where vertex 1 is the root.  Initially, all vertices are healthy.\n\nEach second, you perform two operations:\n\n1. **Spreading:** For each vertex $v$, if at least one of its children is infected, you can infect at most one of its healthy children.\n2. **Injection:** You can choose any healthy vertex and infect it.\n\nThese operations repeat each second until the entire tree is infected.\n\nFind the minimum number of seconds required to infect the entire tree.\n\nInput:\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains the number of vertices, $n$.\n    * The second line contains $n-1$ integers, $p_2, p_3, ..., p_n$, where $p_i$ is the parent of vertex $i$.\n\nOutput:\n\nFor each test case, output the minimum number of seconds required to infect the entire tree."}, {"prompt_md5": "f74053fd", "template_md5": "465699a0", "result": "You are given a tree-shaped network of connected nodes.  You can infect nodes in two ways:\n\n1. **Spread:** If a node has an infected child, you can infect one of its other healthy children.\n2. **Inject:** You can infect any healthy node directly.\n\nYou want to find the fewest seconds it takes to infect all nodes in the tree."}]}