{"uid": "1326-F1", "url": "https://codeforces.com/contest/1326/problem/F1", "tags": ["bitmasks", " brute force", " dp", " meet-in-the-middle"], "title": "1326-F1", "statement": "F1. Wise Men (Easy Version)time limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputThis is the easy version of the problem. The difference is constraints on the number of wise men and the time limit. You can make hacks only if all versions of this task are solved.$$$n$$$ wise men live in a beautiful city. Some of them know each other.For each of the $$$n!$$$ possible permutations $$$p_1, p_2, \\\\ldots, p_n$$$ of the wise men, let's generate a binary string of length $$$n-1$$$: for each $$$1 \\\\leq i < n$$$ set $$$s_i=1$$$ if $$$p_i$$$ and $$$p_{i+1}$$$ know each other, and $$$s_i=0$$$ otherwise.For all possible $$$2^{n-1}$$$ binary strings, find the number of permutations that produce this binary string.InputThe first line of input contains one integer $$$n$$$ ($$$2 \\\\leq n \\\\leq 14)$$$  — the number of wise men in the city.The next $$$n$$$ lines contain a binary string of length $$$n$$$ each, such that the $$$j$$$-th character of the $$$i$$$-th string is equal to '1' if wise man $$$i$$$ knows wise man $$$j$$$, and equals '0' otherwise.It is guaranteed that if the $$$i$$$-th man knows the $$$j$$$-th man, then the $$$j$$$-th man knows $$$i$$$-th man and no man knows himself.OutputPrint $$$2^{n-1}$$$ space-separated integers. For each $$$0 \\\\leq x < 2^{n-1}$$$:Let's consider a string $$$s$$$ of length $$$n-1$$$, such that $$$s_i = \\\\lfloor \\\\frac{x}{2^{i-1}} \\\\rfloor \\\\bmod 2$$$ for all $$$1 \\\\leq i \\\\leq n - 1$$$.The $$$(x+1)$$$-th number should be equal to the required answer for $$$s$$$.ExamplesInput3 011 101 110Output0 0 0 6Input4 0101 1000 0001 1010Output2 2 6 2 2 6 2 2NoteIn the first test, each wise man knows each other, so every permutation will produce the string $$$11$$$.In the second test:If $$$p = \\\\{1, 2, 3, 4\\\\}$$$, the produced string is $$$101$$$, because wise men $$$1$$$ and $$$2$$$ know each other, $$$2$$$ and $$$3$$$ don't know each other, and $$$3$$$ and $$$4$$$ know each other;If $$$p = \\\\{4, 1, 2, 3\\\\}$$$, the produced string is $$$110$$$, because wise men $$$1$$$ and $$$4$$$ know each other, $$$1$$$ and $$$2$$$ know each other and $$$2$$$, and $$$3$$$ don't know each other;If $$$p = \\\\{1, 3, 2, 4\\\\}$$$, the produced string is $$$000$$$, because wise men $$$1$$$ and $$$3$$$ don't know each other, $$$3$$$ and $$$2$$$ don't know each other, and $$$2$$$ and $$$4$$$ don't know each other.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a3aea07e", "template_md5": "35d339e4", "result": "You are given a number $n$ representing the number of people. You are also given $n$ binary strings, each of length $n$. The $j$-th character of the $i$-th string is 1 if person $i$ knows person $j$, and 0 otherwise.\n\nFor each possible arrangement (permutation) of the people, create a binary string of length $n-1$.  The $i$-th character of this string is 1 if the $i$-th and $(i+1)$-th people in the arrangement know each other, and 0 otherwise.\n\nFor every possible binary string of length $n-1$, count how many different arrangements of the people produce that string.\n\nOutput $2^{n-1}$ numbers, where the $x$-th number is the count for the binary string where the $i$-th character is $\\lfloor \\frac{x}{2^{i-1}} \\rfloor \\mod 2$."}, {"prompt_md5": "4782e81c", "template_md5": "465699a0", "result": "You are given a list of relationships between people.  For each possible arrangement of the people, count how many different arrangements result in the same relationship pattern.  Output the count for every possible relationship pattern."}]}