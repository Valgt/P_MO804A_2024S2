{"uid": "1688-B", "url": "https://codeforces.com/contest/1688/problem/B", "tags": ["bitmasks", " constructive algorithms", " greedy", " sortings"], "title": "1688-B", "statement": "B. Patchouli's Magical Talismantime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputShe is skilled in all kinds of magics, and is keen on inventing new one.—Perfect Memento in Strict SensePatchouli is making a magical talisman. She initially has $$$n$$$ magical tokens. Their magical power can be represented withpositiveintegers $$$a_1, a_2, \\\\ldots, a_n$$$.Patchouli may perform the following two operations on the tokens.Fusion:Patchouli chooses two tokens, removes them, and creates a new token with magical power equal to the sum of the two chosen tokens.Reduction:Patchouli chooses a token with anevenvalue of magical power $$$x$$$, removes it and creates a new token with magical power equal to $$$\\\\frac{x}{2}$$$.Tokens are more effective when their magical powers areoddvalues. Please help Patchouli to find the minimum number of operations she needs to make magical powers of all tokensoddvalues.InputEach test contains multiple test cases.The first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^3$$$) — the number of test cases. The description of the test cases follows.For each test case, the first line contains one integer $$$n$$$ ($$$1 \\\\leq n\\\\leq 2\\\\cdot 10^5$$$) — the initial number of tokens.The second line contains $$$n$$$ intergers $$$a_1,a_2,\\\\ldots,a_n$$$ ($$$1 \\\\leq a_i \\\\leq 10^9$$$) — the initial magical power of the $$$n$$$ tokens.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, print a single integer — the minimum number of operations Patchouli needs to make all tokens have anoddvalue of magical power.It can be shown that under such restrictions the required sequence of operations exists.ExampleInput421 931 1 232 4 831049600 33792 1280Output0 1 3 10NoteTest case 1:$$$a$$$ consists solely of odd numbers initially.Test case 2:Choose the tokens with magical power of $$$1$$$ and $$$2$$$ and perform Fusion. Now $$$a=[1,3]$$$, both are odd numbers.Test case 3:Choose the tokens with magical power of $$$2$$$ and $$$8$$$ and perform Fusion. Now $$$a=[4,10]$$$.Choose the token with magical power of $$$10$$$ and perform Reduction. Now $$$a=[4,5]$$$.Choose the tokens with magical power of $$$4$$$ and $$$5$$$ and perform Fusion. Now $$$a=[9]$$$, and $$$9$$$ is an odd number.It can be shown that you can not make all the magical powersoddnumbers in less than $$$3$$$ moves, so the answer is $$$3$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "7db32492", "template_md5": "35d339e4", "result": "You are given an array of positive integers representing the magical power of $n$ tokens.  You can perform two operations:\n\n1. **Fusion:** Choose two tokens, remove them, and create a new token with magical power equal to the sum of the two chosen tokens.\n2. **Reduction:** Choose a token with an even value of magical power $x$, remove it, and create a new token with magical power equal to $x/2$.\n\nThe goal is to find the minimum number of operations needed to make the magical power of all tokens odd. \n\n\nInput:\n\n* The first line contains an integer $t$ ($1 \\leq t \\leq 10^3$) representing the number of test cases.\n* For each test case:\n    * The first line contains an integer $n$ ($1 \\leq n \\leq 2 \\cdot 10^5$) representing the number of tokens.\n    * The second line contains $n$ integers $a_1, a_2, ..., a_n$ ($1 \\leq a_i \\leq 10^9$) representing the initial magical power of the tokens.\n\nOutput:\n\nFor each test case, print a single integer representing the minimum number of operations needed to make all token powers odd."}, {"prompt_md5": "8fb3d000", "template_md5": "465699a0", "result": "You are given a list of positive integers. You can perform two operations:\n\n1. Combine two numbers in the list to create a new number equal to their sum.\n2. If a number is even, you can divide it by 2 to create a new number.\n\nFind the minimum number of operations needed to make all the numbers in the list odd."}]}