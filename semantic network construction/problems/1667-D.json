{"uid": "1667-D", "url": "https://codeforces.com/contest/1667/problem/D", "tags": ["constructive algorithms", " dfs and similar", " dp", " trees"], "title": "1667-D", "statement": "D. Edge Eliminationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a tree (connected, undirected, acyclic graph) with $$$n$$$ vertices. Two edges are adjacent if they share exactly one endpoint. In one move you can remove an arbitrary edge, if that edge is adjacent to an even number of remaining edges.Remove all of the edges, or determine that it is impossible. If there are multiple solutions, print any.InputThe input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^5$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the number of vertices in the tree.Then $$$n-1$$$ lines follow. The $$$i$$$-th of them contains two integers $$$u_i$$$, $$$v_i$$$ ($$$1 \\\\le u_i,v_i \\\\le n$$$) the endpoints of the $$$i$$$-th edge. It is guaranteed that the given graph is a tree.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case print \"NO\" if it is impossible to remove all the edges.Otherwise print \"YES\", and in the next $$$n-1$$$ lines print a possible order of the removed edges. For each edge, print its endpoints in any order.ExampleInput5 2 1 2 3 1 2 2 3 4 1 2 2 3 3 4 5 1 2 2 3 3 4 3 5 7 1 2 1 3 2 4 2 5 3 6 3 7OutputYES 2 1 NO YES 2 3 3 4 2 1 YES 3 5 2 3 2 1 4 3 NONoteTest case $$$1$$$: it is possible to remove the edge, because it is not adjacent to any other edge.Test case $$$2$$$: both edges are adjacent to exactly one edge, so it is impossible to remove any of them. So the answer is \"NO\".Test case $$$3$$$: the edge $$$2-3$$$ is adjacent to two other edges. So it is possible to remove it. After that removal it is possible to remove the remaining edges too.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d1a7016f", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices.  A tree is a connected graph with no cycles.  Each edge connects two vertices.  \n\nYou can remove an edge if it is connected to an even number of other edges.  \n\nYour task is to determine if it is possible to remove all the edges from the tree. If it is possible, list one way to remove the edges. \n\n**Input:**\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains the number of vertices, $n$.\n    * The next $n-1$ lines each contain two integers, $u_i$ and $v_i$, representing an edge between vertices $u_i$ and $v_i$.\n\n**Output:**\n\n* For each test case:\n    * If it is impossible to remove all edges, print \"NO\".\n    * If it is possible, print \"YES\", followed by $n-1$ lines, each containing two integers representing an edge to be removed. The order of the edges in the output does not matter."}, {"prompt_md5": "8e0fbc08", "template_md5": "465699a0", "result": "You are given a connected graph with nodes.  You can remove an edge if it connects to an even number of other edges.  Determine if you can remove all edges. If so, list one way to do it."}]}