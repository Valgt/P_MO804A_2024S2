{"uid": "1419-E", "url": "https://codeforces.com/contest/1419/problem/E", "tags": ["constructive algorithms", " implementation", " math", " number theory"], "title": "1419-E", "statement": "E. Decryptiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAn agent called Cypher is decrypting a message, that contains acomposite number$$$n$$$. All divisors of $$$n$$$, which are greater than $$$1$$$, are placed in a circle. Cypher can choose the initial order of numbers in the circle.In one move Cypher can choose two adjacent numbers in a circle and insert theirleast common multiplebetween them. He can do that move as many times as needed.A message is decrypted, if every two adjacent numbers are not coprime. Note that for such constraints it's always possible to decrypt the message.Find the minimal number of moves that Cypher should do to decrypt the message, and show the initial order of numbers in the circle for that.InputThe first line contains an integer $$$t$$$ $$$(1 \\\\le t \\\\le 100)$$$ — the number of test cases. Next $$$t$$$ lines describe each test case.In a single line of each test case description, there is a single composite number $$$n$$$ $$$(4 \\\\le n \\\\le 10^9)$$$ — the number from the message.It's guaranteed that the total number of divisors of $$$n$$$ for all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case in the first line output the initial order of divisors, which are greater than $$$1$$$, in the circle. In the second line output, the minimal number of moves needed to decrypt the message.If there are different possible orders with a correct answer, print any of them.ExampleInput3 6 4 30Output2 3 6  1 2 4  0 2 30 6 3 15 5 10  0NoteIn the first test case $$$6$$$ has three divisors, which are greater than $$$1$$$: $$$2, 3, 6$$$. Regardless of the initial order, numbers $$$2$$$ and $$$3$$$ are adjacent, so it's needed to place their least common multiple between them. After that the circle becomes $$$2, 6, 3, 6$$$, and every two adjacent numbers are not coprime.In the second test case $$$4$$$ has two divisors greater than $$$1$$$: $$$2, 4$$$, and they are not coprime, so any initial order is correct, and it's not needed to place any least common multiples.In the third test case all divisors of $$$30$$$ greater than $$$1$$$ can be placed in some order so that there are no two adjacent numbers that are coprime.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "9cfeac35", "template_md5": "35d339e4", "result": "You are given a composite number $n$.  All of the divisors of $n$ greater than 1 are placed in a circle.  You can perform the following operation any number of times:\n\n* Choose two adjacent numbers in the circle and insert their least common multiple between them.\n\nThe goal is to find the minimum number of operations needed to make it so that no two adjacent numbers in the circle are relatively prime.  You should also output one possible arrangement of the divisors that achieves this. \n\n**Input:**\n\n* The first line contains an integer $t$ (1 ≤ $t$ ≤ 100) representing the number of test cases.\n* Each of the next $t$ lines contains a single composite number $n$ (4 ≤ $n$ ≤ 10⁹) representing the number from the message.\n\n**Output:**\n\n* For each test case, output the following two lines:\n    * The initial order of the divisors of $n$ greater than 1 in the circle.\n    * The minimum number of operations needed to decrypt the message."}, {"prompt_md5": "5c3d6ce6", "template_md5": "465699a0", "result": "You are given a number. Find the minimum number of operations needed to arrange its divisors in a circle so that no two adjacent divisors share a common factor other than 1. In each operation, you can choose two adjacent divisors and insert their least common multiple between them."}]}