{"uid": "1531-E3", "url": "https://codeforces.com/contest/1531/problem/E3", "tags": ["*special", " binary search"], "title": "1531-E3", "statement": "E3. Сортировка слияниемограничение по времени на тест2 секундыограничение по памяти на тест512 мегабайтвводстандартный вводвыводстандартный выводРассмотрим следующий код сортировки слиянием на языке Python:def sort(a):n = len(a)b = [0 for i in range(n)]log = []def mergeSort(l, r):if r - l <= 1:returnm = (l + r) >> 1mergeSort(l, m)mergeSort(m, r)i, j, k = l, m, lwhile i < m and j < r:if a[i] < a[j]:log.append('0')b[k] = a[i]i += 1else:log.append('1')b[k] = a[j]j += 1k += 1while i < m:b[k] = a[i]i += 1k += 1while j < r:b[k] = a[j]j += 1k += 1for p in range(l, r):a[p] = b[p]mergeSort(0, n)return \"\".join(log)Как можно заметить, этот код использует логирование — важнейший инструмент разработки.Старший разработчик ВКонтакте Вася сгенерировал перестановку $$$a$$$ (массив из $$$n$$$ различных целых чисел от $$$1$$$ до $$$n$$$), дал её на вход функцииsortи получил на выходе строку $$$s$$$. На следующий день строку $$$s$$$ Вася нашёл, а перестановка $$$a$$$ потерялась.Вася хочет восстановить любую перестановку $$$a$$$ такую, что вызов функцииsortот неё даст ту же строку $$$s$$$. Помогите ему!Входные данныеВвод содержит непустую строку $$$s$$$, состоящую из символов0и1.В этой версии задачидля любого теста существует перестановка длины не более $$$10^5$$$, удовлетворяющая условию. Тем не менее, ваш ответ может иметь любую длину, в том числе превышающую $$$10^5$$$.Выходные данныеВ первой строке выведите целое число $$$n$$$ — длину перестановки.Во второй строке выведите $$$n$$$ различных целых чисел $$$a_0, a_1, \\\\ldots, a_{n-1}$$$ ($$$1 \\\\le a_i \\\\le n$$$) — элементы перестановки.Если существует несколько вариантов ответа, выведите любой из них.ПримерыВходные данные00000000000000000000000000000000Выходные данные16 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16Входные данные11111111111111111111111111111111Выходные данные16 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1Входные данные101011010001100100011011001111011000011110010Выходные данные16 13 6 1 7 12 5 4 15 14 16 10 11 3 8 9 2", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e482fdea", "template_md5": "35d339e4", "result": "You are given a string $s$ consisting of 0s and 1s. This string was generated by a sorting algorithm that works as follows:\n\n1. It takes an array of $n$ distinct integers from 1 to $n$.\n2. It sorts the array using the merge sort algorithm.\n3. During the merge sort process, it records a '0' for each time a smaller element is placed in the merged array and a '1' for each time a larger element is placed.\n\nYour task is to find any array of $n$ distinct integers from 1 to $n$ that would produce the given string $s$ when sorted using this algorithm. \n\nYou should output:\n\n1. The length of the array, $n$.\n2. The array itself."}, {"prompt_md5": "6fbce13c", "template_md5": "465699a0", "result": "You are given a string of 0s and 1s. This string was generated by a sorting algorithm that records the comparison choices made during the sorting process.  Your task is to reconstruct any possible list of numbers that would have produced this string when sorted."}]}