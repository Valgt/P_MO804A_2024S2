{"uid": "908-B", "url": "https://codeforces.com/contest/908/problem/B", "tags": ["brute force", " implementation"], "title": "908-B", "statement": "B. New Year and Buggy Bottime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputBob programmed a robot to navigate through a 2d maze.The maze has some obstacles. Empty cells are denoted by the character '.', where obstacles are denoted by '#'.There is a single robot in the maze. Its start position is denoted with the character 'S'. This position has no obstacle in it. There is also a single exit in the maze. Its position is denoted with the character 'E'. This position has no obstacle in it.The robot can only move up, left, right, or down.When Bob programmed the robot, he wrote down a string of digits consisting of the digits 0 to 3, inclusive. He intended for each digit to correspond to a distinct direction, and the robot would follow the directions in order to reach the exit. Unfortunately, he forgot to actually assign the directions to digits.The robot will choose some random mapping of digits to distinct directions. The robot will map distinct digits to distinct directions. The robot will then follow the instructions according to the given string in order and chosen mapping. If an instruction would lead the robot to go off the edge of the maze or hit an obstacle, the robot will crash and break down. If the robot reaches the exit at any point, then the robot will stop following any further instructions.Bob is having trouble debugging his robot, so he would like to determine the number of mappings of digits to directions that would lead the robot to the exit.InputThe first line of input will contain two integersnandm(2 ≤n,m≤ 50), denoting the dimensions of the maze.The nextnlines will contain exactlymcharacters each, denoting the maze.Each character of the maze will be '.', '#', 'S', or 'E'.There will be exactly one 'S' and exactly one 'E' in the maze.The last line will contain a single strings(1 ≤ |s| ≤ 100) — the instructions given to the robot. Each character ofsis a digit from 0 to 3.OutputPrint a single integer, the number of mappings of digits to directions that will lead the robot to the exit.ExamplesInput5 6.....#S....#.#.....#.......E..333300012Output1Input6 6..............SE....................01232123212302123021Output14Input5 3....S.###.E....3Output0NoteFor the first sample, the only valid mapping is, whereDis down,Lis left,Uis up,Ris right.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ad3cec52", "template_md5": "35d339e4", "result": "You are given a 2D grid representing a maze. The grid contains the following characters:\n\n* '.' : Empty cell\n* '#' : Obstacle\n* 'S' : Starting position\n* 'E' : Exit\n\nA robot starts at position 'S' and follows a sequence of instructions represented by a string of digits from 0 to 3. Each digit represents a direction (up, down, left, right). The robot's movement is determined by a random mapping of digits to directions.\n\nThe robot will follow the instructions until it reaches the exit 'E' or crashes into an obstacle or the edge of the maze.\n\nYour task is to determine the number of possible mappings of digits to directions that will lead the robot to the exit. \n\n\n\nInput:\n\n* Two integers n and m representing the dimensions of the maze (rows and columns).\n* n lines, each containing m characters representing the maze.\n* A string s containing the robot's instructions.\n\nOutput:\n\n* A single integer representing the number of valid mappings."}, {"prompt_md5": "7b683e0d", "template_md5": "465699a0", "result": "A robot needs to navigate a maze to reach an exit. The robot follows a sequence of instructions, where each instruction represents a direction.  The instructions are encoded as digits, but the mapping between digits and directions is unknown.  \n\nDetermine how many different ways the digits can be mapped to directions so that the robot successfully reaches the exit without crashing."}]}