{"uid": "1391-E", "url": "https://codeforces.com/contest/1391/problem/E", "tags": ["constructive algorithms", " dfs and similar", " graphs", " greedy", " trees"], "title": "1391-E", "statement": "E. Pairs of Pairstime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a simple and connected undirected graph consisting of $$$n$$$ nodes and $$$m$$$ edges.Consider any way to pair some subset of these $$$n$$$ nodes such that no node is present in more than one pair.This pairing isvalidif for every pair of pairs, the induced subgraph containing all $$$4$$$ nodes, two from each pair, has at most $$$2$$$ edges (out of the $$$6$$$ possible edges). More formally, for any two pairs, $$$(a,b)$$$ and $$$(c,d)$$$, the induced subgraph with nodes $$$\\\\{a,b,c,d\\\\}$$$ should have at most $$$2$$$ edges.Please note that the subgraph induced by a set of nodes contains nodes only from this set and edges which have both of its end points in this set.Now, do one of the following:Find a simple path consisting of at least$$$\\\\lceil \\\\frac{n}{2} \\\\rceil$$$nodes. Here, a path is called simple if it does not visit any node multiple times.Find a valid pairing in which at least$$$\\\\lceil \\\\frac{n}{2} \\\\rceil$$$nodes are paired.It can be shown that it is possible to find at least one of the two in every graph satisfying constraints from the statement.InputEach test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\\\le t \\\\le 10^5$$$). Description of the test cases follows.The first line of each test case contains $$$2$$$ integers $$$n, m$$$ ($$$2 \\\\le n \\\\le 5\\\\cdot 10^5$$$, $$$1 \\\\le m \\\\le 10^6$$$), denoting the number of nodes and edges, respectively.The next $$$m$$$ lines each contain $$$2$$$ integers $$$u$$$ and $$$v$$$ ($$$1 \\\\le u, v \\\\le n$$$, $$$u \\\\neq v$$$), denoting that there is an undirected edge between nodes $$$u$$$ and $$$v$$$ in the given graph.It is guaranteed that the given graph is connected, and simple  — it does not contain multiple edges between the same pair of nodes, nor does it have any self-loops.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$5\\\\cdot 10^5$$$.It is guaranteed that the sum of $$$m$$$ over all test cases does not exceed $$$10^6$$$.OutputFor each test case, the output format is as follows.If you have found a pairing, in the first line output \"PAIRING\" (without quotes).Then, output $$$k$$$ ($$$\\\\lceil \\\\frac{n}{2} \\\\rceil \\\\le 2\\\\cdot k \\\\le n$$$), the number of pairs in your pairing.Then, in each of the next $$$k$$$ lines, output $$$2$$$ integers $$$a$$$ and $$$b$$$  — denoting that $$$a$$$ and $$$b$$$ are paired with each other.Note that the graph does not have to have an edge between $$$a$$$ and $$$b$$$!This pairing has to be valid, and every node has to be a part of at most $$$1$$$ pair.Otherwise, in the first line output \"PATH\" (without quotes).Then, output $$$k$$$ ($$$\\\\lceil \\\\frac{n}{2} \\\\rceil \\\\le k \\\\le n$$$), the number of nodes in your path.Then, in the second line, output $$$k$$$ integers, $$$v_1, v_2, \\\\ldots, v_k$$$, in the order in which they appear on the path. Formally, $$$v_i$$$ and $$$v_{i+1}$$$ should have an edge between them for every $$$i$$$ ($$$1 \\\\le i < k$$$).This path has to be simple, meaning no node should appear more than once.ExampleInput4 6 5 1 4 2 5 3 6 1 5 3 5 6 5 1 4 2 5 3 6 1 5 3 5 12 14 1 2 2 3 3 4 4 1 1 5 1 12 2 6 2 7 3 8 3 9 4 10 4 11 2 4 1 3 12 14 1 2 2 3 3 4 4 1 1 5 1 12 2 6 2 7 3 8 3 9 4 10 4 11 2 4 1 3OutputPATH 4  1 5 3 6 PAIRING 2 1 6 2 4 PAIRING 3 1 8 2 5 4 10 PAIRING 4 1 7 2 9 3 11 4 5NoteThe path outputted in the first case is the following.The pairing outputted in the second case is the following.Here is aninvalidpairing for the same graph  — the subgraph $$$\\\\{1,3,4,5\\\\}$$$ has $$$3$$$ edges.Here is the pairing outputted in the third case.It's valid because —The subgraph $$$\\\\{1,8,2,5\\\\}$$$ has edges ($$$1$$$,$$$2$$$) and ($$$1$$$,$$$5$$$).The subgraph $$$\\\\{1,8,4,10\\\\}$$$ has edges ($$$1$$$,$$$4$$$) and ($$$4$$$,$$$10$$$).The subgraph $$$\\\\{4,10,2,5\\\\}$$$ has edges ($$$2$$$,$$$4$$$) and ($$$4$$$,$$$10$$$).Here is the pairing outputted in the fourth case.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "825d1066", "template_md5": "35d339e4", "result": "You are given an undirected graph with $n$ nodes and $m$ edges.  \n\n**Task:**\n\nFind either:\n\n1. **A path:** A sequence of at least $\\lceil \\frac{n}{2} \\rceil$ nodes where each node connects to the next node in the sequence.  No node can be repeated in the path.\n\n2. **A valid pairing:**  Pair up at least $\\lceil \\frac{n}{2} \\rceil$ nodes so that:\n\n   * Each node is part of at most one pair.\n   * For any two pairs of nodes, the subgraph containing all four nodes has at most 2 edges.\n\n**Input:**\n\n* The number of test cases $t$.\n* For each test case:\n    * The number of nodes $n$ and edges $m$.\n    * $m$ pairs of integers $(u, v)$ representing an edge between nodes $u$ and $v$.\n\n**Output:**\n\n* For each test case:\n    * If you find a valid pairing, output \"PAIRING\" followed by:\n        * The number of pairs $k$.\n        * $k$ pairs of integers $(a, b)$ representing the pairing.\n    * If you find a valid path, output \"PATH\" followed by:\n        * The number of nodes $k$.\n        * $k$ integers $v_1, v_2, ..., v_k$ representing the path."}, {"prompt_md5": "184a372d", "template_md5": "465699a0", "result": "You are given a connected network of points.  Some points are connected by lines.  \n\nFind either:\n\n1. A path through at least half the points, where each point is visited only once.\n2. A way to pair up at least half the points, where no point is paired with more than one other point, and the connections between the paired points don't form too many lines."}]}