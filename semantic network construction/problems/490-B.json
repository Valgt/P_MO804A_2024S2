{"uid": "490-B", "url": "https://codeforces.com/contest/490/problem/B", "tags": ["dsu", " implementation"], "title": "490-B", "statement": "B. Queuetime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutDuring the lunch break allnBerland State University students lined up in the food court. However, it turned out that the food court, too, has a lunch break and it temporarily stopped working.Standing in a queue that isn't being served is so boring! So, each of the students wrote down the number of the student ID of the student that stands in line directly in front of him, and the student that stands in line directly behind him. If no one stands before or after a student (that is, he is the first one or the last one), then he writes down number0instead (in Berland State University student IDs are numerated from1).After that, all the students went about their business. When they returned, they found out that restoring the queue is not such an easy task.Help the students to restore the state of the queue by the numbers of the student ID's of their neighbors in the queue.InputThe first line contains integern(2 ≤n≤ 2·105) — the number of students in the queue.Thennlines follow,i-th line contains the pair of integersai,bi(0 ≤ai,bi≤ 106), whereaiis the ID number of a person in front of a student andbiis the ID number of a person behind a student. The lines are given in the arbitrary order. Value0is given instead of a neighbor's ID number if the neighbor doesn't exist.The ID numbers of all students are distinct. It is guaranteed that the records correspond too the queue where all the students stand in some order.OutputPrint a sequence ofnintegersx1,x2, ...,xn— the sequence of ID numbers of all the students in the order they go in the queue from the first student to the last one.ExamplesInput492 310 731 07 141Output92 7 31 141NoteThe picture illustrates the queue for the first sample.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "762ae607", "template_md5": "35d339e4", "result": "You are given a list of pairs of numbers. Each pair represents a student and the IDs of the students in front of and behind them in a queue.  \n\n* If a student has no one in front of them, they write down 0.\n* If a student has no one behind them, they write down 0.\n\nYour task is to determine the order of the students in the queue based on these pairs.\n\n**Input:**\n\n* The first line contains an integer $n$ (2 ≤ $n$ ≤ 2⋅10⁵) representing the number of students.\n* The following $n$ lines each contain a pair of integers $a_i$ and $b_i$ (0 ≤ $a_i$, $b_i$ ≤ 10⁶), where $a_i$ is the ID of the student in front of the $i$-th student and $b_i$ is the ID of the student behind the $i$-th student.\n\n**Output:**\n\nPrint a sequence of $n$ integers $x_1$, $x_2$, ..., $x_n$ representing the order of the students in the queue from first to last."}, {"prompt_md5": "e7145b19", "template_md5": "465699a0", "result": "You are given a list of pairs of numbers. Each pair represents a person and the people in front of and behind them in a line.  The number 0 represents no person in that position.  Your task is to determine the order of the people in the line."}]}