{"uid": "1406-C", "url": "https://codeforces.com/contest/1406/problem/C", "tags": ["constructive algorithms", " dfs and similar", " graphs", " trees"], "title": "1406-C", "statement": "C. Link Cut Centroidstime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputFishing Prince loves trees, and he especially loves trees with only one centroid. The tree is a connected graph without cycles.A vertex is acentroidof a tree only when you cut this vertex (remove it and remove all edges from this vertex), the size of the largest connected component of the remaining graph is the smallest possible.For example, the centroid of the following tree is $$$2$$$, because when you cut it, the size of the largest connected component of the remaining graph is $$$2$$$ and it can't be smaller.However, in some trees, there might be more than one centroid, for example:Both vertex $$$1$$$ and vertex $$$2$$$ are centroids because the size of the largest connected component is $$$3$$$ after cutting each of them.Now Fishing Prince has a tree. He should cut one edge of the tree (it means to remove the edge). After that, he should add one edge. The resulting graph after these two operations should be a tree. He can add the edge that he cut.He wants the centroid of the resulting tree to be unique. Help him and find any possible way to make the operations. It can be proved, that at least one such way always exists.InputThe input consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1\\\\leq t\\\\leq 10^4$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains an integer $$$n$$$ ($$$3\\\\leq n\\\\leq 10^5$$$) — the number of vertices.Each of the next $$$n-1$$$ lines contains two integers $$$x, y$$$ ($$$1\\\\leq x,y\\\\leq n$$$). It means, that there exists an edge connecting vertices $$$x$$$ and $$$y$$$.It's guaranteed that the given graph is a tree.It's guaranteed that the sum of $$$n$$$ for all test cases does not exceed $$$10^5$$$.OutputFor each test case, print two lines.In the first line print two integers $$$x_1, y_1$$$ ($$$1 \\\\leq x_1, y_1 \\\\leq n$$$), which means you cut the edge between vertices $$$x_1$$$ and $$$y_1$$$. There should exist edge connecting vertices $$$x_1$$$ and $$$y_1$$$.In the second line print two integers $$$x_2, y_2$$$ ($$$1 \\\\leq x_2, y_2 \\\\leq n$$$), which means you add the edge between vertices $$$x_2$$$ and $$$y_2$$$.The graph after these two operations should be a tree.If there are multiple solutions you can print any.ExampleInput2 5 1 2 1 3 2 4 2 5 6 1 2 1 3 1 4 2 5 2 6Output1 2 1 2 1 3 2 3NoteNote that you can add the same edge that you cut.In the first test case, after cutting and adding the same edge, the vertex $$$2$$$ is still the only centroid.In the second test case, the vertex $$$2$$$ becomes the only centroid after cutting the edge between vertices $$$1$$$ and $$$3$$$ and adding the edge between vertices $$$2$$$ and $$$3$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6fb62375", "template_md5": "35d339e4", "result": "You are given a tree with $n$ nodes.  You can perform the following operation:\n\n1. Remove an edge from the tree.\n2. Add a new edge to the tree.\n\nThe new edge can be the same edge that was removed.\n\nFind a way to perform these operations so that the resulting tree has exactly one centroid. A centroid of a tree is a node such that if you remove it and all edges connected to it, the size of the largest remaining connected component is minimized.\n\n**Input:**\n\n* Multiple test cases.\n* For each test case:\n    * An integer $n$ representing the number of nodes in the tree.\n    * $n-1$ lines, each containing two integers $x$ and $y$ representing an edge between nodes $x$ and $y$.\n\n**Output:**\n\n* For each test case:\n    * Two integers $x_1$ and $y_1$ representing the edge to be removed.\n    * Two integers $x_2$ and $y_2$ representing the edge to be added."}, {"prompt_md5": "b9c7b36b", "template_md5": "465699a0", "result": "You are given a tree with multiple nodes. You can remove one edge and add a new edge to create a new tree. Find a way to do this so that there is only one \"center\" node in the new tree."}]}