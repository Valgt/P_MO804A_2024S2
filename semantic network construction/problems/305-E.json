{"uid": "305-E", "url": "https://codeforces.com/contest/305/problem/E", "tags": ["games"], "title": "305-E", "statement": "E. Playing with Stringtime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutTwo people play the following string game. Initially the players have got some strings. The players move in turns, the player who cannot make a move loses.Before the game began, the string is written on a piece of paper, one letter per cell.An example of the initial situation ats= \"abacaba\"A player's move is the sequence of actions:The player chooses one of the available pieces of paper with some string written on it. Let's denote it ist. Note that initially, only one piece of paper is available.The player chooses in the stringt=t1t2...t|t|character in positioni(1 ≤i≤ |t|)such that for some positive integerl(0 <i-l;i+l≤ |t|)the following equations hold:ti- 1=ti+ 1,ti- 2=ti+ 2, ...,ti-l=ti+l.Player cuts the cell with the chosen character. As a result of the operation, he gets three new pieces of paper, the first one will contain stringt1t2...ti- 1, the second one will contain a string consisting of a single characterti, the third one contains stringti+ 1ti+ 2...t|t|.An example of making action(i= 4)with strings= «abacaba»Your task is to determine the winner provided that both players play optimally well. If the first player wins, find the position of character that is optimal to cut in his first move. If there are multiple positions, print the minimal possible one.InputThe first line contains strings(1 ≤ |s| ≤ 5000). It is guaranteed that stringsonly contains lowercase English letters.OutputIf the second player wins, print in the single line \"Second\" (without the quotes). Otherwise, print in the first line \"First\" (without the quotes), and in the second line print the minimal possible winning move — integeri(1 ≤i≤ |s|).ExamplesInputabacabaOutputFirst2InputabcdeOutputSecondNoteIn the first sample the first player has multiple winning moves. But the minimum one is to cut the character in position2.In the second sample the first player has no available moves.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "9fa84ab8", "template_md5": "35d339e4", "result": "Two players take turns playing a game with a string. \n\nA player's turn consists of:\n\n1. Choosing a string.\n2. Choosing a character within the string.\n3. Cutting the string at that character, splitting it into three new strings.\n\nThe rules for cutting are:\n\n* The chosen character must be at least 2 positions away from the ends of the string.\n* The characters on either side of the chosen character must be symmetrical (e.g., if the chosen character is the 4th character, the 2nd and 6th characters must be the same).\n\nThe game continues until a player cannot make a valid move. The first player to be unable to make a move loses.\n\nGiven a starting string, determine:\n\n* If the first player can win, print \"First\" followed by the position of the character they should cut on their first turn.\n* If the first player cannot win, print \"Second\"."}, {"prompt_md5": "8824633b", "template_md5": "465699a0", "result": "Two players take turns cutting a string.  A player can cut the string at a position where the characters on either side of the cut are mirrored. The first player who can't make a cut loses. Determine if the first player can win and, if so, the smallest position they can cut on their first turn."}]}