{"uid": "1864-D", "url": "https://codeforces.com/contest/1864/problem/D", "tags": ["brute force", " constructive algorithms", " data structures", " dp", " greedy", " math"], "title": "1864-D", "statement": "D. Matrix Cascadetime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputThere is a matrix of size $$$n \\\\times n$$$ which consists of0s and1s. The rows are numbered from $$$1$$$ to $$$n$$$ from top to bottom, the columns are numbered from $$$1$$$ to $$$n$$$ from left to right. The cell at the intersection of the $$$x$$$-th row and the $$$y$$$-th column is denoted as $$$(x, y)$$$.AquaMoon wants to turn all elements of the matrix to0s. In one step she can perform the following operation:Select an arbitrary cell, let it be $$$(i, j)$$$, then invert the element in $$$(i, j)$$$ and also invert all elements in cells $$$(x, y)$$$ for $$$x > i$$$ and $$$x - i \\\\ge \\\\left|y - j\\\\right|$$$. To invert a value means to change it to the opposite:0changes to1,1changes to0.Help AquaMoon determine the minimum number of steps she need to perform to turn all elements of the matrix to0s. We can show that an answer always exists.InputEach test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\\\le t \\\\le 10^5$$$). The description of the test cases follows.The first line of each test case contains an integer $$$n$$$ ($$$2 \\\\le n \\\\le 3000$$$).The $$$i$$$-th of the following $$$n$$$ lines contains a binary string only of characters0and1, of length $$$n$$$.It is guaranteed that the sum of $$$n^2$$$ over all test cases does not exceed $$$9\\\\,000\\\\,000$$$.OutputFor each test case, print the minimum number of steps.ExampleInput35001000111011111111111111131001101106010101111101011110000000111010001110Output1 2 15NoteIn the first test case, we can use the following scheme:perform the operation on the cell $$$(1, 3)$$$.Clearly, the elements of the initial matrix are not all0, so at least one operation is required. Thus, $$$1$$$ is the answer.In the second test case, we use the following scheme:perform the operation on the cell $$$(3, 3)$$$;perform the operation on the cell $$$(1, 1)$$$.It can be shown that there is no way to convert all elements to0s in $$$0$$$ or $$$1$$$ steps, so the answer is exactly $$$2$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "c993ba96", "template_md5": "35d339e4", "result": "You are given an $n \\times n$ matrix filled with 0s and 1s.  You can perform the following operation:\n\n1. Choose any cell in the matrix.\n2. Flip the value of that cell (0 becomes 1, 1 becomes 0).\n3. Flip the values of all cells below and to the right of the chosen cell that are within a diagonal distance of the chosen cell.\n\nFind the minimum number of operations needed to flip all the values in the matrix to 0. \n\n\nInput:\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains the size of the matrix, $n$.\n    * The next $n$ lines contain the matrix, represented as a string of 0s and 1s.\n\nOutput:\n\n* For each test case, print the minimum number of operations needed."}, {"prompt_md5": "59ecb970", "template_md5": "465699a0", "result": "You are given a square grid of 0s and 1s. You can change a cell to the opposite value (0 to 1 or 1 to 0) and also change all cells below and to the left and right of it that are within a certain distance. What is the minimum number of times you need to do this to change all the cells to 0?"}]}