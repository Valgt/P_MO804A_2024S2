{"uid": "1002-D1", "url": "https://codeforces.com/contest/1002/problem/D1", "tags": [], "title": "1002-D1", "statement": "D1. Oracle for f(x) = b * x mod 2time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputImplement a quantum oracle onNqubits which implements the following function:, where(a vector ofNintegers, each of which can be 0 or 1).For an explanation on how this type of quantum oracles works, seeIntroduction to quantum oracles.You have to implement an operation which takes the following inputs:an array ofNqubitsxin arbitrary state (input register),1 ≤N≤ 8,a qubityin arbitrary state (output qubit),an array ofNintegersb, representing the vector. Each element ofbwill be 0 or 1.The operation doesn't have an output; its \"output\" is the state in which it leaves the qubits.Your code should have the following signature:namespace Solution {open Microsoft.Quantum.Primitive;open Microsoft.Quantum.Canon;operation Solve (x : Qubit[], y : Qubit, b : Int[]) : (){body{// your code here}}}", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "737ee799", "template_md5": "35d339e4", "result": "You are given a function $f(x) = b * x \\mod 2$ where:\n\n* $x$ is a vector of $N$ integers, each of which can be 0 or 1.\n* $b$ is a vector of $N$ integers, each of which is 0 or 1.\n\nYou need to write a program that acts as a \"quantum oracle\" for this function.  \n\nHere's how it works:\n\n1. The program takes as input:\n    * An array of $N$ qubits in an arbitrary state (called the \"input register\").\n    * One qubit in an arbitrary state (called the \"output qubit\").\n    * The vector $b$.\n\n2. The program modifies the state of the qubits based on the function $f(x)$.\n\n3. The program does not produce any output; its \"output\" is the modified state of the qubits.\n\nThe program should be written in a specific programming language (Microsoft Quantum) and have the following structure:\n\n```\nnamespace Solution {\n  open Microsoft.Quantum.Primitive;\n  open Microsoft.Quantum.Canon;\n  operation Solve (x : Qubit[], y : Qubit, b : Int[]) : () {\n    // Your code here\n  }\n}\n```\n\n\n\nLet me know if you have any other questions."}, {"prompt_md5": "6d3d0fb8", "template_md5": "465699a0", "result": "You need to write a program that takes a set of bits and a single qubit, and modifies the state of the qubit based on the input bits and a given set of numbers.  The program doesn't return a value, but changes the state of the qubit."}]}