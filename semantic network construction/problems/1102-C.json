{"uid": "1102-C", "url": "https://codeforces.com/contest/1102/problem/C", "tags": ["games"], "title": "1102-C", "statement": "C. Doors Breaking and Repairingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are policeman and you are playing a game with Slavik. The game is turn-based and each turn consists of two phases. During the first phase you make your move and during the second phase Slavik makes his move.There are $$$n$$$ doors, the $$$i$$$-th door initially has durability equal to $$$a_i$$$.During your move you can try to break one of the doors. If you choose door $$$i$$$ and its current durability is $$$b_i$$$ then you reduce its durability to $$$max(0, b_i - x)$$$ (the value $$$x$$$ is given).During Slavik's move he tries to repair one of the doors. If he chooses door $$$i$$$ and its current durability is $$$b_i$$$ then he increases its durability to $$$b_i + y$$$ (the value $$$y$$$ is given).Slavik cannot repair doors with current durability equal to $$$0$$$.The game lasts $$$10^{100}$$$ turns. If some player cannot make his move then he has to skip it.Your goal is to maximize the number of doors with durability equal to $$$0$$$ at the end of the game. You can assume that Slavikwants to minimizethe number of such doors. What is the number of such doors in the end if you both play optimally?InputThe first line of the input contains three integers $$$n$$$, $$$x$$$ and $$$y$$$ ($$$1 \\\\le n \\\\le 100$$$, $$$1 \\\\le x, y \\\\le 10^5$$$) — the number of doors, value $$$x$$$ and value $$$y$$$, respectively.The second line of the input contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\le a_i \\\\le 10^5$$$), where $$$a_i$$$ is the initial durability of the $$$i$$$-th door.OutputPrint one integer — the number of doors with durability equal to $$$0$$$ at the end of the game, if you and Slavik both play optimally.ExamplesInput6 3 2 2 3 1 3 4 2Output6Input5 3 3 1 2 4 2 3Output2Input5 5 6 1 2 6 10 3Output2NoteClarifications about the optimal strategy will be ignored.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "21572422", "template_md5": "35d339e4", "result": "You and another player are playing a game with $n$ doors. Each door has a durability value, initially given as $a_1, a_2, ..., a_n$.\n\n**Your turn:** You can choose a door and reduce its durability by $x$. If the durability becomes less than 0, it is set to 0.\n\n**Opponent's turn:** The opponent can choose a door with durability greater than 0 and increase its durability by $y$.\n\nThe game lasts for a very long time ($10^{100}$ turns). If a player cannot make a valid move (e.g., cannot reduce a door's durability below 0 or cannot repair a door with durability 0), they must skip their turn.\n\n**Goal:** Determine the maximum number of doors that will have a durability of 0 at the end of the game if both you and your opponent play optimally. \n\n\nInput:\n\n* The first line contains three integers: $n$, $x$, and $y$ ($1 \\le n \\le 100$, $1 \\le x, y \\le 10^5$).\n* The second line contains $n$ integers: $a_1, a_2, ..., a_n$ ($1 \\le a_i \\le 10^5$).\n\nOutput:\n\n* Print a single integer representing the maximum number of doors with durability 0 at the end of the game."}, {"prompt_md5": "f24d7029", "template_md5": "465699a0", "result": "You and another player take turns modifying the durability of a set of doors. You can decrease a door's durability, and the other player can increase it, but only if the durability is greater than 0. The game lasts for a very long time.  Your goal is to maximize the number of doors with durability 0 at the end of the game, assuming both players play optimally."}]}