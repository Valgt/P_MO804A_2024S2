{"uid": "1571-E", "url": "https://codeforces.com/contest/1571/problem/E", "tags": ["*special", " bitmasks", " dp", " greedy"], "title": "1571-E", "statement": "E. Fix the Stringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example:bracket sequences \"()()\" and \"(())\" are regular (the resulting expressions are: \"(1)+(1)\" and \"((1+1)+1)\");bracket sequences \")(\", \"(\" and \")\" are not.You are given two strings $$$s$$$ and $$$a$$$, the string $$$s$$$ has length $$$n$$$, the string $$$a$$$ has length $$$n - 3$$$. The string $$$s$$$ is a bracket sequence (i. e. each element of this string is either an opening bracket character or a closing bracket character). The string $$$a$$$ is a binary string (i. e. each element of this string is either1or0).The string $$$a$$$ imposes some constraints on the string $$$s$$$: for every $$$i$$$ such that $$$a_i$$$ is1, the string $$$s_i s_{i+1} s_{i+2} s_{i+3}$$$ should be a regular bracket sequence. Characters of $$$a$$$ equal to0don't impose any constraints.Initially, the string $$$s$$$ may or may not meet these constraints. You can perform the following operation any number of times: replace some character of $$$s$$$ with its inverse (i. e. you can replace an opening bracket with a closing bracket, or vice versa).Determine if it is possible to change some characters in $$$s$$$ so that it meets all of the constraints, and if it is possible, calculate the minimum number of characters to be changed.InputThe first line contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases.Each test case consists of three lines. The first line contains one integer $$$n$$$ ($$$4 \\\\le n \\\\le 2 \\\\cdot 10^5$$$). The second line contains the string $$$s$$$, consisting of exactly $$$n$$$ characters; each character of $$$s$$$ is either '(' or ')'. The third line contains the string $$$a$$$, consisting of exactly $$$n - 3$$$ characters; each character of $$$a$$$ is either '1' or '0'.Additional constraint on the input: the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, print one integer: the minimum number of characters that need to be changed in $$$s$$$, or $$$-1$$$ if it is impossible.ExampleInput6 4 ))(( 1 4 ))(( 0 4 ()() 0 6 ))(()( 101 6 ))(()( 001 5 ((((( 11Output2 0 0 4 1 -1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "87bd39e3", "template_md5": "35d339e4", "result": "You are given two strings,  's' and 'a'. \n\n* String 's' consists of only '(' and ')' characters and has length 'n'.\n* String 'a' consists of only '0' and '1' characters and has length 'n-3'.\n\nA bracket sequence is considered \"regular\" if you can insert '1's and '+' signs between the characters to form a valid arithmetic expression. For example, \"()()\" becomes \"(1)+(1)\".\n\nHere's the rule:\n\n* For each position 'i' where 'a[i]' is '1', the substring 's[i] s[i+1] s[i+2] s[i+3]' must be a regular bracket sequence.\n\nYou can change any character in 's' from '(' to ')' or vice versa.\n\nYour task is to determine:\n\n1. Is it possible to change characters in 's' so that it meets all the rules?\n2. If possible, what is the minimum number of characters you need to change?\n\nIf it's impossible to make 's' valid, output -1."}, {"prompt_md5": "6c297ce1", "template_md5": "465699a0", "result": "You are given two strings, one with parentheses and one with 0s and 1s.  The 1s in the second string indicate positions where the first string must form a valid parenthesis sequence.  You can change any parenthesis to its opposite (open to close, or close to open).  Find the minimum number of changes needed to make the first string valid at all the positions marked by 1s. If it's impossible, output -1."}]}