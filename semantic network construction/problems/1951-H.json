{"uid": "1951-H", "url": "https://codeforces.com/contest/1951/problem/H", "tags": ["binary search", " dp", " games", " greedy", " trees"], "title": "1951-H", "statement": "H. Thanos Snaptime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputPiotr Rubik - Psalm dla CiebieඞThere is an array $$$a$$$ of size $$$2^k$$$ for some positive integer $$$k$$$, which is initially a permutation of values from $$$1$$$ to $$$2^k$$$. Alice and Bob play the following game on the array $$$a$$$. First, a value $$$t$$$ between $$$1$$$ and $$$k$$$ is shown to both Alice and Bob. Then, for exactly $$$t$$$ turns, the following happens:Alice either does nothing, or chooses two distinct elements of the array $$$a$$$ and swaps them.Bob chooses either the left half or the right half of the array $$$a$$$ and erases it.The score of the game is defined as the maximum value in $$$a$$$ after all $$$t$$$ turns have been played. Alice wants to maximize this score, while Bob wants to minimize it.You need to output $$$k$$$ numbers: the score of the game if both Alice and Bob play optimally for $$$t$$$ from $$$1$$$ to $$$k$$$.InputEach test contains multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains an integer $$$k$$$ ($$$1 \\\\le k \\\\le 20$$$) — the parameter of the size of $$$a$$$.The second line of each test case contains $$$2^k$$$ integers $$$a_1, a_2, \\\\ldots, a_{2^k}$$$ ($$$1 \\\\le a_i \\\\le 2^k$$$, $$$a_i$$$'s are pairwise distinct) — the given array $$$a$$$.It is guaranteed that the sum of $$$2^k$$$ over all test cases does not exceed $$$2^{20}$$$.OutputFor each test case, print $$$k$$$ numbers, where the $$$i$$$-th number is the score of the game if both Alice and Bob play optimally for $$$t = i$$$.ExampleInput511 224 3 2 135 1 6 4 7 2 8 3410 15 6 12 1 3 4 9 13 5 7 16 14 11 2 8532 2 5 23 19 17 31 7 29 3 4 16 13 9 30 24 14 1 8 20 6 15 26 18 10 27 22 12 25 21 28 11Output1 3 1 7 5 1 15 13 9 1 31 28 25 17 1NoteIn the third test case, for $$$t = 2$$$, the game could have proceeded as follows:Initially, $$$a = [5, 1, 6, 4, 7, 2, 8, 3]$$$.Alice swaps $$$a_6$$$ and $$$a_8$$$, $$$a$$$ becomes $$$[5, 1, 6, 4, 7, 3, 8, 2]$$$.Bob erases the right half of the array, $$$a$$$ becomes $$$[5, 1, 6, 4]$$$.Alice does nothing, $$$a$$$ remains as $$$[5, 1, 6, 4]$$$.Bob erases the right half of the array, $$$a$$$ becomes $$$[5, 1]$$$.The game ends with a score of $$$5$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "b94640ce", "template_md5": "35d339e4", "result": "You are given an array of size $2^k$ containing the numbers from 1 to $2^k$ in a specific order (a permutation).  Alice and Bob play a game with this array.\n\n* **Alice's turn:** Alice can choose two different numbers in the array and swap their positions. She can choose to do nothing instead.\n* **Bob's turn:** Bob chooses either the left half or the right half of the array and removes it.\n\nThe game lasts for $t$ turns, where $t$ is a number between 1 and $k$.  Alice wants to make the largest possible number in the array after $t$ turns, while Bob wants to make the largest number as small as possible.\n\nFor each value of $t$ from 1 to $k$, determine the largest possible number that can be in the array after the game ends if both players play optimally. \n\n\n\nLet me know if you'd like me to elaborate on any part of the rules!"}, {"prompt_md5": "ca7c0913", "template_md5": "465699a0", "result": "Two players take turns manipulating a list of numbers.  The first player can swap any two numbers in the list. The second player can choose to remove either half of the list.  The goal of the first player is to make the largest number in the list as big as possible, while the second player wants to make it as small as possible.  \n\nYou need to determine the largest possible number remaining in the list after a certain number of turns, for each number of turns from 1 to a given limit."}]}