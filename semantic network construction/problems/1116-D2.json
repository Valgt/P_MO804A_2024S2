{"uid": "1116-D2", "url": "https://codeforces.com/contest/1116/problem/D2", "tags": [], "title": "1116-D2", "statement": "D2. Pattern of increasing blockstime limit per test2 secondsmemory limit per test1024 megabytesinputstandard inputoutputstandard outputImplement a unitary operation on $$$N$$$ qubits which is represented by a square matrix of size $$$2^N$$$ defined as follows:top right and bottom left quarters are filled with zero elements,the top left quarter is the same pattern of size $$$2^{N-1}$$$ (for $$$N = 1$$$, the top left quarter is a non-zero element),the bottom right quarter is filled with non-zero elements.For example, for $$$N = 3$$$ the matrix of the operation should have the following shape:X........X........XX......XX........XXXX....XXXX....XXXX....XXXXHereXdenotes a \"non-zero\" element of the matrix (a complex number which has the square of the absolute value greater than or equal to $$$10^{-5}$$$), and.denotes a \"zero\" element of the matrix (a complex number which has the square of the absolute value less than $$$10^{-5}$$$).The row and column indices of the matrix follow little endian format: the least significant bit of the index is stored first in the qubit array. Thus, the first column of the matrix gives you the coefficients of the basis states you'll get if you apply the unitary to the $$$|00..0\\\\rangle$$$ basis state, the second column - to the $$$|10..0\\\\rangle$$$ basis state etc. You can use theDumpUnitary toolto get the coefficients of the matrix your unitary implements (up to relative phases between columns) and the corresponding pattern ofXs and.s.You have to implement an operation which takes an array of $$$N$$$ ($$$2 \\\\le N \\\\le 5$$$) qubits as an input and applies the unitary transformation with the matrix of the described shape to it. If there are multiple unitaries which satisfy the requirements, you can implement any of them. The \"output\" of your operation is the pattern of the matrix coefficients implemented by it; you can see the testing harness in theUnitaryPatternskata.Your code should have the following signature:namespace Solution {open Microsoft.Quantum.Primitive;open Microsoft.Quantum.Canon;operation Solve (qs : Qubit[]) : Unit {// your code here}}You are not allowed to use measurements in your operation.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "324adff9", "template_md5": "35d339e4", "result": "You are given a number $N$ ($2 \\le N \\le 5$).  You need to create a quantum operation that acts on $N$ qubits. This operation is represented by a square matrix of size $2^N$. The matrix has the following pattern:\n\n* The top right and bottom left quarters of the matrix are filled with zeros.\n* The top left quarter is a smaller matrix of the same pattern, but with size $2^{N-1}$.\n* The bottom right quarter is filled with non-zero elements.\n\nThe non-zero elements in the matrix are complex numbers where the square of the absolute value is greater than or equal to $10^{-5}$. The zero elements are complex numbers where the square of the absolute value is less than $10^{-5}$.\n\nYou need to write a program that takes an array of $N$ qubits as input and applies this operation to them. The output of your program is the pattern of the matrix coefficients. \n\nYou cannot use measurements in your program."}, {"prompt_md5": "2c4f0c2a", "template_md5": "465699a0", "result": "You need to write a program that applies a specific type of transformation to a set of quantum bits. This transformation is defined by a matrix with a particular pattern of zeros and non-zero values. The program should output the pattern of values in the matrix."}]}