{"uid": "1353-B", "url": "https://codeforces.com/contest/1353/problem/B", "tags": ["greedy", " sortings"], "title": "1353-B", "statement": "B. Two Arrays And Swapstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two arrays $$$a$$$ and $$$b$$$ both consisting of $$$n$$$ positive (greater than zero) integers. You are also given an integer $$$k$$$.In one move, you can choose two indices $$$i$$$ and $$$j$$$ ($$$1 \\\\le i, j \\\\le n$$$) and swap $$$a_i$$$ and $$$b_j$$$ (i.e. $$$a_i$$$ becomes $$$b_j$$$ and vice versa). Note that $$$i$$$ and $$$j$$$ can be equal or different (in particular, swap $$$a_2$$$ with $$$b_2$$$ or swap $$$a_3$$$ and $$$b_9$$$ both are acceptable moves).Your task is to find themaximumpossible sum you can obtain in the array $$$a$$$ if you can do no more than (i.e. at most) $$$k$$$ such moves (swaps).You have to answer $$$t$$$ independent test cases.InputThe first line of the input contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 200$$$) — the number of test cases. Then $$$t$$$ test cases follow.The first line of the test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\\\le n \\\\le 30; 0 \\\\le k \\\\le n$$$) — the number of elements in $$$a$$$ and $$$b$$$ and the maximum number of moves you can do. The second line of the test case contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\le a_i \\\\le 30$$$), where $$$a_i$$$ is the $$$i$$$-th element of $$$a$$$. The third line of the test case contains $$$n$$$ integers $$$b_1, b_2, \\\\dots, b_n$$$ ($$$1 \\\\le b_i \\\\le 30$$$), where $$$b_i$$$ is the $$$i$$$-th element of $$$b$$$.OutputFor each test case, print the answer — themaximumpossible sum you can obtain in the array $$$a$$$ if you can do no more than (i.e. at most) $$$k$$$ swaps.ExampleInput5 2 1 1 2 3 4 5 5 5 5 6 6 5 1 2 5 4 3 5 3 1 2 3 4 5 10 9 10 10 9 4 0 2 2 4 3 2 4 2 3 4 4 1 2 2 1 4 4 5 4Output6 27 39 11 17NoteIn the first test case of the example, you can swap $$$a_1 = 1$$$ and $$$b_2 = 4$$$, so $$$a=[4, 2]$$$ and $$$b=[3, 1]$$$.In the second test case of the example, you don't need to swap anything.In the third test case of the example, you can swap $$$a_1 = 1$$$ and $$$b_1 = 10$$$, $$$a_3 = 3$$$ and $$$b_3 = 10$$$ and $$$a_2 = 2$$$ and $$$b_4 = 10$$$, so $$$a=[10, 10, 10, 4, 5]$$$ and $$$b=[1, 9, 3, 2, 9]$$$.In the fourth test case of the example, you cannot swap anything.In the fifth test case of the example, you can swap arrays $$$a$$$ and $$$b$$$, so $$$a=[4, 4, 5, 4]$$$ and $$$b=[1, 2, 2, 1]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "8f40e092", "template_md5": "35d339e4", "result": "You are given two arrays,  'a' and 'b', each with 'n' positive integers. You can swap elements between these arrays a maximum of 'k' times.  \n\nIn one swap, you choose two indices, 'i' and 'j', and swap the element at position 'i' in array 'a' with the element at position 'j' in array 'b'.\n\nYour goal is to find the largest possible sum of the elements in array 'a' after performing at most 'k' swaps.\n\n\nYou need to solve this problem for 't' different sets of arrays 'a', 'b', 'n', and 'k'."}, {"prompt_md5": "8f97eb1a", "template_md5": "465699a0", "result": "You have two lists of numbers. You can swap any number from the first list with any number from the second list, up to a maximum number of swaps. What is the largest possible sum you can make in the first list after performing the swaps?"}]}