{"uid": "269-C", "url": "https://codeforces.com/contest/269/problem/C", "tags": ["constructive algorithms", " flows", " graphs", " greedy"], "title": "269-C", "statement": "C. Flawed Flowtime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutEmuskald considers himself a master of flow algorithms. Now he has completed his most ingenious program yet — it calculates the maximum flow in an undirected graph. The graph consists ofnvertices andmedges. Vertices are numbered from 1 ton. Vertices1andnbeing the source and the sink respectively.However, his max-flow algorithm seems to have a little flaw — it only finds the flow volume for each edge, but not its direction. Help him find for each edge the direction of the flow through this edges. Note, that the resulting flow should be correct maximum flow.More formally. You are given an undirected graph. For each it's undirected edge (ai,bi) you are given the flow volumeci. You should direct all edges in such way that the following conditions hold:for each vertexv(1 <v<n), sum ofciof incoming edges is equal to the sum ofciof outcoming edges;vertex with number1has no incoming edges;the obtained directed graphdoes not have cycles.InputThe first line of input contains two space-separated integersnandm(2 ≤n≤ 2·105,n- 1 ≤m≤ 2·105), the number of vertices and edges in the graph. The followingmlines contain three space-separated integersai,biandci(1 ≤ai,bi≤n,ai≠bi,1 ≤ci≤ 104), which means that there is an undirected edge fromaitobiwith flow volumeci.It is guaranteed that there are no two edges connecting the same vertices; the given graph is connected; a solution always exists.OutputOutputmlines, each containing one integerdi, which should be 0 if the direction of thei-th edge isai→bi(the flow goes from vertexaito vertexbi) and should be 1 otherwise. The edges are numbered from 1 tomin the order they are given in the input.If there are several solutions you can print any of them.ExamplesInput3 33 2 101 2 103 1 5Output101Input4 51 2 101 3 102 3 54 2 153 4 5Output00110NoteIn the first test case, 10 flow units pass through path, and 5 flow units pass directly from source to sink:.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "79ee1471", "template_md5": "35d339e4", "result": "You are given an undirected graph with $n$ vertices and $m$ edges. Each edge $(a_i, b_i)$ has a flow volume $c_i$.  \n\nYour task is to direct all the edges in the graph so that:\n\n* For each vertex $v$ (where $1 < v < n$), the sum of the flow volumes of incoming edges is equal to the sum of the flow volumes of outgoing edges.\n* Vertex 1 has no incoming edges.\n* The resulting directed graph does not have any cycles.\n\nFor each edge, output 0 if the direction of the flow is from vertex $a_i$ to vertex $b_i$, and 1 otherwise. \n\n\n\nLet me know if you'd like me to elaborate on any part of the problem!"}, {"prompt_md5": "2d86a3a0", "template_md5": "465699a0", "result": "You are given a connected graph with a specified flow amount for each undirected edge.  You need to assign a direction to each edge so that:\n\n* The total flow into each vertex (except the source and sink) is equal to the total flow out.\n* The source vertex has no incoming edges.\n* The resulting directed graph has no cycles.\n\nOutput the direction (0 for one way, 1 for the other) for each edge."}]}