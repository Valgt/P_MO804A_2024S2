{"uid": "1972-A", "url": "https://codeforces.com/contest/1972/problem/A", "tags": ["brute force", " greedy", " two pointers"], "title": "1972-A", "statement": "A. Contest Proposaltime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA contest contains $$$n$$$ problems and the difficulty of the $$$i$$$-th problem is expected to beat most$$$b_i$$$. There are already $$$n$$$ problem proposals and the difficulty of the $$$i$$$-th problem is $$$a_i$$$. Initially, both $$$a_1, a_2, \\\\ldots, a_n$$$ and $$$b_1, b_2, \\\\ldots, b_n$$$ are sorted in non-decreasing order.Some of the problems may be more difficult than expected, so the writers must propose more problems. When a new problem with difficulty $$$w$$$ is proposed, the most difficult problem will be deleted from the contest, and the problems will be sorted in a way that the difficulties are non-decreasing.In other words, in each operation, you choose an integer $$$w$$$, insert it into the array $$$a$$$, sort array $$$a$$$ in non-decreasing order, and remove the last element from it.Find the minimum number of new problems to make $$$a_i\\\\le b_i$$$ for all $$$i$$$.InputEach test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1\\\\le t\\\\le 100$$$). The description of the test cases follows.The first line of each test case contains only one positive integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 100$$$), representing the number of problems.The second line of each test case contains an array $$$a$$$ of length $$$n$$$ ($$$1\\\\le a_1\\\\le a_2\\\\le\\\\cdots\\\\le a_n\\\\le 10^9$$$).The third line of each test case contains an array $$$b$$$ of length $$$n$$$ ($$$1\\\\le b_1\\\\le b_2\\\\le\\\\cdots\\\\le b_n\\\\le 10^9$$$).OutputFor each test case, print an integer as your answer in a new line.ExampleInput261000 1400 2000 2000 2200 2700800 1200 1500 1800 2200 300064 5 6 7 8 91 2 3 4 5 6Output2 3NoteIn the first test case:Propose a problem with difficulty $$$w=800$$$ and $$$a$$$ becomes $$$[800,1000,1400,2000,2000,2200]$$$.Propose a problem with difficulty $$$w=1800$$$ and $$$a$$$ becomes $$$[800,1000,1400,1800,2000,2000]$$$.It can be proved that it's impossible to reach the goal by proposing fewer new problems.In the second test case:Propose a problem with difficulty $$$w=1$$$ and $$$a$$$ becomes $$$[1,4,5,6,7,8]$$$.Propose a problem with difficulty $$$w=2$$$ and $$$a$$$ becomes $$$[1,2,4,5,6,7]$$$.Propose a problem with difficulty $$$w=3$$$ and $$$a$$$ becomes $$$[1,2,3,4,5,6]$$$.It can be proved that it's impossible to reach the goal by proposing fewer new problems.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a9125ea3", "template_md5": "35d339e4", "result": "You are given two arrays,  $a$ and $b$, both of length $n$.  Each element in $a$ represents the difficulty of a problem that is already proposed for a contest, and each element in $b$ represents the expected difficulty of a problem. The arrays are initially sorted in non-decreasing order.\n\nYou can propose new problems to the contest.  Each time you propose a problem with difficulty $w$, you:\n\n1. Insert $w$ into the array $a$.\n2. Sort the array $a$ in non-decreasing order.\n3. Remove the last element from the array $a$.\n\nYour goal is to find the minimum number of new problems you need to propose so that $a_i \\le b_i$ for all $i$ (meaning the difficulty of each proposed problem is less than or equal to the expected difficulty). \n\n\n\nLet me know if you'd like help with the algorithm to solve this problem!"}, {"prompt_md5": "29723f99", "template_md5": "465699a0", "result": "You have two lists of numbers, one representing the difficulty of existing problems and the other representing the desired difficulty. You can add new problems to the existing list, but each time you add a problem, the hardest problem is removed.  Find the minimum number of new problems you need to add to make sure the difficulty of each existing problem is less than or equal to the desired difficulty."}]}