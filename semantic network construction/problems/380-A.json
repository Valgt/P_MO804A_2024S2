{"uid": "380-A", "url": "https://codeforces.com/contest/380/problem/A", "tags": ["binary search", " brute force"], "title": "380-A", "statement": "A. Sereja and Prefixestime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutSereja loves number sequences very much. That's why he decided to make himself a new one following a certain algorithm.Sereja takes a blank piece of paper. Then he starts writing out the sequence inmstages. Each time he either adds a new number to the end of the sequence or takeslfirst elements of the current sequence and adds themctimes to the end. More formally, if we represent the current sequence asa1,a2, ...,an, then after we apply the described operation, the sequence transforms intoa1,a2, ...,an[,a1,a2, ...,al](the block in the square brackets must be repeatedctimes).A day has passed and Sereja has completed the sequence. He wonders what are the values of some of its elements. Help Sereja.InputThe first line contains integerm(1 ≤m≤ 105)— the number of stages to build a sequence.Nextmlines contain the description of the stages in the order they follow. The first number in the line is a type of stage (1 or 2). Type 1 means adding one number to the end of the sequence, in this case the line contains integerxi(1 ≤xi≤ 105)— the number to add. Type 2 means copying a prefix of lengthlito the endcitimes, in this case the line further contains two integersli,ci(1 ≤li≤ 105, 1 ≤ci≤ 104),liis the length of the prefix,ciis the number of copyings. It is guaranteed that the length of prefixliis never larger than the current length of the sequence.The next line contains integern(1 ≤n≤ 105)— the number of elements Sereja is interested in. The next line contains the numbers of elements of the final sequence Sereja is interested in. The numbers are given in the strictly increasing order. It is guaranteed that all numbers are strictly larger than zero and do not exceed the length of the resulting sequence. Consider the elements of the final sequence numbered starting from1from the beginning to the end of the sequence.Please, do not use the%lldspecifier to read or write 64-bit integers in С++. It is preferred to use thecin,coutstreams or the%I64dspecifier.OutputPrint the elements that Sereja is interested in, in the order in which their numbers occur in the input.ExamplesInput61 11 22 2 11 32 5 21 4161 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16Output1 2 1 2 3 1 2 1 2 3 1 2 1 2 3 4", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5376e74f", "template_md5": "35d339e4", "result": "You are given a sequence of numbers that is built in stages. Each stage can be one of two types:\n\n* **Type 1:** Add a new number to the end of the sequence.\n* **Type 2:** Take a prefix of the sequence (a consecutive group of numbers at the beginning) and repeat it a certain number of times at the end of the sequence.\n\nYou are given a description of all the stages.  You are also given a number of positions in the final sequence and need to find the values of the numbers at those positions. \n\n**Input:**\n\n* The first line contains the number of stages ($m$).\n* The next $m$ lines describe each stage. Each line starts with a 1 or 2 indicating the type of stage.\n    * If it's a type 1 stage, the next number is the value to be added.\n    * If it's a type 2 stage, the next two numbers are the length of the prefix and the number of times to repeat it.\n* The next line contains the number of positions ($n$) you want to know.\n* The next line contains $n$ distinct numbers representing the positions you are interested in.\n\n**Output:**\n\nPrint the values of the numbers at the specified positions in the final sequence."}, {"prompt_md5": "e54a6e3d", "template_md5": "465699a0", "result": "A sequence is built step-by-step. Each step either adds a number to the end or copies a prefix of the sequence and repeats it multiple times.  You are given a description of the steps and a list of positions in the final sequence. Find the values at those positions."}]}