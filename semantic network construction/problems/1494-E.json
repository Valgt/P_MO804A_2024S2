{"uid": "1494-E", "url": "https://codeforces.com/contest/1494/problem/E", "tags": ["constructive algorithms", " data structures", " graphs", " hashing"], "title": "1494-E", "statement": "E. A-Z Graphtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a directed graph consisting of $$$n$$$ vertices. Each directed edge (or arc) labeled with a single character. Initially, the graph is empty.You should process $$$m$$$ queries with it. Each query is one of three types:\"$$$+$$$ $$$u$$$ $$$v$$$ $$$c$$$\" — add arc from $$$u$$$ to $$$v$$$ with label $$$c$$$. It's guaranteed that there is no arc $$$(u, v)$$$ in the graph at this moment;\"$$$-$$$ $$$u$$$ $$$v$$$\" — erase arc from $$$u$$$ to $$$v$$$. It's guaranteed that the graph contains arc $$$(u, v)$$$ at this moment;\"$$$?$$$ $$$k$$$\" — find the sequence of $$$k$$$ vertices $$$v_1, v_2, \\\\dots, v_k$$$ such that there exist both routes $$$v_1 \\\\to v_2 \\\\to \\\\dots \\\\to v_k$$$ and $$$v_k \\\\to v_{k - 1} \\\\to \\\\dots \\\\to v_1$$$ and if you write down characters along both routes you'll get the same string. You can visit the same vertices any number of times.InputThe first line contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$; $$$1 \\\\le m \\\\le 2 \\\\cdot 10^5$$$) — the number of vertices in the graph and the number of queries.The next $$$m$$$ lines contain queries — one per line. Each query is one of three types:\"$$$+$$$ $$$u$$$ $$$v$$$ $$$c$$$\" ($$$1 \\\\le u, v \\\\le n$$$; $$$u \\\\neq v$$$; $$$c$$$ is a lowercase Latin letter);\"$$$-$$$ $$$u$$$ $$$v$$$\" ($$$1 \\\\le u, v \\\\le n$$$; $$$u \\\\neq v$$$);\"$$$?$$$ $$$k$$$\" ($$$2 \\\\le k \\\\le 10^5$$$).It's guaranteed that you don't add multiple edges and erase only existing edges. Also, there is at least one query of the third type.OutputFor each query of the third type, printYESif there exist the sequence $$$v_1, v_2, \\\\dots, v_k$$$ described above, orNOotherwise.ExampleInput3 11 + 1 2 a + 2 3 b + 3 2 a + 2 1 b ? 3 ? 2 - 2 1 - 3 2 + 2 1 c + 3 2 d ? 5OutputYES NO YESNoteIn the first query of the third type $$$k = 3$$$, we can, for example, choose a sequence $$$[1, 2, 3]$$$, since $$$1 \\\\xrightarrow{\\\\text{a}} 2 \\\\xrightarrow{\\\\text{b}} 3$$$ and $$$3 \\\\xrightarrow{\\\\text{a}} 2 \\\\xrightarrow{\\\\text{b}} 1$$$.In the second query of the third type $$$k = 2$$$, and we can't find sequence $$$p_1, p_2$$$ such that arcs $$$(p_1, p_2)$$$ and $$$(p_2, p_1)$$$ have the same characters.In the third query of the third type, we can, for example, choose a sequence $$$[1, 2, 3, 2, 1]$$$, where $$$1 \\\\xrightarrow{\\\\text{a}} 2 \\\\xrightarrow{\\\\text{b}} 3 \\\\xrightarrow{\\\\text{d}} 2 \\\\xrightarrow{\\\\text{c}} 1$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "06b2a91d", "template_md5": "35d339e4", "result": "You are given a graph with $n$ vertices. You will be given $m$ operations to perform on the graph. Each operation can be one of three types:\n\n1. **+ u v c**: Add a directed edge from vertex $u$ to vertex $v$ labeled with the character $c$.\n2. **- u v**: Remove the directed edge from vertex $u$ to vertex $v$.\n3. **? k**: Find a sequence of $k$ vertices $v_1, v_2, ..., v_k$ such that:\n    * There are paths from $v_1$ to $v_k$ and from $v_k$ to $v_1$ in the graph.\n    * The characters on both paths are the same.\n\nYou can visit the same vertex multiple times in a path.\n\nFor each \"?\" operation, output \"YES\" if such a sequence exists, otherwise output \"NO\"."}, {"prompt_md5": "4d23d286", "template_md5": "465699a0", "result": "You are given a graph with numbered nodes. You can add directed edges between nodes, each labeled with a letter.  You need to answer queries:\n\n* Add an edge from node u to node v with a given letter label.\n* Remove an existing edge from node u to node v.\n* Find the shortest path of length k between a node and itself, where the path can be traversed in both directions and the letters on the path read the same forwards and backwards. \n\n\nLet me know if you'd like me to elaborate on any part of this."}]}