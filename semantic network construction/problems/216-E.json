{"uid": "216-E", "url": "https://codeforces.com/contest/216/problem/E", "tags": ["math", " number theory"], "title": "216-E", "statement": "E. Martian Lucktime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutYou know that the Martians use a number system with basek. Digitb(0 ≤b<k) is consideredlucky, as the first contact between the Martians and the Earthlings occurred in yearb(by Martian chronology).Adigital rootd(x)of numberxis a number that consists of a single digit, resulting after cascading summing of all digits of numberx. Word \"cascading\" means that if the first summing gives us a number that consists of several digits, then we sum up all digits again, and again, until we get a one digit number.For example,d(35047) =d((3 + 5 + 0 + 4)7) =d(157) =d((1 + 5)7) =d(67) = 67. In this sample the calculations are performed in the 7-base notation.If a number's digital root equalsb, the Martians also call this number lucky.You have strings, which consists ofndigits in thek-base notation system. Your task is to find, how many distinct substrings of the given string are lucky numbers. Leading zeroes are permitted in the numbers.Note that substrings[i...j]of the strings=a1a2...an(1 ≤i≤j≤n) is the stringaiai+ 1...aj. Two substringss[i1...j1]ands[i2...j2]of the stringsare different if eitheri1≠i2orj1≠j2.InputThe first line contains three integersk,bandn(2 ≤k≤ 109,0 ≤b<k,1 ≤n≤ 105).The second line contains stringsas a sequence ofnintegers, representing digits in thek-base notation: thei-th integer equalsai(0 ≤ai<k) — thei-th digit of strings. The numbers in the lines are space-separated.OutputPrint a single integer — the number of substrings that are lucky numbers.Please, do not use the %lld specifier to read or write 64-bit integers in С++. It is preferred to use the cin, cout streams or the %I64d specifier.ExamplesInput10 5 63 2 0 5 6 1Output5Input7 6 43 5 0 4Output1Input257 0 30 0 256Output3NoteIn the first sample the following substrings have the sought digital root:s[1... 2]= \"3 2\",s[1... 3]= \"3 2 0\",s[3... 4]= \"0 5\",s[4... 4]= \"5\" ands[2... 6]= \"2 0 5 6 1\".", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ca3d14ad", "template_md5": "35d339e4", "result": "You are given a number represented as a string of digits in base $k$.  Each digit is between 0 and $k-1$.  \n\nYou need to find the number of substrings of this number that have a digital root equal to $b$.\n\nThe digital root of a number is found by repeatedly summing the digits of the number until a single digit is left. For example, the digital root of 35047 is 6.\n\n**Input:**\n\n* $k$: The base of the number system.\n* $b$: The target digital root.\n* $n$: The length of the number string.\n* $a_1, a_2, ..., a_n$: The digits of the number in base $k$.\n\n**Output:**\n\n* The number of lucky substrings."}, {"prompt_md5": "1d295b52", "template_md5": "465699a0", "result": "You are given a number represented as a string of digits in a base-k system.  Find the number of substrings within this number that have a special property: the sum of their digits, repeatedly added together until a single digit remains, equals a given value 'b'."}]}