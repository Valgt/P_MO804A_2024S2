{"uid": "1980-F1", "url": "https://codeforces.com/contest/1980/problem/F1", "tags": ["data structures", " math", " sortings"], "title": "1980-F1", "statement": "F1. Field Division (easy version)time limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is an easy version of the problem; it differs from the hard version only by the question. The easy version only needs you to print whether some values are non-zero or not. The hard version needs you to print the exact values.Alice and Bob are dividing the field. The field is a rectangle of size $$$n \\\\times m$$$ ($$$2 \\\\le n, m \\\\le 10^9$$$), the rows are numbered from $$$1$$$ to $$$n$$$ from top to bottom, and the columns are numbered from $$$1$$$ to $$$m$$$ from left to right. The cell at the intersection of row $$$r$$$ and column $$$c$$$ is denoted as ($$$r, c$$$).Bob has $$$k$$$ ($$$2 \\\\le k \\\\le 2 \\\\cdot 10^5$$$) fountains, all of them are located in different cells of the field. Alice is responsible for dividing the field, but she must meet several conditions:To divide the field, Alice will start her path in any free (without a fountain) cell on the left or top side of the field and will move, each time moving to the adjacent celldownorright. Her path will end on the right or bottom side of the field.Alice's path will divide the field into two parts — one part will belong to Alice (this part includes the cells of her path), the other part — to Bob.Alice will own the part that includes the cell ($$$n, 1$$$).Bob will own the part that includes the cell ($$$1, m$$$).Alice wants to divide the field in such a way as to get as many cells as possible.Bob wants to keep ownership of all the fountains, but he can give one of them to Alice. First, output the integer $$$\\\\alpha$$$ — the maximum possible size of Alice's plot, if Bob does not give her any fountain (i.e., all fountains will remain on Bob's plot). Then output $$$k$$$ non-negative integers $$$a_1, a_2, \\\\dots, a_k$$$, where:$$$a_i=0$$$, if after Bob gives Alice the $$$i$$$-th fountain, the maximum possible size of Alice's plot does not increase (i.e., remains equal to $$$\\\\alpha$$$);$$$a_i=1$$$, if after Bob gives Alice the $$$i$$$-th fountain, the maximum possible size of Alice's plot increases (i.e., becomes greater than $$$\\\\alpha$$$).InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases.The first line of each test case contains three integers $$$n$$$, $$$m$$$, and $$$k$$$ ($$$2 \\\\le n, m \\\\le 10^9$$$, $$$2 \\\\le k \\\\le 2 \\\\cdot 10^5$$$) — the field sizes and the number of fountains, respectively.Then follow $$$k$$$ lines, each containing two numbers $$$r_i$$$ and $$$c_i$$$ ($$$1 \\\\le r_i \\\\le n$$$, $$$1 \\\\le c_i \\\\le m$$$) — the coordinates of the cell with the $$$i$$$-th fountain. It is guaranteed that all cells are distinct and none of them is ($$$n, 1$$$).It is guaranteed that the sum of $$$k$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, first output $$$\\\\alpha$$$ — the maximum size of the plot that can belong to Alice if Bob does not give her any of the fountains. Then output $$$k$$$ non-negative integers $$$a_1, a_2, \\\\dots, a_k$$$, where:$$$a_i=0$$$, if after Bob gives Alice the $$$i$$$-th fountain, the maximum possible size of Alice's plot does not increase compared to the case when all $$$k$$$ fountains belong to Bob;$$$a_i=1$$$, if after Bob gives Alice the $$$i$$$-th fountain, the maximum possible size of Alice's plot increases compared to the case when all $$$k$$$ fountains belong to Bob.If you output any other positive number instead of $$$1$$$ that fits into a 64-bit signed integer type, it will also be recognized as $$$1$$$. Thus, a solution to the hard version of this problem will also pass the tests for the easy version.ExampleInput52 2 31 11 22 25 5 41 22 23 44 32 5 91 21 51 12 22 42 51 42 31 36 4 46 21 31 41 23 4 52 13 21 41 32 4Output1 1 0 1  11 0 1 0 1  1 0 0 1 1 0 0 0 0 0  6 1 0 0 0  1 1 1 0 0 0NoteBelow are the images for the second example:The indices of the fountains are labeled in green. The cells belonging to Alice are marked in blue.Note that if Bob gives Alice fountain $$$1$$$ or fountain $$$3$$$, then that fountain cannot be on Alice's plot.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "3f449ec6", "template_md5": "35d339e4", "result": "You are given a rectangle of size $n \\times m$ and $k$ points within the rectangle.  \n\n**Task 1:**\n\nFind the maximum number of cells that can be owned by one person if no points are given away.\n\n**Task 2:**\n\nFor each point, determine if giving it to the other person would increase the maximum number of cells they could own.\n\n**Input:**\n\n* $t$: the number of test cases\n* For each test case:\n    * $n$: the number of rows\n    * $m$: the number of columns\n    * $k$: the number of points\n    * $k$ lines, each containing the row and column coordinates of a point.\n\n**Output:**\n\n* For each test case:\n    * The maximum number of cells one person can own without any points being given away.\n    * $k$ integers, where each integer is either 0 or 1. \n        * 0 means giving the corresponding point does not increase the maximum number of cells the other person can own.\n        * 1 means giving the corresponding point does increase the maximum number of cells the other person can own."}, {"prompt_md5": "881ac05b", "template_md5": "465699a0", "result": "You are given a rectangular grid and some points on the grid.  You need to divide the grid into two parts with a path that starts on the left or top edge and ends on the right or bottom edge.  You want to maximize the size of the part you control.  You can optionally give up one of the points to increase the size of your part.  Determine the maximum size of your part without giving up any points, and for each point, say whether giving it up would increase the size of your part."}]}