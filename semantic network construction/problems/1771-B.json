{"uid": "1771-B", "url": "https://codeforces.com/contest/1771/problem/B", "tags": ["binary search", " constructive algorithms", " dp", " two pointers"], "title": "1771-B", "statement": "B. Hossam and Friendstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputHossam makes a big party, and he will invite his friends to the party.He has $$$n$$$ friends numbered from $$$1$$$ to $$$n$$$. They will be arranged in a queue as follows: $$$1, 2, 3, \\\\ldots, n$$$.Hossam has a list of $$$m$$$ pairs of his friends that don't know each other. Any pair not present in this list are friends.A subsegment of the queue starting from the friend $$$a$$$ and ending at the friend $$$b$$$ is $$$[a, a + 1, a + 2, \\\\ldots, b]$$$. A subsegment of the queue is calledgoodwhen all pairs of that segment are friends.Hossam wants to know how many pairs $$$(a, b)$$$ there are ($$$1 \\\\le a \\\\le b \\\\le n$$$), such that the subsegment starting from the friend $$$a$$$ and ending at the friend $$$b$$$ is good.InputThe input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 2 \\\\cdot 10^4$$$), the number of test cases. Description of the test cases follows.The first line of each test case contains two integer numbers $$$n$$$ and $$$m$$$ ($$$2 \\\\le n \\\\le 10^5$$$, $$$0 \\\\le m \\\\le 10^5$$$) representing the number of friends and the number of pairs, respectively.The $$$i$$$-th of the next $$$m$$$ lines contains two integers $$$x_i$$$ and $$$y_i$$$ ($$$1 \\\\le x_i, y_i\\\\le n$$$, $$$x_i \\\\neq y_i$$$) representing a pair of Hossam's friends that don't know each other.Note that pairs can be repeated.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$, and the sum of $$$m$$$ over all test cases does not exceed $$$10^5$$$.OutputFor each test case print an integer â€” the number of good subsegments.ExampleInput23 21 32 34 21 22 3Output4 5NoteIn the first example, the answer is $$$4$$$.The good subsegments are:[1][2][3][1, 2]In the second example, the answer is $$$5$$$.The good subsegments are:[1][2][3][4][3, 4]", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "3fe08553", "template_md5": "35d339e4", "result": "You are given a list of $n$ people numbered from 1 to $n$. You are also given a list of $m$ pairs of people who do not know each other.  \n\nA subsegment of the list is a consecutive sequence of people. A subsegment is considered \"good\" if every pair of people within that subsegment knows each other.\n\nYour task is to find the number of good subsegments. \n\n**Input:**\n\n* The first line contains an integer $t$ representing the number of test cases.\n* For each test case:\n    * The first line contains two integers $n$ and $m$.\n    * The next $m$ lines each contain two integers $x_i$ and $y_i$ representing a pair of people who do not know each other.\n\n**Output:**\n\nFor each test case, print the number of good subsegments."}, {"prompt_md5": "51d8bf70", "template_md5": "465699a0", "result": "You are given a list of people and a list of pairs of people who don't know each other.  Find the number of sub-groups of people where everyone within each sub-group knows each other."}]}