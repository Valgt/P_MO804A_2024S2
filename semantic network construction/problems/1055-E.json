{"uid": "1055-E", "url": "https://codeforces.com/contest/1055/problem/E", "tags": ["binary search", " dp"], "title": "1055-E", "statement": "E. Segments on the Linetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are a given a list of integers $$$a_1, a_2, \\\\ldots, a_n$$$ and $$$s$$$ of its segments $$$[l_j; r_j]$$$ (where $$$1 \\\\le l_j \\\\le r_j \\\\le n$$$).You need to select exactly $$$m$$$ segments in such a way that the $$$k$$$-th order statistic of the multiset of $$$a_i$$$, where $$$i$$$ is contained in at least one segment, is the smallest possible. If it's impossible to select a set of $$$m$$$ segments in such a way that the multiset contains at least $$$k$$$ elements, print-1.The $$$k$$$-th order statistic of a multiset is the value of the $$$k$$$-th element after sorting the multiset in non-descending order.InputThe first line contains four integers $$$n$$$, $$$s$$$, $$$m$$$ and $$$k$$$ ($$$1 \\\\le m \\\\le s \\\\le 1500$$$, $$$1 \\\\le k \\\\le n \\\\le 1500$$$) — the size of the list, the number of segments, the number of segments to choose and the statistic number.The second line contains $$$n$$$ integers $$$a_i$$$ ($$$1 \\\\le a_i \\\\le 10^9$$$) — the values of the numbers in the list.Each of the next $$$s$$$ lines contains two integers $$$l_i$$$ and $$$r_i$$$ ($$$1 \\\\le l_i \\\\le r_i \\\\le n$$$) — the endpoints of the segments.It is possible that some segments coincide.OutputPrint exactly one integer — the smallest possible $$$k$$$-th order statistic, or-1if it's impossible to choose segments in a way that the multiset contains at least $$$k$$$ elements.ExamplesInput4 3 2 23 1 3 21 22 34 4Output2Input5 2 1 11 2 3 4 52 41 5Output1Input5 3 3 55 5 2 1 11 22 33 4Output-1NoteIn the first example, one possible solution is to choose the first and the third segment. Together they will cover three elements of the list (all, except for the third one). This way the $$$2$$$-nd order statistic for the covered elements is $$$2$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6a1ef59c", "template_md5": "465699a0", "result": "You are given a list of numbers and a set of ranges within that list.  You need to choose a specific number of ranges so that the  'k'th smallest number within the chosen ranges is as small as possible. If it's impossible to choose enough ranges to get at least 'k' numbers, output -1."}, {"prompt_md5": "d9d3a385", "template_md5": "35d339e4", "result": "You are given a list of $n$ integers $a_1, a_2, ..., a_n$ and $s$ segments $[l_j; r_j]$ where $1 \\le l_j \\le r_j \\le n$. \n\nYou need to choose exactly $m$ segments ($1 \\le m \\le s$) such that the $k$-th smallest number in the set of all $a_i$ values within the chosen segments is as small as possible.  \n\nIf it's impossible to choose $m$ segments that contain at least $k$ elements, print -1.\n\nThe $k$-th smallest number in a set is the value that would be in the $k$-th position if the set was sorted in ascending order.\n\n**Input:**\n\n* The first line contains four integers: $n$, $s$, $m$, and $k$.\n* The second line contains the $n$ integers $a_1, a_2, ..., a_n$.\n* Each of the next $s$ lines contains two integers $l_i$ and $r_i$, representing the endpoints of a segment.\n\n**Output:**\n\n* Print a single integer: the smallest possible $k$-th smallest number, or -1 if it's impossible to choose $m$ segments with at least $k$ elements."}]}