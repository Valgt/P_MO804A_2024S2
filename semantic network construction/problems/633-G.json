{"uid": "633-G", "url": "https://codeforces.com/contest/633/problem/G", "tags": ["bitmasks", " data structures", " dfs and similar", " math", " number theory"], "title": "633-G", "statement": "G. Yash And Treestime limit per test4 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYash loves playing with trees and gets especially excited when they have something to do with prime numbers. On his 20th birthday he was granted with a rooted tree ofnnodes to answer queries on. Hearing of prime numbers on trees, Yash gets too intoxicated with excitement and asks you to help out and answer queries on trees for him. Tree is rooted at node1. Each nodeihas some valueaiassociated with it. Also, integermis given.There are queries of two types:for given nodevand integer valuex, increase allaiin the subtree of nodevby valuexfor given nodev, find the number of prime numberspless thanm, for which there exists a nodeuin the subtree ofvand a non-negative integer valuek, such thatau=p+m·k.InputThe first of the input contains two integersnandm(1 ≤n≤ 100 000, 1 ≤m≤ 1000) — the number of nodes in the tree and valuemfrom the problem statement, respectively.The second line consists ofnintegersai(0 ≤ai≤ 109) — initial values of the nodes.Then follown- 1lines that describe the tree. Each of them contains two integersuiandvi(1 ≤ui,vi≤n) — indices of nodes connected by thei-th edge.Next line contains a single integerq(1 ≤q≤ 100 000) — the number of queries to proceed.Each of the lastqlines is either1 v xor2 v(1 ≤v≤n, 0 ≤x≤ 109), giving the query of the first or the second type, respectively. It's guaranteed that there will be at least one query of the second type.OutputFor each of the queries of the second type print the number of suitable prime numbers.ExamplesInput8 203 7 9 8 4 11 7 31 21 33 44 54 64 75 842 11 1 12 52 4Output311Input5 108 7 5 1 01 22 31 52 431 1 01 1 22 2Output2", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5613ce34", "template_md5": "35d339e4", "result": "You are given a rooted tree with $n$ nodes. Each node has an associated value $a_i$. You are also given an integer $m$.\n\nThere are two types of queries:\n\n1. **Update:** For a given node $v$ and an integer $x$, increase all $a_i$ in the subtree of node $v$ by $x$.\n2. **Count:** For a given node $v$, find the number of prime numbers $p$ less than $m$ such that there exists a node $u$ in the subtree of $v$ and a non-negative integer $k$ such that $a_u = p + m \\cdot k$.\n\n**Input:**\n\n* The first line contains two integers $n$ and $m$ ($1 \\le n \\le 100000$, $1 \\le m \\le 1000$).\n* The second line contains $n$ integers $a_i$ ($0 \\le a_i \\le 10^9$).\n* The next $n-1$ lines describe the tree, each line containing two integers $u$ and $v$ ($1 \\le u, v \\le n$) representing an edge between nodes $u$ and $v$.\n* The next line contains an integer $q$ ($1 \\le q \\le 100000$) representing the number of queries.\n* Each of the next $q$ lines describes a query:\n    * `1 v x`: Update query (update node $v$ and its subtree with $x$).\n    * `2 v`: Count query (count prime numbers for node $v$).\n\n**Output:**\n\nFor each count query, print the number of suitable prime numbers."}, {"prompt_md5": "db51ff6e", "template_md5": "465699a0", "result": "You are given a tree with nodes that have values associated with them. You can perform two types of operations:\n\n1. Increase the value of all nodes in a subtree by a given amount.\n2. For a given node, count how many prime numbers less than a given limit exist such that the node's value plus a multiple of the limit equals that prime number. \n\n\nYou need to process a series of these operations and answer the second type of query for each."}]}