{"uid": "1566-C", "url": "https://codeforces.com/contest/1566/problem/C", "tags": ["bitmasks", " constructive algorithms", " dp", " greedy"], "title": "1566-C", "statement": "C. MAX-MEX Cuttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA binary string is a string that consists of characters $$$0$$$ and $$$1$$$. A bi-table is a table that has exactly two rows of equal length, each being a binary string.Let $$$\\\\operatorname{MEX}$$$ of a bi-table be the smallest digit among $$$0$$$, $$$1$$$, or $$$2$$$ that does not occur in the bi-table. For example, $$$\\\\operatorname{MEX}$$$ for $$$\\\\begin{bmatrix} 0011\\\\\\\\ 1010 \\\\end{bmatrix}$$$ is $$$2$$$, because $$$0$$$ and $$$1$$$ occur in the bi-table at least once. $$$\\\\operatorname{MEX}$$$ for $$$\\\\begin{bmatrix} 111\\\\\\\\ 111 \\\\end{bmatrix}$$$ is $$$0$$$, because $$$0$$$ and $$$2$$$ do not occur in the bi-table, and $$$0 < 2$$$.You are given a bi-table with $$$n$$$ columns. You should cut it into any number of bi-tables (each consisting of consecutive columns) so that each column is in exactly one bi-table. It is possible to cut the bi-table into a single bi-table — the whole bi-table.What is themaximalsum of $$$\\\\operatorname{MEX}$$$ of all resulting bi-tables can be?InputThe input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases. Description of the test cases follows.The first line of the description of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 10^5$$$) — the number of columns in the bi-table.Each of the next two lines contains a binary string of length $$$n$$$ — the rows of the bi-table.It's guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.OutputFor each test case print a single integer — the maximal sum of $$$\\\\operatorname{MEX}$$$ of all bi-tables that it is possible to get by cutting the given bi-table optimally.ExampleInput4 7 0101000 1101100 5 01100 10101 2 01 01 6 000000 111111Output8 8 2 12NoteIn the first test case you can cut the bi-table as follows:$$$\\\\begin{bmatrix} 0\\\\\\\\ 1 \\\\end{bmatrix}$$$, its $$$\\\\operatorname{MEX}$$$ is $$$2$$$.$$$\\\\begin{bmatrix} 10\\\\\\\\ 10 \\\\end{bmatrix}$$$, its $$$\\\\operatorname{MEX}$$$ is $$$2$$$.$$$\\\\begin{bmatrix} 1\\\\\\\\ 1 \\\\end{bmatrix}$$$, its $$$\\\\operatorname{MEX}$$$ is $$$0$$$.$$$\\\\begin{bmatrix} 0\\\\\\\\ 1 \\\\end{bmatrix}$$$, its $$$\\\\operatorname{MEX}$$$ is $$$2$$$.$$$\\\\begin{bmatrix} 0\\\\\\\\ 0 \\\\end{bmatrix}$$$, its $$$\\\\operatorname{MEX}$$$ is $$$1$$$.$$$\\\\begin{bmatrix} 0\\\\\\\\ 0 \\\\end{bmatrix}$$$, its $$$\\\\operatorname{MEX}$$$ is $$$1$$$.The sum of $$$\\\\operatorname{MEX}$$$ is $$$8$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d33871bc", "template_md5": "35d339e4", "result": "You are given a table with two rows of binary digits (0 or 1).  The table has  'n' columns.  \n\nYou can cut the table into smaller tables, each with consecutive columns, so that each column is in exactly one smaller table.\n\nThe MEX (Minimum Excluded) of a table is the smallest number (0, 1, or 2) that does not appear in the table.\n\nWhat is the largest possible sum of the MEX values of all the smaller tables you can create? \n\n\nInput:\n\n* The first line contains the number of test cases 't'.\n* For each test case:\n    * The first line contains the number of columns 'n'.\n    * The next two lines contain the two rows of the table as binary strings of length 'n'.\n\nOutput:\n\n* For each test case, print the largest possible sum of MEX values."}, {"prompt_md5": "050cb402", "template_md5": "465699a0", "result": "You are given a 2xN grid of 0s and 1s.  You can cut the grid into smaller 2xM grids (where M is any number less than or equal to N)  horizontally.  The \"MEX\" of a grid is the smallest number (0, 1, or 2) that doesn't appear in that grid. What is the largest possible sum of the MEX values of all the smaller grids you can make?"}]}