{"uid": "1108-E2", "url": "https://codeforces.com/contest/1108/problem/E2", "tags": ["data structures", " implementation"], "title": "1108-E2", "statement": "E2. Array and Segments (Hard version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between easy and hard versions is a number of elements in the array.You are given an array $$$a$$$ consisting of $$$n$$$ integers. The value of the $$$i$$$-th element of the array is $$$a_i$$$.You are also given a set of $$$m$$$ segments. The $$$j$$$-th segment is $$$[l_j; r_j]$$$, where $$$1 \\\\le l_j \\\\le r_j \\\\le n$$$.You can choose some subset of the given set of segments and decrease values on each of the chosen segments by one (independently). For example, if the initial array $$$a = [0, 0, 0, 0, 0]$$$ and the given segments are $$$[1; 3]$$$ and $$$[2; 4]$$$ then you can choose both of them and the array will become $$$b = [-1, -2, -2, -1, 0]$$$.You have to choose some subset of the given segments (each segment can be chosen at most once) in such a way that if you apply this subset of segments to the array $$$a$$$ and obtain the array $$$b$$$ then the value $$$\\\\max\\\\limits_{i=1}^{n}b_i - \\\\min\\\\limits_{i=1}^{n}b_i$$$ will bemaximumpossible.Note thatyou can choose the empty set.If there are multiple answers, you can printany.If you are Python programmer, consider using PyPy instead of Python when you submit your code.InputThe first line of the input contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\\\le n \\\\le 10^5, 0 \\\\le m \\\\le 300$$$) — the length of the array $$$a$$$ and the number of segments, respectively.The second line of the input contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$-10^6 \\\\le a_i \\\\le 10^6$$$), where $$$a_i$$$ is the value of the $$$i$$$-th element of the array $$$a$$$.The next $$$m$$$ lines are contain two integers each. The $$$j$$$-th of them contains two integers $$$l_j$$$ and $$$r_j$$$ ($$$1 \\\\le l_j \\\\le r_j \\\\le n$$$), where $$$l_j$$$ and $$$r_j$$$ are the ends of the $$$j$$$-th segment.OutputIn the first line of the output print one integer $$$d$$$ — themaximumpossible value $$$\\\\max\\\\limits_{i=1}^{n}b_i - \\\\min\\\\limits_{i=1}^{n}b_i$$$ if $$$b$$$ is the array obtained by applying some subset of the given segments to the array $$$a$$$.In the second line of the output print one integer $$$q$$$ ($$$0 \\\\le q \\\\le m$$$) — the number of segments you apply.In the third line print $$$q$$$ distinct integers $$$c_1, c_2, \\\\dots, c_q$$$ inany order($$$1 \\\\le c_k \\\\le m$$$) — indices of segments you apply to the array $$$a$$$ in such a way that the value $$$\\\\max\\\\limits_{i=1}^{n}b_i - \\\\min\\\\limits_{i=1}^{n}b_i$$$ of the obtained array $$$b$$$ ismaximumpossible.If there are multiple answers, you can printany.ExamplesInput5 4 2 -2 3 1 2 1 3 4 5 2 5 1 3Output6 2 4 1Input5 4 2 -2 3 1 4 3 5 3 4 2 4 2 5Output7 2 3 2Input1 0 1000000Output0 0NoteIn the first example the obtained array $$$b$$$ will be $$$[0, -4, 1, 1, 2]$$$ so the answer is $$$6$$$.In the second example the obtained array $$$b$$$ will be $$$[2, -3, 1, -1, 4]$$$ so the answer is $$$7$$$.In the third example you cannot do anything so the answer is $$$0$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "1ebe1bad", "template_md5": "35d339e4", "result": "You are given an array of integers  $a$ of length $n$ and $m$ segments, where each segment is defined by its start and end indices $l_j$ and $r_j$. You can choose a subset of these segments and decrease the values of all elements within each chosen segment by 1. \n\nYour goal is to find the subset of segments that maximizes the difference between the maximum and minimum values in the resulting array after applying the chosen segments. \n\nOutput the maximum possible difference and the number of segments used to achieve it. If there are multiple solutions, any one is acceptable."}, {"prompt_md5": "6a1a5920", "template_md5": "465699a0", "result": "You are given a list of numbers and a set of ranges within that list. You can decrease the numbers within each chosen range by one.  Find the set of ranges to choose so that the difference between the largest and smallest number in the resulting list is as big as possible."}]}