{"uid": "1415-C", "url": "https://codeforces.com/contest/1415/problem/C", "tags": ["brute force", " dp", " implementation"], "title": "1415-C", "statement": "C. Bouncing Balltime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou're creating a game level for some mobile game. The level should contain some number of cells aligned in a row from left to right and numbered with consecutive integers starting from $$$1$$$, and in each cell you can either put a platform or leave it empty.In order to pass a level, a player must throw a ball from the left so that it first lands on a platform in the cell $$$p$$$, then bounces off it, then bounces off a platform in the cell $$$(p + k)$$$, then a platform in the cell $$$(p + 2k)$$$, and so on every $$$k$$$-th platform until it goes farther than the last cell. If any of these cells has no platform, you can't pass the level with these $$$p$$$ and $$$k$$$.You already have some level pattern $$$a_1$$$, $$$a_2$$$, $$$a_3$$$, ..., $$$a_n$$$, where $$$a_i = 0$$$ means there is no platform in the cell $$$i$$$, and $$$a_i = 1$$$ means there is one. You want to modify it so that the level can be passed with given $$$p$$$ and $$$k$$$. In $$$x$$$ seconds you can add a platform in some empty cell. In $$$y$$$ seconds you can remove the first cell completely, reducing the number of cells by one, and renumerating the other cells keeping their order. You can't do any other operation. Youcan notreduce the number of cells to less than $$$p$$$.Illustration for the third example test case. Crosses mark deleted cells. Blue platform is the newly added.What is the minimum number of seconds you need to make this level passable with given $$$p$$$ and $$$k$$$?InputThe first line contains the number of test cases $$$t$$$ ($$$1 \\\\le t \\\\le 100$$$). Description of test cases follows.The first line of each test case contains three integers $$$n$$$, $$$p$$$, and $$$k$$$ ($$$1 \\\\le p \\\\le n \\\\le 10^5$$$, $$$1 \\\\le k \\\\le n$$$) — the number of cells you have, the first cell that should contain a platform, and the period of ball bouncing required.The second line of each test case contains a string $$$a_1 a_2 a_3 \\\\ldots a_n$$$ ($$$a_i = 0$$$ or $$$a_i = 1$$$) — the initial pattern writtenwithout spaces.The last line of each test case contains two integers $$$x$$$ and $$$y$$$ ($$$1 \\\\le x, y \\\\le 10^4$$$) — the time required to add a platform and to remove the first cell correspondingly.The sum of $$$n$$$ over test cases does not exceed $$$10^5$$$.OutputFor each test case output a single integer — the minimum number of seconds you need to modify the level accordingly.It can be shown that it is always possible to make the level passable.ExampleInput3 10 3 2 0101010101 2 2 5 4 1 00000 2 10 11 2 3 10110011000 4 3Output2 4 10NoteIn the first test case it's best to just remove the first cell, after that all required platforms are in their places:0101010101. The stroked out digit is removed, the bold ones are where platforms should be located. The time required is $$$y = 2$$$.In the second test case it's best to add a platform to both cells $$$4$$$ and $$$5$$$:00000$$$\\\\to$$$00011. The time required is $$$x \\\\cdot 2 = 4$$$.In the third test case it's best to to remove the first cell twice and then add a platform to the cell which was initially $$$10$$$-th:10110011000$$$\\\\to$$$10110011010. The time required is $$$y \\\\cdot 2 + x = 10$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "7c72400f", "template_md5": "35d339e4", "result": "You are designing a game level with a row of cells numbered from 1 to $n$. Each cell can either have a platform (1) or be empty (0).\n\nA player throws a ball from the left. To pass the level, the ball must:\n\n1. Land on a platform in cell $p$.\n2. Bounce off a platform in cell $(p + k)$.\n3. Bounce off a platform in cell $(p + 2k)$, and so on, every $k$-th platform.\n\nThe ball must go beyond the last cell to complete the level.\n\nYou can modify the level in two ways:\n\n* Add a platform to an empty cell in $x$ seconds.\n* Remove the first cell and renumber the rest in $y$ seconds.\n\nYou cannot reduce the number of cells to less than $p$.\n\nGiven the initial cell pattern ($a_1$, $a_2$, ..., $a_n$), $p$, $k$, $x$, and $y$, find the minimum time to make the level passable."}, {"prompt_md5": "9d905dc3", "template_md5": "465699a0", "result": "You have a row of cells, some with platforms and some empty. A ball needs to bounce off platforms in specific cells. You can add platforms to empty cells or remove the first cell and renumber the rest. Find the minimum time to make the level passable."}]}