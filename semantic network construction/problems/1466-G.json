{"uid": "1466-G", "url": "https://codeforces.com/contest/1466/problem/G", "tags": ["combinatorics", " divide and conquer", " hashing", " math", " string suffix structures", " strings"], "title": "1466-G", "statement": "G. Song of the Sirenstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputWhoso in ignorance draws near to them and hears the Sirens' voice, he nevermore returns.Homer,OdysseyIn the times of Jason and the Argonauts, it was well known that sirens use the sound of their songs to lure sailors into their demise. Yet only a few knew that every time sirens call a sailor by his name, his will weakens, making him more vulnerable.For the purpose of this problem, both siren songs and names of the sailors will be represented as strings of lowercase English letters. The more times the sailor's name occurs as a contiguous substring of the song, the greater danger he is in.Jason found out that sirens can sing one of the $$$n+1$$$ songs, which have the following structure: let $$$s_i$$$ ($$$0 \\\\leq i \\\\leq n$$$) be the $$$i$$$-th song and $$$t$$$ be a string of length $$$n$$$, then for every $$$i < n$$$: $$$s_{i+1} = s_i t_i s_i$$$. In other words $$$i+1$$$-st song is the concatenation of $$$i$$$-th song, $$$i$$$-th letter ($$$0$$$-indexed) of $$$t$$$ and the $$$i$$$-th song.Fortunately, he also knows $$$s_0$$$ and $$$t$$$. Jason wonders how many times a sailor's name is mentioned in a particular song. Answer $$$q$$$ queries: given the sailor's name ($$$w$$$) and the index of a song ($$$i$$$) output the number of occurrences of $$$w$$$ in $$$s_i$$$ as a substring. As this number can be quite large, output its remainder modulo $$$10^9+7$$$.InputIn the first line of input there are two integers $$$n$$$, $$$q$$$ ( $$$ 1 \\\\leq n, q \\\\leq 10^5$$$) meaning that there are $$$n+1$$$ songs and $$$q$$$ queries. In the next two lines strings $$$s_0$$$ and $$$t$$$ follow ($$$1 \\\\leq |s_0| \\\\leq 100, |t| = n$$$).Next $$$q$$$ lines describe the queries; each one contains an integer $$$k$$$ ($$$ 0 \\\\leq k \\\\leq n$$$), the index of the song sung by the sirens, and a non-empty string $$$w$$$, which is the name of a sailor. All strings in this problem consist only of lowercase English letters, and the sum of lengths of sailors' names does not exceed $$$10^6$$$.OutputOutput $$$q$$$ lines, $$$i$$$-th of them should contain the remainder modulo $$$10^9+7$$$ of the number of occurrences of $$$w$$$ in $$$s_k$$$.ExamplesInput3 3 aa bcd 2 aba 3 ca 3 aaOutput2 2 8Input4 5 aba bbac 1 a 3 baca 3 ab 2 bab 4 abaOutput4 0 14 6 28NoteIn the first example songs of the sirens are as follows:Song $$$0$$$:aaSong $$$1$$$:aabaaSong $$$2$$$:aabaacaabaaSong $$$3$$$:aabaacaabaadaabaacaabaa", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ac1a4fd9", "template_md5": "35d339e4", "result": "You are given a string $t$ of length $n$ and a string $s_0$ of length at most 100.  The sirens sing a sequence of songs where each song is formed by repeating the previous song, then appending the current letter from $t$, and then repeating the previous song again.  \n\nFormally, the songs are defined as follows:\n\n* $s_0$ is the first song.\n* $s_{i+1} = s_i t_i s_i$ for $i = 0, 1, 2, ..., n-1$\n\nYou are given $q$ queries. Each query consists of a song index $k$ (between 0 and $n$) and a string $w$. For each query, you need to find the number of times the string $w$ appears as a substring in the song $s_k$.  Since this number can be large, output the remainder when this number is divided by $10^9 + 7$."}, {"prompt_md5": "42c1f044", "template_md5": "465699a0", "result": "You are given a string `t` and a starting string `s0`.  A sequence of strings `s` is generated where each string `si` is formed by concatenating `si-1`, the i-th character of `t`, and `si-1` again.\n\nYou need to answer queries. Each query consists of a string `w` and an index `k`. For each query, find the number of times `w` appears as a substring in `sk` and output the remainder when divided by 10^9 + 7."}]}