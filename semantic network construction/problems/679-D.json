{"uid": "679-D", "url": "https://codeforces.com/contest/679/problem/D", "tags": ["brute force", " dfs and similar", " graphs", " implementation", " math", " probabilities"], "title": "679-D", "statement": "D. Bear and Chasetime limit per test7 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBearland hasncities, numbered1throughn. There arembidirectional roads. Thei-th road connects two distinct citiesaiandbi. No two roads connect the same pair of cities. It's possible to get from any city to any other city (using one or more roads).The distance between citiesaandbis defined as the minimum number of roads used to travel betweenaandb.Limak is a grizzly bear. He is a criminal and your task is to catch him, or at least to try to catch him. You have only two days (today and tomorrow) and after that Limak is going to hide forever.Your main weapon is BCD (Bear Criminal Detector). Where you are in some city, you can use BCD and it tells you the distance between you and a city where Limak currently is. Unfortunately, BCD can be used only once a day.You don't know much about Limak's current location. You assume that he is in one ofncities, chosen uniformly at random (each city with probability). You decided for the following plan:Choose one city and use BCD there.After using BCD you can try to catch Limak (but maybe it isn't a good idea). In this case you choose one city and check it. You win if Limak is there. Otherwise, Limak becomes more careful and you will never catch him (you loose).Wait24hours to use BCD again. You know that Limak will change his location during that time. In detail, he will choose uniformly at random one of roads from his initial city, and he will use the chosen road, going to some other city.Tomorrow, you will again choose one city and use BCD there.Finally, you will try to catch Limak. You will choose one city and check it. You will win if Limak is there, and loose otherwise.Each time when you choose one of cities, you can choose any ofncities. Let's say it isn't a problem for you to quickly get somewhere.What is the probability of finding Limak, if you behave optimally?InputThe first line of the input contains two integersnandm(2 ≤n≤ 400,) — the number of cities and the number of roads, respectively.Then,mlines follow. Thei-th of them contains two integersaiandbi(1 ≤ai,bi≤n,ai≠bi) — cities connected by thei-th road.No two roads connect the same pair of cities. It's possible to get from any city to any other city.OutputPrint one real number — the probability of finding Limak, if you behave optimally. Your answer will be considered correct if its absolute error does not exceed10- 6.Namely: let's assume that your answer isa, and the answer of the jury isb. The checker program will consider your answer correct if|a-b| ≤ 10- 6.ExamplesInput3 31 21 32 3Output0.833333333333Input5 41 23 15 11 4Output1.000000000000Input4 41 21 32 31 4Output0.916666666667Input5 51 22 33 44 51 5Output0.900000000000NoteIn the first sample test, there are three cities and there is a road between every pair of cities. Let's analyze one of optimal scenarios.Use BCD in city1.With probabilityLimak is in this city and BCD tells you that the distance is0. You should try to catch him now and you win for sure.With probabilitythe distance is1because Limak is in city2or city3. In this case you should wait for the second day.You wait and Limak moves to some other city.There is probabilitythat Limak was in city2and then went to city3.that he went from2to1.that he went from3to2.that he went from3to1.Use BCD again in city1(though it's allowed to use it in some other city).If the distance is0then you're sure Limak is in this city (you win).If the distance is1then Limak is in city2or city3. Then you should guess that he is in city2(guessing city3would be fine too).You loose only if Limak was in city2first and then he moved to city3. The probability of loosing is. The answer is.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0cd6a5cd", "template_md5": "35d339e4", "result": "There are $n$ cities and $m$ roads connecting them.  Each road connects two distinct cities. You can travel between any two cities using the roads.\n\nYou have two days to find a target that is currently in one of the cities.  Each day, you can use a device that tells you the shortest distance to the target's location. You can only use the device once per day.\n\nOn the first day, choose a city and use the device.  The device will tell you the distance to the target. You can then choose a city to check if the target is there. If you are correct, you win. If you are incorrect, you lose.\n\nOn the second day, the target will move to a different city by traveling along one of the roads. You can choose a city and use the device again.  You can then choose a city to check if the target is there. If you are correct, you win. If you are incorrect, you lose.\n\nWhat is the probability of finding the target if you make the best possible choices each day?"}, {"prompt_md5": "93787f4d", "template_md5": "465699a0", "result": "You have two days to find a target that moves randomly between cities. You can use a tool once per day that tells you the shortest distance to the target's current location.  What is the highest probability of finding the target if you use the tool optimally?"}]}