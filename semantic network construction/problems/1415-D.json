{"uid": "1415-D", "url": "https://codeforces.com/contest/1415/problem/D", "tags": ["bitmasks", " brute force", " constructive algorithms"], "title": "1415-D", "statement": "D. XOR-guntime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputArkady owns anon-decreasingarray $$$a_1, a_2, \\\\ldots, a_n$$$. You are jealous of its beauty and want to destroy this property. You have a so-calledXOR-gunthat you can use one or more times.In one step you can select twoconsecutiveelements of the array, let's say $$$x$$$ and $$$y$$$, remove them from the array and insert the integer $$$x \\\\oplus y$$$ on their place, where $$$\\\\oplus$$$ denotes thebitwise XOR operation. Note that the length of the array decreases by one after the operation. You can't perform this operation when the length of the array reaches one.For example, if the array is $$$[2, 5, 6, 8]$$$, you can select $$$5$$$ and $$$6$$$ and replace them with $$$5 \\\\oplus 6 = 3$$$. The array becomes $$$[2, 3, 8]$$$.You want the array no longer be non-decreasing. What is the minimum number of steps needed? If the array stays non-decreasing no matter what you do, print $$$-1$$$.InputThe first line contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 10^5$$$) — the initial length of the array.The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\le a_i \\\\le 10^9$$$) — the elements of the array. It is guaranteed that $$$a_i \\\\le a_{i + 1}$$$ for all $$$1 \\\\le i < n$$$.OutputPrint a single integer — the minimum number of steps needed. If there is no solution, print $$$-1$$$.ExamplesInput4 2 5 6 8Output1Input3 1 2 3Output-1Input5 1 2 4 6 20Output2NoteIn the first example you can select $$$2$$$ and $$$5$$$ and the array becomes $$$[7, 6, 8]$$$.In the second example you can only obtain arrays $$$[1, 1]$$$, $$$[3, 3]$$$ and $$$[0]$$$ which are all non-decreasing.In the third example you can select $$$1$$$ and $$$2$$$ and the array becomes $$$[3, 4, 6, 20]$$$. Then you can, for example, select $$$3$$$ and $$$4$$$ and the array becomes $$$[7, 6, 20]$$$, which is no longer non-decreasing.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "94bb4cdf", "template_md5": "35d339e4", "result": "You are given a non-decreasing array of integers. You can perform the following operation any number of times:\n\n1. Select two consecutive elements in the array.\n2. Remove those two elements.\n3. Insert their bitwise XOR ($ \\oplus $) into the array.\n\nThe length of the array decreases by one after each operation.\n\nFind the minimum number of operations needed to make the array no longer non-decreasing. If it's impossible to make the array non-decreasing, output -1."}, {"prompt_md5": "f139f7c5", "template_md5": "465699a0", "result": "You are given a list of numbers that is always increasing. You can combine any two adjacent numbers in the list by performing a bitwise XOR operation on them and replacing the two numbers with the result.  The goal is to find the minimum number of times you need to do this to make the list no longer increasing. If it's impossible to make the list no longer increasing, output -1."}]}