{"uid": "1733-D1", "url": "https://codeforces.com/contest/1733/problem/D1", "tags": ["constructive algorithms", " greedy", " math"], "title": "1733-D1", "statement": "D1. Zero-One (Easy Version)time limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputThis is the easy version of the problem. In this version, $$$n \\\\le 3000$$$, $$$x \\\\ge y$$$ holds. You can make hacks only if both versions of the problem are solved.You are given two binary strings $$$a$$$ and $$$b$$$, both of length $$$n$$$. You can do the following operation any number of times (possibly zero).Select two indices $$$l$$$ and $$$r$$$ ($$$l < r$$$).Change $$$a_l$$$ to $$$(1 - a_l)$$$, and $$$a_r$$$ to $$$(1 - a_r)$$$.If $$$l + 1 = r$$$, the cost of the operation is $$$x$$$. Otherwise, the cost is $$$y$$$.You have to find the minimum cost needed to make $$$a$$$ equal to $$$b$$$ or say there is no way to do so.InputThe first line contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 600$$$) — the number of test cases.Each test case consists of three lines. The first line of each test case contains three integers $$$n$$$, $$$x$$$, and $$$y$$$ ($$$5 \\\\le n \\\\le 3000$$$, $$$1 \\\\le y \\\\le x \\\\le 10^9$$$) — the length of the strings, and the costs per operation.The second line of each test case contains the string $$$a$$$ of length $$$n$$$. The string only consists of digits $$$0$$$ and $$$1$$$.The third line of each test case contains the string $$$b$$$ of length $$$n$$$. The string only consists of digits $$$0$$$ and $$$1$$$.It is guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$3000$$$.OutputFor each test case, if there is no way to make $$$a$$$ equal to $$$b$$$, print $$$-1$$$. Otherwise, print the minimum cost needed to make $$$a$$$ equal to $$$b$$$.ExampleInput45 8 701001001015 7 201000110117 8 3011100101000015 10 10110001100Output8 -1 6 0NoteIn the first test case, selecting indices $$$2$$$ and $$$3$$$ costs $$$8$$$, which is the minimum possible cost.In the second test case, we cannot make $$$a$$$ equal to $$$b$$$ using any number of operations.In the third test case, we can perform the following operations:Select indices $$$3$$$ and $$$6$$$. It costs $$$3$$$, and $$$a$$$ is0101011now.Select indices $$$4$$$ and $$$6$$$. It costs $$$3$$$, and $$$a$$$ is0100001now.The total cost is $$$6$$$.In the fourth test case, we don't have to perform any operations.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f650a49e", "template_md5": "35d339e4", "result": "You are given two binary strings,  *a* and *b*, both of length *n*. You can perform the following operation any number of times:\n\n1. Choose two indices *l* and *r* where *l* < *r*.\n2. Flip the bits at positions *l* and *r* in string *a* (change 0 to 1 and 1 to 0).\n\nThere are two costs associated with this operation:\n\n* If *l + 1 = r* (the indices are adjacent), the cost is *x*.\n* Otherwise, the cost is *y*.\n\nYour goal is to find the minimum total cost to transform string *a* into string *b*. If it's impossible to make *a* equal to *b*, output -1. \n\n**Input:**\n\n* The first line contains *t* (the number of test cases).\n* For each test case:\n    * The first line contains three integers: *n*, *x*, and *y*.\n    * The second line contains string *a*.\n    * The third line contains string *b*.\n\n**Output:**\n\nFor each test case, output the minimum cost to transform *a* into *b*, or -1 if it's impossible."}, {"prompt_md5": "d2d7bd1f", "template_md5": "465699a0", "result": "You are given two equal-length strings of 0s and 1s. You can swap the 0 and 1 at two positions in the string.  Swapping adjacent positions costs less than swapping non-adjacent positions.  Find the minimum cost to make the two strings identical. If it's impossible, say so."}]}