{"uid": "1546-A", "url": "https://codeforces.com/contest/1546/problem/A", "tags": ["brute force", " greedy"], "title": "1546-A", "statement": "A. AquaMoon and Two Arraystime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAquaMoon and Cirno are playing an interesting game with arrays. Cirno has prepared two arrays $$$a$$$ and $$$b$$$, both consist of $$$n$$$ non-negative integers. AquaMoon can perform the following operation an arbitrary number of times (possibly zero):She chooses two indices $$$i$$$ and $$$j$$$ ($$$1 \\\\le i, j \\\\le n$$$), then decreases the $$$i$$$-th element of array $$$a$$$ by $$$1$$$, and increases the $$$j$$$-th element of array $$$a$$$ by $$$1$$$. The resulting values at $$$i$$$-th and $$$j$$$-th index of array $$$a$$$ are $$$a_i - 1$$$ and $$$a_j + 1$$$, respectively. Each element of array $$$a$$$must be non-negative after each operation. If $$$i = j$$$ this operation doesn't change the array $$$a$$$.AquaMoon wants to make some operations to make arrays $$$a$$$ and $$$b$$$ equal. Two arrays $$$a$$$ and $$$b$$$ are considered equal if and only if $$$a_i = b_i$$$ for all $$$1 \\\\leq i \\\\leq n$$$.Help AquaMoon to find a sequence of operations that will solve her problem or find, that it is impossible to make arrays $$$a$$$ and $$$b$$$ equal.Please note, that youdon't have to minimizethe number of operations.InputThe input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 100$$$) — the number of test cases.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 100$$$).The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$0 \\\\leq a_i \\\\leq 100$$$).The sum of all $$$a_i$$$ does not exceed $$$100$$$.The third line of each test case contains $$$n$$$ integers $$$b_1, b_2, \\\\dots, b_n$$$ ($$$0 \\\\leq b_i \\\\leq 100$$$).The sum of all $$$b_i$$$ does not exceed $$$100$$$.OutputFor each test case print \"-1\" on the only line if it is impossible to make two arrays equal with some sequence of operations.Otherwise, print an integer $$$m$$$ ($$$0 \\\\leq m \\\\leq 100$$$) in the first line — the number of operations. Then print $$$m$$$ lines, each line consists of two integers $$$i$$$ and $$$j$$$ — the indices you choose for the operation.It can be proven that if it is possible to make two arrays equal with some sequence of operations, there exists a sequence with $$$m \\\\leq 100$$$.If there are multiple possible solutions, you can print any.ExampleInput4 4 1 2 3 4 3 1 2 4 2 1 3 2 1 1 0 0 5 4 3 2 1 0 0 1 2 3 4Output2 2 1 3 1 -1 0 6 1 4 1 4 1 5 1 5 2 5 2 5NoteIn the first example, we do the following operations:$$$i = 2$$$, $$$j = 1$$$: $$$[1, 2, 3, 4] \\\\rightarrow [2, 1, 3, 4]$$$;$$$i = 3$$$, $$$j = 1$$$: $$$[2, 1, 3, 4] \\\\rightarrow [3, 1, 2, 4]$$$;In the second example, it's impossible to make two arrays equal.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0c281b31", "template_md5": "35d339e4", "result": "You are given two arrays, $a$ and $b$, both of length $n$.  You can perform the following operation any number of times:\n\n* Choose two indices $i$ and $j$ (where $1 \\le i, j \\le n$).\n* Decrease the $i$-th element of array $a$ by 1, and increase the $j$-th element of array $a$ by 1.\n\nThe goal is to make the two arrays equal.  \n\n* If it is possible to make the arrays equal, output the minimum number of operations required, followed by a list of the operations (each operation is a pair of indices $i$ and $j$).\n* If it is impossible to make the arrays equal, output \"-1\"."}, {"prompt_md5": "12f95f10", "template_md5": "465699a0", "result": "You are given two arrays of numbers. You can swap one number from one array to another.  Find the minimum number of swaps needed to make the two arrays identical, or say if it's impossible."}]}