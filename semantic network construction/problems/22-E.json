{"uid": "22-E", "url": "https://codeforces.com/contest/22/problem/E", "tags": ["dfs and similar", " graphs", " trees"], "title": "22-E", "statement": "E. Schemetime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutTo learn as soon as possible the latest news about their favourite fundamentally new operating system, BolgenOS community from Nizhni Tagil decided to develop a scheme. According to this scheme a community member, who is the first to learn the news, calls some other member, the latter, in his turn, calls some third member, and so on; i.e. a person with indexigot a person with indexfi, to whom he has to call, if he learns the news. With time BolgenOS community members understood that their scheme doesn't work sometimes — there were cases when some members didn't learn the news at all. Now they want to supplement the scheme: theyaddinto the scheme some instructions of type(xi,yi), which mean that personxihas to call personyias well. What is the minimum amount of instructions that they need to add so, that at the end everyone learns the news, no matter who is the first to learn it?InputThe first input line contains numbern(2 ≤n≤ 105) — amount of BolgenOS community members. The second line containsnspace-separated integer numbersfi(1 ≤fi≤n,i≠fi) — index of a person, to whom calls a person with indexi.OutputIn the first line output one number — the minimum amount of instructions to add. Then output one of the possible variants to add these instructions into the scheme, one instruction in each line. If the solution is not unique, output any.ExamplesInput33 3 2Output13 1Input72 3 1 3 4 4 1Output32 52 63 7", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "117ded2d", "template_md5": "35d339e4", "result": "You are given a directed graph with $n$ nodes, where each node represents a person. Each node $i$ has an outgoing edge to node $f_i$. This represents a chain where person $i$ calls person $f_i$ to spread news.\n\nYour task is to determine the minimum number of additional edges you need to add to this graph to ensure that all nodes eventually receive the news, regardless of which node starts with it.  Output the minimum number of edges and one possible set of edges that achieves this."}, {"prompt_md5": "ff29f2e8", "template_md5": "465699a0", "result": "You are given a list of people and a rule for who each person should call when they receive information.  The goal is to figure out the minimum number of additional calls you need to add to the rule so that everyone eventually receives the information, no matter who gets it first."}]}