{"uid": "1919-H", "url": "https://codeforces.com/contest/1919/problem/H", "tags": ["interactive", " trees"], "title": "1919-H", "statement": "H. Tree Diametertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a hidden tree with $$$n$$$ vertices. The $$$n-1$$$ edges of the tree are numbered from $$$1$$$ to $$$n-1$$$. You can ask the following queries of two types:Give the grader an array $$$a$$$ with $$$n - 1$$$positiveintegers. For each edge from $$$1$$$ to $$$n - 1$$$, the weight of edge $$$i$$$ is set to $$$a_i$$$. Then, the grader will return the length of the diameter$$$^\\\\dagger$$$.Give the grader two indices $$$1 \\\\le a, b \\\\le n - 1$$$. The grader will return the number of edges between edges $$$a$$$ and $$$b$$$. In other words, if edge $$$a$$$ connects $$$u_a$$$ and $$$v_a$$$ while edge $$$b$$$ connects $$$u_b$$$ and $$$v_b$$$, the grader will return $$$\\\\min(\\\\text{dist}(u_a, u_b), \\\\text{dist}(v_a, u_b), \\\\text{dist}(u_a, v_b), \\\\text{dist}(v_a, v_b))$$$, where $$$\\\\text{dist}(u, v)$$$ represents the number of edges on the path between vertices $$$u$$$ and $$$v$$$.Find any tree isomorphic$$$^\\\\ddagger$$$ to the hidden tree after at most $$$n$$$ queries of type 1 and $$$n$$$ queries of type 2 in any order.$$$^\\\\dagger$$$ The distance between two vertices is the sum of the weights on the unique simple path that connects them. The diameter is the largest of all those distances.$$$^\\\\ddagger$$$ Two trees, consisting of $$$n$$$ vertices each, are called isomorphic if there exists a permutation $$$p$$$ containing integers from $$$1$$$ to $$$n$$$ such that edge ($$$u$$$, $$$v$$$) is present in the first tree if and only if the edge ($$$p_u$$$, $$$p_v$$$) is present in the second tree.InputThe first and only line of input contains a single integer $$$n$$$ ($$$3 \\\\le n \\\\le 1000$$$) — the number of vertices in the tree.InteractionBegin the interaction by reading $$$n$$$.You are allowed to make queries in the following way:\"$$$\\\\mathtt{?}\\\\,1\\\\,a_1\\\\,a_2 \\\\ldots a_{n-1}$$$\" ($$$1 \\\\le a_i \\\\le 10^9$$$). Then, you should read an integer $$$k$$$ which represents the length of the diameter. You are only allowed to ask this query at most $$$n$$$ times.\"$$$\\\\mathtt{?}\\\\,2\\\\,a\\\\,b$$$\" ($$$1 \\\\le a, b \\\\le n - 1$$$). Then, you should read an integer $$$k$$$ which represents the number of edges between edges $$$a$$$ and $$$b$$$. You are only allowed to ask this query at most $$$n$$$ times.In case your query is invalid. the program will terminate immediately and you will receiveWrong answerverdict.To give the final answer, print \"!\" on a single line, followed by $$$n - 1$$$ lines where line $$$i$$$ contains \"$$$u_i\\\\,v_i$$$\" ($$$1 \\\\le u_i, v_i \\\\le n$$$) which represents that for each $$$i$$$ from $$$1$$$ to $$$n-1$$$, there is an edge between $$$u_i$$$ and $$$v_i$$$.After printing a query do not forget to output end of line and flush the output. Otherwise, you will getIdleness limit exceeded. To do this, use:fflush(stdout)orcout.flush()in C++;System.out.flush()in Java;flush(output)in Pascal;stdout.flush()in Python;see documentation for other languages.HacksThe first line contains a single integer $$$n$$$ ($$$3 \\\\le n \\\\le 1000$$$) — the number of vertices in the tree.The next $$$n - 1$$$ lines contain two integers each $$$u_i, v_i$$$ ($$$1 \\\\le u_i, v_i \\\\le n$$$) — the edges of the tree.ExampleInput5  3  1  9  0Output? 1 1 1 1 1  ? 2 1 3  ? 1 4 3 2 1  ? 2 4 2  ! 3 1 4 2 1 2 2 5NoteThe hidden tree in the example is shown above. The number on the vertices represents the vertex number while the number on the edges represents the edge number.In the first query, all the edges are set to weight $$$1$$$, so the diameter has length $$$3$$$ as shown in the diagram.In the second query, there is $$$1$$$ edge between edges $$$1$$$ and $$$3$$$.In the third query, the diameter is $$$9$$$ by taking edges $$$1$$$, $$$2$$$ and $$$3$$$.In the fourth query, there are no edges between edges $$$4$$$ and $$$2$$$.The answer given in the example is shown in the above diagram. Since it is isomorphic to the hidden tree, it is accepted as a correct answer. Note that the edges can be printed in any order.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "76890ccb", "template_md5": "35d339e4", "result": "You are given a hidden tree with $n$ vertices. You can ask two types of queries:\n\n**Query Type 1:**\n\n* Provide an array $a$ of $n-1$ positive integers.\n* For each edge $i$, set its weight to $a_i$.\n* The system will return the length of the diameter of the tree.\n\n**Query Type 2:**\n\n* Provide two indices $a$ and $b$ (both between 1 and $n-1$).\n* The system will return the number of edges between edges $a$ and $b$.  The number of edges between two edges is defined as the minimum distance between any pair of vertices connected by those edges.\n\nYour goal is to determine the structure of the hidden tree (i.e., the connections between vertices) by asking at most $n$ queries of each type. \n\nTo answer, output \"!\" followed by $n-1$ lines, where each line contains two integers $u_i$ and $v_i$ representing an edge between vertices $u_i$ and $v_i$."}, {"prompt_md5": "9a47c4ad", "template_md5": "465699a0", "result": "You are given a hidden tree with a certain number of nodes. You can ask two types of questions:\n\n1. Assign weights to each edge of the tree and find the longest path between any two nodes (the diameter).\n2. Given two edges, find the shortest path between the nodes they connect.\n\nYour goal is to figure out the structure of the tree (which edges connect which nodes) by asking at most a certain number of questions of each type."}]}