{"uid": "1357-B2", "url": "https://codeforces.com/contest/1357/problem/B2", "tags": [], "title": "1357-B2", "statement": "B2. \"Is the number divisible by 3?\" oracletime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputImplement a quantum oracle on $$$N$$$ qubits which checks whether the input bit string is a little-endian notation of a number that is divisible by 3.Your operation should take the following inputs:an array of $$$N \\\\le 8$$$ qubits \"inputs\" in an arbitrary state.a qubit \"output\" in an arbitrary state.Your operation should perform a unitary transformation on those qubits that can be described by its effect on the basis states: if \"inputs\" is in the basis state $$$|x\\\\rangle$$$ and \"output\" is in the basis state $$$|y\\\\rangle$$$, the result of applying the operation should be $$$|x\\\\rangle|y \\\\oplus f(x)\\\\rangle$$$, where $$$f(x) = 1$$$ if the integer represented by the bit string $$$x$$$ is divisible by $$$3$$$, and $$$0$$$ otherwise.For example, if the qubits passed to your operation are in the state $$$\\\\frac{1}{\\\\sqrt{2}}(|110\\\\rangle + |001\\\\rangle)_x \\\\otimes |0\\\\rangle_y = \\\\frac{1}{\\\\sqrt{2}}(|3\\\\rangle + |4\\\\rangle)_x \\\\otimes |0\\\\rangle_y$$$, the state of the system after applying the operation should be $$$\\\\frac{1}{\\\\sqrt{2}}(|3\\\\rangle_x\\\\otimes |1\\\\rangle_y + |4\\\\rangle_x |0\\\\rangle_y) = \\\\frac{1}{\\\\sqrt{2}}(|110\\\\rangle_x\\\\otimes |1\\\\rangle_y + |001\\\\rangle_x |0\\\\rangle_y)$$$.Your code should have the following signature (note that your operation should have Adjoint and Controlled variants defined for it;is Adj+Ctlin the operation signature will generate them automatically based on your code):namespace Solution {open Microsoft.Quantum.Intrinsic;operation Solve (inputs : Qubit[], output : Qubit) : Unit is Adj+Ctl {// your code here}}Your code is not allowed to use measurements or arbitrary rotation gates. This operation can be implemented using just the X gate and its controlled variants (possibly with multiple qubits as controls).", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "30287243", "template_md5": "35d339e4", "result": "You are given a set of $N$ qubits ($N \\le 8$) representing a binary number in little-endian format.  You need to create a quantum operation that takes these qubits and an additional qubit as input.  \n\nThe operation should output the original qubits and the additional qubit in a new state.  \n\nHere's how the operation should work:\n\n* If the binary number represented by the input qubits is divisible by 3, the additional qubit should be flipped (from $|0\\rangle$ to $|1\\rangle$ or vice versa).\n* If the binary number is not divisible by 3, the additional qubit should remain unchanged.\n\nYou can only use the X gate and its controlled variants (gates where the X gate is applied only if a specific qubit is in a certain state). You cannot use measurements or any other types of gates."}, {"prompt_md5": "7aa3e65a", "template_md5": "465699a0", "result": "Build a quantum program that takes a sequence of bits representing a number and a special qubit. The program should change the state of the special qubit based on whether the number is divisible by 3."}]}