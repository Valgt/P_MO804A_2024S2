{"uid": "777-B", "url": "https://codeforces.com/contest/777/problem/B", "tags": ["data structures", " dp", " greedy", " sortings"], "title": "777-B", "statement": "B. Game of Credit Cardstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter the fourth season Sherlock and Moriary have realized the whole foolishness of the battle between them and decided to continue their competitions in peaceful game of Credit Cards.Rules of this game are simple: each player bring his favouriten-digit credit card. Then both players name the digits written on their cards one by one. If two digits are not equal, then the player, whose digit is smaller gets a flick (knock in the forehead usually made with a forefinger) from the other player. For example, ifn= 3, Sherlock's card is123and Moriarty's card has number321, first Sherlock names1and Moriarty names3so Sherlock gets a flick. Then they both digit2so no one gets a flick. Finally, Sherlock names3, while Moriarty names1and gets a flick.Of course, Sherlock will play honestly naming digits one by one in the order they are given, while Moriary, as a true villain, plans to cheat. He is going to name his digits in some other order (however, he is not going to change the overall number of occurences of each digit). For example, in case above Moriarty could name1,2,3and get no flicks at all, or he can name2,3and1to give Sherlock two flicks.Your goal is to find out the minimum possible number of flicks Moriarty will get (no one likes flicks) and the maximum possible number of flicks Sherlock can get from Moriarty. Note, that these two goals are different and the optimal result may be obtained by using different strategies.InputThe first line of the input contains a single integern(1 ≤n≤ 1000) — the number of digits in the cards Sherlock and Moriarty are going to use.The second line containsndigits — Sherlock's credit card number.The third line containsndigits — Moriarty's credit card number.OutputFirst print the minimum possible number of flicks Moriarty will get. Then print the maximum possible number of flicks that Sherlock can get from Moriarty.ExamplesInput3123321Output02Input28800Output20NoteFirst sample is elaborated in the problem statement. In the second sample, there is no way Moriarty can avoid getting two flicks.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "efabd0ed", "template_md5": "35d339e4", "result": "Two players each have a $n$-digit number. They take turns reading off the digits of their numbers, one at a time. If the digits read are different, the player with the smaller digit gets a \"flick\". \n\nFind the minimum number of flicks the first player can receive and the maximum number of flicks the second player can give. \n\nThe digits in each number can be read in any order. \n\n**Input:**\n\n* The first line contains an integer $n$ (1 ≤ $n$ ≤ 1000), the number of digits.\n* The second line contains $n$ digits, the first player's number.\n* The third line contains $n$ digits, the second player's number.\n\n**Output:**\n\n* The first line contains the minimum number of flicks the first player can receive.\n* The second line contains the maximum number of flicks the second player can give."}, {"prompt_md5": "69615381", "template_md5": "465699a0", "result": "Two players each have a number. They take turns saying the digits of their number one by one. If the digits are different, the player with the smaller digit gets a point. Find the minimum points the first player can get and the maximum points the second player can get."}]}