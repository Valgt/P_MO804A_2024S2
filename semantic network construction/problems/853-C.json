{"uid": "853-C", "url": "https://codeforces.com/contest/853/problem/C", "tags": ["data structures"], "title": "853-C", "statement": "C. Boredomtime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputIlya is sitting in a waiting area of Metropolis airport and is bored of looking at time table that shows again and again that his plane is delayed. So he took out a sheet of paper and decided to solve some problems.First Ilya has drawn a grid of sizen×nand markednsquares on it, such that no two marked squares share the same row or the same column. He calls a rectangle on a grid with sides parallel to grid sidesbeautifulif exactly two of its corner squares are marked. There are exactlyn·(n- 1) / 2beautiful rectangles.Ilya has chosenqquery rectangles on a grid with sides parallel to grid sides (not necessarily beautiful ones), and for each of those rectangles he wants to find itsbeauty degree. Beauty degree of a rectangle is the number of beautiful rectangles that share at least one square with the given one.Now Ilya thinks that he might not have enough time to solve the problem till the departure of his flight. You are given the description of marked cells and the query rectangles, help Ilya find the beauty degree of each of the query rectangles.InputThe first line of input contains two integersnandq(2 ≤n≤ 200 000,1 ≤q≤ 200 000) — the size of the grid and the number of query rectangles.The second line containsnintegersp1,p2, ...,pn, separated by spaces (1 ≤pi≤n, allpiare different), they specify grid squares marked by Ilya: in columnihe has marked a square at rowpi, rows are numbered from1ton, bottom to top, columns are numbered from1ton, left to right.The followingqlines describe query rectangles. Each rectangle is described by four integers:l,d,r,u(1 ≤l≤r≤n,1 ≤d≤u≤n), herelandrare the leftmost and the rightmost columns of the rectangle,danduthe bottommost and the topmost rows of the rectangle.OutputFor each query rectangle output its beauty degree on a separate line.ExamplesInput2 31 21 1 1 11 1 1 21 1 2 2Output111Input4 21 3 2 44 1 4 41 1 2 3Output35NoteThe first sample test has one beautiful rectangle that occupies the whole grid, therefore the answer to any query is 1.In the second sample test the first query rectangle intersects 3 beautiful rectangles, as shown on the picture below:There are 5 beautiful rectangles that intersect the second query rectangle, as shown on the following picture:", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5367e23a", "template_md5": "35d339e4", "result": "You are given a grid of size $n \\times n$ with $n(n-1)/2$ marked squares.  No two marked squares share the same row or column.\n\nA rectangle on the grid is considered \"beautiful\" if exactly two of its corner squares are marked.\n\nYou are given $q$ rectangles on the grid. For each rectangle, find the number of beautiful rectangles that share at least one square with it. \n\n\n\nLet:\n\n* $n$ = size of the grid\n* $q$ = number of query rectangles\n* $p_i$ = row number of the $i$-th marked square\n* $(l, d, r, u)$ =  coordinates of a query rectangle (left, bottom, right, top)"}, {"prompt_md5": "edf6e25a", "template_md5": "465699a0", "result": "You are given a grid with some marked squares.  A rectangle is considered \"beautiful\" if exactly two of its corners are marked squares.  You are given a set of rectangles. For each rectangle, count how many beautiful rectangles overlap with it."}]}