{"uid": "1788-F", "url": "https://codeforces.com/contest/1788/problem/F", "tags": ["bitmasks", " constructive algorithms", " dfs and similar", " dsu", " graphs", " greedy", " implementation", " trees"], "title": "1788-F", "statement": "F. XOR, Tree, and Queriestime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a tree of $$$n$$$ vertices. The vertices are numbered from $$$1$$$ to $$$n$$$.You will need to assign a weight to each edge. Let the weight of the $$$i$$$-th edge be $$$a_i$$$ ($$$1 \\\\leq i \\\\leq n-1$$$). The weight of each edge should be an integer between $$$0$$$ and $$$2^{30}-1$$$, inclusive.You are given $$$q$$$ conditions. Each condition consists of three integers $$$u$$$, $$$v$$$, and $$$x$$$. This means that thebitwise XORof all edges on the shortest path from $$$u$$$ to $$$v$$$ should be $$$x$$$.Find out if there exist $$$a_1, a_2, \\\\ldots, a_{n-1}$$$ that satisfy the given conditions. If yes, print a solution such that $$$a_1 \\\\oplus a_2 \\\\oplus \\\\ldots \\\\oplus a_{n-1}$$$ is thesmallest. Here, $$$\\\\oplus$$$ denotes the bitwise XOR operation.If there are multiple solutions such that $$$a_1 \\\\oplus a_2 \\\\oplus \\\\ldots \\\\oplus a_{n-1}$$$ is the smallest, print any.InputThe first line contains two integers $$$n$$$ and $$$q$$$ ($$$2 \\\\le n \\\\le 2.5 \\\\cdot 10^5$$$, $$$0 \\\\le q \\\\le 2.5 \\\\cdot 10^5$$$).The $$$i$$$-th of the following $$$n-1$$$ lines contains two integers $$$x_i$$$ and $$$y_i$$$ ($$$1 \\\\le x_i, y_i \\\\le n$$$, $$$x_i \\\\neq y_i$$$), meaning that the $$$i$$$-th edge connects vertices $$$x_i$$$ and $$$y_i$$$ in the tree.It is guaranteed that the given edges form a tree.The following $$$q$$$ lines contain information about conditions.Each line contains three integers $$$u$$$, $$$v$$$, $$$x$$$ ($$$1 \\\\le u, v \\\\le n$$$, $$$u \\\\neq v$$$, $$$0 \\\\le x \\\\le 2^{30}-1$$$), meaning that the bitwise XOR of all edges on the shortest path from $$$u$$$ to $$$v$$$ should be $$$x$$$.OutputIf there do not exist $$$a_1$$$, $$$a_2$$$, ..., $$$a_{n-1}$$$ that satisfy the given conditions, print \"No\".Otherwise, print \"Yes\" in the first line.Then print $$$n-1$$$ integers on the next line, where the $$$i$$$-th integer is the weight of the $$$i$$$-th edge. If there are multiple solutions that satisfy the given conditions, print a solution such that $$$a_1 \\\\oplus a_2 \\\\oplus \\\\ldots \\\\oplus a_{n-1}$$$ is the smallest.If there are multiple solutions such that $$$a_1 \\\\oplus a_2 \\\\oplus \\\\ldots \\\\oplus a_{n-1}$$$ is the smallest, print any.When printing \"Yes\" or \"No\", you can print each letter in any case (either upper or lower). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive responses.ExamplesInput4 4 1 2 2 3 3 4 1 4 3 2 4 2 1 3 1 2 3 1OutputNoInput6 2 1 2 2 3 3 4 2 5 5 6 1 4 2 2 6 7OutputYes 4 2 4 1 6Input6 2 1 2 2 3 3 4 2 5 5 6 1 4 3 1 6 5OutputYes 6 1 4 3 0NoteFor the first example, there does not exist a set of edge weights that satisfies the given conditions.For the second example, the two given conditions are $$$a_1 \\\\oplus a_2 \\\\oplus a_3=2$$$ and $$$a_4 \\\\oplus a_5=7$$$. There can be multiple solutions, for example, $$$(a_1, a_2, a_3, a_4, a_5)=(1, 2, 1, 4, 3)$$$.For the third example, the two given conditions are $$$a_1 \\\\oplus a_2 \\\\oplus a_3=3$$$ and $$$a_1 \\\\oplus a_4 \\\\oplus a_5=5$$$. There are multiple solutions that satisfy the given conditions.$$$(a_1, a_2, a_3, a_4, a_5)=(1, 1, 3, 4, 0)$$$ satisfies the given conditions, but the bitwise XOR of all edge weights is $$$7$$$, which does not have the smallest $$$a_1 \\\\oplus a_2 \\\\oplus \\\\ldots \\\\oplus a_{n-1}$$$, so it cannot be the answer.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0d7a89bf", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices.  You need to assign a weight to each of the $n-1$ edges. Each weight must be an integer between 0 and $2^{30}-1$, inclusive.\n\nYou are given $q$ conditions. Each condition is defined by three integers $u$, $v$, and $x$. This means that the bitwise XOR of all the edge weights on the shortest path from vertex $u$ to vertex $v$ must equal $x$.\n\nDetermine if there exists a set of edge weights that satisfy all the given conditions. If yes, output \"Yes\" and then list the $n-1$ edge weights. If there are multiple solutions that satisfy the conditions, output any one. If no such set of weights exists, output \"No\"."}, {"prompt_md5": "c6e17ded", "template_md5": "465699a0", "result": "You are given a tree with a certain number of nodes. You need to assign a weight to each edge of the tree.  Each weight must be a number between 0 and 2^30-1. You are also given a set of conditions. Each condition specifies two nodes in the tree and a target XOR value. The XOR of the weights of all edges on the shortest path between the two nodes must equal the target value.  \n\nDetermine if it's possible to assign weights to the edges that satisfy all the conditions. If it's possible, find a solution where the total XOR of all edge weights is as small as possible."}]}