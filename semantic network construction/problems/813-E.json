{"uid": "813-E", "url": "https://codeforces.com/contest/813/problem/E", "tags": ["binary search", " data structures"], "title": "813-E", "statement": "E. Army Creationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAs you might remember from our previous rounds, Vova really likes computer games. Now he is playing a strategy game known as Rage of Empires.In the game Vova can hirendifferent warriors;ith warrior has the typeai. Vova wants to create abalancedarmy hiring some subset of warriors. An army is calledbalancedif for each type of warrior present in the game there are not more thankwarriors of this type in the army. Of course, Vova wants his army to be as large as possible.To make things more complicated, Vova has to considerqdifferent plans of creating his army.ith plan allows him to hire only warriors whose numbers are not less thanliand not greater thanri.Help Vova to determine the largest size of abalancedarmy for each plan.Be aware that the plans are given in a modified way. See input section for details.InputThe first line contains two integersnandk(1 ≤n,k≤ 100000).The second line containsnintegersa1,a2, ...an(1 ≤ai≤ 100000).The third line contains one integerq(1 ≤q≤ 100000).Thenqlines follow.ith line contains two numbersxiandyiwhich representith plan (1 ≤xi,yi≤n).You have to keep track of the answer to the last plan (let's call itlast). In the beginninglast= 0. Then to restore values ofliandrifor theith plan, you have to do the following:li= ((xi+last)modn) + 1;ri= ((yi+last)modn) + 1;Ifli>ri, swapliandri.OutputPrintqnumbers.ith number must be equal to the maximum size of abalancedarmy when consideringith plan.ExampleInput6 21 1 1 2 2 251 64 31 12 62 6Output24132NoteIn the first example the real plans are:1 21 66 62 44 6", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "894c289f", "template_md5": "35d339e4", "result": "You are given an array of $n$ integers, $a_1, a_2, ..., a_n$. You also have $q$ plans, each defined by two integers $x_i$ and $y_i$. \n\nFor each plan $i$, you need to calculate the maximum size of a balanced army. A balanced army is a subset of the integers in the array where for each unique integer in the subset, there are at most $k$ occurrences of that integer in the subset.\n\nThe range of integers you can choose from for each plan is determined as follows:\n\n*  $l_i = ((x_i + last) \\mod n) + 1$\n*  $r_i = ((y_i + last) \\mod n) + 1$\n\nIf $l_i > r_i$, swap $l_i$ and $r_i$.\n\n$last$ represents the result of the previous plan.\n\nOutput $q$ numbers, where the $i$-th number is the maximum size of a balanced army for the $i$-th plan."}, {"prompt_md5": "4fbd2610", "template_md5": "465699a0", "result": "You are given a list of numbers and a set of ranges. For each range, find the largest number of unique elements you can select from the list while staying within the range bounds.  The ranges are defined in a specific way that depends on the previous range."}]}