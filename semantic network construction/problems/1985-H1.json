{"uid": "1985-H1", "url": "https://codeforces.com/contest/1985/problem/H1", "tags": ["brute force", " data structures", " dfs and similar", " dsu", " graphs", " implementation"], "title": "1985-H1", "statement": "H1. Maximize the Largest Component (Easy Version)time limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputEasy and hard versions are actually different problems, so read statements of both problems completely and carefully. The only difference between the two versions is the operation.Alex has a grid with $$$n$$$ rows and $$$m$$$ columns consisting of '.' and '#' characters. A set of '#' cells forms a connected component if from any cell in this set, it is possible to reach any other cell in this set by only moving to another cell in the set that shares acommon side. The size of a connected component is the number of cells in the set.In one operation, Alex selects any row $$$r$$$ ($$$1 \\\\le r \\\\le n$$$)orany column $$$c$$$ ($$$1 \\\\le c \\\\le m$$$), then sets every cell in row $$$r$$$orcolumn $$$c$$$ to be '#'. Help Alex find the maximum possible size of the largest connected component of '#' cells that he can achieve after performing the operationat most once.InputThe first line of the input contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$) — the number of test cases.The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\\\le n \\\\cdot m \\\\le 10^6$$$) — the number of rows and columns of the grid.The next $$$n$$$ lines each contain $$$m$$$ characters. Each character is either '.' or '#'.It is guaranteed that the sum of $$$n \\\\cdot m$$$ over all test cases does not exceed $$$10^6$$$.OutputFor each test case, output a single integer — the maximum possible size of a connected component of '#' cells that Alex can achieve.ExampleInput61 1.4 2..#.#..#3 5.#.#...#...#.#.5 5#...#....##...#........##6 6.#..#.#..#...#...##.#.#..#.##.###..#6 8..#....#.####.#.###.#..#.##.#.##.#.##.###..##.#.Output1 6 9 11 15 30NoteIn the second test case, it is optimal for Alex to set all cells in column $$$2$$$ to be '#'. Doing so will lead to the largest connected component of '#' having a size of $$$6$$$.In the third test case, it is optimal for Alex to set all cells in row $$$2$$$ to be '#'. Doing so will lead to the largest connected component of '#' having a size of $$$9$$$.In the fourth test case, it is optimal for Alex to set all cells in row $$$4$$$ to be '#'. Doing so will lead to the largest connected component of '#' having a size of $$$11$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "3f9f87c0", "template_md5": "35d339e4", "result": "You are given a grid of size $n \\times m$ filled with '.' and '#'.  A group of '#' cells form a connected component if you can reach any cell in the group from any other cell by moving to a neighboring cell that shares a side. The size of a connected component is the number of cells in the group.\n\nYou can choose to either select a row or a column and change all the cells in that row or column to '#'.  Find the largest possible size of a connected component of '#' cells you can achieve after performing this operation at most once. \n\nInput:\n\n* The first line contains an integer $t$ ($1 \\le t \\le 10^4$) representing the number of test cases.\n* For each test case:\n    * The first line contains two integers $n$ and $m$ ($1 \\le n \\cdot m \\le 10^6$) representing the number of rows and columns.\n    * The next $n$ lines each contain $m$ characters, either '.' or '#', representing the grid.\n\nOutput:\n\nFor each test case, output a single integer representing the maximum possible size of a connected component."}, {"prompt_md5": "01509c37", "template_md5": "465699a0", "result": "You are given a grid of dots and hashes.  You can choose to fill an entire row or an entire column with hashes. What is the largest possible group of connected hashes you can create?"}]}