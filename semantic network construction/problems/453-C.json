{"uid": "453-C", "url": "https://codeforces.com/contest/453/problem/C", "tags": ["constructive algorithms", " dfs and similar", " graphs"], "title": "453-C", "statement": "C. Little Pony and Summer Sun Celebrationtime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutTwilight Sparkle learnt that the evil Nightmare Moon would return during the upcoming Summer Sun Celebration after one thousand years of imprisonment on the moon. She tried to warn her mentor Princess Celestia, but the princess ignored her and sent her to Ponyville to check on the preparations for the celebration.Twilight Sparkle wanted to track the path of Nightmare Moon. Unfortunately, she didn't know the exact path. What she knew is the parity of the number of times that each place Nightmare Moon visited. Can you help Twilight Sparkle to restore any path that is consistent with this information?Ponyville can be represented as an undirected graph (vertices are places, edges are roads between places) without self-loops and multi-edges. The path can start and end at any place (also it can be empty). Each place can be visited multiple times. The path must not visit more than4nplaces.InputThe first line contains two integersnandm(2 ≤n≤ 105; 0 ≤m≤ 105) — the number of places and the number of roads in Ponyville. Each of the followingmlines contains two integersui,vi(1 ≤ui,vi≤n;ui≠vi), these integers describe a road between placesuiandvi.The next line containsnintegers:x1,x2, ...,xn(0 ≤xi≤ 1)— the parity of the number of times that each place must be visited. Ifxi= 0, then thei-th place must be visited even number of times, else it must be visited odd number of times.OutputOutput the number of visited placeskin the first line (0 ≤k≤ 4n). Then outputkintegers — the numbers of places in the order of path. Ifxi= 0, then thei-th place must appear in the path even number of times, elsei-th place must appear in the path odd number of times. Note, that given road system has no self-loops, therefore any two neighbouring places in the path must be distinct.If there is no required path, output-1. If there multiple possible paths, you can output any of them.ExamplesInput3 21 22 31 1 1Output31 2 3Input5 71 21 31 41 53 43 54 50 1 0 1 0Output102 1 3 4 5 4 5 4 3 1Input2 00 0Output0", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e8a5f3e9", "template_md5": "35d339e4", "result": "You are given a graph with $n$ places and $m$ roads connecting them.  Each road connects two distinct places. You are also given a list of $n$ numbers, where the $i$-th number indicates the parity (even or odd) of the number of times the $i$-th place must be visited in a path.\n\nYour task is to find a path through the graph that satisfies these parity conditions. The path can start and end at any place, and a place can be visited multiple times. The path must not visit more than $4n$ places.\n\nIf no such path exists, output $-1$. Otherwise, output the number of places visited in the path, followed by the list of places in the order they are visited."}, {"prompt_md5": "3c458df8", "template_md5": "465699a0", "result": "You are given a map of a town with roads connecting different locations. You also know the number of times each location must be visited (even or odd).  Find a possible path through the town that satisfies these visit requirements. If no such path exists, output -1."}]}