{"uid": "1268-D", "url": "https://codeforces.com/contest/1268/problem/D", "tags": ["brute force", " divide and conquer", " graphs", " math"], "title": "1268-D", "statement": "D. Invertation in Tournamenttime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a tournament — complete directed graph.In one operation you can pick any vertex $$$v$$$ and change the direction of all edges with $$$v$$$ on one of the ends (i.e all edges $$$u \\\\to v$$$ change their orientation to $$$v \\\\to u$$$ and vice versa).You want to make the tournament strongly connected with the smallest possible number of such operations if it is possible.Also, if it is possible, you need to find the number of ways to make this number of operations to make graph strongly connected (two ways are different if for some $$$i$$$ vertex that we chose on $$$i$$$-th operation in one way is different from vertex that we chose on $$$i$$$-th operation in another way). You only need to find this value modulo $$$998\\\\,244\\\\,353$$$.InputThe first line of input contains one integer $$$n$$$ ($$$3 \\\\leq n \\\\leq 2000$$$): the number of vertices in the tournament.Following $$$n$$$ lines contain a description of the given tournament, each of them contains a binary string of length $$$n$$$. If $$$j$$$-th character of $$$i$$$-th string is equal to '1', then the graph has an edge $$$i \\\\to j$$$.It is guaranteed that there are no edges $$$i \\\\to i$$$ and the graph hasexactly oneedge among $$$i \\\\to j$$$ and $$$j \\\\to i$$$ for different $$$i$$$ and $$$j$$$.OutputIf it is not possible to convert tournament to strongly connected with the given operations, output \"-1\".Otherwise, output two integers: the smallest number of operations that you need to make the given graph strongly connected and the number of ways to do this number of operations to make graph strongly connected, modulo $$$998\\\\,244\\\\,353$$$.ExamplesInput3 010 001 100Output0 1Input4 0010 1000 0100 1110Output-1Input6 010000 001000 100000 111001 111100 111010Output2 18", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "adb407a5", "template_md5": "35d339e4", "result": "You are given a directed graph with $n$ vertices ($3 \\le n \\le 2000$).  Each edge goes in one direction.  You can perform the following operation any number of times:\n\n* Choose a vertex $v$ and reverse the direction of all edges that have $v$ as one of their endpoints.\n\nYour goal is to determine the minimum number of operations needed to make the graph strongly connected (meaning you can reach any vertex from any other vertex).  You also need to find the number of ways to perform these operations to achieve this, modulo 998244353.\n\nThe input consists of $n$ lines, where the $i$th line is a binary string of length $n$.  The $j$th character in the $i$th string is '1' if there is an edge from vertex $i$ to vertex $j$, and '0' otherwise.  There is exactly one edge between any two distinct vertices.\n\nIf it is not possible to make the graph strongly connected, output \"-1\". Otherwise, output two integers: the minimum number of operations and the number of ways to perform them modulo 998244353."}, {"prompt_md5": "9878909e", "template_md5": "465699a0", "result": "You are given a directed graph. You can reverse the direction of all edges connected to a single vertex in one operation.  Find the fewest operations needed to make the graph strongly connected (meaning you can reach any vertex from any other vertex), and the number of ways to do this.  If it's impossible to make the graph strongly connected, output -1."}]}