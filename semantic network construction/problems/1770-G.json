{"uid": "1770-G", "url": "https://codeforces.com/contest/1770/problem/G", "tags": ["divide and conquer", " fft", " math"], "title": "1770-G", "statement": "G. Koxia and Brackettime limit per test5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputChiyuu has a bracket sequence$$$^\\\\dagger$$$ $$$s$$$ of length $$$n$$$. Let $$$k$$$ be the minimum number of characters that Chiyuu has to remove from $$$s$$$ to make $$$s$$$ balanced$$$^\\\\ddagger$$$.Now, Koxia wants you to count the number of ways to remove $$$k$$$ characters from $$$s$$$ so that $$$s$$$ becomes balanced, modulo $$$998\\\\,244\\\\,353$$$.Note that two ways of removing characters are considered distinct if and only if the set of indices removed is different.$$$^\\\\dagger$$$ A bracket sequence is a string containing only the characters \"(\" and \")\".$$$^\\\\ddagger$$$ A bracket sequence is called balanced if one can turn it into a valid math expression by adding characters+and1. For example, sequences(())(),(),(()(()))and the empty string are balanced, while)(,((), and(()))(are not.InputThe first line of input contains a string $$$s$$$ ($$$1 \\\\leq |s| \\\\leq 5 \\\\cdot {10}^5$$$) — the bracket sequence.It is guaranteed that $$$s$$$ only contains the characters \"(\" and \")\".OutputOutput a single integer — the number of ways to remove $$$k$$$ characters from $$$s$$$ so that $$$s$$$ becomes balanced, modulo $$$998\\\\,244\\\\,353$$$.ExamplesInput())(()Output4Input(Output1NoteIn the first test case, it can be proved that the minimum number of characters that Chiyuu has to remove is $$$2$$$. There are $$$4$$$ ways to remove $$$2$$$ characters to make $$$s$$$ balanced as follows. Deleted characters are noted as red.$$$\\\\texttt{(} \\\\color{Red}{\\\\texttt{)}} \\\\texttt{)} \\\\color{Red}{\\\\texttt{(}} \\\\texttt{(} \\\\texttt{)}$$$,$$$\\\\texttt{(} \\\\texttt{)} \\\\color{Red}{\\\\texttt{)}} \\\\color{Red}{\\\\texttt{(}} \\\\texttt{(} \\\\texttt{)}$$$,$$$\\\\texttt{(} \\\\color{Red}{\\\\texttt{)}} \\\\texttt{)} \\\\texttt{(} \\\\color{Red}{\\\\texttt{(}} \\\\texttt{)}$$$,$$$\\\\texttt{(} \\\\texttt{)} \\\\color{Red}{\\\\texttt{)}} \\\\texttt{(} \\\\color{Red}{\\\\texttt{(}} \\\\texttt{)}$$$.In the second test case, the only way to make $$$s$$$ balanced is by deleting the only character to get an empty bracket sequence, which is considered balanced.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "cc4bc3e2", "template_md5": "465699a0", "result": "Given a string of parentheses, find the number of ways to remove characters from the string so that the remaining string is balanced (meaning every opening parenthesis has a corresponding closing parenthesis).  The number of characters to remove is fixed.  The answer should be the number of ways to remove the characters, modulo 998244353."}, {"prompt_md5": "35680c19", "template_md5": "35d339e4", "result": "You are given a string $s$ consisting only of '(' and ')' characters.  Find the number of ways to remove characters from $s$ so that the remaining string is balanced, meaning it can be transformed into a valid mathematical expression by adding '+' and '1' characters. The number of characters removed must be the minimum number required to balance the string. Output the answer modulo 998244353."}]}