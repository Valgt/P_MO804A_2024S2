{"uid": "573-D", "url": "https://codeforces.com/contest/573/problem/D", "tags": ["data structures", " divide and conquer", " dp"], "title": "573-D", "statement": "D. Bear and Cavalrytime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputWould you want to fight against bears riding horses? Me neither.Limak is a grizzly bear. He is general of the dreadful army of Bearland. The most important part of an army is cavalry of course.Cavalry of Bearland consists ofnwarriors andnhorses.i-th warrior has strengthwiandi-th horse has strengthhi. Warrior together with his horse is called a unit. Strength of a unit is equal to multiplied strengths of warrior and horse. Total strength of cavalry is equal to sum of strengths of allnunits. Good assignment of warriors and horses makes cavalry truly powerful.Initially,i-th warrior hasi-th horse. You are givenqqueries. In each query two warriors swap their horses with each other.General Limak must be ready for every possible situation. What if warriors weren't allowed to ride their own horses? After each query find the maximum possible strength of cavalry if we consider assignments of all warriors to all horses that no warrior is assigned to his own horse (it can be proven that forn≥ 2there is always at least one correct assignment).Note that we can't leave a warrior without a horse.InputThe first line contains two space-separated integers,nandq(2 ≤n≤ 30 000,1 ≤q≤ 10 000).The second line containsnspace-separated integers,w1,w2, ...,wn(1 ≤wi≤ 106) — strengths of warriors.The third line containsnspace-separated integers,h1,h2, ...,hn(1 ≤hi≤ 106) — strengths of horses.Nextqlines describe queries.i-th of them contains two space-separated integersaiandbi(1 ≤ai,bi≤n,ai≠bi), indices of warriors who swap their horses with each other.OutputPrintqlines with answers to queries. Ini-th line print the maximum possible strength of cavalry after firstiqueries.ExamplesInput4 21 10 100 10003 7 2 52 42 4Output57327532Input3 37 11 53 2 11 21 32 3Output444852Input7 41 2 4 8 16 32 6487 40 77 29 50 11 181 52 76 25 6Output9315930893159315NoteClarification for the first sample:Warriors: 1 10 100 1000Horses:   3  7  2    5After first query situation looks like the following:Warriors: 1 10 100 1000Horses:   3  5  2    7We can get1·2 + 10·3 + 100·7 + 1000·5 = 5732(note that no hussar takes his own horse in this assignment).After second query we get back to initial situation and optimal assignment is1·2 + 10·3 + 100·5 + 1000·7 = 7532.Clarification for the second sample. After first query:Warriors:  7 11 5Horses:    2  3 1Optimal assignment is7·1 + 11·2 + 5·3 = 44.Then after second query7·3 + 11·2 + 5·1 = 48.Finally7·2 + 11·3 + 5·1 = 52.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "411946c3", "template_md5": "35d339e4", "result": "You are given $n$ warriors and $n$ horses. Each warrior has a strength $w_i$ and each horse has a strength $h_i$.  A unit is formed by a warrior and his horse, and the strength of a unit is the product of the warrior's and horse's strengths.\n\nYou are also given $q$ queries. Each query involves two warriors swapping horses. After each query, you need to find the maximum possible total strength of the cavalry if no warrior can be assigned to their own horse.\n\n**Input:**\n\n* The first line contains two integers, $n$ and $q$ ($2 \\le n \\le 30000$, $1 \\le q \\le 10000$).\n* The second line contains $n$ integers, $w_1, w_2, ..., w_n$ ($1 \\le w_i \\le 10^6$).\n* The third line contains $n$ integers, $h_1, h_2, ..., h_n$ ($1 \\le h_i \\le 10^6$).\n* Each of the next $q$ lines contains two integers, $a_i$ and $b_i$ ($1 \\le a_i, b_i \\le n$, $a_i \\neq b_i$), representing the indices of the warriors who swap horses.\n\n**Output:**\n\nPrint $q$ lines, each containing the maximum possible total strength of the cavalry after the corresponding query."}, {"prompt_md5": "7228a1e7", "template_md5": "465699a0", "result": "You are given a list of warrior strengths and a list of horse strengths. Warriors and horses are paired up.  You need to find the maximum total strength of all the pairs after a series of swaps between warriors and their assigned horses.  The rule is that a warrior cannot be assigned to their original horse."}]}