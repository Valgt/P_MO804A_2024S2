{"uid": "380-C", "url": "https://codeforces.com/contest/380/problem/C", "tags": ["data structures", " schedules"], "title": "380-C", "statement": "C. Sereja and Bracketstime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutSereja has a bracket sequences1,s2, ...,sn, or, in other words, a stringsof lengthn, consisting of characters \"(\" and \")\".Sereja needs to answermqueries, each of them is described by two integersli,ri(1 ≤li≤ri≤n). The answer to thei-th query is the length of the maximum correct bracket subsequence of sequencesli,sli+ 1, ...,sri. Help Sereja answer all queries.You can find the definitions for a subsequence and a correct bracket sequence in the notes.InputThe first line contains a sequence of characterss1,s2, ...,sn(1 ≤n≤ 106)without any spaces. Each character is either a \"(\" or a \")\". The second line contains integerm(1 ≤m≤ 105)— the number of queries. Each of the nextmlines contains a pair of integers. Thei-th line contains integersli,ri(1 ≤li≤ri≤n)— the description of thei-th query.OutputPrint the answer to each question on a single line. Print the answers in the order they go in the input.ExamplesInput())(())(())(71 12 31 21 128 125 112 10Output00210466NoteAsubsequenceof length|x|of strings=s1s2...s|s|(where|s|is the length of strings) is stringx=sk1sk2...sk|x|(1 ≤k1<k2< ... <k|x|≤ |s|).Acorrect bracket sequenceis a bracket sequence that can be transformed into a correct aryphmetic expression by inserting characters \"1\" and \"+\" between the characters of the string. For example, bracket sequences \"()()\", \"(())\" are correct (the resulting expressions \"(1)+(1)\", \"((1+1)+1)\"), and \")(\" and \"(\" are not.For the third query required sequence will be «()».For the fourth query required sequence will be «()(())(())».", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "97498b87", "template_md5": "465699a0", "result": "You are given a string of parentheses.  You need to answer multiple queries. Each query is defined by two numbers, which specify a section of the string. For each query, find the length of the longest valid subsequence of parentheses within that section."}, {"prompt_md5": "5d75f2bd", "template_md5": "35d339e4", "result": "You are given a string of parentheses, consisting only of \"(\" and \")\".  You need to answer multiple queries. Each query is defined by two numbers,  $l$ and $r$, representing a substring of the original string. For each query, find the length of the longest valid (correct) bracket subsequence within that substring.\n\nA valid bracket subsequence is a sequence of parentheses within the substring that follows these rules:\n\n* Every opening parenthesis \"(\" must have a corresponding closing parenthesis \")\".\n* Parentheses must be nested correctly (an opening parenthesis cannot be closed by a parenthesis that was opened later).\n\n\nFor example,  \"(()\" is a valid subsequence, but \")(\" is not."}]}