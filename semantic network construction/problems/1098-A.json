{"uid": "1098-A", "url": "https://codeforces.com/contest/1098/problem/A", "tags": ["constructive algorithms", " dfs and similar", " greedy", " trees"], "title": "1098-A", "statement": "A. Sum in the treetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMitya has a rooted tree with $$$n$$$ vertices indexed from $$$1$$$ to $$$n$$$, where the root has index $$$1$$$. Each vertex $$$v$$$ initially had an integer number $$$a_v \\\\ge 0$$$ written on it. For every vertex $$$v$$$ Mitya has computed $$$s_v$$$: the sum of all values written on the vertices on the path from vertex $$$v$$$ to the root, as well as $$$h_v$$$ — the depth of vertex $$$v$$$, which denotes the number of vertices on the path from vertex $$$v$$$ to the root. Clearly, $$$s_1=a_1$$$ and $$$h_1=1$$$.Then Mitya erased all numbers $$$a_v$$$, and by accident he also erased all values $$$s_v$$$ for vertices with even depth (vertices with even $$$h_v$$$). Your task is to restore the values $$$a_v$$$ for every vertex, or determine that Mitya made a mistake. In case there are multiple ways to restore the values, you're required to find one which minimizes the total sum of values $$$a_v$$$ for all vertices in the tree.InputThe first line contains one integer $$$n$$$ — the number of vertices in the tree ($$$2 \\\\le n \\\\le 10^5$$$). The following line contains integers $$$p_2$$$, $$$p_3$$$, ... $$$p_n$$$, where $$$p_i$$$ stands for the parent of vertex with index $$$i$$$ in the tree ($$$1 \\\\le p_i < i$$$). The last line contains integer values $$$s_1$$$, $$$s_2$$$, ..., $$$s_n$$$ ($$$-1 \\\\le s_v \\\\le 10^9$$$), where erased values are replaced by $$$-1$$$.OutputOutput one integer — the minimum total sum of all values $$$a_v$$$ in the original tree, or $$$-1$$$ if such tree does not exist.ExamplesInput5 1 1 1 1 1 -1 -1 -1 -1Output1Input5 1 2 3 1 1 -1 2 -1 -1Output2Input3 1 2 2 -1 1Output-1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d08fca65", "template_md5": "35d339e4", "result": "You are given a rooted tree with $n$ vertices. Each vertex initially has a non-negative integer value $a_v$. For each vertex $v$, you are given:\n\n* $s_v$: the sum of all values on the path from vertex $v$ to the root, including $a_v$.\n* $h_v$: the depth of vertex $v$ (the number of vertices on the path from $v$ to the root).\n\nSome values $s_v$ have been erased (replaced with -1) for vertices with even depth.\n\nYour task is to:\n\n1. **Restore** the original values $a_v$ for all vertices.\n2. If there are multiple ways to restore the values, find the one that minimizes the total sum of all $a_v$.\n3. If it's impossible to restore the values, output -1. \n\n\n\nInput:\n\n* The first line contains $n$ (the number of vertices).\n* The second line contains $p_2$, $p_3$, ..., $p_n$ (the parent of each vertex, where $p_i$ is the parent of vertex $i$).\n* The last line contains $s_1$, $s_2$, ..., $s_n$ (the given values, with -1 for erased values).\n\nOutput:\n\n* The minimum total sum of all $a_v$, or -1 if it's impossible."}, {"prompt_md5": "6736cb8e", "template_md5": "465699a0", "result": "You are given a tree with nodes numbered 1 to n. Each node initially has a non-negative value.  For each node, you know the sum of values on the path from that node to the root, and the depth of the node. Some of these sums are missing.  \n\nYour task is to reconstruct the original values in each node, minimizing their total sum, or determine if a valid reconstruction is impossible."}]}