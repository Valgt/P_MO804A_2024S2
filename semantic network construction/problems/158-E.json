{"uid": "158-E", "url": "https://codeforces.com/contest/158/problem/E", "tags": ["*special", " dp", " sortings"], "title": "158-E", "statement": "E. Phone Talkstime limit per test3 secondsmemory limit per test256 megabytesinputstdinoutputstdoutCool J has recently become a businessman Mr. Jackson, and he has to make a lot of phone calls now. Today he hasncalls planned. For each call we know the momentti(in seconds since the start of the day) when it is scheduled to start and its durationdi(in seconds). Alltiare different. Mr. Jackson is a very important person, so he never dials anybody himself, all calls will be incoming.Mr. Jackson isn't Caesar and he can't do several things at once. If somebody calls him while he hasn't finished the previous conversation, Mr. Jackson puts the new call on hold in the queue. In this case immediately after the end of the current call Mr. Jackson takes the earliest incoming call from the queue and starts the conversation. If Mr. Jackson started the call at the secondt, and the call continues fordseconds, then Mr. Jackson is busy at secondst,t+ 1, ...,t+d- 1, and he can start a new call at secondt+d. Note that if Mr. Jackson is not busy talking when somebody calls, he can't put this call on hold.Mr. Jackson isn't Napoleon either, he likes to sleep. So sometimes he allows himself the luxury of ignoring a call, as if it never was scheduled. He can ignore at mostkcalls. Note that a call which comes while he is busy talking can be ignored as well.What is the maximum number of seconds Mr. Jackson can sleep today, assuming that he can choose an arbitrary continuous time segment from the current day (that is, with seconds from the 1-st to the 86400-th, inclusive) when he is not busy talking?Note that some calls can be continued or postponed to the next day or even later. However, the interval for sleep should be completely within the current day.InputThe first input line contains a pair of integersn,k(0 ≤k≤n≤ 4000) separated by a space. Followingnlines contain the description of calls for today. The description of each call is located on the single line and consists of two space-separated integerstianddi, (1 ≤ti,di≤ 86400). Alltiare distinct, the calls are given in the order of strict increasingti.Scheduled times of calls [ti,ti+di- 1] can arbitrarily intersect.OutputPrint a number from 0 to 86400, inclusive — the maximally possible number of seconds for Mr. Jackson to sleep today.ExamplesInput3 230000 1500040000 1500050000 15000Output49999Input5 11 2000010000 1000020000 2000025000 1000080000 60000Output39999NoteIn the first sample the most convenient way is to ignore the first two calls.In the second sample it is best to ignore the third call. In this case Mr. Jackson will have been speaking:first call: from 1-st to 20000-th second,second call: from 20001-st to 30000-th second,fourth call: from 30001-st to 40000-th second (the third call is ignored),fifth call: from 80000-th to 139999-th second.Thus, the longest period of free time is from the 40001-th to the 79999-th second.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "28ca31bf", "template_md5": "35d339e4", "result": "You are given a list of $n$ phone calls, each with a start time $t_i$ and duration $d_i$.  Calls can overlap.  You can ignore up to $k$ calls.  \n\nFind the maximum amount of time, in seconds, that you can be free from phone calls.  \n\n**Input:**\n\n* The first line contains two integers, $n$ and $k$.\n* The next $n$ lines each contain two integers, $t_i$ and $d_i$.\n\n**Output:**\n\n* A single integer representing the maximum time you can be free from phone calls."}, {"prompt_md5": "ff5026d2", "template_md5": "465699a0", "result": "You are given a list of phone calls, each with a start time and duration. You can ignore up to a certain number of calls.  Find the longest continuous period of time where you are not on a call."}]}