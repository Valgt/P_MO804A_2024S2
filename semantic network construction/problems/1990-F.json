{"uid": "1990-F", "url": "https://codeforces.com/contest/1990/problem/F", "tags": ["brute force", " data structures", " divide and conquer", " dp", " greedy", " two pointers"], "title": "1990-F", "statement": "F. Polygonal Segmentstime limit per test8 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given an array $$$a$$$ of size $$$n$$$.A segment $$$[l, r](1 \\\\le l < r \\\\le n)$$$ is called apolygonalsegment only if the following conditions hold:$$$(r-l+1) \\\\geq 3$$$;Considering $$$a_l, a_{l+1}, \\\\ldots, a_r$$$ as side lengths, these sides can form a polygon with $$$(r-l+1)$$$ sides.Process $$$q$$$ queries of two types:\"1 l r\": find the length of the longest segment among allpolygonalsegments $$$[l_0,r_0]$$$ satisfying $$$l \\\\le l_0 \\\\le r_0 \\\\le r$$$. If there is no suchpolygonalsegment, output $$$-1$$$ instead;\"2 i x\": assign $$$a_i := x$$$.InputThe first line contains an integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$) — the number of test cases.For each test case:The first line of each testcase contains two integers $$$n$$$, $$$q$$$ ($$$4 \\\\le n \\\\le 2\\\\cdot 10^5$$$, $$$1 \\\\le q \\\\le 10^5$$$);The second line of each testcase contains $$$n$$$ integers $$$a_1,a_2,\\\\ldots, a_n$$$ ($$$1 \\\\le a_i \\\\le 10^{12}$$$);The following $$$q$$$ lines contain the description of queries. Each line is of one of two types:\"1 l r\" ($$$1 \\\\le l < r \\\\le n$$$, $$$r-l+1\\\\ge 3$$$);\"2 i x\" ($$$1 \\\\le i \\\\le n$$$, $$$1 \\\\le x \\\\le 10^{12}$$$).It is guaranteed that the sum of $$$n$$$ over all test cases will not exceed $$$2 \\\\cdot 10^5$$$, and the sum of $$$q$$$ over all test cases will not exceed $$$10^5$$$.OutputFor each query, if there is no suitable segment, output $$$-1$$$ in a new line. Otherwise, output the length of the longest segment satisfying the condition above in a new line.ExampleInput25 63 1 2 2 81 1 31 1 41 1 52 1 51 1 41 1 54 10500000000000 500000000000 1000000000000 5000000000001 1 31 2 41 1 42 1 4999999999992 3 9999999999991 1 31 2 41 1 42 3 10000000000001 1 3Output-1 4 4 3 5 -1 -1 4 -1 3 4 -1NoteIn the first query of the first test case, there is nopolygonalsegment under the given condition. For example, considering segment $$$[1,3]$$$, you can not form a triangle with side lengths of $$$a_1=3$$$, $$$a_2=1$$$, and $$$a_3=2$$$.In the second query of the first test case, the longestpolygonalsegment is $$$[1,4]$$$. You can form a quadrilateral with side lengths of $$$a_1=3$$$, $$$a_2=1$$$, $$$a_3=2$$$, and $$$a_4=2$$$.An example of a quadrilateral with side lengths of $$$3$$$, $$$1$$$, $$$2$$$, and $$$2$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "62154fe6", "template_md5": "35d339e4", "result": "You are given an array of $n$ numbers.  A segment $[l, r]$ is called a \"polygonal segment\" if:\n\n*  $r-l+1 \\ge 3$\n*  The numbers in the segment ($a_l, a_{l+1}, ..., a_r$) can form a polygon with $r-l+1$ sides.\n\nYou will be given $q$ queries of two types:\n\n* **Type 1:**  \"1 l r\" - Find the length of the longest polygonal segment within the array where $l \\le l_0 \\le r_0 \\le r$. If no such segment exists, output -1.\n* **Type 2:** \"2 i x\" - Change the value of $a_i$ to $x$.\n\n**Input:**\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains two integers, $n$ (the size of the array) and $q$ (the number of queries).\n    * The second line contains the $n$ numbers in the array.\n    * The following $q$ lines contain the queries (either \"1 l r\" or \"2 i x\").\n\n**Output:**\n\nFor each query of type 1, output the length of the longest polygonal segment found, or -1 if none exists."}, {"prompt_md5": "66f88d19", "template_md5": "465699a0", "result": "You are given a list of numbers.  You need to find the longest sublist of at least 3 numbers that can be arranged to form a closed shape.  You will be asked to find the longest such sublist for different starting and ending positions in the list. You can also change individual numbers in the list."}]}