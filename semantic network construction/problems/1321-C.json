{"uid": "1321-C", "url": "https://codeforces.com/contest/1321/problem/C", "tags": ["brute force", " constructive algorithms", " greedy", " strings"], "title": "1321-C", "statement": "C. Remove Adjacenttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string $$$s$$$ consisting of lowercase Latin letters. Let the length of $$$s$$$ be $$$|s|$$$. You may perform several operations on this string.In one operation, you can choose some index $$$i$$$ andremovethe $$$i$$$-th character of $$$s$$$ ($$$s_i$$$) ifat least oneof its adjacent characters is thepreviousletter in the Latin alphabet for $$$s_i$$$. For example, thepreviousletter forbisa, thepreviousletter forsisr, the letterahas nopreviousletters. Note that after each removal the length of the string decreases by one. So, the index $$$i$$$ should satisfy the condition $$$1 \\\\le i \\\\le |s|$$$ during each operation.For the character $$$s_i$$$ adjacent characters are $$$s_{i-1}$$$ and $$$s_{i+1}$$$. The first and the last characters of $$$s$$$ both have only one adjacent character (unless $$$|s| = 1$$$).Consider the following example. Let $$$s=$$$bacabcab.During the first move, you can remove the first character $$$s_1=$$$bbecause $$$s_2=$$$a. Then the string becomes $$$s=$$$acabcab.During the second move, you can remove the fifth character $$$s_5=$$$cbecause $$$s_4=$$$b. Then the string becomes $$$s=$$$acabab.During the third move, you can remove the sixth character $$$s_6=$$$'b' because $$$s_5=$$$a. Then the string becomes $$$s=$$$acaba.During the fourth move, the only character you can remove is $$$s_4=$$$b, because $$$s_3=$$$a(or $$$s_5=$$$a). The string becomes $$$s=$$$acaaand you cannot do anything with it.Your task is to find the maximum possible number of characters you can remove if you choose the sequence of operations optimally.InputThe first line of the input contains one integer $$$|s|$$$ ($$$1 \\\\le |s| \\\\le 100$$$) — the length of $$$s$$$.The second line of the input contains one string $$$s$$$ consisting of $$$|s|$$$ lowercase Latin letters.OutputPrint one integer — the maximum possible number of characters you can remove if you choose the sequence of moves optimally.ExamplesInput8 bacabcabOutput4Input4 bcdaOutput3Input6 abbbbbOutput5NoteThe first example is described in the problem statement. Note that the sequence of moves provided in the statement is not the only, but it can be shown that the maximum possible answer to this test is $$$4$$$.In the second example, you can remove all but one character of $$$s$$$. The only possible answer follows.During the first move, remove the third character $$$s_3=$$$d, $$$s$$$ becomesbca.During the second move, remove the second character $$$s_2=$$$c, $$$s$$$ becomesba.And during the third move, remove the first character $$$s_1=$$$b, $$$s$$$ becomesa.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e1381aa4", "template_md5": "35d339e4", "result": "You are given a string of lowercase letters. You can remove a letter from the string if the letter before it or the letter after it is the letter that comes alphabetically before it. For example, you can remove a 'b' if it is followed by an 'a'.  \n\nYou can perform this operation multiple times. What is the maximum number of letters you can remove from the string?"}, {"prompt_md5": "2bfb6715", "template_md5": "465699a0", "result": "You are given a string of lowercase letters. You can remove a letter if the letter before or after it comes earlier in the alphabet.  What is the maximum number of letters you can remove?"}]}