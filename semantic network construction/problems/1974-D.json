{"uid": "1974-D", "url": "https://codeforces.com/contest/1974/problem/D", "tags": ["constructive algorithms", " greedy", " implementation"], "title": "1974-D", "statement": "D. Ingenuity-2time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's imagine the surface of Mars as an infinite coordinate plane. Initially, the rover Perseverance-2 and the helicopter Ingenuity-2 are located at the point with coordinates $$$(0, 0)$$$. A set of instructions $$$s$$$ consisting of $$$n$$$ instructions of the following types was specially developed for them:N: move one meter north (from point $$$(x, y)$$$ to $$$(x, y + 1)$$$);S: move one meter south (from point $$$(x, y)$$$ to $$$(x, y - 1)$$$);E: move one meter east (from point $$$(x, y)$$$ to $$$(x + 1, y)$$$);W: move one meter west (from point $$$(x, y)$$$ to $$$(x - 1, y)$$$).Each instruction must be executed either by the rover or by the helicopter. Moreover, each device must executeat least oneinstruction. Your task is to distribute the instructions in such a way that after executing all $$$n$$$ instructions, the helicopter and the rover end up at the same point, or determine that this is impossible.InputThe first line of input contains $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$) — the number of test cases.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the number of instructions.The second line of each test case contains a string $$$s$$$ of length $$$n$$$ consisting of the characters 'N', 'S', 'E', 'W' — the sequence of instructions.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10 ^ 5$$$.OutputFor each test case, if the required distribution of instructions exists, output a string $$$p$$$ of length $$$n$$$ consisting of the characters 'R', 'H'. If the $$$i$$$-th operation should be executed by the rover, then $$$p_i=\\\\text{R}$$$, if the $$$i$$$-th operation should be executed by the helicopter, then $$$p_i=\\\\text{H}$$$. If there are multiple solutions, output any of them.Otherwise, outputNO.ExampleInput106NENSNE3WWW6NESSWS2SN2WE4SSNN4WESN2SS4EWNN4WEWEOutputRRHRRH NO HRRHRH NO NO RHRH RRHH RH RRRH RRHHNoteLet's consider the first example: the string $$$S = \\\\texttt{NENSNE}$$$. One of the possible solutions, shown in the figure below, is $$$p = \\\\texttt{RRHRRH}$$$, using which both the rover and the helicopter will end up one meter north and one meter east.ForWWW, the solution is impossible.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "91a4c88f", "template_md5": "35d339e4", "result": "You are given a sequence of instructions, each of which is either 'N' (move one unit north), 'S' (move one unit south), 'E' (move one unit east), or 'W' (move one unit west).  \n\nTwo entities start at the origin (0,0) on a 2D plane.  \n\nYour task is to determine if it's possible to assign each instruction to one of the entities such that after all instructions are executed, both entities end up at the same point. If it's possible, output a sequence of 'R' (for the first entity) and 'H' (for the second entity) indicating which entity should execute each instruction. If it's not possible, output \"NO\"."}, {"prompt_md5": "5d6ef364", "template_md5": "465699a0", "result": "You are given a sequence of movements (North, South, East, West).  You need to split these movements between two agents so that both agents end up in the same location after completing all movements. Determine if this is possible and, if so, provide a way to split the movements."}]}