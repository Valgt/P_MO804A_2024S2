{"uid": "1275-E2", "url": "https://codeforces.com/contest/1275/problem/E2", "tags": ["*special"], "title": "1275-E2", "statement": "E2. Контрольная суммаограничение по времени на тест2 секундыограничение по памяти на тест512 мегабайтвводстандартный вводвыводстандартный выводДанные пользователей ВКонтакте хранятся на десятках тысяч серверов. Для того, чтобы можно было определять ошибки при записи данных на диск, на диск регулярно записываются текущие контрольные суммы CRC32 (Wiki, IEEE 802-3). Благодаря этому, при чтении данных можно заново вычислить контрольную сумму и проверить, что данные и контрольная сумма записаны корректно.Разумеется, проверки на совпадение контрольной суммы встроены в большинство сервисов ВКонтакте. Но как-то раз оказалось, что в одном сегменте данных нужно изменить значение четырех последовательных байт на новое — нужно заменить значения последовательности $$$a_i, a_{i+1}, a_{i+2}, a_{i+3}$$$ на $$$x_0, x_1, x_2, x_3$$$. При этом, нужно чтобы значение контрольной суммы CRC32 осталось прежним. Конечно, при изменении последовательности ее контрольная сумма изменится, поэтому кроме изменения этих четырех байт на новое значение, были выбраны четыре байта $$$a_{j}, a_{j+1}, a_{j+2}, a_{j+3}$$$, которым можно назначить любое значение. Ваша задача выбрать им новые значения так, чтобы CRC32 данной последовательности не изменился, или определить, что это невозможно. Поскольку изменение данных — операция серьезная, перед самим изменением нужно определить, как изменится последовательность для $$$q$$$ независимых тестовых случаев.Обратите внимание, что в этой версии задачи есть всего один тест с $$$n=50\\\\,000, q=8$$$, который вы можете скачать поэтой ссылке. Ваше решение не обязано проходить тесты из условия, и не будет на них протестировано. Если вы хотите проверить ваше решение на тестах из условия, отправляйте его в задачуE3, где первые два теста соответствуют примерам из условия.Входные данныеВ первой строке дано два целых числа $$$n$$$ и $$$q$$$ — количество байт в файле и количество запросов, для которых нужно решить задачу ($$$8 \\\\le n \\\\le 2 \\\\cdot 10^5$$$; $$$1 \\\\le q \\\\le 10^5$$$).Во второй строке дано $$$n$$$ чисел $$$a_0, a_1, \\\\ldots, a_{n-1}$$$ — содержимое файла в байтах ($$$0 \\\\le a_i \\\\le 255$$$).В следующих $$$q$$$ строках дано по шесть чисел $$$i, j, x_0, x_1, x_2, x_3$$$ — позиция $$$i$$$, начиная с которой нужно заменить четыре байта на $$$x_0, x_1, x_2, x_3$$$, и позиция $$$j$$$, начиная с которой можно менять четыре байта как угодно ($$$0 \\\\le i, j \\\\le n-4$$$; $$$0 \\\\le x_0, x_1, x_2, x_3 \\\\le 255$$$). Гарантируется, что отрезки $$$[i; i+3]$$$ и $$$[j; j+3]$$$ не пересекаются.Выходные данныеДля каждого запроса выведите четыре целых числа $$$z_0, z_1, z_2, z_3$$$, на которые нужно заменить четыре байта с номерами $$$j, j+1, j+2, j+3$$$, чтобы crc32 не изменился. Обратите внимание, что все запросы независимы, и на самом деле последовательность не изменяется.Если существует несколько решений, выведите любое, а если для данного запроса валидного решения нет, выведитеNo solution.ПримерыВходные данные8 1 1 2 3 4 5 6 7 8 0 4 0 0 0 0Выходные данные212 34 127 159Входные данные16 3 4 5 6 7 0 0 0 0 0 0 0 85 200 47 47 0 11 0 0 0 0 0 3 12 7 0 0 0 0 11 0 0 0 0Выходные данные0 0 0 0 200 47 47 0 0 0 0 0ПримечаниеCRC32байтовой последовательности из первого примера(1 2 3 4 5 6 7 8) равен3fca88c5, CRC32измененной последовательности(0 0 0 0 212 34 127 159) так же равен3fca88c5. Стандартная утилита crc32 из большинства дистрибутивов линукса должна посчитать от них данную контрольную сумму.CRC32 последовательности из второго примера равенecbb4b55.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "194cfbfe", "template_md5": "35d339e4", "result": "You are given a sequence of $n$ bytes. You need to change 4 consecutive bytes in the sequence starting at position $i$ to 4 new bytes ($x_0$, $x_1$, $x_2$, $x_3$). You are also allowed to change 4 other consecutive bytes starting at position $j$ to any values. The goal is to find values for the 4 bytes at position $j$ such that the CRC32 checksum of the entire sequence remains the same. \n\nInput:\n\n* $n$: the number of bytes in the sequence\n* $q$: the number of queries\n* $a_0, a_1, ..., a_{n-1}$: the sequence of bytes\n* For each query:\n    * $i$: the starting position of the bytes to be changed\n    * $j$: the starting position of the bytes that can be changed\n    * $x_0$, $x_1$, $x_2$, $x_3$: the new bytes to be inserted at position $i$\n\nOutput:\n\n* For each query, output four bytes ($z_0$, $z_1$, $z_2$, $z_3$) that should be placed at position $j$ to keep the CRC32 checksum the same. If no solution exists, output \"No solution\"."}, {"prompt_md5": "51f21ab7", "template_md5": "465699a0", "result": "You are given a sequence of bytes. You need to change four bytes in a specific location within the sequence to new values. You are also allowed to change four other bytes in a different location.  Find values for the four bytes you are allowed to change so that the overall checksum (CRC32) of the sequence remains the same. If no such values exist, say \"No solution\"."}]}