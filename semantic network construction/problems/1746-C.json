{"uid": "1746-C", "url": "https://codeforces.com/contest/1746/problem/C", "tags": ["constructive algorithms", " greedy", " implementation", " math"], "title": "1746-C", "statement": "C. Permutation Operationstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a permutation $$$a$$$ of size $$$n$$$ and you should perform $$$n$$$ operations on it. In the $$$i$$$-th operation, you can choose a non-empty suffix of $$$a$$$ and increase all of its elements by $$$i$$$. How can we perform the operations to minimize the number of inversions in the final array?Note that you can perform operations on the same suffix any number of times you want.A permutation of size $$$n$$$ is an array of size $$$n$$$ such that each integer from $$$1$$$ to $$$n$$$ occurs exactly once in this array. A suffix is several consecutive elements of an array that include the last element of the array. An inversion in an array $$$a$$$ is a pair of indices $$$(i, j)$$$ such that $$$i > j$$$ and $$$a_{i} < a_{j}$$$.InputEach test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$). The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 10^5$$$) â€” the size of the array.The second line contains $$$n$$$ distinct integers $$$a_{1}, a_{2}, \\\\dots, a_{n}$$$ ($$$1 \\\\le a_i \\\\le n$$$), the initial permutation $$$a$$$.It's guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, print $$$n$$$ integers $$$x_{1}, x_{2}, \\\\ldots, x_{n}$$$ ($$$1 \\\\le x_{i} \\\\le n$$$ for each $$$1 \\\\le i \\\\le n$$$) indicating that the $$$i$$$-th operation must be applied to the suffixstarting at index$$$x_{i}$$$. If there are multiple answers, print any of them.ExampleInput441 2 3 451 3 2 4 532 3 111Output1 1 1 1 1 4 3 2 1 1 3 3 1NoteIn the first test case one of the optimal solutions is to increase the whole array on each operation (that is, choose the suffix starting at index $$$1$$$). The final array $$$[11, 12, 13, 14]$$$ contains $$$0$$$ inversions.In the second test case, $$$a$$$ will be equal to $$$[2, 4, 3, 5, 6]$$$, $$$[2, 4, 3, 7, 8]$$$, $$$[2, 4, 6, 10, 11]$$$, $$$[2, 8, 10, 14, 15]$$$ and $$$[7, 13, 15, 19, 20]$$$ after the first, second, third, fourth, and fifth operations, respectively. So the final array $$$a$$$ has zero inversions.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "304e043e", "template_md5": "35d339e4", "result": "You are given a list of $n$ distinct numbers. You can perform $n$ operations. In each operation, you choose a part of the list (a suffix) and increase all the numbers in that part by the operation number.  \n\nYour goal is to perform these operations in a way that results in the fewest possible \"inversions\" in the final list.\n\nAn inversion is a pair of numbers in the list where the first number is larger than the second number, but they are in the wrong order.\n\n**Input:**\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains the size of the list, $n$.\n    * The second line contains the $n$ distinct numbers in the list.\n\n**Output:**\n\nFor each test case, output $n$ numbers. Each number represents the starting index of a suffix to be increased in a specific operation. \n\n\n\nLet me know if you'd like help understanding any part of this!"}, {"prompt_md5": "452fd331", "template_md5": "465699a0", "result": "You are given a list of numbers. You can repeatedly choose a part of the list and increase all the numbers in that part by a specific value.  Your goal is to find a way to do this so that the final list has the fewest number of pairs where a smaller number comes after a larger number."}]}