{"uid": "1762-B", "url": "https://codeforces.com/contest/1762/problem/B", "tags": ["constructive algorithms", " implementation", " number theory", " sortings"], "title": "1762-B", "statement": "B. Make Array Goodtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAn array $$$b$$$ of $$$m$$$ positive integers isgoodif for all pairs $$$i$$$ and $$$j$$$ ($$$1 \\\\leq i,j \\\\leq m$$$), $$$\\\\max(b_i,b_j)$$$ is divisible by $$$\\\\min(b_i,b_j)$$$.You are given an array $$$a$$$ of $$$n$$$ positive integers. You can perform the following operation:Select an index $$$i$$$ ($$$1 \\\\leq i \\\\leq n$$$) and an integer $$$x$$$ ($$$0 \\\\leq x \\\\leq a_i$$$) and add $$$x$$$ to $$$a_i$$$, in other words, $$$a_i := a_i+x$$$.After this operation, $$$a_i \\\\leq 10^{18}$$$ should be satisfied.You have to construct a sequence ofat most$$$n$$$ operations that will make $$$a$$$ good. It can be proven that under the constraints of the problem, such a sequence of operationsalwaysexists.InputEach test contains multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 10^5$$$) — the length of the array $$$a$$$.The second line of each test case contains $$$n$$$ space-separated integers $$$a_1,a_2,\\\\ldots,a_n$$$ ($$$1 \\\\leq a_i \\\\leq 10^9$$$) — representing the array $$$a$$$.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.OutputFor each test, output a single integer $$$p$$$ ($$$0 \\\\leq p \\\\leq n$$$) — denoting the number of operations in your solution.In each of the following $$$p$$$ lines, output two space-separated integers — $$$i$$$ and $$$x$$$.You do not need to minimize the number of operations. It can be proven that a solution always exists.ExampleInput442 3 5 524 853 4 343 5 6331 5 17Output4 1 2 1 1 2 2 3 0 0 5 1 3 1 4 2 1 5 4 3 7 3 1 29 2 5 3 3NoteIn the first test case, array $$$a$$$ becomes $$$[5,5,5,5]$$$ after the operations. It is easy to see that $$$[5,5,5,5]$$$ isgood.In the second test case, array $$$a$$$ is alreadygood.In the third test case, after performing the operations, array $$$a$$$ becomes $$$[10,5,350,5,10]$$$, which isgood.In the fourth test case, after performing the operations, array $$$a$$$ becomes $$$[60,10,20]$$$, which isgood.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e7784f32", "template_md5": "465699a0", "result": "You are given a list of numbers. You can increase each number by any amount up to its original value.  Find the fewest changes needed to make it so that for any two numbers in the list, the larger number is divisible by the smaller number."}, {"prompt_md5": "f21c0b91", "template_md5": "35d339e4", "result": "You are given an array of $n$ positive integers. You can perform the following operation on the array:\n\n* Choose an index $i$ (between 1 and $n$) and an integer $x$ (between 0 and the current value of $a_i$).\n* Add $x$ to $a_i$.\n\nThe goal is to perform at most $n$ operations to make the array \"good\". An array is considered \"good\" if for all pairs of indices $i$ and $j$ (where $1 \\le i, j \\le n$), the maximum of $a_i$ and $a_j$ is divisible by the minimum of $a_i$ and $a_j$.\n\nFor each test case, output the minimum number of operations required to make the array \"good\". Then, list the chosen indices $i$ and the values $x$ for each operation."}]}