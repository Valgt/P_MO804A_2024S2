{"uid": "1923-F", "url": "https://codeforces.com/contest/1923/problem/F", "tags": ["binary search", " brute force", " greedy", " hashing", " implementation", " string suffix structures", " strings"], "title": "1923-F", "statement": "F. Shrink-Reversetime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a binary string $$$s$$$ of length $$$n$$$ (a string consisting of $$$n$$$ characters, and each character is either0or1).Let's look at $$$s$$$ as at a binary representation of some integer, and name that integer as thevalueof string $$$s$$$. For example, the value of000is $$$0$$$, the value of01101is $$$13$$$, \"100000\" is $$$32$$$ and so on.You can perform at most $$$k$$$ operations on $$$s$$$. Each operation should have one of the two following types:SWAP: choose two indices $$$i < j$$$ in $$$s$$$ and swap $$$s_i$$$ with $$$s_j$$$;SHRINK-REVERSE: delete all leading zeroes from $$$s$$$ and reverse $$$s$$$.For example, after you performSHRINK-REVERSEon000101100, you'll get001101.What is the minimum value of $$$s$$$ you can achieve by performing at most $$$k$$$ operations on $$$s$$$?InputThe first line contains two integers $$$n$$$ and $$$k$$$ ($$$2 \\\\le n \\\\le 5 \\\\cdot 10^5$$$; $$$1 \\\\le k \\\\le n$$$) — the length of the string $$$s$$$ and the maximum number of operations.The second line contains the string $$$s$$$ of length $$$n$$$ consisting of characters0and/or1.Additional constraint on the input: $$$s$$$ containsat least one1.OutputPrint a single integer — the minimum value of $$$s$$$ you can achieve using no more than $$$k$$$ operations. Since the answer may be too large, print it modulo $$$10^{9} + 7$$$.Note that you need to minimize the original value, not the remainder.ExamplesInput8 210010010Output7Input8 201101000Output7Input30 30111111111111111111111111111111Output73741816Input14 110110001111100Output3197NoteIn the first example, one of the optimal strategies is the following:10010010$$$\\\\xrightarrow{\\\\texttt{SWAP}}$$$00010110;00010110$$$\\\\xrightarrow{\\\\texttt{SWAP}}$$$00000111.The value of00000111is $$$7$$$.In the second example, one of the optimal strategies is the following:01101000$$$\\\\xrightarrow{\\\\texttt{SHRINK}}$$$1101000$$$\\\\xrightarrow{\\\\texttt{REVERSE}}$$$0001011;0001011$$$\\\\xrightarrow{\\\\texttt{SWAP}}$$$0000111.The value of0000111is $$$7$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "daa101de", "template_md5": "35d339e4", "result": "You are given a binary string $s$ of length $n$ (a string consisting of $n$ characters, and each character is either 0 or 1).  \n\nThink of $s$ as representing a number. For example, $000$ represents 0, $01101$ represents 13, and so on.\n\nYou can perform at most $k$ operations on $s$. Each operation can be one of two types:\n\n* **SWAP:** Choose two positions $i$ and $j$ in $s$ where $i < j$ and swap the characters at those positions.\n* **SHRINK-REVERSE:**  Remove all leading zeros from $s$ and reverse the string.\n\nWhat is the smallest number you can get by performing at most $k$ operations on $s$?  \n\n**Input:**\n\n* The first line contains two integers $n$ and $k$ ($2 \\le n \\le 5 \\cdot 10^5$; $1 \\le k \\le n$) — the length of the string $s$ and the maximum number of operations.\n* The second line contains the string $s$ of length $n$ consisting of 0s and 1s.\n\n**Output:**\n\nPrint a single integer — the smallest number you can get. Since the answer may be very large, print it modulo $10^9 + 7$."}, {"prompt_md5": "e94ea8ae", "template_md5": "465699a0", "result": "You are given a binary string. You can swap two positions in the string or remove leading zeros and reverse the string, up to a certain number of times. What is the smallest number you can make from the string?"}]}