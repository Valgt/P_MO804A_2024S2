{"uid": "1672-F1", "url": "https://codeforces.com/contest/1672/problem/F1", "tags": ["constructive algorithms", " graphs", " greedy"], "title": "1672-F1", "statement": "F1. Array Shufflingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputoolimry has an array $$$a$$$ of length $$$n$$$ which he really likes. Today, you have changed his array to $$$b$$$, a permutation of $$$a$$$, to make him sad.Because oolimry is only a duck, he can only perform the following operation to restore his array:Choose two integers $$$i,j$$$ such that $$$1 \\\\leq i,j \\\\leq n$$$.Swap $$$b_i$$$ and $$$b_j$$$.Thesadnessof the array $$$b$$$ is the minimum number of operations needed to transform $$$b$$$ into $$$a$$$.Given the array $$$a$$$, find any array $$$b$$$ which is a permutation of $$$a$$$ that has the maximum sadness over all permutations of the array $$$a$$$.InputEach test contains multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$)  — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 2 \\\\cdot 10^5$$$)  — the length of the array.The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\leq a_i \\\\leq n$$$)  — elements of the array $$$a$$$.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, print $$$n$$$ integers $$$b_1, b_2, \\\\ldots, b_n$$$ — describing the array $$$b$$$. If there are multiple answers, you may print any.ExampleInput222 141 2 3 3Output1 2 3 3 2 1NoteIn the first test case, the array $$$[1,2]$$$ has sadness $$$1$$$. We can transform $$$[1,2]$$$ into $$$[2,1]$$$ using one operation with $$$(i,j)=(1,2)$$$.In the second test case, the array $$$[3,3,2,1]$$$ has sadness $$$2$$$. We can transform $$$[3,3,2,1]$$$ into $$$[1,2,3,3]$$$ with two operations with $$$(i,j)=(1,4)$$$ and $$$(i,j)=(2,3)$$$ respectively.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "4a072ec2", "template_md5": "35d339e4", "result": "You are given an array $a$ of length $n$.  You need to find a permutation $b$ of $a$ that requires the maximum number of swaps to transform into $a$. Output any such permutation $b$.\n\nThe \"sadness\" of an array is the minimum number of swaps needed to transform it into the original array."}, {"prompt_md5": "db3bccf1", "template_md5": "465699a0", "result": "Given a list of numbers, find a different arrangement of the same numbers that requires the most swaps to change it back to the original list.  Output one such arrangement."}]}