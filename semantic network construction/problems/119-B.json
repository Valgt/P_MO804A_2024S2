{"uid": "119-B", "url": "https://codeforces.com/contest/119/problem/B", "tags": ["constructive algorithms", " implementation", " sortings"], "title": "119-B", "statement": "B. Before Examtime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutVasya is about to take his first university exam in about several minutes. And it's not just some ordinary exam, it's on mathematical analysis. Of course, right now Vasya can only think of one thing: what the result of his talk with the examiner will be...To prepare for the exam, one has to study proofs ofntheorems. It is known that there will bekexamination cards on the exam and each card containsdistinct theorems. Besides, no theorem is mentioned in more than one card (that is,theorems won't be mentioned in any card). During the exam several students may get the same card.We do not know the exact way theorems are distributed by cards, however the students that took the exam before Vasya told him what theorems their cards contained. Vasya evaluates hislevel of proficiency in thei-th theoremby some numberai.The level of proficiency in some cardis the average of the levels of proficiency in the theorems that are included in the card. Now Vasya wants to know the minimally and maximally possible levels of his proficiency in the card he gets on the exam. Vasya wants to determine it by the data he has collected from other students. Unfortunately, Vasya has no time left to do the math and he asked you to help him.InputThe first line contains two integersnandk(1 ≤k≤n≤ 100) — the number of theorems and the number of cards correspondingly. The second line containsnintegersai(0 ≤ai≤ 100), thei-th number (1 ≤i≤n) corresponds to Vasya's proficiency in thei-th theorem.The third line contains numberq(0 ≤q≤ 100) — the number of people that have taken the exam before Vasya. Each of the followingqlines contains the description of a student's card:integers from1toninclusive. They are the numbers of theorems included in the card in the order in which they are enumerated in the input data. The numbers are given in an arbitrary order. It is guaranteed that the given cards are valid (that is, that all theorems in one card are different and that different people get cards that either don't contain the same theorems or coincide up to the theorems' permutation).OutputPrint two real numbers, representing Vasya's minimum and maximum proficiency in the card he will get on the exam. The absolute or relative error should not exceed10- 6.ExamplesInput7 37 15 0 19 10 5 1221 67 4Output5.0000000000 15.5000000000Input4 210 8 1 1722 33 2Output4.5000000000 13.5000000000NoteLet's analyze the first sample. Vasya's proficiency in the cards whose content he already knows equals6and15.5correspondingly. The three theorems that are left are only enough to make one exam card. If we consider all possible variants of theorems included in the card we can see that in the best case scenario Vasya gets the card that contains theorems4and7(his proficiency would equal15.5) and in the worst case scenario he gets theorems3and5(his proficiency would equal5).The⌊x⌋operation denotes taking integer part of real numberx(rounding down).", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "85401d0e", "template_md5": "35d339e4", "result": "There are $n$ theorems and $k$ exam cards. Each card contains a unique set of theorems, and no theorem appears on more than one card. \n\nYou are given:\n\n* An array $a$ of length $n$ representing the proficiency level of a student in each theorem ($a_i$ is the proficiency in the $i$-th theorem).\n* The number $q$ of students who have already taken the exam.\n* For each of the $q$ students, you are given a list of theorems on their card.\n\nYou need to find the minimum and maximum possible proficiency level the student could have on their exam card."}, {"prompt_md5": "e44c40ae", "template_md5": "465699a0", "result": "You are given a list of skills and a proficiency level for each skill. You are also given a list of groups of skills that represent different exam cards.  Determine the minimum and maximum possible average proficiency level for a randomly chosen exam card."}]}