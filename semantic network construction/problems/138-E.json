{"uid": "138-E", "url": "https://codeforces.com/contest/138/problem/E", "tags": ["brute force", " dp", " two pointers"], "title": "138-E", "statement": "E. Hellish Constraintstime limit per test3 secondsmemory limit per test256 megabytesinputstdinoutputstdoutKatya recently started to invent programming tasks and prepare her own contests. What she does not like is boring and simple constraints. Katya is fed up with all those \"Ndoes not exceed a thousand\" and \"the sum ofaidoes not exceed a million\" and she decided to come up with something a little more complicated.The last problem written by Katya deals with strings. The input is a string of small Latin letters. To make the statement longer and strike terror into the people who will solve the contest, Katya came up with the following set ofkrestrictions of the same type (characters in restrictions can be repeated and some restrictions may contradict each other):The number of charactersc1in a string is not less thanl1and not more thanr1....The number of charactersciin a string is not less thanliand not more thanri....The number of charactersckin a string is not less thanlkand not more thanrk.However, having decided that it is too simple and obvious, Katya added the following condition: a string meets no less thanLand not more thanRconstraints from the above given list.Katya does not like to compose difficult and mean tests, so she just took a big stringsand wants to add to the tests all its substrings that meet the constraints. However, Katya got lost in her conditions and asked you to count the number of substrings of the stringsthat meet the conditions (each occurrence of the substring is counted separately).InputThe first line contains a non-empty strings, consisting of small Latin letters. The length of the stringsdoes not exceed105.The second line contains three space-separated integersk,LandR(0 ≤L≤R≤k≤ 500).Nextklines contain Katya's constrictions in the following form \"ciliri\". All lettersciare small Latin letters,liandriare integers (0 ≤li≤ri≤ |s|, where|s|is the length of strings). Lettersciare not necessarily different.OutputPrint a single number — the number of substrings that meet the constrictions.Please do not use the%lldspecificator to read or write 64-bit integers in С++. It is preferred to use thecoutstream or the%I64dspecificator.ExamplesInputcodeforces2 0 0o 1 2e 1 2Output7Inputcodeforces2 1 1o 1 2o 1 2Output0NoteIn the first test we should count the number of strings that do not contain characters \"e\" and \"o\". All such strings are as follows (in the order of occurrence in the initial string from the left to the right): \"c\", \"d\"', \"f\", \"r\", \"rc\", \"c\", \"s\".In the second test we cannot achieve fulfilling exactly one of the two identical constrictions, so the answer is 0.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ab0e1d7e", "template_md5": "35d339e4", "result": "You are given a string $s$ and $k$ constraints. Each constraint is of the form \"character $c_i$ must appear between $l_i$ and $r_i$ times\".  You also have two integers $L$ and $R$ where $L \\le R$.\n\nYou need to count the number of substrings of $s$ that satisfy the following conditions:\n\n*  Each substring must satisfy at least $L$ and at most $R$ of the given constraints.\n*  Each occurrence of a substring is counted separately.\n\n\n\nLet me know if you'd like help with the solution as well!"}, {"prompt_md5": "284e50af", "template_md5": "465699a0", "result": "Given a string and a set of rules that specify minimum and maximum counts for certain characters within substrings, count the number of substrings that satisfy all the rules.  The number of rules that must be satisfied is also given."}]}