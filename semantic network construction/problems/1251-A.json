{"uid": "1251-A", "url": "https://codeforces.com/contest/1251/problem/A", "tags": ["brute force", " strings", " two pointers"], "title": "1251-A", "statement": "A. Broken Keyboardtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecently Polycarp noticed that some of the buttons of his keyboard are malfunctioning. For simplicity, we assume that Polycarp's keyboard contains $$$26$$$ buttons (one for each letter of the Latin alphabet). Each button is either working fine or malfunctioning.To check which buttons need replacement, Polycarp pressed some buttons in sequence, and a string $$$s$$$ appeared on the screen. When Polycarp presses a button with character $$$c$$$, one of the following events happened:if the button was working correctly, a character $$$c$$$ appeared at the end of the string Polycarp was typing;if the button was malfunctioning,twocharacters $$$c$$$ appeared at the end of the string.For example, suppose the buttons corresponding to charactersaandcare working correctly, and the button corresponding tobis malfunctioning. If Polycarp presses the buttons in the ordera,b,a,c,a,b,a, then the string he is typing changes as follows:a$$$\\\\rightarrow$$$abb$$$\\\\rightarrow$$$abba$$$\\\\rightarrow$$$abbac$$$\\\\rightarrow$$$abbaca$$$\\\\rightarrow$$$abbacabb$$$\\\\rightarrow$$$abbacabba.You are given a string $$$s$$$ which appeared on the screen after Polycarp pressed some buttons. Help Polycarp to determine which buttons are working correctly for sure (that is, this string could not appear on the screen if any of these buttons was malfunctioning).You may assume that the buttons don't start malfunctioning when Polycarp types the string: each button either works correctly throughout the whole process, or malfunctions throughout the whole process.InputThe first line contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 100$$$) â€” the number of test cases in the input.Then the test cases follow. Each test case is represented by one line containing a string $$$s$$$ consisting of no less than $$$1$$$ and no more than $$$500$$$ lowercase Latin letters.OutputFor each test case, print one line containing a string $$$res$$$. The string $$$res$$$ should contain all characters which correspond to buttons that work correctlyin alphabetical order, without any separators or repetitions. If all buttons may malfunction, $$$res$$$ should be empty.ExampleInput4 a zzaaz ccff cbddbbOutputa z  bc", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "06a42b9a", "template_md5": "35d339e4", "result": "You are given a string $s$ that represents the result of pressing keys on a keyboard. Some keys are working correctly, while others are malfunctioning.  \n\n* A working key will add its corresponding character to the string.\n* A malfunctioning key will add two of its corresponding characters to the string.\n\nDetermine which keys are definitely working correctly based on the string $s$. \n\n**Input:**\n\n* The first line contains an integer $t$ representing the number of test cases.\n* Each test case is a line containing a string $s$.\n\n**Output:**\n\n* For each test case, print a string containing all the characters of the definitely working keys in alphabetical order. If no keys can be determined to be working, print an empty string."}, {"prompt_md5": "97e370a4", "template_md5": "465699a0", "result": "You are given a string.  Determine which letters in the alphabet definitely correspond to working keyboard keys based on the string.  A malfunctioning key will cause its letter to appear twice in the output string."}]}