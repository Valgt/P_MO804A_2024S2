{"uid": "875-B", "url": "https://codeforces.com/contest/875/problem/B", "tags": ["dsu", " implementation", " sortings", " two pointers"], "title": "875-B", "statement": "B. Sorting the Coinstime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputRecently, Dima met with Sasha in a philatelic store, and since then they are collecting coins together. Their favorite occupation is to sort collections of coins. Sasha likes having things in order, that is why he wants his coins to be arranged in a row in such a way that firstly come coins out of circulation, and then come coins still in circulation.For arranging coins Dima uses the following algorithm. One step of his algorithm looks like the following:He looks through all the coins from left to right;If he sees that thei-th coin is still in circulation, and(i+ 1)-th coin is already out of circulation, he exchanges these two coins and continues watching coins from(i+ 1)-th.Dima repeats the procedure above until it happens that no two coins were exchanged during this procedure. Dima callshardness of orderingthe number of steps required for him according to the algorithm above to sort the sequence, e.g. the number of times he looks through the coins from the very beginning. For example, for the ordered sequence hardness of ordering equals one.Today Sasha invited Dima and proposed him a game. First he putsncoins in a row, all of them are out of circulation. Then Sasha chooses one of the coins out of circulation and replaces it with a coin in circulation forntimes. During this process Sasha constantly asks Dima what is the hardness of ordering of the sequence.The task is more complicated because Dima should not touch the coins and he should determine hardness of ordering in his mind. Help Dima with this task.InputThe first line contains single integern(1 ≤n≤ 300 000) — number of coins that Sasha puts behind Dima.Second line containsndistinct integersp1,p2, ...,pn(1 ≤pi≤n) — positions that Sasha puts coins in circulation to. At first Sasha replaces coin located at positionp1, then coin located at positionp2and so on. Coins are numbered from left to right.OutputPrintn+ 1numbersa0,a1, ...,an, wherea0is a hardness of ordering at the beginning,a1is a hardness of ordering after the first replacement and so on.ExamplesInput41 3 4 2Output1 2 3 2 1Input86 8 3 4 7 2 1 5Output1 2 2 3 4 3 4 5 1NoteLet's denote asOcoin out of circulation, and asX— coin is circulation.At the first sample, initially in row there are coins that are not in circulation, so Dima will look through them from left to right and won't make any exchanges.After replacement of the first coin with a coin in circulation, Dima will exchange this coin with next three times and after that he will finally look through the coins and finish the process.XOOO→OOOXAfter replacement of the third coin, Dima's actions look this way:XOXO→OXOX→OOXXAfter replacement of the fourth coin, Dima's actions look this way:XOXX→OXXXFinally, after replacement of the second coin, row becomes consisting of coins that are in circulation and Dima will look through coins from left to right without any exchanges.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6acb2dc2", "template_md5": "35d339e4", "result": "You are given a sequence of $n$ coins, initially all out of circulation.  A coin is replaced with a coin in circulation $k$ times. After each replacement, determine the minimum number of passes required to sort the coins so that all out-of-circulation coins are together followed by all in-circulation coins.\n\n**Input:**\n\n* The first line contains an integer $n$ (1 ≤ $n$ ≤ 300,000), the number of coins.\n* The second line contains $n$ distinct integers $p_1$, $p_2$, ..., $p_n$ (1 ≤ $p_i$ ≤ $n$), representing the positions where coins are replaced with in-circulation coins.\n\n**Output:**\n\nPrint $n + 1$ integers $a_0$, $a_1$, ..., $a_n$, where:\n\n* $a_0$ is the hardness of ordering at the beginning (all coins out of circulation).\n* $a_i$ is the hardness of ordering after the $i$-th coin is replaced."}, {"prompt_md5": "bfa269e5", "template_md5": "465699a0", "result": "You are given a sequence of numbers.  Each number represents whether an item is in circulation (1) or out of circulation (0).  You can swap adjacent items if they are in the wrong order (out of circulation followed by in circulation).  \n\nYou are repeatedly asked to determine the minimum number of times you need to go through the sequence and swap items to get it sorted (all out of circulation items first, then all in circulation items).  \n\nAfter each swap, you are asked to provide the new minimum number of swaps needed."}]}