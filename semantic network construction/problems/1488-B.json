{"uid": "1488-B", "url": "https://codeforces.com/contest/1488/problem/B", "tags": ["*special", " greedy"], "title": "1488-B", "statement": "B. RBS Deletiontime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputA bracket sequence is a string containing only characters \"(\" and \")\". A regular bracket sequence (or, shortly, an RBS) is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example:bracket sequences \"()()\" and \"(())\" are regular (the resulting expressions are: \"(1)+(1)\" and \"((1+1)+1)\");bracket sequences \")(\", \"(\" and \")\" are not.You are given a string $$$s$$$, which is an RBS. You can apply any number of operations to this string. Each operation can have one of the following types:choose some non-empty prefix of $$$s$$$ and remove it from $$$s$$$, so $$$s$$$ is still an RBS. For example, we can apply this operation as follows: \"(())()(())()()\" $$$\\\\to$$$ \"()()\" (the first $$$10$$$ characters are removed);choose somecontiguousnon-empty substring of $$$s$$$ and remove it from $$$s$$$, so $$$s$$$ is still an RBS. For example, we can apply this operation as follows: \"(())()(())()()\" $$$\\\\to$$$ \"(())()()()\" (the characters from the $$$7$$$-th to the $$$10$$$-th are removed).The operation $$$2$$$ can be applied at most $$$k$$$ times. Calculate the maximum number of operations you can apply until $$$s$$$ becomes empty.InputThe first line contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^5$$$) — the number of test cases.Each test case is described by two lines. The first line contains two integers $$$n$$$ and $$$k$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$; $$$1 \\\\le k \\\\le n$$$; $$$n$$$ is even) — the length of $$$s$$$ and the maximum number of operations of type $$$2$$$ you can apply.The second line contains a string $$$s$$$ of $$$n$$$ characters '(' and ')'. This string is an RBS.The sum of $$$n$$$ over all test cases doesn't exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, print one integer — the maximum number of operations you can apply.ExampleInput3 12 2 (()())((())) 6 3 ()()() 8 1 (((())))Output4 3 2", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "38cb0e7e", "template_md5": "35d339e4", "result": "You are given a string of parentheses,  '()'.  You can perform two types of operations:\n\n1. **Remove a prefix** of the string.\n2. **Remove a contiguous substring** of the string. You can only perform operation 2 a maximum of  'k' times.\n\nFind the maximum number of operations you can perform until the string becomes empty. \n\n\nInput:\n\n* The first line contains the number of test cases, 't'.\n* Each test case has two lines:\n    * The first line contains two integers, 'n' (the length of the string) and 'k' (the maximum number of substring removals).\n    * The second line contains the string of parentheses.\n\nOutput:\n\n* For each test case, print the maximum number of operations."}, {"prompt_md5": "87262995", "template_md5": "465699a0", "result": "You are given a string of parentheses. You can remove prefixes or substrings from the string, but you can only remove substrings a limited number of times. What is the maximum number of times you can remove parts of the string?"}]}