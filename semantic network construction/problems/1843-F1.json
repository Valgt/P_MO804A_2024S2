{"uid": "1843-F1", "url": "https://codeforces.com/contest/1843/problem/F1", "tags": ["data structures", " dfs and similar", " dp", " graphs", " greedy", " math", " trees"], "title": "1843-F1", "statement": "F1. Omsk Metro (simple version)time limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputThis is the simple version of the problem. The only difference between the simple and hard versions is that in this version $$$u = 1$$$.As is known, Omsk is the capital of Berland. Like any capital, Omsk has a well-developed metro system. The Omsk metro consists of a certain number of stations connected by tunnels, and between any two stations there is exactly one path that passes through each of the tunnels no more than once. In other words, the metro is a tree.To develop the metro and attract residents, the following system is used in Omsk. Each station has its own weight $$$x \\\\in \\\\{-1, 1\\\\}$$$. If the station has a weight of $$$-1$$$, then when the station is visited by an Omsk resident, a fee of $$$1$$$ burle is charged. If the weight of the station is $$$1$$$, then the Omsk resident is rewarded with $$$1$$$ burle.Omsk Metro currently has only one station with number $$$1$$$ and weight $$$x = 1$$$. Every day, one of the following events occurs:A new station with weight $$$x$$$ is added to the station with number $$$v_i$$$, and it is assigned a number that is one greater than the number of existing stations.Alex, who lives in Omsk, wonders: is there a subsegment$$$\\\\dagger$$$ (possibly empty) of the path between vertices $$$u$$$ and $$$v$$$ such that, by traveling along it, exactly $$$k$$$ burles can be earned (if $$$k < 0$$$, this means that $$$k$$$ burles will have to be spent on travel). In other words, Alex is interested in whether there is such a subsegment of the path that the sum of the weights of the vertices in it is equal to $$$k$$$. Note that the subsegment can be empty, and then the sum is equal to $$$0$$$.You are a friend of Alex, so your task is to answer Alex's questions.$$$\\\\dagger$$$Subsegment — continuous sequence of elements.InputThe first line contains a single number $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$) — the number of test cases.The first line of each test case contains the number $$$n$$$ ($$$1 \\\\leq n \\\\leq 2 \\\\cdot 10^5$$$) — the number of events.Then there are $$$n$$$ lines describing the events. In the $$$i$$$-th line, one of the following options is possible:First comes the symbol \"+\" (without quotes), then two numbers $$$v_i$$$ and $$$x_i$$$ ($$$x_i \\\\in \\\\{-1, 1\\\\}$$$, it is also guaranteed that the vertex with number $$$v_i$$$ exists). In this case, a new station with weight $$$x_i$$$ is added to the station with number $$$v_i$$$.First comes the symbol \"?\" (without quotes), and then three numbers $$$u_i$$$, $$$v_i$$$, and $$$k_i$$$ ($$$-n \\\\le k_i \\\\le n$$$). It is guaranteed that the vertices with numbers $$$u_i$$$ and $$$v_i$$$ exist. In this case, it is necessary to determine whether there is a subsegment (possibly empty) of the path between stations $$$u_i$$$ and $$$v_i$$$ with a sum of weights exactly equal to $$$k_i$$$.In this version of the task, it is guaranteed that $$$u_i = 1$$$.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each of Alex's questions, output\"Yes\"(without quotes) if the subsegment described in the condition exists, otherwise output\"No\"(without quotes).You can output the answer in any case (for example, the strings \"yEs\", \"yes\", \"Yes\" and \"YES\" will be recognized as a positive answer).ExamplesInput18+ 1 -1? 1 1 2? 1 2 1+ 1 1? 1 3 -1? 1 1 1? 1 3 2? 1 1 0OutputNO YES NO YES YES YESInput110+ 1 -1+ 1 -1+ 3 1+ 3 -1+ 3 1? 1 6 -1? 1 6 2? 1 2 0? 1 5 -2? 1 4 3OutputYES NO YES YES NONoteExplanation of the first sample.The answer to the second question is\"Yes\", because there is a path $$$1$$$.In the fourth question, we can choose the $$$1$$$ path again.In the fifth query, the answer is\"Yes\", since there is a path $$$1-3$$$.In the sixth query, we can choose an empty path because the sum of the weights on it is $$$0$$$.It is not difficult to show that there are no paths satisfying the first and third queries.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0d1abb25", "template_md5": "35d339e4", "result": "You are given a tree with $n$ nodes, where each node has a weight of either $-1$ or $1$.  \n\nThe tree starts with a single node (node 1) with weight 1.  \n\nEvents occur, each of which can be one of two types:\n\n* **\"+\"**: A new node with a given weight is added as a child of an existing node.\n* **\"?\"**: You are given two nodes $u$ and $v$ and an integer $k$.  Determine if there exists a path between nodes $u$ and $v$ such that the sum of the weights of the nodes on the path is equal to $k$.\n\n**Input:**\n\n* The first line contains the number of test cases $t$.\n* For each test case:\n    * The first line contains the number of events $n$.\n    * The following $n$ lines describe the events. Each line starts with either \"+\" or \"?\".\n        * If it starts with \"+\", it contains two numbers $v$ and $x$, indicating a new node with weight $x$ is added as a child of node $v$.\n        * If it starts with \"?\", it contains three numbers $u$, $v$, and $k$, asking if there exists a path between nodes $u$ and $v$ with a weight sum of $k$.\n\n**Output:**\n\nFor each \"?\" event, output \"Yes\" if such a path exists, otherwise output \"No\"."}, {"prompt_md5": "775b2237", "template_md5": "465699a0", "result": "A tree is built with nodes, each having a value of -1 or 1.  You are given a series of queries asking if there is a path between node 1 and another node where the sum of the values along the path equals a specific target number."}]}