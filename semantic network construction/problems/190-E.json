{"uid": "190-E", "url": "https://codeforces.com/contest/190/problem/E", "tags": ["data structures", " dsu", " graphs", " hashing", " sortings"], "title": "190-E", "statement": "E. Counter Attacktime limit per test3 secondsmemory limit per test256 megabytesinputstdinoutputstdoutBerland has managed to repel the flatlanders' attack and is now starting the counter attack.Flatland hasncities, numbered from1ton, and some pairs of them are connected by bidirectional roads. The Flatlandian maps show roads between cities if and only if there is in fact no road between this pair of cities (we do not know whether is it a clever spy-proof strategy or just saving ink). In other words, if two cities are connected by a road on a flatland map, then there is in fact no road between them. The opposite situation is also true: if two cities are not connected by a road on a flatland map, then in fact, there is a road between them.The berlanders got hold of a flatland map. Now Vasya the Corporal is commissioned by General Touristov to find all such groups of flatland cities, that in each group of cities you can get from any city to any other one, moving along theactualroads. Also the cities from different groups are unreachable from each other, moving along theactualroads. Indeed, destroying such groups one by one is much easier than surrounding all Flatland at once!Help the corporal complete this task and finally become a sergeant! Don't forget that a flatland map shows a road between cities if and only if there is in fact no road between them.InputThe first line contains two space-separated integersnandm(1 ≤n≤ 5·105, 0 ≤m≤ 106)— the number of cities and the number of roads marked on the flatland map, correspondingly.Nextmlines contain descriptions of the cities on the map. Thei-th line contains two integersaiandbi(1 ≤ai,bi≤n,ai≠bi)— the numbers of cities that are connected by thei-th road on the flatland map.It is guaranteed that each pair of cities occurs in the input no more than once.OutputOn the first line print numberk— the number of groups of cities in Flatland, such that in each group you can get from any city to any other one by flatland roads. At the same time, the cities from different groups should be unreachable by flatland roads.On each of the followingklines first printti(1 ≤ti≤n)— the number of vertexes in thei-th group. Then print space-separated numbers of cities in thei-th group.The order of printing groups and the order of printing numbers in the groups does not matter. The total sumtifor allkgroups must equaln.ExamplesInput4 41 21 34 24 3Output22 1 42 2 3Input3 11 2Output13 1 2 3NoteIn the first sample there are roads only between pairs of cities 1-4 and 2-3.In the second sample there is no road between cities 1 and 2, but still you can get from one city to the other one through city number 3.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "3a07caf8", "template_md5": "35d339e4", "result": "You are given a graph with $n$ cities and $m$ edges. The edges represent roads on a map. However, the map is unusual: an edge between two cities on the map means there is *no* road between them in reality. \n\nYour task is to find all groups of cities where you can travel between any two cities within a group using the actual roads.  Cities in different groups should be unreachable from each other by road.\n\n**Input:**\n\n* The first line contains two integers, $n$ and $m$, representing the number of cities and the number of edges on the map, respectively.\n* The following $m$ lines each contain two integers, $a_i$ and $b_i$, representing a pair of cities connected by an edge on the map.\n\n**Output:**\n\n* The first line should contain an integer $k$, representing the number of groups of cities.\n* For each group, print the size of the group followed by the list of cities in that group."}, {"prompt_md5": "e81f1d47", "template_md5": "465699a0", "result": "You are given a list of pairs of cities that are *not* connected by a road.  Find groups of cities where you can reach any city in the group from any other city using only the roads that *are* connected.  No two groups should be able to reach each other."}]}