{"uid": "1721-F", "url": "https://codeforces.com/contest/1721/problem/F", "tags": ["brute force", " constructive algorithms", " dfs and similar", " flows", " graph matchings", " graphs", " interactive"], "title": "1721-F", "statement": "F. Matching Reductiontime limit per test8 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given a bipartite graph with $$$n_1$$$ vertices in the first part, $$$n_2$$$ vertices in the second part, and $$$m$$$ edges. The maximum matching in this graph is the maximum possible (by size) subset of edges of this graph such that no vertex is incident to more than one chosen edge.You have to process two types of queries to this graph:$$$1$$$ — remove theminimum possiblenumber of vertices from this graph so that the size of the maximum matching gets reducedexactly by $$$1$$$, and print the vertices that you have removed. Then, find any maximum matching in this graph and print the sum of indices of edges belonging to this matching;$$$2$$$ — query of this type will be asked only after a query of type $$$1$$$. As the answer to this query, you have to print the edges forming the maximum matching you have chosen in the previous query.Note that you should solve the problem inonlinemode. It means that you can't read the whole input at once. You can read each query only after writing the answer for the last query. Use functionsfflushinC++andBufferedWriter.flushinJavalanguages after each writing in your program.InputThe first line contains four integers $$$n_1$$$, $$$n_2$$$, $$$m$$$ and $$$q$$$ ($$$1 \\\\le n_1, n_2 \\\\le 2 \\\\cdot 10^5$$$; $$$1 \\\\le m \\\\le \\\\min(n_1 \\\\cdot n_2, 2 \\\\cdot 10^5)$$$; $$$1 \\\\le q \\\\le 2 \\\\cdot 10^5$$$).Then $$$m$$$ lines follow. The $$$i$$$-th of them contains two integers $$$x_i$$$ and $$$y_i$$$ ($$$1 \\\\le x_i \\\\le n_1$$$; $$$1 \\\\le y_i \\\\le n_2$$$) meaning that the $$$i$$$-th edge connects the vertex $$$x_i$$$ in the first part and the vertex $$$y_i$$$ in the second part. There are no pairs of vertices that are connected by more than one edge.Then $$$q$$$ lines follow. The $$$i$$$-th of them contains one integer, $$$1$$$ or $$$2$$$, denoting the $$$i$$$-th query. Additional constraints on queries:the number of queries of type $$$1$$$ won't exceed the size of the maximum matching in the initial graph;the number of queries of type $$$2$$$ won't exceed $$$3$$$;each query of type $$$2$$$ is preceded by a query of type $$$1$$$;your solution is allowed to read the $$$i$$$-th query only after printing the answer for the $$$(i-1)$$$-th query and flushing the output.OutputFor a query of type $$$1$$$, print the answer in three lines as follows:the first line should contain the number of vertices you remove;the second line should contain the indices of vertices you remove, as follows: if you remove the vertex $$$x$$$ from the left part, print $$$x$$$; if you remove the vertex $$$y$$$ from the right part, print $$$-y$$$ (negative index);the third line should contain the sum of indices of edges in some maximum matching in the resulting graph. The edges are numbered from $$$1$$$ to $$$m$$$.For a query of type $$$2$$$, print the answer in two lines as follows:the first line should contain the size of the maximum matching;the second line should contain the indices of the edges belonging to the maximum matching. Note that the sum of these indices should be equal to the number you printed at the end of the previous query of type $$$1$$$;After printing the answer to a query, don't forget to flush the output.ExampleInput3 4 4 4 2 2 1 3 2 1 3 4 1 2 1 2Output1 -4 3 === 2 1 2 === 1 2 2 === 1 2NoteIn this problem, you may receive the verdict \"Idleness Limit Exceeded\" since it is in online mode. If it happens, it means that either the output format is wrong, or you don't meet some constraint of the problem. You may treat this verdict as \"Wrong Answer\".For your convenience, the output for queries in the example is separated by the line===.Don't print this line in your program, it is done only to make sure that it's easy to distinguish between answers for different queries in the statement.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6605e072", "template_md5": "35d339e4", "result": "You are given a bipartite graph with $n_1$ vertices on one side and $n_2$ vertices on the other side, connected by $m$ edges.  A *matching* is a set of edges where no vertex is connected to more than one edge. The *maximum matching* is the largest possible matching.\n\nYou need to process queries about this graph:\n\n* **Query Type 1:** Remove the minimum number of vertices so that the size of the maximum matching decreases by exactly 1. Print:\n    * The number of vertices removed.\n    * The indices of the removed vertices (positive for vertices on the first side, negative for vertices on the second side).\n    * The sum of the indices of edges in a maximum matching of the resulting graph.\n\n* **Query Type 2:**  Print:\n    * The size of the maximum matching in the graph after the previous Query Type 1.\n    * The indices of the edges in this maximum matching.\n\n**Constraints:**\n\n* $1 \\le n_1, n_2 \\le 2 \\cdot 10^5$\n* $1 \\le m \\le \\min(n_1 \\cdot n_2, 2 \\cdot 10^5)$\n* $1 \\le q \\le 2 \\cdot 10^5$ (total queries)\n* There are at most as many Query Type 1s as the size of the initial maximum matching.\n* There are at most 3 Query Type 2s.\n* Each Query Type 2 must follow a Query Type 1.\n\n**Important:** You must process queries one at a time, reading each query only after printing the answer to the previous query and flushing the output."}, {"prompt_md5": "555071d5", "template_md5": "465699a0", "result": "You are given a graph with two sets of points connected by edges.  You need to answer two types of queries:\n\n1. **Reduce the size of the largest possible matching by 1:**  Find the smallest number of points to remove from the graph so that the largest possible matching (a set of edges where no point is connected to more than one edge) is one edge smaller. Report the removed points and the sum of the indices of edges in a maximum matching in the modified graph.\n\n2. **Show the largest matching:** After a query of type 1, report the size of the largest matching in the modified graph and the indices of the edges in that matching. \n\n\n\nYou must process queries one at a time, and you can only read the next query after you have answered the previous one and sent the answer."}]}