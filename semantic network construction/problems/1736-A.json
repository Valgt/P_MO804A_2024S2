{"uid": "1736-A", "url": "https://codeforces.com/contest/1736/problem/A", "tags": ["brute force", " greedy", " sortings"], "title": "1736-A", "statement": "A. Make A Equal to Btime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two arrays $$$a$$$ and $$$b$$$ of $$$n$$$ elements, each element is either $$$0$$$ or $$$1$$$.You can make operations of $$$2$$$ kinds.Pick an index $$$i$$$ and change $$$a_i$$$ to $$$1-a_i$$$.Rearrange the array $$$a$$$ however you want.Find the minimum number of operations required to make $$$a$$$ equal to $$$b$$$.InputEach test contains multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 400$$$) — the number of test cases. Description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 100$$$) — the length of the arrays $$$a$$$ and $$$b$$$.The second line of each test case contains $$$n$$$ space-separated integers $$$a_1,a_2,\\\\ldots,a_n$$$ ($$$a_i$$$ is $$$0$$$ or $$$1$$$), representing the array $$$a$$$.The third line of each test case contains $$$n$$$ space-separated integers $$$b_1,b_2,\\\\ldots,b_n$$$ ($$$b_i$$$ is $$$0$$$ or $$$1$$$), representing the array $$$b$$$.OutputFor each test case, print the minimum number of operations required to make $$$a$$$ equal to $$$b$$$.ExampleInput531 0 10 0 141 1 0 00 1 1 121 11 141 0 0 10 1 1 0101Output1 2 0 1 1NoteIn the first case, we need only one operation: change $$$a_1$$$ to $$$1-a_i$$$. Now $$$a = [0, 0]$$$ which is equal to $$$b$$$.In the second case, the optimal way is to rearrange $$$a$$$ to get the array $$$[0, 1, 11$$$. Now $$$a = [0, 0, 1]$$$ which is equal to $$$b$$$.In the second case, one of optimal ways would be to first change $$$a_3$$$ to $$$1 - a_3$$$, then rearrange $$$a$$$.In the third case, no operation is needed.In the fourth case, the optimal way is to rearrange $$$a$$$ to get the array $$$[0, 1, 1, 0]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a0630fe4", "template_md5": "35d339e4", "result": "You are given two arrays,  'a' and 'b', each with 'n' elements. Each element in the arrays is either 0 or 1. \n\nYou can perform two types of operations:\n\n1. Choose an index 'i' and change the value of 'a[i]' to 1 - 'a[i]'.\n2. Rearrange the elements of array 'a'.\n\nFind the minimum number of operations needed to make array 'a' equal to array 'b'.\n\n\nInput:\n\n* The first line contains 't' (1 ≤ t ≤ 400), the number of test cases.\n* For each test case:\n    * The first line contains 'n' (1 ≤ n ≤ 100), the length of the arrays.\n    * The second line contains 'n' space-separated integers representing array 'a'.\n    * The third line contains 'n' space-separated integers representing array 'b'.\n\nOutput:\n\n* For each test case, print the minimum number of operations required."}, {"prompt_md5": "e407016a", "template_md5": "465699a0", "result": "You have two arrays of the same length, each containing only 0s and 1s. You can change a 0 to a 1 or a 1 to a 0 at any position in one array. You can also rearrange the elements of the array. What is the fewest changes you need to make to make the two arrays identical?"}]}