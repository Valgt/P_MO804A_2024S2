{"uid": "960-D", "url": "https://codeforces.com/contest/960/problem/D", "tags": ["brute force", " implementation", " trees"], "title": "960-D", "statement": "D. Full Binary Tree Queriestime limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a full binary tree having infinite levels.Each node has an initial value. If a node has valuex, then its left child has value2·xand its right child has value2·x+ 1.The value of the root is1.You need to answerQqueries.There are3types of queries:Cyclically shift thevaluesof all nodes on the same level as node with valueXbyKunits. (The values/nodes of any other level are not affected).Cyclically shift thenodeson the same level as node with valueXbyKunits. (The subtrees of these nodes will move along with them).Print the value of every node encountered on the simple path from the node with valueXto the root.PositiveKimplies right cyclic shift and negativeKimplies left cyclic shift.It is guaranteed that atleast one type3query is present.InputThe first line contains a single integerQ(1 ≤Q≤ 105).ThenQqueries follow, one per line:Queries of type1and2have the following format:TXK(1 ≤T≤ 2;1 ≤X≤ 1018;0 ≤ |K| ≤ 1018), whereTis type of the query.Queries of type3have the following format:3X(1 ≤X≤ 1018).OutputFor each query of type3, print the values of all nodes encountered in descending order.ExamplesInput53 121 2 13 122 4 -13 8Output12 6 3 112 6 2 18 4 2 1Input53 141 5 -33 141 3 13 14Output14 7 3 114 6 3 114 6 2 1NoteFollowing are the images of the first4levels of the tree in the first test case:Original:After query1 2 1:After query2 4 -1:", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "8482cbe5", "template_md5": "35d339e4", "result": "You are given a full binary tree where each node's value is calculated based on its parent's value. The root node has a value of 1.  \n\n* The left child of a node has a value twice the parent's value.\n* The right child of a node has a value twice the parent's value plus 1.\n\nYou will be given $Q$ queries. There are three types of queries:\n\n* **Type 1:** Shift the values of all nodes on the same level as the node with value $X$ to the right by $K$ positions.\n* **Type 2:** Shift the values of all nodes on the same level as the node with value $X$ to the left by $K$ positions.\n* **Type 3:**  Find and print the values of all nodes encountered on the path from the node with value $X$ to the root of the tree.\n\n**Input:**\n\n* The first line contains the number of queries, $Q$.\n* Each of the following $Q$ lines describes a query in one of the following formats:\n    * `1 X K`: Type 1 query\n    * `2 X K`: Type 2 query\n    * `3 X`: Type 3 query\n\n**Output:**\n\n* For each Type 3 query, print the values of the nodes encountered on the path from the node with value $X$ to the root, in descending order."}, {"prompt_md5": "73e8ff1e", "template_md5": "465699a0", "result": "You have a special tree where each node's value is calculated based on its parent's value. You need to answer queries about this tree. Some queries ask you to shift the values of all nodes on a specific level by a certain amount, either to the right or left. Other queries ask you to find the values of all nodes on the path from a specific node to the root of the tree."}]}