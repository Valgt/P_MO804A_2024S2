{"uid": "2009-G1", "url": "https://codeforces.com/contest/2009/problem/G1", "tags": ["binary search", " data structures", " two pointers"], "title": "2009-G1", "statement": "G1. Yunli's Subarray Queries (easy version)time limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputThis is the easy version of the problem. In this version, it is guaranteed that $$$r=l+k-1$$$ for all queries.For an arbitrary array $$$b$$$, Yunli can perform the following operation any number of times:Select an index $$$i$$$. Set $$$b_i = x$$$ where $$$x$$$ is any integer she desires ($$$x$$$ is not limited to the interval $$$[1,n]$$$).Denote $$$f(b)$$$ as the minimum number of operations she needs to perform until there exists a consecutive subarray$$$^{\\\\text{∗}}$$$ of length at least $$$k$$$ in $$$b$$$.Yunli is given an array $$$a$$$ of size $$$n$$$ and asks you $$$q$$$ queries. In each query, you must output $$$\\\\sum_{j=l+k-1}^{r} f([a_l, a_{l+1}, \\\\ldots, a_j])$$$. Note that in this version, you are only required to output $$$f([a_l, a_{l+1}, \\\\ldots, a_{l+k-1}])$$$.$$$^{\\\\text{∗}}$$$If there exists a consecutive subarray of length $$$k$$$ that starts at index $$$i$$$ ($$$1 \\\\leq i \\\\leq |b|-k+1$$$), then $$$b_j = b_{j-1} + 1$$$ for all $$$i < j \\\\leq i+k-1$$$.InputThe first line contains $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$) — the number of test cases.The first line of each test case contains three integers $$$n$$$, $$$k$$$, and $$$q$$$ ($$$1 \\\\leq k \\\\leq n \\\\leq 2 \\\\cdot 10^5$$$, $$$1 \\\\leq q \\\\leq 2 \\\\cdot 10^5$$$) — the length of the array, the length of the consecutive subarray, and the number of queries.The following line contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\leq a_i \\\\leq n$$$).The following $$$q$$$ lines contain two integers $$$l$$$ and $$$r$$$ ($$$1 \\\\leq l \\\\leq r \\\\leq n$$$, $$$r=l+k-1$$$) — the bounds of the query.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$ and the sum of $$$q$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputOutput $$$\\\\sum_{j=l+k-1}^{r} f([a_l, a_{l+1}, \\\\ldots, a_j])$$$ for each query on a new line.ExampleInput37 5 31 2 3 2 1 2 31 52 63 78 4 24 3 1 1 2 4 3 23 62 55 4 24 5 1 2 31 42 5Output2 3 2 2 2 2 1NoteIn the first query of the first testcase, $$$b=[1,2,3,2,1]$$$. Yunli can make a consecutive subarray of length $$$5$$$ in $$$2$$$ moves:Set $$$b_4=4$$$Set $$$b_5=5$$$After operations $$$b=[1, 2, 3, 4, 5]$$$.In the second query of the first testcase, $$$b=[2,3,2,1,2]$$$. Yunli can make a consecutive subarray of length $$$5$$$ in $$$3$$$ moves:Set $$$b_3=0$$$Set $$$b_2=-1$$$Set $$$b_1=-2$$$After operations $$$b=[-2, -1, 0, 1, 2]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "b810315a", "template_md5": "35d339e4", "result": "You are given an array of integers  $a$ of length $n$ and $q$ queries. Each query is defined by two integers $l$ and $r$ where $r = l + k - 1$. \n\nFor each query, you need to calculate the minimum number of operations required to create a consecutive subarray of length $k$ within the subarray $a[l...r]$.\n\nAn operation consists of choosing an index $i$ and setting the value of $a_i$ to any integer.\n\nOutput the sum of these minimum operation counts for all queries.\n\n\n**Constraints:**\n\n* $1 \\le k \\le n \\le 2 \\cdot 10^5$\n* $1 \\le q \\le 2 \\cdot 10^5$\n* $1 \\le a_i \\le n$\n* $1 \\le l \\le r \\le n$ \n* The sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$\n* The sum of $q$ over all test cases does not exceed $2 \\cdot 10^5$"}, {"prompt_md5": "9f544a41", "template_md5": "465699a0", "result": "You are given an array of numbers and need to answer multiple queries. Each query has a starting and ending position. For each query, you need to find the minimum number of operations needed to create a consecutive subarray of a given length within that range.  In each operation, you can change any number in the array to any integer."}]}