{"uid": "1882-D", "url": "https://codeforces.com/contest/1882/problem/D", "tags": ["bitmasks", " dfs and similar", " dp", " greedy", " trees"], "title": "1882-D", "statement": "D. Tree XORtime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given a tree with $$$n$$$ vertices labeled from $$$1$$$ to $$$n$$$. An integer $$$a_{i}$$$ is written on vertex $$$i$$$ for $$$i = 1, 2, \\\\ldots, n$$$. You want to make all $$$a_{i}$$$ equal by performing some (possibly, zero) spells.Suppose you root the tree at some vertex. On each spell, you can select any vertex $$$v$$$ and any non-negative integer $$$c$$$. Then for all vertices $$$i$$$ in the subtree$$$^{\\\\dagger}$$$ of $$$v$$$, replace $$$a_{i}$$$ with $$$a_{i} \\\\oplus c$$$. The cost of this spell is $$$s \\\\cdot c$$$, where $$$s$$$ is the number of vertices in the subtree. Here $$$\\\\oplus$$$ denotes thebitwise XOR operation.Let $$$m_r$$$ be the minimum possible total cost required to make all $$$a_i$$$ equal, if vertex $$$r$$$ is chosen as the root of the tree. Find $$$m_{1}, m_{2}, \\\\ldots, m_{n}$$$.$$$^{\\\\dagger}$$$ Suppose vertex $$$r$$$ is chosen as the root of the tree. Then vertex $$$i$$$ belongs to the subtree of $$$v$$$ if the simple path from $$$i$$$ to $$$r$$$ contains $$$v$$$.InputEach test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\\\le t \\\\le 10^{4}$$$). The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^{5}$$$).The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$0 \\\\le a_i < 2^{20}$$$).Each of the next $$$n-1$$$ lines contains two integers $$$u$$$ and $$$v$$$ ($$$1 \\\\le u, v \\\\le n$$$), denoting that there is an edge connecting two vertices $$$u$$$ and $$$v$$$.It is guaranteed that the given edges form a tree.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^{5}$$$.OutputFor each test case, print $$$m_1, m_2, \\\\ldots, m_n$$$ on a new line.ExampleInput243 2 1 01 22 32 41100Output8 6 12 10  0NoteIn the first test case, to find $$$m_1$$$ we root the tree at vertex $$$1$$$.In the first spell, choose $$$v=2$$$ and $$$c=1$$$. After performing the spell, $$$a$$$ will become $$$[3, 3, 0, 1]$$$. The cost of this spell is $$$3$$$.In the second spell, choose $$$v=3$$$ and $$$c=3$$$. After performing the spell, $$$a$$$ will become $$$[3, 3, 3, 1]$$$. The cost of this spell is $$$3$$$.In the third spell, choose $$$v=4$$$ and $$$c=2$$$. After performing the spell, $$$a$$$ will become $$$[3, 3, 3, 3]$$$. The cost of this spell is $$$2$$$.Now all the values in array $$$a$$$ are equal, and the total cost is $$$3 + 3 + 2 = 8$$$.The values $$$m_2$$$, $$$m_3$$$, $$$m_4$$$ can be found analogously.In the second test case, the goal is already achieved because there is only one vertex.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "b8e2e913", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices labeled from 1 to $n$. Each vertex has an integer value $a_i$ associated with it. You can perform spells to change these values.\n\n**Spells:**\n\n* Choose a vertex $v$ and a non-negative integer $c$.\n* For all vertices $i$ in the subtree rooted at $v$, change $a_i$ to $a_i \\oplus c$ (where $\\oplus$ is the bitwise XOR operation).\n* The cost of the spell is $s \\cdot c$, where $s$ is the number of vertices in the subtree.\n\n**Goal:**\n\nFind the minimum total cost to make all $a_i$ equal for each possible root vertex of the tree. \n\n**Input:**\n\n* $t$ test cases.\n* For each test case:\n    * $n$ (number of vertices)\n    * $a_1, a_2, ..., a_n$ (values at each vertex)\n    * $n-1$ lines, each with two integers $u$ and $v$, representing an edge between vertices $u$ and $v$.\n\n**Output:**\n\nFor each test case, output $m_1, m_2, ..., m_n$, where $m_i$ is the minimum cost to make all values equal with vertex $i$ as the root."}, {"prompt_md5": "78867ac1", "template_md5": "465699a0", "result": "You have a tree-shaped structure with numbered nodes. Each node has a value. You can perform operations on nodes to change their values.  \n\nAn operation involves choosing a node and adding a number to all the values in the subtree rooted at that node (including the node itself). The cost of an operation is the number of nodes in the subtree multiplied by the added number.\n\nFind the minimum total cost to make all the node values equal for each possible root of the tree."}]}