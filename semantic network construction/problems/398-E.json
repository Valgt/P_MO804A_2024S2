{"uid": "398-E", "url": "https://codeforces.com/contest/398/problem/E", "tags": [], "title": "398-E", "statement": "E. Sorting Permutationstime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutWe are given a permutation sequencea1,a2, ...,anof numbers from1ton. Let's assume that in one second, we can choose some disjoint pairs(u1,v1), (u2,v2), ..., (uk,vk)and swap allauiandavifor everyiat the same time (1 ≤ui<vi≤n). The pairs are disjoint if everyuiandvjare different from each other.We want to sort the sequence completely in increasing order as fast as possible. Given the initial permutation, calculate the number of ways to achieve this. Two ways are different if and only if there is a timet, such that the set of pairs used for swapping at that time are different as sets (so ordering of pairs doesn't matter). If the given permutation is already sorted, it takes no time to sort, so the number of ways to sort it is1.To make the problem more interesting, we havekholes inside the permutation. So exactlyknumbers ofa1,a2, ...,anare not yet determined. For every possibility of filling the holes, calculate the number of ways, and print the total sum of these values modulo1000000007(109+ 7).InputThe first line contains two integersn(1 ≤n≤ 105)andk(0 ≤k≤ 12). The second line contains the permutation sequencea1, ...,an(0 ≤ai≤n). If a number is not yet determined, it is denoted as0. There are exactlykzeroes. All the numbersaithat aren't equal to zero are distinct.OutputPrint the total sum of the number of ways modulo1000000007(109+ 7).ExamplesInput5 01 5 2 4 3Output6Input5 21 0 2 4 0Output7", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "3e6a6894", "template_md5": "35d339e4", "result": "You are given a permutation of numbers from 1 to $n$.  You can swap groups of numbers in the permutation simultaneously. For example, if the permutation is $[1, 3, 2, 4]$ you could swap the pairs $(1,3)$ and $(2,4)$ to get $[3, 1, 4, 2]$.\n\nThe goal is to sort the permutation in increasing order as quickly as possible.  \n\n*  You need to find the number of ways to sort the permutation, considering that you can swap any number of disjoint pairs at a time.\n*  There are $k$ \"holes\" in the permutation, meaning $k$ numbers are not yet determined. You need to calculate the number of ways to sort the permutation for each possible way to fill the holes.\n\nFinally, sum up the number of ways for all possible hole fillings and print the result modulo $10^9 + 7$."}, {"prompt_md5": "f9895244", "template_md5": "465699a0", "result": "You are given a list of numbers that is not necessarily in order. You can swap groups of numbers in the list simultaneously.  Find the number of ways to sort the list completely in order, considering all possible ways to fill in missing numbers in the list.  The answer should be the sum of the number of ways for each possible combination of filled-in numbers, all taken modulo 1000000007."}]}