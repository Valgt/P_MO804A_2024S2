{"uid": "1673-B", "url": "https://codeforces.com/contest/1673/problem/B", "tags": ["brute force", " greedy", " strings"], "title": "1673-B", "statement": "B. A Perfectly Balanced String?time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's call a string $$$s$$$ perfectly balanced if for all possible triplets $$$(t,u,v)$$$ such that $$$t$$$ is a non-empty substring of $$$s$$$ and $$$u$$$ and $$$v$$$ are characters present in $$$s$$$, the difference between the frequencies of $$$u$$$ and $$$v$$$ in $$$t$$$ is not more than $$$1$$$.For example, the strings \"aba\" and \"abc\" are perfectly balanced but \"abb\" is not because for the triplet (\"bb\",'a','b'), the condition is not satisfied.You are given a string $$$s$$$ consisting of lowercase English letters only. Your task is to determine whether $$$s$$$ is perfectly balanced or not.A string $$$b$$$ is called a substring of another string $$$a$$$ if $$$b$$$ can be obtained by deleting some characters (possibly $$$0$$$) from the start and some characters (possibly $$$0$$$) from the end of $$$a$$$.InputThe first line of input contains a single integer $$$t$$$ ($$$1\\\\leq t\\\\leq 2\\\\cdot 10^4$$$) denoting the number of testcases.Each of the next $$$t$$$ lines contain a single string $$$s$$$ ($$$1\\\\leq |s|\\\\leq 2\\\\cdot 10^5$$$), consisting of lowercase English letters.It is guaranteed that the sum of $$$|s|$$$ over all testcases does not exceed $$$2\\\\cdot 10^5$$$.OutputFor each test case, print \"YES\" if $$$s$$$ is a perfectly balanced string, and \"NO\" otherwise.You may print each letter in any case (for example,\"YES\",\"Yes\",\"yes\",\"yEs\"will all be recognized as positive answer).ExampleInput5abaabbabcaaaaaabcbaOutputYES NO YES YES NONoteLet $$$f_t(c)$$$ represent the frequency of character $$$c$$$ in string $$$t$$$.For the first testcase we have$$$t$$$$$$f_t(a)$$$$$$f_t(b)$$$$$$a$$$$$$1$$$$$$0$$$$$$ab$$$$$$1$$$$$$1$$$$$$aba$$$$$$2$$$$$$1$$$$$$b$$$$$$0$$$$$$1$$$$$$ba$$$$$$1$$$$$$1$$$It can be seen that for any substring $$$t$$$ of $$$s$$$, the difference between $$$f_t(a)$$$ and $$$f_t(b)$$$ is not more than $$$1$$$. Hence the string $$$s$$$ is perfectly balanced.For the second testcase we have$$$t$$$$$$f_t(a)$$$$$$f_t(b)$$$$$$a$$$$$$1$$$$$$0$$$$$$ab$$$$$$1$$$$$$1$$$$$$abb$$$$$$1$$$$$$2$$$$$$b$$$$$$0$$$$$$1$$$$$$bb$$$$$$0$$$$$$2$$$It can be seen that for the substring $$$t=bb$$$, the difference between $$$f_t(a)$$$ and $$$f_t(b)$$$ is $$$2$$$ which is greater than $$$1$$$. Hence the string $$$s$$$ is not perfectly balanced.For the third testcase we have$$$t$$$$$$f_t(a)$$$$$$f_t(b)$$$$$$f_t(c)$$$$$$a$$$$$$1$$$$$$0$$$$$$0$$$$$$ab$$$$$$1$$$$$$1$$$$$$0$$$$$$abc$$$$$$1$$$$$$1$$$$$$1$$$$$$b$$$$$$0$$$$$$1$$$$$$0$$$$$$bc$$$$$$0$$$$$$1$$$$$$1$$$$$$c$$$$$$0$$$$$$0$$$$$$1$$$It can be seen that for any substring $$$t$$$ of $$$s$$$ and any two characters $$$u,v\\\\in\\\\{a,b,c\\\\}$$$, the difference between $$$f_t(u)$$$ and $$$f_t(v)$$$ is not more than $$$1$$$. Hence the string $$$s$$$ is perfectly balanced.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "dee5ab0c", "template_md5": "35d339e4", "result": "You are given a string consisting of lowercase English letters.  Determine if the string is \"perfectly balanced\".\n\nA string is perfectly balanced if for any substring  of the string, and any two characters in the string, the difference in the number of times each character appears in the substring is at most 1. \n\nFor example:\n\n* \"aba\" is perfectly balanced.\n* \"abc\" is perfectly balanced.\n* \"abb\" is not perfectly balanced because in the substring \"bb\", the character 'a' appears 0 times and 'b' appears 2 times, a difference of 2.\n\n\n\n\nYou will be given multiple test cases, each with a different string. For each test case, output \"YES\" if the string is perfectly balanced, and \"NO\" otherwise."}, {"prompt_md5": "b81bc6d1", "template_md5": "465699a0", "result": "Determine if a given string is \"perfectly balanced\". A string is perfectly balanced if for any substring within it, the difference in the count of any two characters within that substring is at most 1."}]}