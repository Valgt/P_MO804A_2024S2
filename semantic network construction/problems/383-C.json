{"uid": "383-C", "url": "https://codeforces.com/contest/383/problem/C", "tags": ["data structures", " dfs and similar", " trees"], "title": "383-C", "statement": "C. Propagating treetime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutIahub likes trees very much. Recently he discovered an interesting tree named propagating tree. The tree consists ofnnodes numbered from1ton, each nodeihaving an initial valueai. The root of the tree is node1.This tree has a special property: when a valuevalis added to a value of nodei, the value -valis added to values of all the children of nodei. Note that when you add value -valto a child of nodei, you also add -(-val) to all children of the child of nodeiand so on. Look an example explanation to understand better how it works.This tree supports two types of queries:\"1xval\" —valis added to the value of nodex;\"2x\" — print the current value of nodex.In order to help Iahub understand the tree better, you must answermqueries of the preceding type.InputThe first line contains two integersnandm(1 ≤n,m≤ 200000). The second line containsnintegersa1,a2, ...,an(1 ≤ai≤ 1000). Each of the nextn–1lines contains two integersviandui(1 ≤vi,ui≤n), meaning that there is an edge between nodesviandui.Each of the nextmlines contains a query in the format described above. It is guaranteed that the following constraints hold for all queries:1 ≤x≤n, 1 ≤val≤ 1000.OutputFor each query of type two (print the value of nodex) you must print the answer to the query on a separate line. The queries must be answered in the order given in the input.ExamplesInput5 51 2 1 1 21 21 32 42 51 2 31 1 22 12 22 4Output330NoteThe values of the nodes are[1, 2, 1, 1, 2]at the beginning.Then value3is added to node2. It propagates and value -3is added to it's sons, node4and node5. Then it cannot propagate any more. So the values of the nodes are[1, 5, 1,  - 2,  - 1].Then value2is added to node1. It propagates and value -2is added to it's sons, node2and node3. From node2it propagates again, adding value2to it's sons, node4and node5. Node3has no sons, so it cannot propagate from there. The values of the nodes are[3, 3,  - 1, 0, 1].You can see all the definitions about the tree at the following link:http://en.wikipedia.org/wiki/Tree_(graph_theory)", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "c56c2783", "template_md5": "465699a0", "result": "You are given a tree with nodes containing values. You can perform two operations:\n\n1. Add a value to a specific node. This value is then distributed to all its descendants, with each descendant receiving a decreasing amount.\n2. Print the current value of a specific node. \n\nAnswer a series of these operations in the order they are given."}, {"prompt_md5": "f1539560", "template_md5": "35d339e4", "result": "You are given a tree with $n$ nodes, numbered from 1 to $n$. Each node has an initial value $a_i$.  \n\nThe tree has a special property: when a value $val$ is added to the value of node $i$, the value $-val$ is added to the values of all the children of node $i$. This process continues down the tree, so when you add $-val$ to a child of node $i$, you also add $-(-val)$ to all children of that child, and so on.\n\nYou can perform two types of operations:\n\n* **1 x val:** Add $val$ to the value of node $x$.\n* **2 x:** Print the current value of node $x$.\n\nYou are given $m$ operations. For each operation of type 2, print the answer. \n\n**Input:**\n\n* The first line contains two integers $n$ and $m$ ($1 \\le n, m \\le 200000$).\n* The second line contains $n$ integers $a_1, a_2, ..., a_n$ ($1 \\le a_i \\le 1000$).\n* Each of the next $n-1$ lines contains two integers $v_i$ and $u_i$ ($1 \\le v_i, u_i \\le n$), representing an edge between nodes $v_i$ and $u_i$.\n* Each of the next $m$ lines contains a query in the format described above.\n\n**Output:**\n\nFor each query of type 2, print the answer on a separate line."}]}