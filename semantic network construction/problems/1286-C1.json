{"uid": "1286-C1", "url": "https://codeforces.com/contest/1286/problem/C1", "tags": ["brute force", " constructive algorithms", " interactive", " math"], "title": "1286-C1", "statement": "C1. Madhouse (Easy version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis problem is different with hard version only by constraints on total answers lengthIt is an interactive problemVenya joined a tour to the madhouse, in which orderlies play with patients the following game. Orderlies pick a string $$$s$$$ of length $$$n$$$, consisting only of lowercase English letters. The player can ask two types of queries:? l r– ask to list all substrings of $$$s[l..r]$$$. Substrings will be returned in random order, and in every substring, all characters will be randomly shuffled.! s– guess the string picked by the orderlies. This query can be asked exactly once, after that the game will finish. If the string is guessed correctly, the player wins, otherwise he loses.The player can askno more than $$$3$$$ queriesof the first type.To make it easier for the orderlies, there is an additional limitation: the total number of returned substrings in all queries of the first type must not exceed $$$(n+1)^2$$$.Venya asked you to write a program, which will guess the string by interacting with the orderlies' program and acting by the game's rules.Your program should immediately terminate after guessing the string using a query of the second type. In case your program guessed the string incorrectly, or it violated the game rules, it will receive verdictWrong answer.Note that in every test case the string is fixed beforehand and will not change during the game, which means that the interactor is not adaptive.InputFirst line contains number $$$n$$$ ($$$1 \\\\le n \\\\le 100$$$) — the length of the picked string.InteractionYou start the interaction by reading the number $$$n$$$.To ask a query about a substring from $$$l$$$ to $$$r$$$ inclusively ($$$1 \\\\le l \\\\le r \\\\le n$$$), you should output? l ron a separate line. After this, all substrings of $$$s[l..r]$$$ will be returned in random order, each substring exactly once. In every returned substring all characters will be randomly shuffled.In the case, if you ask an incorrect query, ask more than $$$3$$$ queries of the first type or there will be more than $$$(n+1)^2$$$ substrings returned in total, you will receive verdictWrong answer.To guess the string $$$s$$$, you should output! son a separate line.After printing each query, do not forget to flush the output. Otherwise, you will getIdleness limit exceeded. To flush the output, you can use:fflush(stdout) or cout.flush() in C++;System.out.flush() in Java;flush(output) in Pascal;stdout.flush() in Python;see documentation for other languages.If you received-(dash) as an answer to any query, you need to terminate your program with exit code 0 (for example, by callingexit(0)). This means that there was an error in the interaction protocol. If you don't terminate with exit code 0, you can receive any unsuccessful verdict.Hack formatTo hack a solution, use the following format:The first line should contain one integer $$$n$$$ ($$$1 \\\\le n \\\\le 100$$$) — the length of the string, and the following line should contain the string $$$s$$$.ExampleInput4  a aa a  cb b c  cOutput? 1 2  ? 3 4  ? 4 4  ! aabc", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0f82dd29", "template_md5": "35d339e4", "result": "You are given a string of length $n$ ($1 \\le n \\le 100$). You can ask up to 3 queries of the following type:\n\n* **? l r**: This will return a list of all substrings of the string from index $l$ to $r$ (inclusive). The characters within each substring will be randomly shuffled.\n\nYou can also make one guess of the entire string using the following query:\n\n* **! s**: This is your guess for the entire string.\n\nYou win if your guess is correct. You lose if it is incorrect.\n\nThere is a constraint that the total number of substrings returned by all queries of the first type must not exceed $(n+1)^2$. \n\nYour goal is to write a program that guesses the string correctly using the fewest queries possible."}, {"prompt_md5": "cccc15c4", "template_md5": "465699a0", "result": "You are playing a game where a secret string of letters is hidden. You can ask up to 3 questions to find out parts of the string. Each question lets you see a random jumble of letters from a specific section of the hidden string. After asking questions, you can guess the entire string. If you guess correctly, you win. If you guess incorrectly or ask too many questions, you lose."}]}