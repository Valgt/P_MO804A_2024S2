{"uid": "1976-F", "url": "https://codeforces.com/contest/1976/problem/F", "tags": ["data structures", " dfs and similar", " dp", " greedy", " sortings", " trees"], "title": "1976-F", "statement": "F. Remove Bridgestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a rooted tree, consisting of $$$n$$$ vertices, numbered from $$$1$$$ to $$$n$$$. Vertex $$$1$$$ is the root. Additionally, the root only has one child.You are asked to add exactly $$$k$$$ edges to the tree (possibly, multiple edges and/or edges already existing in the tree).Recall that a bridge is such an edge that, after you remove it, the number of connected components in the graph increases. So, initially, all edges of the tree are bridges.After $$$k$$$ edges are added, some original edges of the tree are still bridges and some are not anymore. You want to satisfy two conditions:for every bridge, all tree edges in the subtree of the lower vertex of that bridge should also be bridges;the number of bridges is as small as possible.Solve the task for all values of $$$k$$$ from $$$1$$$ to $$$n - 1$$$ and output the smallest number of bridges.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of testcases.The first line of each testcase contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 3 \\\\cdot 10^5$$$) — the number of vertices of the tree.Each of the next $$$n - 1$$$ lines contain two integers $$$v$$$ and $$$u$$$ ($$$1 \\\\le v, u \\\\le n$$$) — the description of the edges of the tree. It's guaranteed that the given edges form a valid tree.Additional constraint on the input: the root (vertex $$$1$$$) has exactly one child.The sum of $$$n$$$ over all testcases doesn't exceed $$$3 \\\\cdot 10^5$$$.OutputFor each testcase, print $$$n - 1$$$ integers. For each $$$k$$$ from $$$1$$$ to $$$n - 1$$$ print the smallest number of bridges that can be left after you add $$$k$$$ edges to the tree.ExampleInput421 2124 105 1212 113 69 61 612 711 62 1110 910 881 22 32 43 53 64 74 851 22 33 44 5Output0  7 3 1 0 0 0 0 0 0 0 0  4 1 0 0 0 0 0  0 0 0 0", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "c3029f50", "template_md5": "35d339e4", "result": "You are given a tree with $n$ nodes, numbered from 1 to $n$. The root node is node 1, and it has only one child.\n\nYou can add up to $n-1$ edges to the tree.  \n\nA bridge is an edge that, if removed, would increase the number of connected components in the tree. Initially, all edges in the tree are bridges.\n\nAfter adding edges, you want to minimize the number of bridges while satisfying these conditions:\n\n* For every bridge, all edges in the subtree of the lower node of the bridge must also be bridges.\n\nFor each number of added edges $k$ from 1 to $n-1$, find the minimum number of bridges that can remain in the tree. \n\n\n\nInput:\n\n* The first line contains the number of test cases $t$.\n* For each test case:\n    * The first line contains the number of nodes $n$.\n    * The next $n-1$ lines each contain two integers $v$ and $u$, representing an edge between nodes $v$ and $u$.\n\nOutput:\n\nFor each test case, print $n-1$ integers. The $k$-th integer represents the minimum number of bridges after adding $k$ edges."}, {"prompt_md5": "06291465", "template_md5": "465699a0", "result": "You are given a tree with a special root (only one child). You can add up to $n-1$ edges to the tree.  Find the minimum number of edges that will remain as \"bridges\" (removing them would disconnect the tree) for each number of added edges from 1 to $n-1$."}]}