{"uid": "1994-E", "url": "https://codeforces.com/contest/1994/problem/E", "tags": ["bitmasks", " greedy", " math", " trees"], "title": "1994-E", "statement": "E. Wooden Gametime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a forest of $$$k$$$ rooted trees$$$^{\\\\text{∗}}$$$. Lumberjack Timofey wants to cut down the entire forest by applying the following operation:Select a subtree$$$^{\\\\text{†}}$$$ of any vertex of one of the trees and remove it from the tree.Timofey loves bitwise operations, so he wants thebitwise ORof the sizes of the subtrees he removed to be maximum. Help him and find the maximum result he can obtain.$$$^{\\\\text{∗}}$$$ A tree is a connected graph without cycles, loops, or multiple edges. In a rooted tree, a selected vertex is called a root. A forest is a collection of one or more trees.$$$^{\\\\text{†}}$$$ The subtree of a vertex $$$v$$$ is the set of vertices for which $$$v$$$ lies on the shortest path from this vertex to the root, including $$$v$$$ itself.InputEach test consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$) — the number of test cases. Then follows the description of the test cases.The first line of each test case contains a single integer $$$k$$$ ($$$1 \\\\leq k \\\\leq 10^6$$$) — the number of trees in the forest.This is followed by a description of each of the $$$k$$$ trees:The first line contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 10^6$$$) — the size of the tree. The vertices of the tree are numbered with integers from $$$1$$$ to $$$n$$$. The root of the tree is vertex number $$$1$$$.The second line contains $$$n - 1$$$ integers $$$p_2, p_3, \\\\ldots p_n$$$ ($$$1 \\\\leq p_i < i$$$), where $$$p_i$$$ — the parent of vertex $$$i$$$.It is guaranteed that the sum of $$$k$$$ and $$$n$$$ for all sets of input data does not exceed $$$10^6$$$.OutputFor each test case, output a single integer — the maximum result that can be obtained.ExampleInput311241 2 261 1 3 1 31101 2 2 1 1 5 7 6 4Output1 7 10NoteIn the second test case, the trees look like this:The first operation removes the entire second tree.The second operation removes vertex $$$4$$$ from the first tree.The third operation removes the first tree. The result is $$$6|1|3 = 7$$$ ($$$|$$$ denotes bitwise OR).In the third test case, the entire tree needs to be removed.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "459dcc76", "template_md5": "35d339e4", "result": "You are given a collection of $k$ trees. Each tree has $n$ vertices numbered from 1 to $n$. The root of each tree is vertex 1.  \n\nYou can remove any subtree from any tree. A subtree is all the vertices connected to a specific vertex, including that vertex, along the shortest path to the root.\n\nYour goal is to find the maximum possible result of the bitwise OR of the sizes of all the subtrees you remove.\n\n**Input:**\n\n* The first line contains an integer $t$ ($1 \\le t \\le 10^4$) representing the number of test cases.\n* For each test case:\n    * The first line contains an integer $k$ ($1 \\le k \\le 10^6$) representing the number of trees.\n    * For each tree:\n        * The first line contains an integer $n$ ($1 \\le n \\le 10^6$) representing the number of vertices in the tree.\n        * The second line contains $n-1$ integers $p_2, p_3, ..., p_n$ ($1 \\le p_i < i$) representing the parent of each vertex.\n\n**Output:**\n\nFor each test case, output a single integer representing the maximum possible result of the bitwise OR of the sizes of the removed subtrees."}, {"prompt_md5": "a7274206", "template_md5": "465699a0", "result": "You are given a collection of trees.  You can remove any subtree from any tree.  Find the largest possible sum of the sizes of the removed subtrees, where the sum is calculated using the bitwise OR operation."}]}