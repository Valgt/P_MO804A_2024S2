{"uid": "1272-B", "url": "https://codeforces.com/contest/1272/problem/B", "tags": ["constructive algorithms", " greedy", " implementation"], "title": "1272-B", "statement": "B. Snow Walking Robottime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecently you have bought a snow walking robot and brought it home. Suppose your home is a cell $$$(0, 0)$$$ on an infinite grid.You also have the sequence of instructions of this robot. It is written as the string $$$s$$$ consisting of characters 'L', 'R', 'U' and 'D'. If the robot is in the cell $$$(x, y)$$$ right now, he can move to one of the adjacent cells (depending on the current instruction).If the current instruction is 'L', then the robot can move to the left to $$$(x - 1, y)$$$;if the current instruction is 'R', then the robot can move to the right to $$$(x + 1, y)$$$;if the current instruction is 'U', then the robot can move to the top to $$$(x, y + 1)$$$;if the current instruction is 'D', then the robot can move to the bottom to $$$(x, y - 1)$$$.You've noticed the warning on the last page of the manual: if the robot visits some cell (except$$$(0, 0)$$$) twice then it breaks.So the sequence of instructions is valid if the robot starts in the cell $$$(0, 0)$$$, performs the given instructions, visits no cell other than $$$(0, 0)$$$ two or more times and ends the path in the cell $$$(0, 0)$$$. Also cell $$$(0, 0)$$$ should be visitedat mosttwo times: at the beginning and at the end (if the path is empty then it is visited only once). For example, the following sequences of instructions are considered valid: \"UD\", \"RL\", \"UUURULLDDDDLDDRRUU\", and the following are considered invalid: \"U\" (the endpoint is not $$$(0, 0)$$$) and \"UUDD\" (the cell $$$(0, 1)$$$ is visited twice).The initial sequence of instructions, however, might be not valid. You don't want your robot to break so you decided to reprogram it in the following way: you will remove some (possibly, all or none) instructions from the initial sequence of instructions, then rearrange the remaining instructions as you wish and turn on your robot to move.Your task is to remove as few instructions from the initial sequence as possible and rearrange the remaining ones so that the sequence is valid. Report the valid sequence of the maximum length you can obtain.Note that you can chooseanyorder of remaining instructions (you don't need to minimize the number of swaps or any other similar metric).You have to answer $$$q$$$ independent test cases.InputThe first line of the input contains one integer $$$q$$$ ($$$1 \\\\le q \\\\le 2 \\\\cdot 10^4$$$) — the number of test cases.The next $$$q$$$ lines contain test cases. The $$$i$$$-th test case is given as the string $$$s$$$ consisting of at least $$$1$$$ and no more than $$$10^5$$$ characters 'L', 'R', 'U' and 'D' — the initial sequence of instructions.It is guaranteed that the sum of $$$|s|$$$ (where $$$|s|$$$ is the length of $$$s$$$) does not exceed $$$10^5$$$ over all test cases ($$$\\\\sum |s| \\\\le 10^5$$$).OutputFor each test case print the answer on it. In the first line print the maximum number of remaining instructions. In the second line print the valid sequence of remaining instructions $$$t$$$ the robot has to perform. The moves are performed from left to right in the order of the printed sequence. If there are several answers, you can print any. If the answer is $$$0$$$, you are allowed to print an empty line (but you can don't print it).ExampleInput6 LRU DURLDRUDRULRDURDDL LRUDDLRUDRUL LLLLRRRR URDUR LLLOutput2 LR 14 RUURDDDDLLLUUR 12 ULDDDRRRUULL 2 LR 2 UD 0NoteThere are only two possible answers in the first test case: \"LR\" and \"RL\".The picture corresponding to the second test case:Note that the direction of traverse does not matterAnother correct answer to the third test case: \"URDDLLLUURDR\".", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d93286f7", "template_md5": "465699a0", "result": "You are given a sequence of movements (L, R, U, D).  The goal is to remove some movements and rearrange the rest so that the resulting sequence:\n\n1. Starts and ends at the origin (0,0).\n2. Does not visit any location other than the origin more than twice. \n\nOutput the length of the valid sequence and the valid sequence itself."}, {"prompt_md5": "329fe58a", "template_md5": "35d339e4", "result": "You are given a sequence of instructions consisting of 'L', 'R', 'U', and 'D'. These instructions represent movements on a 2D grid:\n\n* 'L': Move left\n* 'R': Move right\n* 'U': Move up\n* 'D': Move down\n\nThe robot starts at position $(0,0)$ and follows the instructions. The robot cannot visit any cell (except $(0,0)$) more than twice.\n\nYour task is to find the longest possible valid subsequence of instructions. A valid subsequence is one that:\n\n1. Starts at $(0,0)$.\n2. Does not visit any cell (except $(0,0)$) more than twice.\n3. Ends at $(0,0)$.\n\nYou can remove instructions from the original sequence and rearrange the remaining instructions in any order. Output the length of the longest valid subsequence and the subsequence itself."}]}