{"uid": "1006-F", "url": "https://codeforces.com/contest/1006/problem/F", "tags": ["bitmasks", " brute force", " dp", " meet-in-the-middle"], "title": "1006-F", "statement": "F. Xor-Pathstime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a rectangular grid of size $$$n \\\\times m$$$. Each cell has a number written on it; the number on the cell ($$$i, j$$$) is $$$a_{i, j}$$$. Your task is to calculate the number of paths from the upper-left cell ($$$1, 1$$$) to the bottom-right cell ($$$n, m$$$) meeting the following constraints:You can move to the right or to the bottom only. Formally, from the cell ($$$i, j$$$) you may move to the cell ($$$i, j + 1$$$) or to the cell ($$$i + 1, j$$$). The target cell can't be outside of the grid.Thexorof all the numbers on the path from the cell ($$$1, 1$$$) to the cell ($$$n, m$$$) must be equal to $$$k$$$ (xoroperation is the bitwise exclusive OR, it is represented as '^' in Java or C++ and \"xor\" in Pascal).Find the number of such paths in the given grid.InputThe first line of the input contains three integers $$$n$$$, $$$m$$$ and $$$k$$$ ($$$1 \\\\le n, m \\\\le 20$$$, $$$0 \\\\le k \\\\le 10^{18}$$$) — the height and the width of the grid, and the number $$$k$$$.The next $$$n$$$ lines contain $$$m$$$ integers each, the $$$j$$$-th element in the $$$i$$$-th line is $$$a_{i, j}$$$ ($$$0 \\\\le a_{i, j} \\\\le 10^{18}$$$).OutputPrint one integer — the number of paths from ($$$1, 1$$$) to ($$$n, m$$$) withxorsum equal to $$$k$$$.ExamplesInput3 3 112 1 57 10 012 6 4Output3Input3 4 21 3 3 30 3 3 23 0 1 1Output5Input3 4 10000000000000000001 3 3 30 3 3 23 0 1 1Output0NoteAll the paths from the first example:$$$(1, 1) \\\\rightarrow (2, 1) \\\\rightarrow (3, 1) \\\\rightarrow (3, 2) \\\\rightarrow (3, 3)$$$;$$$(1, 1) \\\\rightarrow (2, 1) \\\\rightarrow (2, 2) \\\\rightarrow (2, 3) \\\\rightarrow (3, 3)$$$;$$$(1, 1) \\\\rightarrow (1, 2) \\\\rightarrow (2, 2) \\\\rightarrow (3, 2) \\\\rightarrow (3, 3)$$$.All the paths from the second example:$$$(1, 1) \\\\rightarrow (2, 1) \\\\rightarrow (3, 1) \\\\rightarrow (3, 2) \\\\rightarrow (3, 3) \\\\rightarrow (3, 4)$$$;$$$(1, 1) \\\\rightarrow (2, 1) \\\\rightarrow (2, 2) \\\\rightarrow (3, 2) \\\\rightarrow (3, 3) \\\\rightarrow (3, 4)$$$;$$$(1, 1) \\\\rightarrow (2, 1) \\\\rightarrow (2, 2) \\\\rightarrow (2, 3) \\\\rightarrow (2, 4) \\\\rightarrow (3, 4)$$$;$$$(1, 1) \\\\rightarrow (1, 2) \\\\rightarrow (2, 2) \\\\rightarrow (2, 3) \\\\rightarrow (3, 3) \\\\rightarrow (3, 4)$$$;$$$(1, 1) \\\\rightarrow (1, 2) \\\\rightarrow (1, 3) \\\\rightarrow (2, 3) \\\\rightarrow (3, 3) \\\\rightarrow (3, 4)$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "237ba5bd", "template_md5": "35d339e4", "result": "You are given a grid of size $n \\times m$ filled with numbers. You start at the top-left corner of the grid and want to reach the bottom-right corner. You can only move right or down at each step.  \n\nThe problem is to find the number of paths from the top-left to the bottom-right corner such that the bitwise XOR of all the numbers you encounter along the path equals a given number $k$. \n\nHere's what you need to know:\n\n* $1 \\le n, m \\le 20$\n* $0 \\le k \\le 10^{18}$\n* $0 \\le a_{i,j} \\le 10^{18}$  (where $a_{i,j}$ is the number in the $i$-th row and $j$-th column) \n\n\n\nLet me know if you'd like help with any specific part of the problem or need further clarification!"}, {"prompt_md5": "22949025", "template_md5": "465699a0", "result": "You have a grid of numbers. You must find the number of paths from the top left corner to the bottom right corner where the sum of all the numbers you pass over is a specific target value. You can only move right or down."}]}