{"uid": "1535-D", "url": "https://codeforces.com/contest/1535/problem/D", "tags": ["data structures", " dfs and similar", " dp", " implementation", " trees"], "title": "1535-D", "statement": "D. Playoff Tournamenttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output$$$2^k$$$ teams participate in a playoff tournament. The tournament consists of $$$2^k - 1$$$ games. They are held as follows: first of all, the teams are split into pairs: team $$$1$$$ plays against team $$$2$$$, team $$$3$$$ plays against team $$$4$$$ (exactly in this order), and so on (so, $$$2^{k-1}$$$ games are played in that phase). When a team loses a game, it is eliminated, and each game results in elimination of one team (there are no ties). After that, only $$$2^{k-1}$$$ teams remain. If only one team remains, it is declared the champion; otherwise, $$$2^{k-2}$$$ games are played: in the first one of them, the winner of the game \"$$$1$$$ vs $$$2$$$\" plays against the winner of the game \"$$$3$$$ vs $$$4$$$\", then the winner of the game \"$$$5$$$ vs $$$6$$$\" plays against the winner of the game \"$$$7$$$ vs $$$8$$$\", and so on. This process repeats until only one team remains.For example, this picture describes the chronological order of games with $$$k = 3$$$:Let the string $$$s$$$ consisting of $$$2^k - 1$$$ characters describe the results of the games in chronological order as follows:if $$$s_i$$$ is0, then the team with lower index wins the $$$i$$$-th game;if $$$s_i$$$ is1, then the team with greater index wins the $$$i$$$-th game;if $$$s_i$$$ is?, then the result of the $$$i$$$-th game is unknown (any team could win this game).Let $$$f(s)$$$ be the number ofpossible winnersof the tournament described by the string $$$s$$$. A team $$$i$$$ is apossible winnerof the tournament if it is possible to replace every?with either1or0in such a way that team $$$i$$$ is the champion.You are given the initial state of the string $$$s$$$. You have to process $$$q$$$ queries of the following form:$$$p$$$ $$$c$$$ — replace $$$s_p$$$ with character $$$c$$$, and print $$$f(s)$$$ as the result of the query.InputThe first line contains one integer $$$k$$$ ($$$1 \\\\le k \\\\le 18$$$).The second line contains a string consisting of $$$2^k - 1$$$ characters — the initial state of the string $$$s$$$. Each character is either?,0, or1.The third line contains one integer $$$q$$$ ($$$1 \\\\le q \\\\le 2 \\\\cdot 10^5$$$) — the number of queries.Then $$$q$$$ lines follow, the $$$i$$$-th line contains an integer $$$p$$$ and a character $$$c$$$ ($$$1 \\\\le p \\\\le 2^k - 1$$$; $$$c$$$ is either?,0, or1), describing the $$$i$$$-th query.OutputFor each query, print one integer — $$$f(s)$$$.ExampleInput3 0110?11 6 5 1 6 ? 7 ? 1 ? 5 ? 1 1Output1 2 3 3 5 4", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f202769b", "template_md5": "35d339e4", "result": "You are given a tournament with $2^k$ teams. The tournament proceeds in rounds. In each round, teams are paired up and play against each other. The loser is eliminated.  \n\nThe tournament is described by a string $s$ of length $2^k - 1$. Each character in the string represents a game:\n\n* `0`: The team with the lower index wins.\n* `1`: The team with the higher index wins.\n* `?`: The outcome of the game is unknown.\n\nYou need to determine the number of possible winners for the tournament given the current state of the string $s$. A team is a possible winner if you can replace all the `?` characters with either `0` or `1` in a way that the team wins the tournament.\n\nYou will be given $q$ queries. Each query consists of:\n\n* An index $p$\n* A character $c$ (`?`, `0`, or `1`)\n\nFor each query, you need to:\n\n1. Update the character at index $p$ in the string $s$ to $c$.\n2. Calculate the number of possible winners for the updated tournament and print the result."}, {"prompt_md5": "e4382b70", "template_md5": "465699a0", "result": "You are given a tournament bracket with a certain number of teams.  The bracket is represented by a string where each character indicates the winner of a match (0 for the lower-numbered team, 1 for the higher-numbered team, ? for unknown). You will be given queries to change the outcome of specific matches. After each change, you need to determine the number of possible teams that could win the tournament."}]}