{"uid": "1650-A", "url": "https://codeforces.com/contest/1650/problem/A", "tags": ["implementation", " strings"], "title": "1650-A", "statement": "A. Deletions of Two Adjacent Letterstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe string $$$s$$$ is given, the string length isoddnumber. The string consists of lowercase letters of the Latin alphabet.As long as the string length is greater than $$$1$$$, the following operation can be performed on it: select any two adjacent letters in the string $$$s$$$ and delete them from the string. For example, from the string \"lemma\" in one operation, you can get any of the four strings: \"mma\", \"lma\", \"lea\" or \"lem\" In particular, in one operation, the length of the string reduces by $$$2$$$.Formally, let the string $$$s$$$ have the form $$$s=s_1s_2 \\\\dots s_n$$$ ($$$n>1$$$). During one operation, you choose an arbitrary index $$$i$$$ ($$$1 \\\\le i < n$$$) and replace $$$s=s_1s_2 \\\\dots s_{i-1}s_{i+2} \\\\dots s_n$$$.For the given string $$$s$$$ and the letter $$$c$$$, determine whether it is possible to make such a sequence of operations that in the end the equality $$$s=c$$$ will be true? In other words, is there such a sequence of operations that the process will end with a string of length $$$1$$$, which consists of the letter $$$c$$$?InputThe first line of input data contains an integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^3$$$) â€” the number of input test cases.The descriptions of the $$$t$$$ cases follow. Each test case is represented by two lines:string $$$s$$$, which has an odd length from $$$1$$$ to $$$49$$$ inclusive and consists of lowercase letters of the Latin alphabet;is a string containing one letter $$$c$$$, where $$$c$$$ is a lowercase letter of the Latin alphabet.OutputFor each test case in a separate line output:YES, if the string $$$s$$$ can be converted so that $$$s=c$$$ is true;NOotherwise.You can outputYESandNOin any case (for example, the stringsyEs,yes,YesandYESwill be recognized as a positive response).ExampleInput5abcdecabcdebxyaaaaaaaaaaaaaaaacontesttOutputYES NO NO YES YESNoteIn the first test case, $$$s$$$=\"abcde\". You need to get $$$s$$$=\"c\". For the first operation, delete the first two letters, we get $$$s$$$=\"cde\". In the second operation, we delete the last two letters, so we get the expected value of $$$s$$$=\"c\".In the third test case, $$$s$$$=\"x\", it is required to get $$$s$$$=\"y\". Obviously, this cannot be done.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "b604d3f9", "template_md5": "35d339e4", "result": "You are given a string of odd length consisting of lowercase letters. You can repeatedly delete any two adjacent letters from the string.  \n\nGiven a target letter, determine if it is possible to delete letters from the string until only the target letter remains. \n\nInput:\n\n* The first line contains the number of test cases, $t$.\n* Each test case consists of two lines:\n    * The first line contains the string $s$.\n    * The second line contains the target letter $c$.\n\nOutput:\n\nFor each test case, output \"YES\" if it is possible to reach the target letter, and \"NO\" otherwise."}, {"prompt_md5": "d1e1e6ba", "template_md5": "465699a0", "result": "You are given a string of odd length. You can repeatedly remove two adjacent letters from the string.  Can you remove letters until the string is just a single letter, and that letter is a target letter?"}]}