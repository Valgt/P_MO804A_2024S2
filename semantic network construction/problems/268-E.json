{"uid": "268-E", "url": "https://codeforces.com/contest/268/problem/E", "tags": ["math", " probabilities", " sortings"], "title": "268-E", "statement": "E. Playlisttime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutManao's friends often send him new songs. He never listens to them right away. Instead, he compiles them into a playlist. When he feels that his mind is open to new music, he opens the playlist and starts to listen to the songs.Of course, there are some songs that Manao doesn't particuarly enjoy. To get more pleasure from the received songs, he invented the following procedure of listening to the playlist:If after listening to some song Manao realizes that he liked it, then he remembers it and starts to listen to the next unlistened song.If after listening to some song Manao realizes that he did not like it, he listens to all the songs he liked up to this point and then begins to listen to the next unlistened song.For example, if Manao has four songs in the playlist, A, B, C, D (in the corresponding order) and he is going to like songs A and C in the end, then the order of listening is the following:Manao listens to A, he likes it, he remembers it.Manao listens to B, he does not like it, so he listens to A, again.Manao listens to C, he likes the song and he remembers it, too.Manao listens to D, but does not enjoy it and re-listens to songs A and C.That is, in the end Manao listens to song A three times, to song C twice and songs B and D once. Note that if Manao once liked a song, he will never dislike it on a subsequent listening.Manao has receivednsongs: thei-th of them isliseconds long and Manao may like it with a probability ofpipercents. The songs could get on Manao's playlist in any order, so Manao wants to know the maximum expected value of the number of seconds after which the listening process will be over, for all possible permutations of the songs in the playlist.InputThe first line contains a single integern(1 ≤n≤ 50000). Thei-th of the followingnlines contains two integers, separated by a single space —liandpi(15 ≤li≤ 1000,0 ≤pi≤ 100) — the length of thei-th song in seconds and the probability that Manao will like the song, in percents.OutputIn a single line print a single real number — the maximum expected listening time over all permutations of songs. The answer will be considered valid if the absolute or relative error does not exceed10- 9.ExamplesInput3150 20150 50100 50Output537.500000000Input4300 0300 50240 50360 80Output2121.000000000NoteConsider the first test case. If Manao listens to the songs in the order in which they were originally compiled, the mathematical expectation will be equal to 467.5 seconds. The maximum expected value is obtained by putting the first song at the end of the playlist.Consider the second test case. The song which is 360 seconds long should be listened to first. The song 300 seconds long which Manao will dislike for sure should be put in the end.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "1d9a9b5b", "template_md5": "35d339e4", "result": "You are given $n$ songs, each with a length $l_i$ in seconds and a probability $p_i$ (in percentage) that a listener will like the song.  The listener has a specific way of listening to the playlist:\n\n* If a song is liked, it is remembered and the next unlistened song is played.\n* If a song is disliked, all previously liked songs are replayed, and then the next unlistened song is played.\n\nA song that is liked is never disliked again.\n\nFind the maximum expected total listening time over all possible orders of the songs in the playlist."}, {"prompt_md5": "5731a4a9", "template_md5": "465699a0", "result": "You are given a list of songs, each with a length and a probability of being liked.  You need to arrange the songs in a playlist to maximize the expected total time spent listening to the playlist.  The rules are:\n\n* If a song is liked, you move to the next song.\n* If a song is disliked, you re-listen to all the songs you liked so far and then move to the next song. \n\n\n\nLet me know if you'd like help with the algorithm to solve this!"}]}