{"uid": "1609-G", "url": "https://codeforces.com/contest/1609/problem/G", "tags": ["data structures", " greedy", " math"], "title": "1609-G", "statement": "G. A Stroll Around the Matrixtime limit per test6 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputWilliam has two arrays of numbers $$$a_1, a_2, \\\\dots, a_n$$$ and $$$b_1, b_2, \\\\dots, b_m$$$. The arrays satisfy the conditions of being convex. Formally an array $$$c$$$ of length $$$k$$$ is considered convex if $$$c_i - c_{i - 1} < c_{i + 1} - c_i$$$ for all $$$i$$$ from $$$2$$$ to $$$k - 1$$$ and $$$c_1 < c_2$$$.Throughout William's life he observed $$$q$$$ changes of two types happening to the arrays:Add the arithmetic progression $$$d, d \\\\cdot 2, d \\\\cdot 3, \\\\dots, d \\\\cdot k$$$ to the suffix of the array $$$a$$$ of length $$$k$$$. The array after the change looks like this: $$$[a_1, a_2, \\\\dots, a_{n - k}, a_{n - k + 1} + d, a_{n - k + 2} + d \\\\cdot 2, \\\\dots, a_n + d \\\\cdot k]$$$.The same operation, but for array $$$b$$$.After each change a matrix $$$d$$$ is created from arrays $$$a$$$ and $$$b$$$, of size $$$n \\\\times m$$$, where $$$d_{i, j}=a_i + b_j$$$. William wants to get from cell ($$$1, 1$$$) to cell ($$$n, m$$$) of this matrix. From cell ($$$x, y$$$) he can only move to cells ($$$x + 1, y$$$) and ($$$x, y + 1$$$). The length of a path is calculated as the sum of numbers in cells visited by William, including the first and the last cells.After each change William wants you to help find out the minimal length of the path he could take.InputThe first line contains three integers $$$n$$$, $$$m$$$ and $$$q$$$ ($$$2 \\\\le n \\\\le 100, 2 \\\\le m \\\\le 10^5$$$, $$$1 \\\\le q \\\\le 10^5$$$), the sizes of the arrays and the number of changes.The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\le a_i \\\\le 10^{12}$$$), the contents of array $$$a$$$.The third line contains $$$m$$$ integers $$$b_1, b_2, \\\\dots, b_m$$$ ($$$1 \\\\le b_i \\\\le 10^{12}$$$), the contents of array $$$b$$$.Each of the next $$$q$$$ lines contains three integers $$$type$$$, $$$k$$$ and $$$d$$$ ($$$1 \\\\le type \\\\le 2$$$, if $$$type = 1$$$, then $$$1 \\\\le k \\\\le n$$$ otherwise $$$1 \\\\le k \\\\le m$$$, $$$1 \\\\le d \\\\le 10^3$$$).OutputAfter each change, output one integer, the minimum length of the path in the constructed matrix.ExamplesInput5 3 4 1 2 4 7 11 5 7 10 1 3 2 2 2 5 1 5 4 2 1 7Output98 128 219 229Input5 6 7 4 9 22 118 226 7 94 238 395 565 738 2 1 95 1 4 54 1 2 5 1 2 87 2 6 62 2 1 143 1 1 77Output3639 5122 5162 5617 7663 7806 7960", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "530e0530", "template_md5": "465699a0", "result": "You are given two arrays of numbers.  You can perform operations that add arithmetic progressions to the end of each array. After each operation, you need to find the shortest path from the top-left corner to the bottom-right corner of a matrix created by adding corresponding elements of the two arrays.  The path length is the sum of all the numbers you visit."}, {"prompt_md5": "c19b6d39", "template_md5": "35d339e4", "result": "You are given two arrays,  $a$ of length $n$ and $b$ of length $m$.  Both arrays are convex.  \n\nA convex array is defined as follows: for all $i$ from 2 to $k-1$,  $c_i - c_{i - 1} < c_{i + 1} - c_i$ and $c_1 < c_2$.\n\nThere are $q$ operations that will be performed on the arrays. Each operation is of one of two types:\n\n* **Type 1:** Add the arithmetic progression $d, 2d, 3d, ..., kd$ to the suffix of array $a$ of length $k$. The array after the change looks like this: $[a_1, a_2, ..., a_{n-k}, a_{n-k+1} + d, a_{n-k+2} + 2d, ..., a_n + kd]$.\n\n* **Type 2:** Add the arithmetic progression $d, 2d, 3d, ..., kd$ to the suffix of array $b$ of length $k$.\n\nAfter each operation, a matrix $d$ is created from arrays $a$ and $b$, of size $n \\times m$, where $d_{i,j} = a_i + b_j$.\n\nYou need to find the minimum length of a path from cell $(1,1)$ to cell $(n,m)$ in the matrix. You can only move to cells $(x+1, y)$ and $(x, y+1)$. The length of a path is the sum of the numbers in the cells visited, including the first and last cells.\n\n**Input:**\n\n* The first line contains three integers $n$, $m$, and $q$ ($2 \\le n \\le 100$, $2 \\le m \\le 10^5$, $1 \\le q \\le 10^5$), the sizes of the arrays and the number of operations.\n* The second line contains $n$ integers $a_1, a_2, ..., a_n$ ($1 \\le a_i \\le 10^{12}$), the contents of array $a$.\n* The third line contains $m$ integers $b_1, b_2, ..., b_m$ ($1 \\le b_i \\le 10^{12}$), the contents of array $b$.\n* Each of the next $q$ lines contains three integers $type$, $k$, and $d$ ($1 \\le type \\le 2$, if $type = 1$, then $1 \\le k \\le n$ otherwise $1 \\le k \\le m$, $1 \\le d \\le 10^3$).\n\n**Output:**\n\nAfter each operation, output one integer, the minimum length of the path in the constructed matrix."}]}