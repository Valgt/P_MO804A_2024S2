{"uid": "1651-C", "url": "https://codeforces.com/contest/1651/problem/C", "tags": ["brute force", " data structures", " implementation"], "title": "1651-C", "statement": "C. Fault-tolerant Networktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a classroom with two rows of computers. There are $$$n$$$ computers in each row and each computer has its own grade. Computers in the first row has grades $$$a_1, a_2, \\\\dots, a_n$$$ and in the second row — $$$b_1, b_2, \\\\dots, b_n$$$.Initially, all pairs ofneighboringcomputers in each row are connected by wire (pairs $$$(i, i + 1)$$$ for all $$$1 \\\\le i < n$$$), so two rows form two independent computer networks.Your task is to combine them in one common network by connecting one or more pairs of computers fromdifferentrows. Connecting the $$$i$$$-th computer from the first row and the $$$j$$$-th computer from the second row costs $$$|a_i - b_j|$$$.You can connect one computer to several other computers, but you need to provide at least a basic fault tolerance: you need to connect computers in such a way that the network stays connected, despite one of its computer failing. In other words, if one computer is broken (no matter which one), the network won't split in two or more parts.That is the minimum total cost to make a fault-tolerant network?InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases. Next $$$t$$$ cases follow.The first line of each test case contains the single integer $$$n$$$ ($$$3 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the number of computers in each row.The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\le a_i \\\\le 10^9$$$) — the grades of computers in the first row.The third line contains $$$n$$$ integers $$$b_1, b_2, \\\\dots, b_n$$$ ($$$1 \\\\le b_i \\\\le 10^9$$$) — the grades of computers in the second row.It's guaranteed that the total sum of $$$n$$$ doesn't exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, print a single integer — the minimum total cost to make a fault-tolerant network.ExampleInput231 10 120 4 2541 1 1 11000000000 1000000000 1000000000 1000000000Output31 1999999998NoteIn the first test case, it's optimal to connect four pairs of computers:computer $$$1$$$ from the first row with computer $$$2$$$ from the second row: cost $$$|1 - 4| = 3$$$;computer $$$3$$$ from the first row with computer $$$2$$$ from the second row: cost $$$|1 - 4| = 3$$$;computer $$$2$$$ from the first row with computer $$$1$$$ from the second row: cost $$$|10 - 20| = 10$$$;computer $$$2$$$ from the first row with computer $$$3$$$ from the second row: cost $$$|10 - 25| = 15$$$;In total, $$$3 + 3 + 10 + 15 = 31$$$.In the second test case, it's optimal to connect $$$1$$$ from the first row with $$$1$$$ from the second row, and $$$4$$$ from the first row with $$$4$$$ from the second row.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "58b3652c", "template_md5": "35d339e4", "result": "You have two rows of computers, each with $n$ computers. The computers in each row have grades $a_1, a_2, ..., a_n$ and $b_1, b_2, ..., b_n$ respectively.\n\nInitially, each row is a separate network with computers connected to their neighbors. You need to connect the two rows into one network by connecting computers from different rows. The cost of connecting the $i$-th computer from the first row to the $j$-th computer from the second row is $|a_i - b_j|$.\n\nYou need to find the minimum total cost to connect the networks in a way that ensures the network remains connected even if one computer fails. \n\n**Input:**\n\n* $t$ - the number of test cases\n* For each test case:\n    * $n$ - the number of computers in each row\n    * $a_1, a_2, ..., a_n$ - the grades of computers in the first row\n    * $b_1, b_2, ..., b_n$ - the grades of computers in the second row\n\n**Output:**\n\n* For each test case, print the minimum total cost to create a fault-tolerant network."}, {"prompt_md5": "f0da89a8", "template_md5": "465699a0", "result": "You have two rows of computers with different scores. You need to connect computers from different rows to make one network.  The cost to connect two computers is the difference between their scores.  You need to connect the computers so that even if one computer breaks, the network stays connected. What is the cheapest way to do this?"}]}