{"uid": "995-A", "url": "https://codeforces.com/contest/995/problem/A", "tags": ["constructive algorithms", " implementation"], "title": "995-A", "statement": "A. Teslatime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAllen dreams of one day owning a enormous fleet of electric cars, the car of the future! He knows that this will give him a big status boost. As Allen is planning out all of the different types of cars he will own and how he will arrange them, he realizes that he has a problem.Allen's future parking lot can be represented as a rectangle with $$$4$$$ rows and $$$n$$$ ($$$n \\\\le 50$$$) columns of rectangular spaces, each of which can contain at most one car at any time. He imagines having $$$k$$$ ($$$k \\\\le 2n$$$) cars in the grid, and all the cars are initially in the second and third rows. Each of the cars also has a different designated parking space in the first or fourth row. Allen has to put the cars into corresponding parking places.Illustration to the first example.However, since Allen would never entrust his cars to anyone else, only one car can be moved at a time. He can drive a car from a space in any of the four cardinal directions to a neighboring empty space. Furthermore, Allen can only move one of his cars into a space on the first or fourth rows if it is the car's designated parking space.Allen knows he will be a very busy man, and will only have time to move cars at most $$$20000$$$ times before he realizes that moving cars is not worth his time. Help Allen determine if he should bother parking his cars or leave it to someone less important.InputThe first line of the input contains two space-separated integers $$$n$$$ and $$$k$$$ ($$$1 \\\\le n \\\\le 50$$$, $$$1 \\\\le k \\\\le 2n$$$), representing the number of columns and the number of cars, respectively.The next four lines will contain $$$n$$$ integers each between $$$0$$$ and $$$k$$$ inclusive, representing the initial state of the parking lot. The rows are numbered $$$1$$$ to $$$4$$$ from top to bottom and the columns are numbered $$$1$$$ to $$$n$$$ from left to right.In the first and last line, an integer $$$1 \\\\le x \\\\le k$$$ represents a parking spot assigned to car $$$x$$$ (you can only move this car to this place), while the integer $$$0$$$ represents a empty space (you can't move any car to this place).In the second and third line, an integer $$$1 \\\\le x \\\\le k$$$ represents initial position of car $$$x$$$, while the integer $$$0$$$ represents an empty space (you can move any car to this place).Each $$$x$$$ between $$$1$$$ and $$$k$$$ appears exactly once in the second and third line, and exactly once in the first and fourth line.OutputIf there is a sequence of moves that brings all of the cars to their parking spaces, with at most $$$20000$$$ car moves, then print $$$m$$$, the number of moves, on the first line. On the following $$$m$$$ lines, print the moves (one move per line) in the format $$$i$$$ $$$r$$$ $$$c$$$, which corresponds to Allen moving car $$$i$$$ to the neighboring space at row $$$r$$$ and column $$$c$$$.If it is not possible for Allen to move all the cars to the correct spaces with at most $$$20000$$$ car moves, print a single line with the integer $$$-1$$$.ExamplesInput4 51 2 0 41 2 0 45 0 0 30 5 0 3Output61 1 12 1 24 1 43 4 45 3 25 4 2Input1 21212Output-1Input1 21122Output21 1 12 4 1NoteIn the first sample test case, all cars are in front of their spots except car $$$5$$$, which is in front of the parking spot adjacent. The example shows the shortest possible sequence of moves, but any sequence of length at most $$$20000$$$ will be accepted.In the second sample test case, there is only one column, and the cars are in the wrong order, so no cars can move and the task is impossible.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "74bda71c", "template_md5": "35d339e4", "result": "You are given a grid of $4$ rows and $n$ columns.  Each cell can hold at most one car. There are $k$ cars, where $1 \\le k \\le 2n$.\n\n* The cars are initially placed in the second and third rows.\n* Each car has a designated parking space in either the first or fourth row.\n\nYou can move a car one space at a time in any of the four cardinal directions (up, down, left, right) to an empty space.  A car can only be moved to its designated parking space if it is in the first or fourth row.\n\nDetermine if it is possible to move all the cars to their designated parking spaces in at most 20,000 moves. If it is possible, output the minimum number of moves required and a sequence of moves. If it is not possible, output -1. \n\nThe input will consist of:\n\n* Two integers, $n$ and $k$, separated by a space.\n* Four lines, each containing $n$ integers between 0 and $k$ inclusive, representing the initial state of the grid.\n    * The first and last lines represent the first and fourth rows, respectively.\n    * The second and third lines represent the second and third rows, respectively.\n    * An integer between 1 and $k$ represents the position of a car.\n    * An integer of 0 represents an empty space."}, {"prompt_md5": "7a997c33", "template_md5": "465699a0", "result": "You are given a grid of spaces. Some spaces are designated as parking spots for cars. Cars are initially placed in the middle rows and need to be moved to their designated parking spots in the top or bottom rows. You can move a car one space at a time, horizontally or vertically, to an empty space.  Determine the minimum number of moves required to park all the cars, or if it's impossible to park them within a limit of 20,000 moves."}]}