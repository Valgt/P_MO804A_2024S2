{"uid": "1011-A", "url": "https://codeforces.com/contest/1011/problem/A", "tags": ["greedy", " implementation", " sortings"], "title": "1011-A", "statement": "A. Stagestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputNatasha is going to fly to Mars. She needs to build a rocket, which consists of several stages in some order. Each of the stages is defined by a lowercase Latin letter. This way, the rocket can be described by the string — concatenation of letters, which correspond to the stages.There are $$$n$$$ stages available. The rocket must contain exactly $$$k$$$ of them. Stages in the rocket should be ordered by their weight. So, after the stage with some letter can go only stage with a letter, which is at least two positions after in the alphabet (skipping one letter in between, or even more). For example, after letter 'c' can't go letters 'a', 'b', 'c' and 'd', but can go letters 'e', 'f', ..., 'z'.For the rocket to fly as far as possible, its weight should be minimal. The weight of the rocket is equal to the sum of the weights of its stages. The weight of the stage is the number of its letter in the alphabet. For example, the stage 'a'weighs one ton,'b'weighs two tons, and'z' — $$$26$$$ tons.Build the rocket with the minimal weight or determine, that it is impossible to build a rocket at all. Each stage can be used at most once.InputThe first line of input contains two integers — $$$n$$$ and $$$k$$$ ($$$1 \\\\le k \\\\le n \\\\le 50$$$) – the number of available stages and the number of stages to use in the rocket.The second line contains string $$$s$$$, which consists of exactly $$$n$$$ lowercase Latin letters. Each letter defines a new stage, which can be used to build the rocket. Each stage can be used at most once.OutputPrint a single integer — the minimal total weight of the rocket or-1, if it is impossible to build the rocket at all.ExamplesInput5 3xyabdOutput29Input7 4problemOutput34Input2 2abOutput-1Input12 1abaabbaaabbbOutput1NoteIn the first example, the following rockets satisfy the condition:\"adx\" (weight is $$$1+4+24=29$$$);\"ady\" (weight is $$$1+4+25=30$$$);\"bdx\" (weight is $$$2+4+24=30$$$);\"bdy\" (weight is $$$2+4+25=31$$$).Rocket \"adx\" has the minimal weight, so the answer is $$$29$$$.In the second example, target rocket is \"belo\". Its weight is $$$2+5+12+15=34$$$.In the third example, $$$n=k=2$$$, so the rocket must have both stages: 'a' and 'b'. This rocket doesn't satisfy the condition, because these letters are adjacent in the alphabet. Answer is-1.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "619e1cea", "template_md5": "35d339e4", "result": "You are given a set of $n$ stages, each represented by a lowercase letter.  You need to select $k$ of these stages to build a rocket.  The stages must be ordered in the rocket based on their alphabetical position, with each stage being at least two letters ahead of the previous stage in the alphabet.  \n\nThe weight of a stage is equal to its position in the alphabet (a=1, b=2, ..., z=26).  \n\nFind the minimum total weight of a rocket that can be built using these rules, or determine if it is impossible to build a rocket at all."}, {"prompt_md5": "f64318d5", "template_md5": "465699a0", "result": "You have a set of items, each with a weight. You need to choose a subset of these items with a specific number of items, where each item can only be chosen if it is heavier than the previous item chosen. The goal is to find the lightest possible combination of items that meets these criteria. If no such combination exists, output -1."}]}