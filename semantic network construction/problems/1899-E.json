{"uid": "1899-E", "url": "https://codeforces.com/contest/1899/problem/E", "tags": ["greedy", " implementation", " sortings"], "title": "1899-E", "statement": "E. Queue Sorttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVlad found an array $$$a$$$ of $$$n$$$ integers and decided to sort it in non-decreasing order.To do this, Vlad can apply the following operation any number of times:Extract the first element of the array and insert it at the end;Swapthatelement with the previous one until it becomes the first or until it becomesstrictlygreater than the previous one.Note that both actions are part of the operation, and for one operation, youmustapply both actions.For example, if you apply the operation to the array [$$$4, 3, 1, 2, 6, 4$$$], it will change as follows:[$$$\\\\color{red}{4}, 3, 1, 2, 6, 4$$$];[$$$3, 1, 2, 6, 4, \\\\color{red}{4}$$$];[$$$3, 1, 2, 6, \\\\color{red}{4}, 4$$$];[$$$3, 1, 2, \\\\color{red}{4}, 6, 4$$$].Vlad doesn't have time to perform all the operations, so he asks you to determine the minimum number of operations required to sort the array or report that it is impossible.InputThe first line of the input contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases. Descriptions of the test cases follow.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the length of the array.The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, a_3, \\\\dots, a_n$$$ ($$$1 \\\\le a_i \\\\le 10^9$$$) — the elements of the array.It is guaranteed that the sum of $$$n$$$ over all testcases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output a single integer — the minimum number of operations needed to sort the array. If it is impossible to do so, output $$$-1$$$ as the answer.ExampleInput556 4 1 2 574 5 3 7 8 6 264 3 1 2 6 445 2 4 232 2 3Output2 6 -1 -1 0", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "baef9857", "template_md5": "35d339e4", "result": "You are given an array of integers. You can perform the following operation any number of times:\n\n1. Take the first element of the array and move it to the end.\n2. Swap the newly moved element with the previous element, and repeat this swapping until the moved element is either the first element of the array or is strictly greater than the previous element.\n\nDetermine the minimum number of operations required to sort the array in non-decreasing order. If it is impossible to sort the array using these operations, output -1."}, {"prompt_md5": "9969849a", "template_md5": "465699a0", "result": "You are given a list of numbers. You can perform the following operation any number of times:\n\n1. Take the first number in the list.\n2. Move it to the end of the list.\n3. Swap it with the number before it, repeatedly, until it is either the first number or greater than the number before it.\n\nFind the fewest times you need to perform this operation to sort the list in ascending order. If it's impossible to sort the list, say so."}]}