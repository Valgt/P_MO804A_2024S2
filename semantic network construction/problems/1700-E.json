{"uid": "1700-E", "url": "https://codeforces.com/contest/1700/problem/E", "tags": ["brute force", " constructive algorithms"], "title": "1700-E", "statement": "E. Serega the Piratetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle pirate Serega robbed a ship with puzzles of different kinds. Among all kinds, he liked only one, the hardest.A puzzle is a table of $$$n$$$ rows and $$$m$$$ columns, whose cells contain each number from $$$1$$$ to $$$n \\\\cdot m$$$ exactly once.To solve a puzzle, you have to find a sequence of cells in the table, such that any two consecutive cells are adjacent by the side in the table. The sequence can have arbitrary length and should visit each cell one or more times. For a cell containing the number $$$i$$$, denote the position of the first occurrence of this cell in the sequence as $$$t_i$$$. The sequence solves the puzzle, if $$$t_1 < t_2 < \\\\dots < t_{nm}$$$. In other words, the cell with number $$$x$$$ should be first visited before the cell with number $$$x + 1$$$ for each $$$x$$$.Let's call a puzzle solvable, if there exists at least one suitable sequence.In one move Serega can choose two arbitrary cells in the table (not necessarily adjacent by the side) and swap their numbers. He would like to know the minimum number of moves to make his puzzle solvable, but he is too impatient. Thus, please tell if the minimum number of moves is $$$0$$$, $$$1$$$, or at least $$$2$$$. In the case, where $$$1$$$ move is required, please also find the number of suitable cell pairs to swap.InputIn the first line there are two whole positive numbers $$$n, m$$$ ($$$1 \\\\leq n\\\\cdot m \\\\leq 400\\\\,000$$$) â€” table dimensions.In the next $$$n$$$ lines there are $$$m$$$ integer numbers $$$a_{i1}, a_{i2}, \\\\dots, a_{im}$$$ ($$$1 \\\\le a_{ij} \\\\le nm$$$).It is guaranteed that every number from $$$1$$$ to $$$nm$$$ occurs exactly once in the table.OutputLet $$$a$$$ be the minimum number of moves to make the puzzle solvable.If $$$a = 0$$$, print $$$0$$$.If $$$a = 1$$$, print $$$1$$$ and the number of valid swaps.If $$$a \\\\ge 2$$$, print $$$2$$$.ExamplesInput3 3 2 1 3 6 7 4 9 8 5Output0Input2 3 1 6 4 3 2 5Output1 3Input1 6 1 6 5 4 3 2Output2NoteIn the first example the sequence $$$(1, 2), (1, 1), (1, 2), (1, 3), (2, 3), (3, 3)$$$, $$$(2, 3), (1, 3), (1, 2), (1, 1), (2, 1), (2, 2), (3, 2), (3, 1)$$$ solves the puzzle, so the answer is $$$0$$$.The puzzle in the second example can't be solved, but it's solvable after any of three swaps of cells with values $$$(1, 5), (1, 6), (2, 6)$$$.The puzzle from the third example requires at least two swaps, so the answer is $$$2$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d3b395c9", "template_md5": "35d339e4", "result": "You are given a table of $n$ rows and $m$ columns. Each cell in the table contains a unique number from 1 to $n \\cdot m$. \n\nA sequence of cells is considered valid if:\n\n* It visits each cell exactly once.\n* Any two consecutive cells in the sequence are adjacent (share a side).\n* The cells are visited in increasing order of their numbers.\n\nDetermine the minimum number of swaps required to make the table solvable (i.e., find a valid sequence). A swap involves exchanging the numbers in two arbitrary cells.\n\nOutput:\n\n* 0 if the table is already solvable.\n* 1 and the number of valid swap pairs if one swap is sufficient.\n* 2 if at least two swaps are required."}, {"prompt_md5": "1f4adb76", "template_md5": "465699a0", "result": "You are given a grid of numbers. Each number from 1 to the total number of cells appears exactly once.  You need to find the minimum number of swaps needed to arrange the numbers in the grid so that they form a specific increasing sequence.  \n\nDetermine if zero, one, or at least two swaps are needed. If one swap is needed, also list the possible swaps."}]}