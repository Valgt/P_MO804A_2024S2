{"uid": "1032-C", "url": "https://codeforces.com/contest/1032/problem/C", "tags": ["constructive algorithms", " dp"], "title": "1032-C", "statement": "C. Playing Pianotime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Paul wants to learn how to play piano. He already has a melody he wants to start with. For simplicity he represented this melody as a sequence $$$a_1, a_2, \\\\ldots, a_n$$$ of key numbers: the more a number is, the closer it is to the right end of the piano keyboard.Paul is very clever and knows that the essential thing is to properly assign fingers to notes he's going to play. If he chooses an inconvenient fingering, he will then waste a lot of time trying to learn how to play the melody by these fingers and he will probably not succeed.Let's denote the fingers of hand by numbers from $$$1$$$ to $$$5$$$. We call afingeringany sequence $$$b_1, \\\\ldots, b_n$$$ of fingers numbers. A fingering isconvenientif for all $$$1\\\\leq i \\\\leq n - 1$$$ the following holds:if $$$a_i < a_{i+1}$$$ then $$$b_i < b_{i+1}$$$, because otherwise Paul needs to take his hand off the keyboard to play the $$$(i+1)$$$-st note;if $$$a_i > a_{i+1}$$$ then $$$b_i > b_{i+1}$$$, because of the same;if $$$a_i = a_{i+1}$$$ then $$$b_i\\\\neq b_{i+1}$$$, because using the same finger twice in a row is dumb.Please note that there is $$$\\\\neq$$$, not $$$=$$$ between $$$b_i$$$ and $$$b_{i+1}$$$.Please provide any convenient fingering or find out that there is none.InputThe first line contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 10^5$$$) denoting the number of notes.The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\le a_i \\\\le 2\\\\cdot10^5$$$) denoting the positions of notes on the keyboard.OutputIf there is no convenient fingering, print $$$-1$$$. Otherwise, print $$$n$$$ numbers $$$b_1, b_2, \\\\ldots, b_n$$$, each from $$$1$$$ to $$$5$$$, denoting a convenient fingering, separated by spaces.ExamplesInput5 1 1 4 2 2Output1 4 5 4 5Input7 1 5 7 8 10 3 1Output1 2 3 4 5 4 3Input19 3 3 7 9 8 8 8 8 7 7 7 7 5 3 3 3 3 8 8Output1 3 4 5 4 5 4 5 4 5 4 5 4 3 5 4 3 5 4NoteThe third sample test is kinda \"Non stop\" song by Reflex.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "9cb3f3a6", "template_md5": "35d339e4", "result": "You are given a sequence of integers $a_1, a_2, ..., a_n$ representing the positions of notes on a piano keyboard.  \n\nA fingering is a sequence of integers $b_1, b_2, ..., b_n$ where each integer represents which finger (1 to 5) is used to play each note.\n\nA fingering is considered \"convenient\" if the following rules are followed:\n\n* If $a_i < a_{i+1}$, then $b_i < b_{i+1}$ (the finger number must increase if the note position increases).\n* If $a_i > a_{i+1}$, then $b_i > b_{i+1}$ (the finger number must decrease if the note position decreases).\n* If $a_i = a_{i+1}$, then $b_i \\neq b_{i+1}$ (the same finger cannot be used for two consecutive notes).\n\nDetermine if a convenient fingering exists for the given sequence. If it does, output the fingering. Otherwise, output -1."}, {"prompt_md5": "f960f39d", "template_md5": "465699a0", "result": "You are given a sequence of numbers.  Find a way to assign each number in the sequence to one of five categories (1 through 5) such that:\n\n* If the current number is smaller than the next number, the category for the current number must be smaller than the category for the next number.\n* If the current number is larger than the next number, the category for the current number must be larger than the category for the next number.\n* If the current number is the same as the next number, the categories for the current number and the next number must be different. \n\nIf no such assignment is possible, output -1. Otherwise, output the assignment."}]}