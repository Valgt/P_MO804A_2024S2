{"uid": "1827-F", "url": "https://codeforces.com/contest/1827/problem/F", "tags": ["constructive algorithms", " data structures", " greedy"], "title": "1827-F", "statement": "F. Copium Permutationtime limit per test2 secondsmemory limit per test1024 megabytesinputstandard inputoutputstandard outputYou are given a permutation $$$a_1,a_2,\\\\ldots,a_n$$$ of the first $$$n$$$ positive integers. A subarray $$$[l,r]$$$ is calledcopiumif we can rearrange it so that it becomes a sequence of consecutive integers, or more formally, if $$$$$$\\\\max(a_l,a_{l+1},\\\\ldots,a_r)-\\\\min(a_l,a_{l+1},\\\\ldots,a_r)=r-l$$$$$$ For each $$$k$$$ in the range $$$[0,n]$$$, print out themaximumnumber of copium subarrays of $$$a$$$ over all ways of rearranging the last $$$n-k$$$ elements of $$$a$$$.InputEach test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$). The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1\\\\le n\\\\le 2\\\\cdot 10^5$$$).The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\le a_i \\\\le n$$$). It is guaranteed that the given numbers form a permutation of length $$$n$$$.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2\\\\cdot 10^5$$$.OutputFor each test case print $$$n+1$$$ integers as the answers for each $$$k$$$ in the range $$$[0,n]$$$.ExampleInput555 2 1 4 342 1 4 31187 5 8 1 4 2 6 3101 4 5 3 7 8 9 2 10 6Output15 15 11 10 9 9  10 8 8 7 7  1 1  36 30 25 19 15 13 12 9 9  55 55 41 35 35 25 22 22 19 17 17NoteIn the first test case, the answer permutations for each $$$k$$$ are $$$[1,2,3,4,5]$$$, $$$[5,4,3,2,1]$$$, $$$[5,2,3,4,1]$$$, $$$[5,2,1,3,4]$$$, $$$[5,2,1,4,3]$$$, $$$[5,2,1,4,3]$$$.In the second test case, the answer permutations for each $$$k$$$ are $$$[1,2,3,4]$$$, $$$[2,1,3,4]$$$, $$$[2,1,3,4]$$$, $$$[2,1,4,3]$$$, $$$[2,1,4,3]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f6d305ca", "template_md5": "35d339e4", "result": "You are given a permutation of numbers from 1 to $n$.  A subarray is called \"copium\" if you can rearrange the numbers in that subarray to make them consecutive.  \n\nFor each number $k$ from 0 to $n$, find the maximum number of \"copium\" subarrays you can make in the permutation if you are allowed to rearrange the last $n-k$ numbers in any way.\n\n**Input:**\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains the length of the permutation, $n$.\n    * The second line contains the permutation $a_1, a_2, ..., a_n$.\n\n**Output:**\n\nFor each test case, print $n+1$ numbers. The $k$-th number represents the maximum number of \"copium\" subarrays you can make when rearranging the last $n-k$ numbers."}, {"prompt_md5": "3e2f75f3", "template_md5": "465699a0", "result": "You are given a list of numbers.  For each possible length of a sublist within the original list, find the maximum number of ways to rearrange the sublist so that the numbers in the sublist are consecutive."}]}