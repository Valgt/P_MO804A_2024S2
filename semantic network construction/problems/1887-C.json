{"uid": "1887-C", "url": "https://codeforces.com/contest/1887/problem/C", "tags": ["binary search", " brute force", " constructive algorithms", " data structures", " greedy", " hashing", " two pointers"], "title": "1887-C", "statement": "C. Minimum Arraytime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputGiven an array $$$a$$$ of length $$$n$$$ consisting of integers. Then the following operation is sequentially applied to it $$$q$$$ times:Choose indices $$$l$$$ and $$$r$$$ ($$$1 \\\\le l \\\\le r \\\\le n$$$) and an integer $$$x$$$;Add $$$x$$$ to all elements of the array $$$a$$$ in the segment $$$[l, r]$$$. More formally, assign $$$a_i := a_i + x$$$ for all $$$l \\\\le i \\\\le r$$$.Let $$$b_j$$$ be the array $$$a$$$ obtained after applying the first $$$j$$$ operations ($$$0 \\\\le j \\\\le q$$$). Note that $$$b_0$$$ is the array $$$a$$$ before applying any operations.You need to find the lexicographically minimum$$$^{\\\\dagger}$$$ array among all arrays $$$b_j$$$.$$$^{\\\\dagger}$$$An array $$$x$$$ is lexicographically smaller than array $$$y$$$ if there is an index $$$i$$$ such that $$$x_i < y_i$$$, and $$$x_j = y_j$$$ for all $$$j < i$$$. In other words, for the first index $$$i$$$ where the arrays differ, $$$x_i < y_i$$$.InputEach test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 5 \\\\cdot 10^5$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 5 \\\\cdot 10^5$$$) — the length of array $$$a$$$.The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$-10^9 \\\\le a_i \\\\le 10^9$$$) — the elements of array $$$a$$$.The third line of each test case contains a single integer $$$q$$$ ($$$0 \\\\le q \\\\le 5 \\\\cdot 10^5$$$) — the number of operations on the array.In each of the next $$$q$$$ lines, there are three integers $$$l_j$$$, $$$r_j$$$, and $$$x_j$$$ $$$(1 \\\\le l_j \\\\le r_j \\\\le n, -10^9 \\\\le x_j \\\\le 10^9)$$$ — the description of each operation. The operations are given in the order they are applied.It is guaranteed that the sum of $$$n$$$ over all test cases and the sum of $$$q$$$ over all test cases do not exceed $$$5 \\\\cdot 10^5$$$.OutputFor each test case, output the lexicographically minimum array among all arrays $$$b_j$$$.ExampleInput241 2 3 421 4 01 3 -10052 1 2 5 432 4 32 5 -21 3 1Output-99 -98 -97 4  2 1 2 5 4NoteIn the first test case:$$$b_0 = [1,2,3,4]$$$;$$$b_1 = [1,2,3,4]$$$;$$$b_2 = [-99,-98,-97,4]$$$.Thus, the lexicographically minimum array is $$$b_2$$$.In the second test case, the lexicographically minimum array is $$$b_0$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e5e6d25b", "template_md5": "35d339e4", "result": "You are given an array of integers,  $a$ of length $n$. You will perform $q$ operations on this array. Each operation consists of choosing three integers $l$, $r$, and $x$  where $1 \\le l \\le r \\le n$ and adding $x$ to each element of the array from index $l$ to $r$ (inclusive).\n\nAfter each operation, you have a new array.  \n\nYour task is to find the lexicographically smallest array that results from any of these operations.\n\n**Lexicographically smallest** means that for the first index where the two arrays differ, the element in the smaller array is smaller. \n\n\nInput:\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains the length of the array, $n$.\n    * The second line contains the $n$ integers of the array $a$.\n    * The third line contains the number of operations, $q$.\n    * The next $q$ lines each contain three integers $l$, $r$, and $x$ describing an operation.\n\nOutput:\n\nFor each test case, output the lexicographically smallest array."}, {"prompt_md5": "03e51202", "template_md5": "465699a0", "result": "You are given a list of numbers. You can repeatedly choose a section of the list and add a value to all the numbers in that section.  Find the list that results in the smallest possible order of numbers after performing these operations."}]}