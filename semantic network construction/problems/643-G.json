{"uid": "643-G", "url": "https://codeforces.com/contest/643/problem/G", "tags": ["data structures"], "title": "643-G", "statement": "G. Choosing Adstime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputOne social network developer recently suggested a new algorithm of choosing ads for users.There arenslots which advertisers can buy. It is possible to buy a segment of consecutive slots at once. The more slots you own, the bigger are the chances your ad will be shown to users.Every time it is needed to choose ads to show, some segment of slots is picked by a secret algorithm. Then some advertisers are chosen. The only restriction is that it should be guaranteed for advertisers which own at leastp% of slots composing this segment that their ad will be shown.From the other side, users don't like ads. So it was decided to show no more thanads at once. You are asked to develop a system to sell segments of slots and choose ads in accordance with the rules described above.InputThe first line of the input contains three integersn,mandp(1 ≤n,m≤ 150 000, 20 ≤p≤ 100) — the number of slots, the number of queries to your system and threshold for which display of the ad is guaranteed.Next line containsnintegersai(1 ≤ai≤ 150 000), where thei-th number means id of advertiser who currently owns thei-th slot.Nextmlines contain queries descriptions. Each description is of one of the following forms:1 l r id(1 ≤l≤r≤n, 1 ≤id≤ 150 000) — advertiseridbought all slots in a range fromltorinclusive;2 l r(1 ≤l≤r) — you need to choose advertisers for segment[l,r].OutputFor each query of the second type answer should be printed in a separate line. First integer of the answer should be the number of advertisements that will be shown. Nextcntintegers should be advertisers' ids.It is allowed to print one advertiser more than once, but each advertiser that owns at leastslots of the segment fromltorshould be in your answer.ExampleInput5 9 331 2 1 3 32 1 52 1 52 1 32 3 31 2 4 52 1 52 3 51 4 5 12 1 5Output3 1 2 32 1 32 2 13 1 1000 10001 52 5 32 1 5NoteSamples demonstrate that you actually have quite a lot of freedom in choosing advertisers.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "4ff7f97e", "template_md5": "35d339e4", "result": "There are $n$ slots available for advertising. Advertisers can buy consecutive groups of slots. The more slots an advertiser owns, the higher the chance their ad will be shown.\n\nA system needs to be designed to:\n\n1. **Sell segments of slots:** Advertisers can buy ranges of slots.\n2. **Choose ads:**  When a segment of slots is selected, the system must choose advertisers to display ads for.\n\n**Rules:**\n\n*  At least $p\\%$ of the slots in the selected segment must be owned by advertisers whose ads are shown.\n*  No more than $m$ ads can be shown at once.\n\n**Input:**\n\n*  $n$: The number of slots.\n*  $m$: The number of queries (requests to choose ads).\n*  $p$: The minimum percentage of slots owned by advertisers whose ads must be shown.\n*  A list of $n$ integers, where each integer represents the advertiser who owns the corresponding slot.\n*  $m$ queries, each of the following forms:\n    *  `1 l r id`: Advertiser `id` buys all slots from index `l` to `r` (inclusive).\n    *  `2 l r`: Choose ads for the segment of slots from index `l` to `r` (inclusive).\n\n**Output:**\n\nFor each query of type `2`, output:\n\n*  The number of ads to be shown.\n*  A list of advertiser IDs whose ads will be shown."}, {"prompt_md5": "f8de54d2", "template_md5": "465699a0", "result": "You are given a set of slots and a percentage threshold. Advertisers can buy groups of consecutive slots.  \n\nFor each query, you are given a range of slots. You need to choose advertisers whose bought slots cover at least the threshold percentage of that range.  The output should include the number of advertisers chosen and their IDs.  You can choose the same advertiser multiple times."}]}