{"uid": "1369-E", "url": "https://codeforces.com/contest/1369/problem/E", "tags": ["data structures", " dfs and similar", " greedy", " implementation", " sortings"], "title": "1369-E", "statement": "E. DeadLeetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLee bought some food for dinner time, but Lee's friends eat dinner in a deadly way. Lee is so scared, he doesn't want to die, at least not before seeing Online IOI 2020...There are $$$n$$$ different types of food and $$$m$$$ Lee's best friends. Lee has $$$w_i$$$ plates of the $$$i$$$-th type of food and each friend has two different favorite types of food: the $$$i$$$-th friend's favorite types of food are $$$x_i$$$ and $$$y_i$$$ ($$$x_i \\\\ne y_i$$$).Lee will start calling his friends one by one. Whoever is called will go to the kitchen and will try to eatone plate of each of his favorite food types. Each of the friends will go to the kitchen exactly once.The only problem is the following: if a friend will eat at least one plate of food (in total) then he will be harmless. But if there is nothing left for him to eat (neither $$$x_i$$$ nor $$$y_i$$$), he will eat Lee instead $$$\\\\times\\\\_\\\\times$$$.Lee can choose the order of friends to call, so he'd like to determine if he can survive dinner or not. Also, he'd like to know the order itself.InputThe first line contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\\\le n \\\\le 10^5$$$; $$$1 \\\\le m \\\\le 2 \\\\cdot 10^5$$$) — the number of different food types and the number of Lee's friends.The second line contains $$$n$$$ integers $$$w_1, w_2, \\\\ldots, w_n$$$ ($$$0 \\\\le w_i \\\\le 10^6$$$) — the number of plates of each food type.The $$$i$$$-th line of the next $$$m$$$ lines contains two integers $$$x_i$$$ and $$$y_i$$$ ($$$1 \\\\le x_i, y_i \\\\le n$$$; $$$x_i \\\\ne y_i$$$) — the favorite types of food of the $$$i$$$-th friend.OutputIf Lee can survive the dinner then printALIVE(case insensitive), otherwise printDEAD(case insensitive).Also, if he can survive the dinner, print the order Lee should call friends. If there are multiple valid orders, print any of them.ExamplesInput3 3 1 2 1 1 2 2 3 1 3OutputALIVE 3 2 1Input3 2 1 1 0 1 2 1 3OutputALIVE 2 1Input4 4 1 2 0 1 1 3 1 2 2 3 2 4OutputALIVE 1 3 2 4Input5 5 1 1 1 2 1 3 4 1 2 2 3 4 5 4 5OutputALIVE 5 4 1 3 2Input4 10 2 4 1 4 3 2 4 2 4 1 3 1 4 1 1 3 3 2 2 1 3 1 2 4OutputDEADNoteIn the first example, any of the following orders of friends are correct : $$$[1, 3, 2]$$$, $$$[3, 1, 2]$$$, $$$[2, 3, 1]$$$, $$$[3, 2, 1]$$$.In the second example, Lee should call the second friend first (the friend will eat a plate of food $$$1$$$) and then call the first friend (the friend will eat a plate of food $$$2$$$). If he calls the first friend sooner than the second one, then the first friend will eat one plate of food $$$1$$$ and food $$$2$$$ and there will be no food left for the second friend to eat.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a9d89450", "template_md5": "35d339e4", "result": "There are $n$ types of food and $m$ friends.  Each type of food has $w_i$ plates available. Each friend has two favorite types of food, $x_i$ and $y_i$.\n\nFriends will eat one plate of each of their favorite foods if available. If a friend cannot eat any of their favorite foods, they will eat the person who is organizing the dinner.\n\nThe person organizing the dinner can choose the order in which to call the friends.  Determine if the person can survive the dinner and, if so, what order to call the friends in."}, {"prompt_md5": "8dfb7c1d", "template_md5": "465699a0", "result": "There are different types of food and friends who each have two favorite types. Each friend eats one plate of each of their favorite foods if available. If a friend can't eat any of their favorites, they will eat you. You can choose the order you call the friends. Can you call them in an order so that everyone eats their favorite foods and you survive? If so, what is the order?"}]}