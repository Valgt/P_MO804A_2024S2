{"uid": "628-C", "url": "https://codeforces.com/contest/628/problem/C", "tags": ["greedy", " strings"], "title": "628-C", "statement": "C. Bear and String Distancetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLimak is a little polar bear. He likesnicestrings — strings of lengthn, consisting of lowercase English letters only.The distance between two letters is defined as the difference between their positions in the alphabet. For example,, and.Also, the distance between two nice strings is defined as the sum of distances of corresponding letters. For example,, and.Limak gives you a nice stringsand an integerk. He challenges you to find any nice strings'that. Find anys'satisfying the given conditions, or print \"-1\" if it's impossible to do so.As input/output can reach huge size it is recommended to use fast input/output methods: for example, prefer to usegets/scanf/printfinstead ofgetline/cin/coutin C++, prefer to useBufferedReader/PrintWriterinstead ofScanner/System.outinJava.InputThe first line contains two integersnandk(1 ≤n≤ 105,0 ≤k≤ 106).The second line contains a stringsof lengthn, consisting of lowercase English letters.OutputIf there is no string satisfying the given conditions then print \"-1\" (without the quotes).Otherwise, print any nice strings'that.ExamplesInput4 26bearOutputroarInput2 7afOutputdbInput3 1000heyOutput-1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6eb376ad", "template_md5": "465699a0", "result": "You are given a string of lowercase letters and a number. Find another string of the same length that has a total distance sum of the corresponding letters equal to the given number. If no such string exists, print -1."}, {"prompt_md5": "0b0d4976", "template_md5": "35d339e4", "result": "You are given a string of length $n$ and an integer $k$.  You need to find another string of the same length that satisfies the following conditions:\n\n* The new string also consists of lowercase English letters.\n* The \"distance\" between two strings is calculated by summing the distances between corresponding letters. The distance between two letters is the difference in their positions in the alphabet (e.g., 'a' and 'b' have a distance of 1).\n\nThe total distance between the original string and the new string must be equal to $k$.\n\nIf no such string exists, print \"-1\"."}]}