{"uid": "91-A", "url": "https://codeforces.com/contest/91/problem/A", "tags": ["greedy", " strings"], "title": "91-A", "statement": "A. Newspaper Headlinetime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutA newspaper is published in Walrusland. Its heading iss1, it consists of lowercase Latin letters. Fangy the little walrus wants to buy several such newspapers, cut out their headings, glue them one to another in order to get one big string. After that walrus erase several letters from this string in order to get a new words2. It is considered that when Fangy erases some letter, there's no whitespace formed instead of the letter. That is, the string remains unbroken and it still only consists of lowercase Latin letters.For example, the heading is \"abc\". If we take two such headings and glue them one to the other one, we get \"abcabc\". If we erase the letters on positions1and5, we get a word \"bcac\".Which least number of newspaper headingss1will Fangy need to glue them, erase several letters and get words2?InputThe input data contain two lines. The first line contain the headings1, the second line contains the words2. The lines only consist of lowercase Latin letters (1 ≤ |s1| ≤ 104, 1 ≤ |s2| ≤ 106).OutputIf it is impossible to get the words2in the above-described manner, print \"-1\" (without the quotes). Otherwise, print the least number of newspaper headingss1, which Fangy will need to receive the words2.ExamplesInputabcxyzOutput-1InputabcddabcOutput2", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ae7e70f3", "template_md5": "35d339e4", "result": "You are given two strings, $s1$ and $s2$.  $s1$ represents the heading of a newspaper.  You can buy multiple copies of the newspaper, glue their headings together, and then remove some letters from the resulting string to form $s2$. What is the minimum number of newspapers you need to buy to achieve this? If it's impossible, print -1."}, {"prompt_md5": "9a931415", "template_md5": "465699a0", "result": "Given a target word, find the minimum number of times you need to combine and shorten a given word to create the target word.  If it's impossible, output -1."}]}