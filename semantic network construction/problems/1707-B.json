{"uid": "1707-B", "url": "https://codeforces.com/contest/1707/problem/B", "tags": ["brute force", " data structures", " implementation", " sortings"], "title": "1707-B", "statement": "B. Difference Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array $$$a$$$ consisting of $$$n$$$ non-negative integers. It is guaranteed that $$$a$$$ is sorted from small to large.For each operation, we generate a new array $$$b_i=a_{i+1}-a_{i}$$$ for $$$1 \\\\le i < n$$$. Then we sort $$$b$$$ from small to large, replace $$$a$$$ with $$$b$$$, and decrease $$$n$$$ by $$$1$$$.After performing $$$n-1$$$ operations, $$$n$$$ becomes $$$1$$$. You need to output the only integer in array $$$a$$$ (that is to say, you need to output $$$a_1$$$).InputThe input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1\\\\le t\\\\le 10^4$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains one integer $$$n$$$ ($$$2\\\\le n\\\\le 10^5$$$) — the length of the array $$$a$$$.The second line contains $$$n$$$ integers $$$a_1,a_2,\\\\dots,a_n$$$ ($$$0\\\\le a_1\\\\le \\\\ldots\\\\le a_n \\\\le 5\\\\cdot 10^5$$$) — the array $$$a$$$.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2.5\\\\cdot 10^5$$$, and the sum of $$$a_n$$$ over all test cases does not exceed $$$5\\\\cdot 10^5$$$.OutputFor each test case, output the answer on a new line.ExampleInput531 10 10044 8 9 1350 0 0 8 1362 4 8 16 32 6470 0 0 0 0 0 0Output81 3 1 2 0NoteTo simplify the notes, let $$$\\\\operatorname{sort}(a)$$$ denote the array you get by sorting $$$a$$$ from small to large.In the first test case, $$$a=[1,10,100]$$$ at first. After the first operation, $$$a=\\\\operatorname{sort}([10-1,100-10])=[9,90]$$$. After the second operation, $$$a=\\\\operatorname{sort}([90-9])=[81]$$$.In the second test case, $$$a=[4,8,9,13]$$$ at first. After the first operation, $$$a=\\\\operatorname{sort}([8-4,9-8,13-9])=[1,4,4]$$$. After the second operation, $$$a=\\\\operatorname{sort}([4-1,4-4])=[0,3]$$$. After the last operation, $$$a=\\\\operatorname{sort}([3-0])=[3]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "7ec1ced8", "template_md5": "35d339e4", "result": "You are given a sorted array of non-negative integers.  You perform the following operation repeatedly until the array has only one element:\n\n1. Create a new array  $b$ where each element is the difference between consecutive elements of the original array ($b_i = a_{i+1} - a_i$ for $1 \\le i < n$).\n2. Sort the new array $b$ in ascending order.\n3. Replace the original array with the sorted array $b$.\n4. Decrease the size of the array by 1.\n\nYour task is to determine the final element of the array after all operations are complete.\n\n**Input:**\n\n* Multiple test cases.\n* For each test case:\n    * An integer $t$ representing the number of test cases ($1 \\le t \\le 10^4$).\n    * An integer $n$ representing the length of the array ($2 \\le n \\le 10^5$).\n    * $n$ integers $a_1, a_2, ..., a_n$ ($0 \\le a_i \\le 5 \\cdot 10^5$) representing the sorted array.\n\n**Output:**\n\n* For each test case, output the final element of the array on a new line."}, {"prompt_md5": "8e4d331f", "template_md5": "465699a0", "result": "You are given a sorted list of numbers.  Repeatedly calculate the differences between consecutive numbers, sort the differences, and replace the original list with the sorted differences.  After doing this  $n-1$ times, what is the only number remaining in the list?"}]}