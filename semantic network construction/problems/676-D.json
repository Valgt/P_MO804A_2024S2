{"uid": "676-D", "url": "https://codeforces.com/contest/676/problem/D", "tags": ["graphs", " implementation", " shortest paths"], "title": "676-D", "statement": "D. Theseus and labyrinthtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTheseus has just arrived to Crete to fight Minotaur. He found a labyrinth that has a form of a rectangular field of sizen×mand consists of blocks of size1 × 1.Eachblock of the labyrinth has a button that rotatesallblocks90degrees clockwise. Each block rotates around its center and doesn't change its position in the labyrinth. Also, each block has some number of doors (possibly none). In one minute, Theseus can either push the button in order to rotate all the blocks90degrees clockwise or pass to the neighbouring block. Theseus can go from blockAto some neighbouring blockBonly if blockAhas a door that leads to blockBand blockBhas a door that leads to blockA.Theseus found an entrance to labyrinth and is now located in block(xT,yT)— the block in the rowxTand columnyT. Theseus know that the Minotaur is hiding in block(xM,yM)and wants to know the minimum number of minutes required to get there.Theseus is a hero, not a programmer, so he asks you to help him.InputThe first line of the input contains two integersnandm(1 ≤n,m≤ 1000) — the number of rows and the number of columns in labyrinth, respectively.Each of the followingnlines containsmcharacters, describing the blocks of the labyrinth. The possible characters are:«+» means this block has4doors (one door to each neighbouring block);«-» means this block has2doors — to the left and to the right neighbours;«|» means this block has2doors — to the top and to the bottom neighbours;«^» means this block has1door — to the top neighbour;«>» means this block has1door — to the right neighbour;«<» means this block has1door — to the left neighbour;«v» means this block has1door — to the bottom neighbour;«L» means this block has3doors — to all neighbours except left one;«R» means this block has3doors — to all neighbours except right one;«U» means this block has3doors — to all neighbours except top one;«D» means this block has3doors — to all neighbours except bottom one;«*» means this block is a wall and has no doors.Left, right, top and bottom are defined from representing labyrinth as a table, where rows are numbered from1tonfrom top to bottom and columns are numbered from1tomfrom left to right.Next line contains two integers — coordinates of the block(xT,yT)(1 ≤xT≤n,1 ≤yT≤m), where Theseus is initially located.Last line contains two integers — coordinates of the block(xM,yM)(1 ≤xM≤n,1 ≤yM≤m), where Minotaur hides.It's guaranteed that both the block where Theseus starts and the block where Minotaur is hiding have at least one door. Theseus and Minotaur may be initially located at the same block.OutputIf Theseus is not able to get to Minotaur, then print-1in the only line of the output. Otherwise, print the minimum number of minutes required to get to the block where Minotaur is hiding.ExamplesInput2 2+**U1 12 2Output-1Input2 3<><><>1 12 1Output4NoteAssume that Theseus starts at the block(xT,yT)at the moment0.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e17617ce", "template_md5": "35d339e4", "result": "You are given a rectangular grid of size $n \\times m$. Each cell in the grid has a button that rotates all cells in the grid 90 degrees clockwise.  \n\nEach cell can also have doors connecting it to its neighboring cells (up, down, left, right). The number of doors a cell has is represented by different characters:\n\n* `+`: 4 doors\n* `-`: 2 doors (left and right)\n* `|`: 2 doors (top and bottom)\n* `^`: 1 door (top)\n* `>`: 1 door (right)\n* `<`: 1 door (left)\n* `v`: 1 door (bottom)\n* `L`: 3 doors (all except left)\n* `R`: 3 doors (all except right)\n* `U`: 3 doors (all except top)\n* `D`: 3 doors (all except bottom)\n* `*`: No doors\n\nYou are given the starting position of the player ($x_T$, $y_T$) and the position of the target ($x_M$, $y_M$). \n\nDetermine the minimum number of rotations required for the player to reach the target, or output -1 if it's impossible."}, {"prompt_md5": "85c97e4c", "template_md5": "465699a0", "result": "You are given a grid of rooms connected by doors. Each room can be rotated 90 degrees. You start in one room and need to find the shortest path to a target room.  You can either rotate a section of the grid or move to a connected room.  If there is no path, output -1."}]}