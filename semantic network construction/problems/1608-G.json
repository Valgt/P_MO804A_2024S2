{"uid": "1608-G", "url": "https://codeforces.com/contest/1608/problem/G", "tags": ["binary search", " data structures", " dfs and similar", " hashing", " string suffix structures", " strings", " trees"], "title": "1608-G", "statement": "G. Alphabetic Treetime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given $$$m$$$ strings and a tree on $$$n$$$ nodes. Each edge has some letter written on it.You have to answer $$$q$$$ queries. Each query is described by $$$4$$$ integers $$$u$$$, $$$v$$$, $$$l$$$ and $$$r$$$. The answer to the query is the total number of occurrences of $$$str(u,v)$$$ in strings with indices from $$$l$$$ to $$$r$$$. $$$str(u,v)$$$ is defined as the string that is made by concatenating letters written on the edges on the shortest path from $$$u$$$ to $$$v$$$ (in order that they are traversed).InputThe first line of the input contains three integers $$$n$$$, $$$m$$$ and $$$q$$$ ($$$2 \\\\le n \\\\le 10^5$$$, $$$1 \\\\le m,q \\\\le 10^5$$$).The $$$i$$$-th of the following $$$n-1$$$ lines contains two integers $$$u_i, v_i$$$ and a lowercase Latin letter $$$c_i$$$ ($$$1 \\\\le u_i, v_i \\\\le n$$$, $$$u_i \\\\neq v_i$$$), denoting the edge between nodes $$$u_i, v_i$$$ with a character $$$c_i$$$ on it.It's guaranteed that these edges form a tree.The following $$$m$$$ lines contain the strings consisting of lowercase Latin letters. The total length of those strings does not exceed $$$10^5$$$.Then $$$q$$$ lines follow, each containing four integers $$$u$$$, $$$v$$$, $$$l$$$ and $$$r$$$ ($$$1 \\\\le u,v \\\\le n$$$, $$$u \\\\neq v$$$, $$$1 \\\\le l \\\\le r \\\\le m$$$), denoting the queries.OutputFor each query print a single integer â€” the answer to the query.ExamplesInput2 5 3 1 2 a aab abab aaa b a 2 1 1 5 1 2 1 3 2 1 3 5Output8 7 4Input9 5 6 1 2 a 2 7 c 1 3 b 3 4 b 4 6 b 3 5 a 5 8 b 5 9 c ababa cabbb bac bbbac abacaba 2 7 1 4 2 5 1 5 6 3 4 4 6 9 4 5 5 7 3 5 5 3 1 5Output3 4 2 1 1 10", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "7abad112", "template_md5": "35d339e4", "result": "You are given a tree with $n$ nodes and $m$ strings. Each edge in the tree has a letter on it. \n\nYou need to answer $q$ queries. Each query is defined by four numbers $u$, $v$, $l$, and $r$.  \n\nFor each query, you need to count how many times the string formed by concatenating the letters on the shortest path from node $u$ to node $v$ appears in the strings with indices from $l$ to $r$. \n\n**Input:**\n\n* The first line contains three integers: $n$, $m$, and $q$.\n* The next $n-1$ lines each contain three things: two integers $u_i$ and $v_i$ and a lowercase letter $c_i$. These represent the edges of the tree.\n* The next $m$ lines each contain a string of lowercase letters.\n* The next $q$ lines each contain four integers: $u$, $v$, $l$, and $r$.\n\n**Output:**\n\nFor each query, print a single integer representing the count of occurrences of the specified string."}, {"prompt_md5": "33712dad", "template_md5": "465699a0", "result": "You are given a tree and a set of strings.  You need to answer queries about how many times a specific substring appears within a range of the given strings. The substring is formed by reading the letters on the edges of the tree along the shortest path between two given nodes."}]}