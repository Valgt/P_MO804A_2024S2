{"uid": "538-D", "url": "https://codeforces.com/contest/538/problem/D", "tags": ["brute force", " constructive algorithms", " implementation"], "title": "538-D", "statement": "D. Weird Chesstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIgor has been into chess for a long time and now he is sick of the game by the ordinary rules. He is going to think of new rules of the game and become world famous.Igor's chessboard is a square of sizen×ncells. Igor decided that simple rules guarantee success, that's why his game will have only one type of pieces. Besides, all pieces in his game are of the same color. The possible moves of a piece are described by a set ofshift vectors. The next passage contains a formal description of available moves.Let the rows of the board be numbered from top to bottom and the columns be numbered from left to right from 1 ton. Let's assign to each square a pair of integers(x,y)— the number of the corresponding column and row. Each of the possible moves of the piece is defined by a pair of integers(dx,dy); using this move, the piece moves from the field(x,y)to the field(x+dx,y+dy). You can perform the move if the cell(x+dx,y+dy)is within the boundaries of the board and doesn't contain another piece. Pieces that stand on the cells other than(x,y)and(x+dx,y+dy)are not important when considering the possibility of making the given move (for example, like when a knight moves in usual chess).Igor offers you to find out what moves his chess piece can make. He placed several pieces on the board and for each unoccupied square he told you whether it is attacked by any present piece (i.e. whether some of the pieces on the field can move to that cell). Restore a possible set of shift vectors of the piece, or else determine that Igor has made a mistake and such situation is impossible for any set of shift vectors.InputThe first line contains a single integern(1 ≤n≤ 50).The nextnlines containncharacters each describing the position offered by Igor. Thej-th character of thei-th string can have the following values:o— in this case the field(i,j)is occupied by a piece and the field may or may not be attacked by some other piece;x— in this case field(i,j)is attacked by some piece;.— in this case field(i,j)isn't attacked by any piece.It is guaranteed that there is at least one piece on the board.OutputIf there is a valid set of moves, in the first line print a single word 'YES' (without the quotes). Next, print the description of the set of moves of a piece in the form of a(2n- 1) × (2n- 1)board, the center of the board has a piece and symbols 'x' mark cells that are attacked by it, in a format similar to the input. See examples of the output for a full understanding of the format. If there are several possible answers, print any of them.If a valid set of moves does not exist, print a single word 'NO'.ExamplesInput5oxxxxx...xx...xx...xxxxxoOutputYES....x........x........x........x....xxxxoxxxx....x........x........x........x....Input6.x.x..x.x.x..xo..xx..ox..x.x.x..x.x.OutputYES.....................................x.x.......x...x........o........x...x.......x.x.....................................Input3o.xoxxo.xOutputNONoteIn the first sample test the piece is a usual chess rook, and in the second sample test the piece is a usual chess knight.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6a952aac", "template_md5": "465699a0", "result": "Given a board with pieces and marked attackable squares, determine if a set of valid moves exists for a single type of piece that could create this board state. If possible, show one such set of moves."}, {"prompt_md5": "7d744d41", "template_md5": "35d339e4", "result": "You are given a square chessboard of size $n \\times n$.  Some cells on the board are occupied by pieces, and some are not.  For each unoccupied cell, you are told whether it is attacked by a piece (i.e., a piece could move to that cell).\n\nYour task is to determine a possible set of moves for a single type of piece on the board.  The moves are described by pairs of integers $(dx, dy)$, where a piece at position $(x, y)$ can move to $(x + dx, y + dy)$ if that cell is on the board and unoccupied.\n\nIf a valid set of moves exists, output \"YES\" followed by a representation of the possible moves on an $ (2n-1) \\times (2n-1)$ board. The center of the board represents the starting position of the piece, and 'x' marks cells that are attacked by the piece.\n\nIf no valid set of moves exists, output \"NO\"."}]}