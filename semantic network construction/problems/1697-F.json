{"uid": "1697-F", "url": "https://codeforces.com/contest/1697/problem/F", "tags": ["2-sat", " constructive algorithms", " graphs", " implementation"], "title": "1697-F", "statement": "F. Too Many Constraintstime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are asked to build an array $$$a$$$, consisting of $$$n$$$ integers, each element should be from $$$1$$$ to $$$k$$$.The array should be non-decreasing ($$$a_i \\\\le a_{i+1}$$$ for all $$$i$$$ from $$$1$$$ to $$$n-1$$$).You are also given additional constraints on it. Each constraint is of one of three following types:$$$1~i~x$$$: $$$a_i$$$should notbe equal to $$$x$$$;$$$2~i~j~x$$$: $$$a_i + a_j$$$ should be less than or equal to $$$x$$$;$$$3~i~j~x$$$: $$$a_i + a_j$$$ should be greater than or equal to $$$x$$$.Build any non-decreasing array that satisfies all constraints or report that no such array exists.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of testcases.The first line of each testcase contains three integers $$$n, m$$$ and $$$k$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^4$$$; $$$0 \\\\le m \\\\le 2 \\\\cdot 10^4$$$; $$$2 \\\\le k \\\\le 10$$$).The $$$i$$$-th of the next $$$m$$$ lines contains a description of a constraint. Each constraint is of one of three following types:$$$1~i~x$$$ ($$$1 \\\\le i \\\\le n$$$; $$$1 \\\\le x \\\\le k$$$): $$$a_i$$$should notbe equal to $$$x$$$;$$$2~i~j~x$$$ ($$$1 \\\\le i < j \\\\le n$$$; $$$2 \\\\le x \\\\le 2 \\\\cdot k$$$): $$$a_i + a_j$$$ should be less than or equal to $$$x$$$;$$$3~i~j~x$$$ ($$$1 \\\\le i < j \\\\le n$$$; $$$2 \\\\le x \\\\le 2 \\\\cdot k$$$): $$$a_i + a_j$$$ should be greater than or equal to $$$x$$$.The sum of $$$n$$$ over all testcases doesn't exceed $$$2 \\\\cdot 10^4$$$. The sum of $$$m$$$ over all testcases doesn't exceed $$$2 \\\\cdot 10^4$$$.OutputFor each testcase, determine if there exists a non-decreasing array that satisfies all conditions. If there is no such array, then print-1. Otherwise, print any valid array — $$$n$$$ integers from $$$1$$$ to $$$k$$$.ExampleInput44 0 42 2 33 1 2 31 2 23 3 21 1 12 2 3 23 2 3 25 5 53 2 5 72 4 5 103 4 5 63 3 4 72 1 5 7Output1 2 3 4 1 3 -1 1 2 2 5 5", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "fd785d3f", "template_md5": "35d339e4", "result": "You are given a number $n$ and a number $k$. You need to create a list of $n$ numbers, where each number is between 1 and $k$. The list must be in non-decreasing order (each number is greater than or equal to the one before it).\n\nYou are also given a set of rules. Each rule is one of three types:\n\n* **Type 1:**  A specific number in the list ($a_i$) cannot be equal to a given number $x$.\n* **Type 2:** The sum of two specific numbers in the list ($a_i$ and $a_j$) must be less than or equal to a given number $x$.\n* **Type 3:** The sum of two specific numbers in the list ($a_i$ and $a_j$) must be greater than or equal to a given number $x$.\n\nDetermine if it is possible to create a list that follows all the rules. If it is possible, print any valid list. If it is not possible, print -1."}, {"prompt_md5": "287dba48", "template_md5": "465699a0", "result": "You need to create a list of numbers. The list must be in order from smallest to largest.  You are given rules about which numbers can be used and how they can be combined.  \n\nDetermine if it's possible to create a list following all the rules. If possible, show one example list. If not, say \"not possible\"."}]}