{"uid": "1919-E", "url": "https://codeforces.com/contest/1919/problem/E", "tags": ["combinatorics", " constructive algorithms", " dp", " implementation", " math"], "title": "1919-E", "statement": "E. Counting Prefixestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a hidden array $$$a$$$ of size $$$n$$$ consisting of only $$$1$$$ and $$$-1$$$. Let $$$p$$$ be the prefix sums of array $$$a$$$. More formally, $$$p$$$ is an array of length $$$n$$$ defined as $$$p_i = a_1 + a_2 + \\\\ldots + a_i$$$. Afterwards, array $$$p$$$ is sorted in non-decreasing order. For example, if $$$a = [1, -1, -1, 1, 1]$$$, then $$$p = [1, 0, -1, 0, 1]$$$ before sorting and $$$p = [-1, 0, 0, 1, 1]$$$ after sorting.You are given the prefix sum array $$$p$$$ after sorting, but you do not know what array $$$a$$$ is. Your task is to count the number of initial arrays $$$a$$$ such that the above process results in the given sorted prefix sum array $$$p$$$. As this number can be large, you are only required to find it modulo $$$998\\\\,244\\\\,353$$$.InputEach test contains multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 1000$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 5000$$$) — the size of the hidden array $$$a$$$.The second line of each test case contains $$$n$$$ integers $$$p_1, p_2, \\\\ldots, p_n$$$ ($$$|p_i| \\\\le n$$$) — the $$$n$$$ prefix sums of $$$a$$$ sorted in non-decreasing order.It is guaranteed that $$$p_1 \\\\le p_2 \\\\le \\\\ldots \\\\le p_n$$$.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$5000$$$.OutputFor each test case, output the answer modulo $$$998\\\\,244\\\\,353$$$.ExampleInput510113-1 1 25-1 0 0 1 15-4 -3 -3 -2 -1Output0 1 0 3 1NoteIn the first two test cases, the only possible arrays $$$a$$$ for $$$n = 1$$$ are $$$a = [1]$$$ and $$$a = [-1]$$$. Their respective sorted prefix sum arrays $$$p$$$ are $$$p = [1]$$$ and $$$p = [-1]$$$. Hence, there is no array $$$a$$$ that can result in the sorted prefix sum array $$$p = [0]$$$ and there is exactly $$$1$$$ array $$$a$$$ that can result in the sorted prefix sum array $$$p = [1]$$$.In the third test case, it can be proven that there is no array $$$a$$$ that could result in the sorted prefix sum array $$$p = [-1, 1, 2]$$$.In the fourth test case, the $$$3$$$ possible arrays $$$a$$$ that could result in the sorted prefix sum array $$$p = [-1, 0, 0, 1, 1]$$$ are:$$$a = [1, -1, 1, -1, -1]$$$. The prefix sum array before sorting is $$$p = [1, 0, 1, 0, -1]$$$, which after sorting gives $$$p = [-1, 0, 0, 1, 1]$$$.$$$a = [1, -1, -1, 1, 1]$$$. The prefix sum array before sorting is $$$p = [1, 0, -1, 0, 1]$$$, which after sorting gives $$$p = [-1, 0, 0, 1, 1]$$$.$$$a = [-1, 1, 1, -1, 1]$$$. The prefix sum array before sorting is $$$p = [-1, 0, 1, 0, 1]$$$, which after sorting gives $$$p = [-1, 0, 0, 1, 1]$$$.For the fifth test case, the only possible array $$$a$$$ that could result in the sorted prefix sum array $$$p = [-4, -3, -3, -2, -1]$$$ is $$$a = [-1, -1, -1, -1, 1]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e260f594", "template_md5": "35d339e4", "result": "You are given a sorted array $p$ of length $n$. This array represents the prefix sums of a hidden array $a$ of length $n$ where each element in $a$ is either 1 or -1.  \n\nYour task is to find the number of different arrays $a$ that could produce the given sorted array $p$. Since the number of possible arrays could be large, you only need to find the answer modulo 998244353. \n\n**Input:**\n\n* The first line contains the number of test cases $t$.\n* For each test case:\n    * The first line contains the length of the array $n$.\n    * The second line contains the $n$ elements of the sorted array $p$.\n\n**Output:**\n\nFor each test case, output the number of possible arrays $a$ modulo 998244353."}, {"prompt_md5": "7ca2bca6", "template_md5": "465699a0", "result": "You are given a sorted list of numbers. These numbers represent the sum of a series of 1s and -1s.  Your task is to figure out how many different combinations of 1s and -1s could have produced this sorted list.  The answer should be the number of combinations modulo 998244353."}]}