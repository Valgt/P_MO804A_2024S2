{"uid": "1764-C", "url": "https://codeforces.com/contest/1764/problem/C", "tags": ["graphs", " greedy"], "title": "1764-C", "statement": "C. Doremy's City Constructiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputDoremy's new city is under construction! The city can be regarded as a simple undirected graph with $$$n$$$ vertices. The $$$i$$$-th vertex has altitude $$$a_i$$$. Now Doremy is deciding which pairs of vertices should be connected with edges.Due to economic reasons, there should be no self-loops or multiple edges in the graph.Due to safety reasons, there should not bepairwise distinctvertices $$$u$$$, $$$v$$$, and $$$w$$$ such that $$$a_u \\\\leq a_v \\\\leq a_w$$$ and the edges $$$(u,v)$$$ and $$$(v,w)$$$ exist.Under these constraints, Doremy would like to know the maximum possible number of edges in the graph. Can you help her?Note that the constructed graph is allowed to be disconnected.InputThe input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1\\\\le t\\\\le 10^4$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 2\\\\cdot 10^5$$$) — the number of vertices.The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1\\\\le a_i\\\\le 10^6$$$) — the altitudes of each vertex.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output the maximum possible number of edges in the graph.ExampleInput442 2 3 165 2 3 1 5 2127 2 4 9 1 4 6 3 7 4 2 341000000 1000000 1000000 1000000Output3 9 35 2NoteIn the first test case, there can only be at most $$$3$$$ edges in the graph. A possible construction is to connect $$$(1,3)$$$, $$$(2,3)$$$, $$$(3,4)$$$. In the picture below the red number above node $$$i$$$ is $$$a_i$$$.The following list shows all such $$$u$$$, $$$v$$$, $$$w$$$ that the edges $$$(u,v)$$$ and $$$(v,w)$$$ exist.$$$u=1$$$, $$$v=3$$$, $$$w=2$$$;$$$u=1$$$, $$$v=3$$$, $$$w=4$$$;$$$u=2$$$, $$$v=3$$$, $$$w=1$$$;$$$u=2$$$, $$$v=3$$$, $$$w=4$$$;$$$u=4$$$, $$$v=3$$$, $$$w=1$$$;$$$u=4$$$, $$$v=3$$$, $$$w=2$$$.Another possible construction is to connect $$$(1,4)$$$, $$$(2,4)$$$, $$$(3,4)$$$.An unacceptable construction is to connect $$$(1,3)$$$, $$$(2,3)$$$, $$$(2,4)$$$, $$$(3,4)$$$. Because when $$$u=4$$$, $$$v=2$$$, $$$w=3$$$, $$$a_u\\\\le a_v \\\\le a_w$$$ holds, and the respective edges exist.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "efb15e48", "template_md5": "35d339e4", "result": "You are given a list of $n$ integers, $a_1, a_2, ..., a_n$, representing the altitudes of $n$ vertices. You need to determine the maximum number of edges you can connect these vertices with, following these rules:\n\n* There can be no self-loops (connecting a vertex to itself).\n* There can be no multiple edges (connecting two vertices with more than one edge).\n* For any three distinct vertices $u$, $v$, and $w$, if $a_u \\le a_v \\le a_w$ and there are edges $(u,v)$ and $(v,w)$, then there cannot be an edge $(u,w)$.\n\nThe resulting graph can be disconnected (not all vertices need to be connected). \n\n\nOutput the maximum number of edges possible."}, {"prompt_md5": "03c9fc72", "template_md5": "465699a0", "result": "You are given a list of numbers representing the heights of buildings. You need to connect some of the buildings with roads, but there are rules:\n\n* You can't connect a building to itself.\n* You can't have multiple roads between the same two buildings.\n* If you connect building A to building B, and building B to building C, then building A must be shorter than building B, and building B must be shorter than building C.\n\nFind the maximum number of roads you can build following these rules."}]}