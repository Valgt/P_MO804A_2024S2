{"uid": "1672-B", "url": "https://codeforces.com/contest/1672/problem/B", "tags": ["constructive algorithms", " implementation"], "title": "1672-B", "statement": "B. I love AAABtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's call a stringgoodif its length is at least $$$2$$$ and all of its characters are $$$\\\\texttt{A}$$$ except for the last character which is $$$\\\\texttt{B}$$$. The good strings are $$$\\\\texttt{AB},\\\\texttt{AAB},\\\\texttt{AAAB},\\\\ldots$$$. Note that $$$\\\\texttt{B}$$$ isnota good string.You are given an initially empty string $$$s_1$$$.You can perform the following operation any number of times:Choose any position of $$$s_1$$$ and insert some good string in that position.Given a string $$$s_2$$$, can we turn $$$s_1$$$ into $$$s_2$$$ after some number of operations?InputEach test contains multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$) â€” the number of test cases. The description of the test cases follows.The first line of each test case contains a single string $$$s_2$$$ ($$$1 \\\\leq |s_2| \\\\leq 2 \\\\cdot 10^5$$$).It is guaranteed that $$$s_2$$$ consists of only the characters $$$\\\\texttt{A}$$$ and $$$\\\\texttt{B}$$$.It is guaranteed that the sum of $$$|s_2|$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, print \"YES\" (without quotes) if we can turn $$$s_1$$$ into $$$s_2$$$ after some number of operations, and \"NO\" (without quotes) otherwise.You can output \"YES\" and \"NO\" in any case (for example, strings \"yEs\", \"yes\" and \"Yes\" will be recognized as a positive response).ExampleInput4AABABABBAAAAAAAABAOutputYES NO YES NONoteIn the first test case, we transform $$$s_1$$$ as such: $$$\\\\varnothing \\\\to \\\\color{red}{\\\\texttt{AAB}} \\\\to \\\\texttt{A}\\\\color{red}{\\\\texttt{AB}}\\\\texttt{AB}$$$.In the third test case, we transform $$$s_1$$$ as such: $$$\\\\varnothing \\\\to \\\\color{red}{\\\\texttt{AAAAAAAAB}}$$$.In the second and fourth test case, it can be shown that it is impossible to turn $$$s_1$$$ into $$$s_2$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "bc46db30", "template_md5": "35d339e4", "result": "You are given an initially empty string. You can add a string of \"A\"s followed by a \"B\" (like \"AB\", \"AAB\", \"AAAB\", etc.) to any position in the string. \n\nGiven a string, determine if you can create that string by repeatedly adding these allowed strings to the empty string."}, {"prompt_md5": "161b71e9", "template_md5": "465699a0", "result": "You have an empty string. You can add a string of \"A\"s followed by a \"B\" to any position in the string.  Given a target string, can you create the target string using this operation?"}]}