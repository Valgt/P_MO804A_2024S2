{"uid": "1676-C", "url": "https://codeforces.com/contest/1676/problem/C", "tags": ["brute force", " greedy", " implementation", " implementation", " math", " strings"], "title": "1676-C", "statement": "C. Most Similar Wordstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given $$$n$$$ words ofequallength $$$m$$$, consisting of lowercase Latin alphabet letters. The $$$i$$$-th word is denoted $$$s_i$$$.In one move you can chooseany position in any single wordand change the letter at that position to the previous or next letter in alphabetical order. For example:you can change 'e' to 'd' or to 'f';'a' can only be changed to 'b';'z' can only be changed to 'y'.Thedifferencebetween two words is theminimumnumber of moves required to make them equal. For example, thedifferencebetween \"best\" and \"cost\" is $$$1 + 10 + 0 + 0 = 11$$$.Find the minimumdifferenceof $$$s_i$$$ and $$$s_j$$$ such that $$$(i < j)$$$. In other words, find the minimumdifferenceover all possible pairs of the $$$n$$$ words.InputThe first line of the input contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 100$$$) — the number of test cases. The description of test cases follows.The first line of each test case contains $$$2$$$ integers $$$n$$$ and $$$m$$$ ($$$2 \\\\leq n \\\\leq 50$$$, $$$1 \\\\leq m \\\\leq 8$$$) — the number of strings and their length respectively.Then follows $$$n$$$ lines, the $$$i$$$-th of which containing a single string $$$s_i$$$ of length $$$m$$$, consisting of lowercase Latin letters.OutputFor each test case, print a single integer — the minimumdifferenceover all possible pairs of the given strings.ExampleInput62 4bestcost6 3abbzbabefcduooozzz2 7aaabbbcbbaezfe3 2ababab2 8aaaaaaaazzzzzzzz3 1auyOutput11 8 35 0 200 4NoteFor the second test case, one can show that the best pair is (\"abb\",\"bef\"), which hasdifferenceequal to $$$8$$$, which can be obtained in the following way: change the first character of the first string to 'b' in one move, change the second character of the second string to 'b' in $$$3$$$ moves and change the third character of the second string to 'b' in $$$4$$$ moves, thus making in total $$$1 + 3 + 4 = 8$$$ moves.For the third test case, there is only one possible pair and it can be shown that the minimum amount of moves necessary to make the strings equal is $$$35$$$.For the fourth test case, there is a pair of strings which is already equal, so the answer is $$$0$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "fc7be0ba", "template_md5": "35d339e4", "result": "You are given $n$ words, each of length $m$.  Each word consists of lowercase letters.\n\nYou can change a letter in a word to the letter before or after it in the alphabet (e.g., 'e' can be changed to 'd' or 'f').\n\nThe *difference* between two words is the fewest changes needed to make them the same.\n\nFind the smallest difference between *any two different* words."}, {"prompt_md5": "2a9fb59d", "template_md5": "465699a0", "result": "You are given a list of words of the same length.  Find the two words in the list that are closest to each other, and determine the fewest changes needed to make them identical.  Each change involves replacing a letter with the letter before or after it in the alphabet."}]}