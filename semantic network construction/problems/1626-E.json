{"uid": "1626-E", "url": "https://codeforces.com/contest/1626/problem/E", "tags": ["dfs and similar", " greedy", " trees"], "title": "1626-E", "statement": "E. Black and White Treetime limit per test4 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given a tree consisting of $$$n$$$ vertices. Some of the vertices (at least two) are black, all the other vertices are white.You place a chip on one of the vertices of the tree, and then perform the following operations:let the current vertex where the chip is located is $$$x$$$. You choose a black vertex $$$y$$$, and then move the chip along the first edge on the simple path from $$$x$$$ to $$$y$$$.You are not allowed to choose the same black vertex $$$y$$$ in two operations in a row (i. e., for every two consecutive operations, the chosen black vertex should be different).You end your operations when the chip moves to the black vertex (if it is initially placed in a black vertex, you don't perform the operations at all), or when the number of performed operations exceeds $$$100^{500}$$$.For every vertex $$$i$$$, you have to determine if there exists a (possibly empty) sequence of operations that moves the chip to some black vertex, if the chip is initially placed on the vertex $$$i$$$.InputThe first line contains one integer $$$n$$$ ($$$3 \\\\le n \\\\le 3 \\\\cdot 10^5$$$) — the number of vertices in the tree.The second line contains $$$n$$$ integers $$$c_1, c_2, \\\\dots, c_n$$$ ($$$0 \\\\le c_i \\\\le 1$$$), where $$$c_i = 0$$$ means that the $$$i$$$-th vertex is white, and $$$c_i = 1$$$ means that the $$$i$$$-th vertex is black. At least two values of $$$c_i$$$ are equal to $$$1$$$.Then $$$n-1$$$ lines follow, each of them contains two integers $$$u_i$$$ and $$$v_i$$$ ($$$1 \\\\le u_i, v_i \\\\le n$$$; $$$u_i \\\\ne v_i$$$) — the endpoints of some edge. These edges form a tree.OutputPrint $$$n$$$ integers. The $$$i$$$-th integer should be equal to $$$1$$$ if there exists a (possibly empty) sequence of operations that moves the chip to some black vertex if it is placed on the vertex $$$i$$$, and $$$0$$$ if no such sequence of operations exists.ExampleInput8 0 1 0 0 0 0 1 0 8 6 2 5 7 8 6 5 4 5 6 1 7 3Output0 1 1 1 1 0 1 1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0d66d0c6", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices. Some vertices are black, and the rest are white. You start with a chip on one vertex. You can move the chip along the edges of the tree to a black vertex.  \n\nHere are the rules:\n\n* You can only move to a black vertex.\n* You can't move to the same black vertex two times in a row.\n* You can make at most $100^{500}$ moves.\n\nFor each vertex, determine if it's possible to reach a black vertex by following these rules. \n\n**Input:**\n\n* The first line contains $n$ (the number of vertices).\n* The second line contains $n$ numbers, where 0 means a white vertex and 1 means a black vertex.\n* The next $n-1$ lines each contain two numbers, representing an edge in the tree.\n\n**Output:**\n\n* $n$ numbers, where 1 means it's possible to reach a black vertex from that vertex, and 0 means it's not possible."}, {"prompt_md5": "061113fd", "template_md5": "465699a0", "result": "You have a tree-shaped network with some nodes colored black and others white. You start at a node and can repeatedly move to a different black node along a path. You can't visit the same black node twice in a row.  Determine for each node if you can eventually reach a black node using this rule."}]}