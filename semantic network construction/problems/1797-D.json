{"uid": "1797-D", "url": "https://codeforces.com/contest/1797/problem/D", "tags": ["brute force", " data structures", " dfs and similar", " dp", " implementation", " trees"], "title": "1797-D", "statement": "D. Li Hua and Treetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLi Hua has a tree of $$$n$$$ vertices and $$$n-1$$$ edges. The root of the tree is vertex $$$1$$$. Each vertex $$$i$$$ has importance $$$a_i$$$. Denote thesizeof a subtree as the number of vertices in it, and theimportanceas the sum of the importance of vertices in it. Denote theheavy sonof a non-leaf vertex as the son with thelargestsubtreesize. If multiple of them exist, theheavy sonis the one with theminimumindex.Li Hua wants to perform $$$m$$$ operations:\"1 $$$x$$$\" ($$$1\\\\leq x \\\\leq n$$$) — calculate theimportanceof the subtree whose root is $$$x$$$.\"2 $$$x$$$\" ($$$2\\\\leq x \\\\leq n$$$) — rotate theheavy sonof $$$x$$$ up. Formally, denote $$$son_x$$$ as theheavy sonof $$$x$$$, $$$fa_x$$$ as the father of $$$x$$$. He wants to remove the edge between $$$x$$$ and $$$fa_x$$$ and connect an edge between $$$son_x$$$ and $$$fa_x$$$. It is guaranteed that $$$x$$$ is not root, butnotguaranteed that $$$x$$$ is not a leaf. If $$$x$$$ is a leaf, please ignore the operation.Suppose you were Li Hua, please solve this problem.InputThe first line contains 2 integers $$$n,m$$$ ($$$2\\\\le n\\\\le 10^{5},1\\\\le m\\\\le 10^{5}$$$) — the number of vertices in the tree and the number of operations.The second line contains $$$n$$$ integers $$$a_{1},a_{2},\\\\ldots ,a_{n}$$$ ($$$-10^{9}\\\\le a_{i}\\\\le 10^{9}$$$) — the importance of each vertex.Next $$$n-1$$$ lines contain the edges of the tree. The $$$i$$$-th line contains two integers $$$u_i$$$ and $$$v_i$$$ ($$$1\\\\le u_i,v_i\\\\le n$$$, $$$u_i\\\\ne v_i$$$) — the corresponding edge. The given edges form a tree.Next $$$m$$$ lines contain operations — one operation per line. The $$$j$$$-th operation contains two integers $$$t_{j},x_{j}$$$ ($$$t_{j}\\\\in \\\\{1,2\\\\}$$$, $$$1 \\\\leq x_{j} \\\\leq n$$$, $$$x_{j}\\\\neq 1$$$ if $$$t_j = 2$$$) — the $$$j$$$-th operation.OutputFor each query \"1 $$$x$$$\", output the answer in an independent line.ExamplesInput7 4 1 1 1 1 1 1 1 1 2 1 3 2 4 2 5 3 6 6 7 1 6 2 3 1 6 1 2Output2 3 3Input10 14 -160016413 -90133231 -671446275 -314847579 -910548234 121155052 -359359950 83112406 -704889624 145489303 1 6 1 10 10 8 1 4 3 4 2 7 2 5 3 2 9 8 1 4 2 2 2 4 1 4 1 10 2 10 1 9 1 6 2 8 2 10 1 5 1 8 1 1 2 5Output-2346335269 -314847579 -476287915 -704889624 121155052 -1360041415 228601709 -2861484545NoteIn the first example:The initial tree is shown in the following picture:Theimportanceof the subtree of $$$6$$$ is $$$a_6+a_7=2$$$.After rotating theheavy sonof $$$3$$$ (which is $$$6$$$) up, the tree is shown in the following picture:Theimportanceof the subtree of $$$6$$$ is $$$a_6+a_3+a_7=3$$$.Theimportanceof the subtree of $$$2$$$ is $$$a_2+a_4+a_5=3$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "8dcb7555", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices and $n-1$ edges. Each vertex has an importance value $a_i$.  \n\nYou need to perform $m$ operations:\n\n* **Operation 1:** Given a vertex $x$, calculate the total importance of all vertices in the subtree rooted at $x$.\n* **Operation 2:** Given a vertex $x$ (where $x$ is not the root), rotate the \"heavy son\" of $x$ up. The heavy son of a vertex is the child with the largest subtree size. If there are multiple children with the largest subtree size, choose the one with the smallest index.\n\n**Input:**\n\n* The first line contains two integers $n$ and $m$ ($2 \\le n \\le 10^5$, $1 \\le m \\le 10^5$) - the number of vertices and the number of operations.\n* The second line contains $n$ integers $a_1, a_2, ..., a_n$ (-10^9 $\\le a_i \\le 10^9$) - the importance values of each vertex.\n* The next $n-1$ lines describe the edges of the tree, each line containing two integers $u_i$ and $v_i$ (1 $\\le u_i, v_i \\le n$, $u_i \\ne v_i$) representing an edge between vertices $u_i$ and $v_i$.\n* The next $m$ lines describe the operations, each line containing two integers $t_j$ and $x_j$ ($t_j \\in \\{1, 2\\}$, $1 \\le x_j \\le n$, $x_j \\ne 1$ if $t_j = 2$) - the type of operation and the vertex involved.\n\n**Output:**\n\nFor each operation of type 1, output the total importance of the subtree rooted at the given vertex $x$ in a separate line."}, {"prompt_md5": "5c8f6efe", "template_md5": "465699a0", "result": "You are given a tree with $n$ nodes. Each node has a value. You need to answer queries of the form \"what is the sum of values in the subtree rooted at node $x$?\". You can also perform operations that rotate a node's heaviest child up the tree."}]}