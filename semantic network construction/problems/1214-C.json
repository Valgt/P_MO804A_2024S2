{"uid": "1214-C", "url": "https://codeforces.com/contest/1214/problem/C", "tags": ["data structures", " greedy"], "title": "1214-C", "statement": "C. Bad Sequencetime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputPetya's friends made him a birthday present — a bracket sequence. Petya was quite disappointed with his gift, because he dreamed of correct bracket sequence, yet he told his friends nothing about his dreams and decided to fix present himself.To make everything right, Petya is going to move at most one bracket from its original place in the sequence to any other position. Reversing the bracket (e.g. turning \"(\" into \")\" or vice versa) isn't allowed.We remind that bracket sequence $$$s$$$ is called correct if:$$$s$$$ is empty;$$$s$$$ is equal to \"($$$t$$$)\", where $$$t$$$ is correct bracket sequence;$$$s$$$ is equal to $$$t_1 t_2$$$, i.e. concatenation of $$$t_1$$$ and $$$t_2$$$, where $$$t_1$$$ and $$$t_2$$$ are correct bracket sequences.For example, \"(()())\", \"()\" are correct, while \")(\" and \"())\" are not. Help Petya to fix his birthday present and understand whether he can move one bracket so that the sequence becomes correct.InputFirst of line of input contains a single number $$$n$$$ ($$$1 \\\\leq n \\\\leq 200\\\\,000$$$) — length of the sequence which Petya received for his birthday.Second line of the input contains bracket sequence of length $$$n$$$, containing symbols \"(\" and \")\".OutputPrint \"Yes\" if Petya can make his sequence correct moving at most one bracket. Otherwise print \"No\".ExamplesInput2 )(OutputYesInput3 (()OutputNoInput2 ()OutputYesInput10 )))))(((((OutputNoNoteIn the first example, Petya can move first bracket to the end, thus turning the sequence into \"()\", which is correct bracket sequence.In the second example, there is no way to move at most one bracket so that the sequence becomes correct.In the third example, the sequence is already correct and there's no need to move brackets.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "70f227bd", "template_md5": "35d339e4", "result": "You are given a sequence of parentheses,  containing only \"(\" and \")\".  Determine if it is possible to make the sequence a valid bracket sequence by moving at most one parenthesis to a different position in the sequence.  \n\nA valid bracket sequence follows these rules:\n\n* It is empty.\n* It is of the form \"(...)\" where the content within the parentheses is also a valid bracket sequence.\n* It is the concatenation of two valid bracket sequences.\n\nFor example:\n\n* \"(()())\" and \"()\" are valid.\n* \")(\" and \"())\" are not valid. \n\n\nOutput \"Yes\" if it is possible to make the sequence valid by moving one parenthesis, otherwise output \"No\"."}, {"prompt_md5": "a9f0101a", "template_md5": "465699a0", "result": "Given a sequence of parentheses, determine if you can make it a valid parenthesis sequence by moving at most one parenthesis to a different position."}]}