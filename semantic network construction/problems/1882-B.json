{"uid": "1882-B", "url": "https://codeforces.com/contest/1882/problem/B", "tags": ["bitmasks", " brute force", " constructive algorithms", " greedy"], "title": "1882-B", "statement": "B. Sets and Uniontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have $$$n$$$ sets of integers $$$S_{1}, S_{2}, \\\\ldots, S_{n}$$$. We call a set $$$S$$$attainable, if it is possible to choose some (possibly, none) of the sets $$$S_{1}, S_{2}, \\\\ldots, S_{n}$$$ so that $$$S$$$ is equal to their union$$$^{\\\\dagger}$$$. If you choose none of $$$S_{1}, S_{2}, \\\\ldots, S_{n}$$$, their union is an empty set.Find the maximum number of elements in an attainable $$$S$$$ such that $$$S \\\\neq S_{1} \\\\cup S_{2} \\\\cup \\\\ldots \\\\cup S_{n}$$$.$$$^{\\\\dagger}$$$ The union of sets $$$A_1, A_2, \\\\ldots, A_k$$$ is defined as the set of elements present in at least one of these sets. It is denoted by $$$A_1 \\\\cup A_2 \\\\cup \\\\ldots \\\\cup A_k$$$. For example, $$$\\\\{2, 4, 6\\\\} \\\\cup \\\\{2, 3\\\\} \\\\cup \\\\{3, 6, 7\\\\} = \\\\{2, 3, 4, 6, 7\\\\}$$$.InputEach test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\\\le t \\\\le 100$$$). The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 50$$$).The following $$$n$$$ lines describe the sets $$$S_1, S_2, \\\\ldots, S_n$$$. The $$$i$$$-th of these lines contains an integer $$$k_{i}$$$ ($$$1 \\\\le k_{i} \\\\le 50$$$) — the number of elements in $$$S_{i}$$$, followed by $$$k_{i}$$$ integers $$$s_{i, 1}, s_{i, 2}, \\\\ldots, s_{i, k_{i}}$$$ ($$$1 \\\\le s_{i, 1} < s_{i, 2} < \\\\ldots < s_{i, k_{i}} \\\\le 50$$$) — the elements of $$$S_{i}$$$.OutputFor each test case, print a single integer — the maximum number of elements in an attainable $$$S$$$ such that $$$S \\\\neq S_{1} \\\\cup S_{2} \\\\cup \\\\ldots \\\\cup S_{n}$$$.ExampleInput433 1 2 32 4 52 3 444 1 2 3 43 2 5 63 3 5 63 4 5 651 13 3 6 101 92 1 33 5 8 912 4 28Output4 5 6 0NoteIn the first test case, $$$S = S_{1} \\\\cup S_{3} = \\\\{1, 2, 3, 4\\\\}$$$ is the largest attainable set not equal to $$$S_1 \\\\cup S_2 \\\\cup S_3 = \\\\{1, 2, 3, 4, 5\\\\}$$$.In the second test case, we can pick $$$S = S_{2} \\\\cup S_{3} \\\\cup S_{4} = \\\\{2, 3, 4, 5, 6\\\\}$$$.In the third test case, we can pick $$$S = S_{2} \\\\cup S_{5} = S_{2} \\\\cup S_{3} \\\\cup S_{5} = \\\\{3, 5, 6, 8, 9, 10\\\\}$$$.In the fourth test case, the only attainable set is $$$S = \\\\varnothing$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "09502c8c", "template_md5": "35d339e4", "result": "You are given $n$ sets of integers, $S_1, S_2, ..., S_n$.  \n\nA set $S$ is *attainable* if you can choose some (possibly none) of the sets $S_1, S_2, ..., S_n$ and their union equals $S$. The union of sets means all the elements that are in at least one of the sets.\n\nFind the largest possible number of elements in an attainable set $S$ where $S$ is *not* equal to the union of all the given sets ($S_1 \\cup S_2 \\cup ... \\cup S_n$). \n\n**Input:**\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains the number of sets, $n$.\n    * The next $n$ lines each describe a set:\n        * The first number is the number of elements in the set, $k_i$.\n        * The next $k_i$ numbers are the elements of the set, in increasing order.\n\n**Output:**\n\nFor each test case, print the largest possible number of elements in an attainable set $S$ that is not equal to the union of all the given sets."}, {"prompt_md5": "48cf37cf", "template_md5": "465699a0", "result": "You are given a list of sets of numbers.  Find the largest set of numbers that can be made by combining some (or none) of these sets, but the resulting set cannot be made by combining *all* of the original sets."}]}