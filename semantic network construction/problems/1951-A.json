{"uid": "1951-A", "url": "https://codeforces.com/contest/1951/problem/A", "tags": ["constructive algorithms", " greedy", " math"], "title": "1951-A", "statement": "A. Dual Triggertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputNgọt - LẦN CUỐI (đi bên em xót xa người ơi)ඞThere are $$$n$$$ lamps numbered $$$1$$$ to $$$n$$$ lined up in a row, initially turned off. You can perform the following operation any number of times (possibly zero):Choose twonon-adjacent$$${}^\\\\dagger$$$ lamps that are currently turned off, then turn them on.Determine whether you can reach configuration $$$s$$$, where $$$s_i = 1$$$ means the $$$i$$$-th lamp is turned on, and $$$s_i = 0$$$ otherwise.$$${}^\\\\dagger$$$ Only lamp $$$i$$$ and $$$i + 1$$$ are adjacent for all $$$1 \\\\le i < n$$$. Note that lamp $$$n$$$ and $$$1$$$ arenotadjacent when $$$n \\\\ne 2$$$.InputEach test contains multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\\\le t \\\\le 1000$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains an integer $$$n$$$ ($$$1 \\\\le n \\\\le 50$$$) — the number of lamps.The second line of each test case contains a binary string $$$s$$$ of size $$$n$$$ — the final desired configuration.OutputFor each test case, print on one line\"YES\"if we can reach the configuration $$$s$$$ via applying the given operation any number of times. Otherwise, print\"NO\".ExampleInput510110101011010100100111060000001112111111111111OutputYES NO YES NO YESNoteIn the first test case, the sequence of operation could have been as follows (note that initially $$$s$$$ is all zero): $$$\\\\mathtt{0000000000} \\\\to \\\\mathtt{\\\\color{red}{1}0000000\\\\color{red}{1}0} \\\\to \\\\mathtt{1\\\\color{red}{1}00000\\\\color{red}{1}10} \\\\to \\\\mathtt{110\\\\color{red}{1}0\\\\color{red}{1}0110}$$$.In the third test case, we don't have to do any operation.In the fourth test case, we cannot do any operation, but we need the first lamp to be on. Therefore, it is impossible to achieve the desired state.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "409d48d6", "template_md5": "35d339e4", "result": "You have $n$ light bulbs numbered 1 to $n$ in a row. All the light bulbs are initially off. You can turn on two non-adjacent light bulbs with a single operation.  \n\nDetermine if you can turn on the light bulbs in a specific pattern $s$ where $s_i = 1$ means the $i$-th light bulb is on and $s_i = 0$ means it is off.\n\n**Input:**\n\n* The first line contains $t$ (the number of test cases).\n* For each test case:\n    * The first line contains $n$ (the number of light bulbs).\n    * The second line contains a binary string $s$ of length $n$ representing the desired pattern.\n\n**Output:**\n\nFor each test case, print \"YES\" if you can achieve the pattern $s$, otherwise print \"NO\"."}, {"prompt_md5": "2bace2ac", "template_md5": "465699a0", "result": "You have a line of lights, initially all off. You can turn on two non-adjacent lights at a time.  Can you turn on the lights in a specific pattern?"}]}