{"uid": "418-E", "url": "https://codeforces.com/contest/418/problem/E", "tags": ["data structures"], "title": "418-E", "statement": "E. Tricky Passwordtime limit per test3.5 secondsmemory limit per test512 megabytesinputstdinoutputstdoutIn order to ensure confidentiality, the access to the \"Russian Code Cup\" problems is password protected during the problem development process.To select a password, the jury can generate a special table that containsncolumns and the infinite number of rows. To construct a table, the first row is fixed, and all the others are obtained by the following rule:In the rowiat positionpthere is a number equal to the number of timesa[i- 1][p]occurs on the prefixa[i- 1][1...p].To ensure the required level of confidentiality, the jury must be able to perform the following operations:Replace numbera[1][p]byvand rebuild the table.Find the numbera[x][y], which will be the new password.Doing all these steps manually is very tedious, so the jury asks you to help him. Write a program that responds to the request of the jury.InputThe first line contains an integern(1 ≤n≤ 100000) — the number of columns. The second line contains the description of the first row of the table, that is,nintegers, which are not less than1and do not exceed109.The third line of the input contains an integerm(1 ≤m≤ 100000) — the number of requests.Next, each row contains a description of the request, which consists of three integers:If the first number is equal to1, then the remaining two numbers arev,p(1 ≤v≤ 109;1 ≤p≤n). So, you should put valuevin the positionpin the first row.If the first number is equal to2, then the remaining two numbers arex,y(1 ≤x≤ 105;1 ≤y≤n) — the row and column of the table cell from which you want to get value.OutputPrint an answer for each request of the second type in the order you receive them.ExamplesInput61 2 2 2 3 132 2 31 3 32 3 4Output21", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "b60a71ae", "template_md5": "35d339e4", "result": "You are given a table with $n$ columns and an infinite number of rows. The first row is fixed. Each subsequent row is generated by counting the occurrences of the elements in the previous row within the prefix of that row.\n\nYou need to implement two operations:\n\n1. **Replace:** Replace the element at position $p$ in the first row with a new value $v$.\n2. **Find:** Find the value at row $x$ and column $y$ in the table.\n\nInput:\n\n* The first line contains an integer $n$ (1 ≤ $n$ ≤ 100000), the number of columns.\n* The second line contains $n$ integers, representing the elements of the first row.\n* The third line contains an integer $m$ (1 ≤ $m$ ≤ 100000), the number of requests.\n* Each of the following $m$ lines contains three integers:\n    * If the first integer is 1, the remaining two integers are $v$ and $p$ (1 ≤ $v$ ≤ 10⁹, 1 ≤ $p$ ≤ $n$), indicating a replacement operation.\n    * If the first integer is 2, the remaining two integers are $x$ and $y$ (1 ≤ $x$ ≤ 10⁵, 1 ≤ $y$ ≤ $n$), indicating a find operation.\n\nOutput:\n\nFor each find operation, print the value at the specified row and column."}, {"prompt_md5": "df9633bf", "template_md5": "465699a0", "result": "You are given a table with many rows and a fixed number of columns. Each cell in a row is calculated based on the number of times a specific value appears in the previous row up to that column. \n\nYou need to perform two types of operations:\n\n1. Change a value in the first row.\n2. Find the value in a specific cell (row and column)."}]}