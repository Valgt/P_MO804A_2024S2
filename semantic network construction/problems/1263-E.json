{"uid": "1263-E", "url": "https://codeforces.com/contest/1263/problem/E", "tags": ["data structures", " implementation"], "title": "1263-E", "statement": "E. Editortime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe development of a text editor is a hard problem. You need to implement an extra module for brackets coloring in text.Your editor consists of a line with infinite length and cursor, which points to the current character. Please note that it points to only one of the characters (and not between a pair of characters). Thus, it points to an index character. The user can move the cursor left or right one position. If the cursor is already at the first (leftmost) position, then it does not move left.Initially, the cursor is in the first (leftmost) character.Also, the user can write a letter or brackets (either(, or)) to the position that the cursor is currently pointing at. A new character always overwrites the old value at that position.Your editor must check, whether the current line is thecorrect text. Text is correct if the brackets in them form thecorrect bracket sequence.Formally, correct text (CT) must satisfy the following rules:any line without brackets is CT (the line can contain whitespaces);If the first character of the string — is(, the last — is), and all the rest form a CT, then the whole line is a CT;two consecutively written CT is also CT.Examples of correct texts:hello(codeforces),round,((i)(write))edi(tor)s,( me). Examples of incorrect texts:hello)oops(,round),((me).The user uses special commands to work with your editor. Each command has its symbol, which must be written to execute this command.The correspondence of commands and characters is as follows:L— move the cursor one character to the left (remains in place if it already points to the first character);R— move the cursor one character to the right;any lowercase Latin letter or bracket ((or)) — write the entered character to the position where the cursor is now.For a complete understanding, take a look at the first example and its illustrations in the note below.You are given a string containing the characters that the user entered. For the brackets coloring module's work, after each command you need to:check if the current text in the editor is a correct text;if it is, print the least number of colors that required, to color all brackets.If two pairs of brackets are nested (the first in the second or vice versa), then these pairs of brackets should be painted indifferentcolors. If two pairs of brackets are not nested, then they can be painted in different or the same colors. For example, for the bracket sequence()(())()()the least number of colors is $$$2$$$, and for the bracket sequence(()(()())())(())— is $$$3$$$.Write a program that prints the minimal number of colors after processing each command.InputThe first line contains an integer $$$n$$$ ($$$1 \\\\le n \\\\le 10^6$$$) — the number of commands.The second line contains $$$s$$$ — a sequence of commands. The string $$$s$$$ consists of $$$n$$$ characters. It is guaranteed that all characters in a string are valid commands.OutputIn a single line print $$$n$$$ integers, where the $$$i$$$-th number is:$$$-1$$$ if the line received after processing the first $$$i$$$ commands is not valid text,the minimal number of colors in the case of the correct text.ExamplesInput11 (RaRbR)L)L(Output-1 -1 -1 -1 -1 -1 1 1 -1 -1 2Input11 (R)R(R)Ra)cOutput-1 -1 1 1 -1 -1 1 1 1 -1 1NoteIn the first example, the text in the editor will take the following form:(^(^(a^(a^(ab^(ab^(ab)^(ab)^(a))^(a))^(())^", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0975b409", "template_md5": "35d339e4", "result": "You are given a string of commands representing actions on a text editor. The commands are:\n\n* **L:** Move the cursor one character to the left.\n* **R:** Move the cursor one character to the right.\n* **a-z, (, ):** Insert the corresponding character at the cursor position.\n\nThe editor initially has an empty line and the cursor is at the beginning.\n\nAfter each command, you need to determine:\n\n1. **Is the current text a valid bracket sequence?** A valid sequence follows these rules:\n    * Empty strings are valid.\n    * A string is valid if it starts with an opening bracket '(', ends with a closing bracket ')', and the substring between them is also valid.\n    * Concatenating two valid strings results in a valid string.\n\n2. **If the text is valid, what is the minimum number of colors needed to color all the brackets so that no nested brackets have the same color?**\n\n**Input:**\n\n* The first line contains an integer $n$ ($1 \\le n \\le 10^6$) representing the number of commands.\n* The second line contains a string $s$ of length $n$ consisting of the commands.\n\n**Output:**\n\nPrint a line containing $n$ integers. The $i$-th integer is:\n\n* $-1$ if the text after processing the first $i$ commands is not valid.\n* The minimum number of colors needed for the valid text after processing the first $i$ commands."}, {"prompt_md5": "b25abb88", "template_md5": "465699a0", "result": "You are given a sequence of commands that manipulate a text string. Each command can move the cursor left or right, or insert a letter or bracket.  After each command, determine if the resulting string is a valid sequence of brackets (following specific rules) and, if so, find the minimum number of colors needed to color the brackets so that nested brackets are always different colors."}]}