{"uid": "1739-E", "url": "https://codeforces.com/contest/1739/problem/E", "tags": ["bitmasks", " dp"], "title": "1739-E", "statement": "E. Cleaning Robottime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputConsider a hallway, which can be represented as the matrix with $$$2$$$ rows and $$$n$$$ columns. Let's denote the cell on the intersection of the $$$i$$$-th row and the $$$j$$$-th column as $$$(i, j)$$$. The distance between the cells $$$(i_1, j_1)$$$ and $$$(i_2, j_2)$$$ is $$$|i_1 - i_2| + |j_1 - j_2|$$$.There is a cleaning robot in the cell $$$(1, 1)$$$. Some cells of the hallway are clean, other cells are dirty (the cell with the robot is clean). You want to clean the hallway, so you are going to launch the robot to do this.After the robot is launched, it works as follows. While at least one cell is dirty, the robot choosesthe closest (to its current cell) cellamong those which are dirty, moves there and cleans it (so the cell is no longer dirty). After cleaning a cell, the robot again finds the closest dirty cellto its current cell, and so on. This process repeats until the whole hallway is clean.However, there is a critical bug in the robot's program. If at some moment, there are multiple closest (to the robot's current position) dirty cells, the robot malfunctions.You want to clean the hallway in such a way that the robot doesn't malfunction.Before launching the robot, you can clean some (possibly zero) of the dirty cells yourself. However, you don't want to do too much dirty work yourself while you have this nice, smart (yet buggy) robot to do this. Note that you cannot make a clean cell dirty.Calculate the maximum possible number of cells you can leave dirty before launching the robot, so that it doesn't malfunction.InputThe first line contains one integer $$$n$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the number of columns in the hallway.Then two lines follow, denoting the $$$1$$$-st and the $$$2$$$-nd row of the hallway. These lines contain $$$n$$$ characters each, where0denotes a clean cell and1denotes a dirty cell. The starting cell of the robot $$$(1, 1)$$$ is clean.OutputPrint one integer — the maximum possible number of cells you can leave dirty before launching the robot, so that it doesn't malfunction.ExamplesInput2 01 11Output2Input2 01 01Output2Input4 0101 1011Output4Input4 0000 0000Output0Input5 00011 10101Output4Input6 011111 111111Output8Input10 0101001010 1010100110Output6NoteIn the first example, you can clean the cell $$$(1, 2)$$$, so the path of the robot is $$$(1, 1) \\\\rightarrow (2, 1) \\\\rightarrow (2, 2)$$$.In the second example, you can leave the hallway as it is, so the path of the robot is $$$(1, 1) \\\\rightarrow (1, 2) \\\\rightarrow (2, 2)$$$.In the third example, you can clean the cell $$$(1, 2)$$$, so the path of the robot is $$$(1, 1) \\\\rightarrow (2, 1) \\\\rightarrow (2, 3) \\\\rightarrow (2, 4) \\\\rightarrow (1, 4)$$$.In the fourth example, the hallway is already clean. Maybe you have launched the robot earlier?", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "68a3e553", "template_md5": "35d339e4", "result": "You have a hallway represented as a 2x$n$ grid. Some cells are clean (0) and some are dirty (1). A robot starts at cell (1,1) and cleans the hallway. \n\nThe robot works as follows:\n\n1. It finds the closest dirty cell to its current position.\n2. It moves to that cell and cleans it.\n3. It repeats steps 1 and 2 until all cells are clean.\n\nHowever, if there are multiple closest dirty cells, the robot malfunctions.\n\nYou can clean some cells yourself before launching the robot.  \n\nFind the maximum number of cells you can leave dirty so the robot doesn't malfunction.\n\n\n\nLet me know if you'd like me to clarify any part of this!"}, {"prompt_md5": "ae051bcc", "template_md5": "465699a0", "result": "You have a grid of cells, some clean and some dirty. A robot starts at a clean cell and cleans the grid by moving to the closest dirty cell and cleaning it. If the robot reaches a point where multiple cells are the same distance away, it malfunctions.  You can clean some cells beforehand to prevent this. Find the maximum number of cells you can leave dirty."}]}