{"uid": "1101-E", "url": "https://codeforces.com/contest/1101/problem/E", "tags": ["implementation"], "title": "1101-E", "statement": "E. Polycarp's New Jobtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp has recently got himself a new job. He now earns so much that his old wallet can't even store all the money he has.Berland bills somehow come in lots of different sizes. However, all of them are shaped as rectangles (possibly squares). All wallets are also produced in form of rectangles (possibly squares).A bill $$$x \\\\times y$$$ fits into some wallet $$$h \\\\times w$$$ if either $$$x \\\\le h$$$ and $$$y \\\\le w$$$ or $$$y \\\\le h$$$ and $$$x \\\\le w$$$. Bills can overlap with each other in a wallet and an infinite amount of bills can fit into a wallet. That implies that all the bills Polycarp currently have fit into a wallet if every single one of them fits into it independently of the others.Now you are asked to perform the queries of two types:$$$+~x~y$$$ — Polycarp earns a bill of size $$$x \\\\times y$$$;$$$?~h~w$$$ — Polycarp wants to check if all the bills he has earned to this moment fit into a wallet of size $$$h \\\\times w$$$.It is guaranteed that there is at least one query of type $$$1$$$ before the first query of type $$$2$$$ and that there is at least one query of type $$$2$$$ in the input data.For each query of type $$$2$$$ print \"YES\" if all the bills he has earned to this moment fit into a wallet of given size. Print \"NO\" otherwise.InputThe first line contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 5 \\\\cdot 10^5$$$) — the number of queries.Each of the next $$$n$$$ lines contains a query of one of these two types:$$$+~x~y$$$ ($$$1 \\\\le x, y \\\\le 10^9$$$) — Polycarp earns a bill of size $$$x \\\\times y$$$;$$$?~h~w$$$ ($$$1 \\\\le h, w \\\\le 10^9$$$) — Polycarp wants to check if all the bills he has earned to this moment fit into a wallet of size $$$h \\\\times w$$$.It is guaranteed that there is at least one query of type $$$1$$$ before the first query of type $$$2$$$ and that there is at least one query of type $$$2$$$ in the input data.OutputFor each query of type $$$2$$$ print \"YES\" if all the bills he has earned to this moment fit into a wallet of given size. Print \"NO\" otherwise.ExampleInput9 + 3 2 + 2 3 ? 1 20 ? 3 3 ? 2 3 + 1 5 ? 10 10 ? 1 5 + 1 1OutputNO YES YES YES NONoteThe queries of type $$$2$$$ of the example:Neither bill fits;Both bills fit (just checking that you got that bills can overlap);Both bills fit (both bills are actually the same);All bills fit (too much of free space in a wallet is not a problem);Only bill $$$1 \\\\times 5$$$ fit (all the others don't, thus it's \"NO\").", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "1edb7b9b", "template_md5": "35d339e4", "result": "You are given a series of queries about bills and wallets.\n\n* **Query Type 1:**  $+ x y$  means a new bill of size $x \\times y$ is earned.\n* **Query Type 2:** $? h w$ means you need to check if all the bills earned so far can fit into a wallet of size $h \\times w$.  A bill fits into a wallet if either its width is less than or equal to the wallet's width AND its height is less than or equal to the wallet's height, OR its height is less than or equal to the wallet's width AND its width is less than or equal to the wallet's height. Bills can overlap.\n\n**Input:**\n\n* The first line contains an integer $n$ (2 ≤ $n$ ≤ 5 * 10^5) representing the number of queries.\n* Each of the next $n$ lines contains a query of type 1 or 2.\n\n**Output:**\n\n* For each query of type 2, print \"YES\" if all the earned bills fit in the given wallet size, and \"NO\" otherwise.\n\n\n\nLet me know if you'd like help with the code to solve this problem!"}, {"prompt_md5": "c6b589fa", "template_md5": "465699a0", "result": "You are given a series of commands:\n\n* \"+\" followed by two numbers: a new item of a specific size is added.\n* \"?\" followed by two numbers: check if all the collected items fit into a container of that size.\n\nItems can overlap within a container.  Determine if all items fit into each specified container."}]}