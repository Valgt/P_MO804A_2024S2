{"uid": "1860-A", "url": "https://codeforces.com/contest/1860/problem/A", "tags": ["constructive algorithms", " strings"], "title": "1860-A", "statement": "A. Not a Substringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA bracket sequence is a string consisting of characters '(' and/or ')'. A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters '1' and '+' between the original characters of the sequence. For example:bracket sequences \"()()\" and \"(())\" are regular (they can be transformed into \"(1)+(1)\" and \"((1+1)+1)\", respectively);bracket sequences \")(\", \"(\" and \")\" are not regular.You are given a bracket sequence $$$s$$$; let's define its length as $$$n$$$. Your task is to find a regular bracket sequence $$$t$$$ of length $$$2n$$$ such that $$$s$$$does notoccur in $$$t$$$ as acontiguous substring, or report that there is no such sequence.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 1000$$$) — the number of test cases.The only line of each test case contains a string $$$s$$$ ($$$2 \\\\le |s| \\\\le 50$$$), consisting of characters \"(\" and/or \")\".OutputFor each test case, print the answer to it. If there is no required regular bracket sequence, printNOin a separate line. Otherwise, printYESin the first line, and the required regular bracket sequence $$$t$$$ itself in the second line. If there are multiple answers — you may print any of them.ExampleInput4)((()()))()OutputYES (()) YES ()()() NO YES ()(()())", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "21e91f99", "template_md5": "35d339e4", "result": "You are given a string of parentheses,  '(' and ')'.  \n\nYour task is to create a new string of the same type of parentheses, twice as long, that contains the original string as a continuous subsequence. \n\nIf you can create such a string, print \"YES\" followed by the new string. If you cannot, print \"NO\".\n\n**Example:**\n\nInput:  ((()()))()\n\nOutput: \nYES\n(())"}, {"prompt_md5": "6333b011", "template_md5": "465699a0", "result": "Given a sequence of parentheses, determine if you can create a longer sequence of parentheses with twice the length that contains the original sequence as a substring. If you can, output \"YES\" followed by the longer sequence. Otherwise, output \"NO\"."}]}