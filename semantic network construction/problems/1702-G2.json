{"uid": "1702-G2", "url": "https://codeforces.com/contest/1702/problem/G2", "tags": ["data structures", " dfs and similar", " trees"], "title": "1702-G2", "statement": "G2. Passable Paths (hard version)time limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is a hard version of the problem. The only difference between an easy and a hard version is in the number of queries.Polycarp grew a tree from $$$n$$$ vertices. We remind you that a tree of $$$n$$$ vertices is an undirected connected graph of $$$n$$$ vertices and $$$n-1$$$ edges that does not contain cycles.He calls a set of verticespassableif there is such a path in the tree that passes through each vertex of this set without passing through any edge twice. The path can visit other vertices (not from this set).In other words, a set of vertices is calledpassableif there is a simple path that passes through all the vertices of this set (and possibly some other).For example, for a tree below sets $$$\\\\{3, 2, 5\\\\}$$$, $$$\\\\{1, 5, 4\\\\}$$$, $$$\\\\{1, 4\\\\}$$$ arepassable, and $$$\\\\{1, 3, 5\\\\}$$$, $$$\\\\{1, 2, 3, 4, 5\\\\}$$$ are not.Polycarp asks you to answer $$$q$$$ queries. Each query is a set of vertices. For each query, you need to determine whether the corresponding set of vertices ispassable.InputThe first line of input contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — number of vertices.Following $$$n - 1$$$ lines a description of the tree..Each line contains two integers $$$u$$$ and $$$v$$$ ($$$1 \\\\le u, v \\\\le n$$$, $$$u \\\\ne v$$$) — indices of vertices connected by an edge.Following line contains single integer $$$q$$$ ($$$1 \\\\le q \\\\le 10^5$$$) — number of queries.The following $$$2 \\\\cdot q$$$ lines contain descriptions of sets.The first line of the description contains an integer $$$k$$$ ($$$1 \\\\le k \\\\le n$$$) — the size of the set.The second line of the description contains $$$k$$$ of distinct integers $$$p_1, p_2, \\\\dots, p_k$$$ ($$$1 \\\\le p_i \\\\le n$$$) — indices of the vertices of the set.It is guaranteed that the sum of $$$k$$$ values for all queries does not exceed $$$2 \\\\cdot 10^5$$$.OutputOutput $$$q$$$ lines, each of which contains the answer to the corresponding query. As an answer, output \"YES\" if the set ispassable, and \"NO\" otherwise.You can output the answer in any case (for example, the strings \"yEs\", \"yes\", \"Yes\" and \"YES\" will be recognized as a positive answer).ExamplesInput5 1 2 2 3 2 4 4 5 5 3 3 2 5 5 1 2 3 4 5 2 1 4 3 1 3 5 3 1 5 4OutputYES NO YES NO YESInput5 1 2 3 2 2 4 5 2 4 2 3 1 3 3 4 5 3 2 3 5 1 1OutputYES NO YES YES", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "92899251", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices. A tree is a connected graph with $n-1$ edges where there are no cycles.\n\nA set of vertices is considered \"passable\" if there exists a path in the tree that goes through each vertex in the set exactly once.  \n\nYou will be given $q$ queries, each containing a set of vertices. For each query, determine if the set of vertices is \"passable\".\n\n**Input:**\n\n* The first line contains an integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) representing the number of vertices.\n* The next $n-1$ lines each contain two integers $u$ and $v$ ($1 \\le u, v \\le n$, $u \\neq v$) representing an edge between vertices $u$ and $v$.\n* The next line contains an integer $q$ ($1 \\le q \\le 10^5$) representing the number of queries.\n* Each of the next $2q$ lines describes a query:\n    * The first line contains an integer $k$ ($1 \\le k \\le n$) representing the size of the set.\n    * The second line contains $k$ distinct integers $p_1, p_2, ..., p_k$ ($1 \\le p_i \\le n$) representing the vertices in the set.\n\n**Output:**\n\n* For each query, output \"YES\" if the set is \"passable\" and \"NO\" otherwise."}, {"prompt_md5": "f47e9a60", "template_md5": "465699a0", "result": "You are given a tree with a certain number of nodes. You need to determine if a given set of nodes can be visited along a single path without repeating any edges.  You will be given many sets of nodes to check."}]}