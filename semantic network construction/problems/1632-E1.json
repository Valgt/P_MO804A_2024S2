{"uid": "1632-E1", "url": "https://codeforces.com/contest/1632/problem/E1", "tags": ["binary search", " data structures", " dfs and similar", " graphs", " shortest paths", " trees"], "title": "1632-E1", "statement": "E1. Distance Tree (easy version)time limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputThis version of the problem differs from the next one only in the constraint on $$$n$$$.A tree is a connected undirected graph without cycles. A weighted tree has a weight assigned to each edge. The distance between two vertices is the minimum sum of weights on the path connecting them.You are given a weighted tree with $$$n$$$ vertices, each edge has a weight of $$$1$$$. Denote $$$d(v)$$$ as the distance between vertex $$$1$$$ and vertex $$$v$$$.Let $$$f(x)$$$ be the minimum possible value of $$$\\\\max\\\\limits_{1 \\\\leq v \\\\leq n} \\\\ {d(v)}$$$ if you can temporarily add an edge with weight $$$x$$$ between any two vertices $$$a$$$ and $$$b$$$ $$$(1 \\\\le a, b \\\\le n)$$$. Note that after this operation, the graph is no longer a tree.For each integer $$$x$$$ from $$$1$$$ to $$$n$$$, find $$$f(x)$$$.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases.The first line of each test case contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 3000$$$).Each of the next $$$n−1$$$ lines contains two integers $$$u$$$ and $$$v$$$ ($$$1 \\\\le u,v \\\\le n$$$) indicating that there is an edge between vertices $$$u$$$ and $$$v$$$. It is guaranteed that the given edges form a tree.It is guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$3000$$$.OutputFor each test case, print $$$n$$$ integers in a single line, $$$x$$$-th of which is equal to $$$f(x)$$$ for all $$$x$$$ from $$$1$$$ to $$$n$$$.ExampleInput341 22 31 421 271 21 33 43 53 65 7Output1 2 2 2  1 1  2 2 3 3 3 3 3NoteIn the first testcase:For $$$x = 1$$$, we can an edge between vertices $$$1$$$ and $$$3$$$, then $$$d(1) = 0$$$ and $$$d(2) = d(3) = d(4) = 1$$$, so $$$f(1) = 1$$$.For $$$x \\\\ge 2$$$, no matter which edge we add, $$$d(1) = 0$$$, $$$d(2) = d(4) = 1$$$ and $$$d(3) = 2$$$, so $$$f(x) = 2$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "c574ce07", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices, where each edge has a weight of 1. The distance between two vertices is the minimum sum of weights on the path connecting them.\n\nFor each integer $x$ from 1 to $n$, find the minimum possible maximum distance between any two vertices in the tree if you can add one edge with weight $x$ between any two vertices.\n\n**Input:**\n\n* The first line contains the number of test cases $t$.\n* For each test case:\n    * The first line contains the number of vertices $n$.\n    * The next $n-1$ lines each contain two integers $u$ and $v$, representing an edge between vertices $u$ and $v$.\n\n**Output:**\n\nFor each test case, print $n$ integers, where the $x$-th integer is $f(x)$, the minimum possible maximum distance for edge weight $x$."}, {"prompt_md5": "2c2a0183", "template_md5": "465699a0", "result": "You are given a tree (a connected graph with no cycles) where each edge has a weight of 1.  \n\nFor each number from 1 to the number of vertices in the tree, find the smallest maximum distance you can achieve between any two vertices in the tree by adding a single edge with that weight."}]}