{"uid": "916-D", "url": "https://codeforces.com/contest/916/problem/D", "tags": ["data structures", " interactive", " trees"], "title": "916-D", "statement": "D. Jamie and To-do Listtime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputWhy I have to finish so many assignments???Jamie is getting very busy with his school life. He starts to forget the assignments that he has to do. He decided to write the things down on a to-do list. He assigns a valuepriorityfor each of his assignment(lower value means more important)so he can decide which he needs to spend more time on.After a few days, Jamie finds out the list is too large that he can't even manage the list by himself! As you are a good friend of Jamie, help him write a program to support the following operations on the to-do list:setaixi— Add assignmentaito the to-do list if it is not present, and set itsprioritytoxi. If assignmentaiis already in the to-do list, itspriorityis changedtoxi.removeai— Remove assignmentaifrom the to-do list if it is present in it.queryai— Output the number of assignments that are more important (have asmallerpriorityvalue) than assignmentai, so Jamie can decide a better schedule. Output- 1ifaiis not in the to-do list.undodi— Undo all changes that have been made in the previousdidays (not including the day of this operation)At day0, the to-do list is empty. In each of the followingqdays, Jamie will doexactly oneout of the four operations. If the operation is aquery, you shouldoutput the result of the query before proceeding to the next day, or poor Jamie cannot make appropriate decisions.InputThe first line consists of a single integerq(1 ≤q≤ 105)— the number of operations.The followingqlines consists of the description of the operations. Thei-th line consists of the operation that Jamie has done in thei-th day. The query has the following format:The first word in the line indicates the type of operation. It must be one of the following four:set,remove,query,undo.If it is asetoperation, a stringaiand an integerxifollows(1 ≤xi≤ 109).aiis the assignment that need to be set topriorityxi.If it is aremoveoperation, a stringaifollows.aiis the assignment that need to be removed.If it is aqueryoperation, a stringaifollows.aiis the assignment that needs to be queried.If it is aundooperation, an integerdifollows(0 ≤di<i).diis the number of days that changes needed to be undone.All assignment namesaionly consists of lowercase English letters and have a length1 ≤ |ai| ≤ 15.It is guaranteed that the last operation is aqueryoperation.OutputFor eachqueryoperation, output a single integer — the number of assignments that have a priority lower than assignmentai, or- 1ifaiis not in the to-do list.InteractionIf the operation is aquery, youshouldoutput the result of the query and flush the output stream before proceeding to the next operation. Otherwise, you may get the verdictIdleness Limit Exceed.For flushing the output stream, please refer to the documentation of your chosen programming language. The flush functions of some common programming languages are listed below:C:fflush(stdout);C++:cout « flush;Java:System.out.flush();ExamplesInput8set chemlabreport 1set physicsexercise 2set chinesemockexam 3query physicsexercisequery chinesemockexamremove physicsexercisequery physicsexercisequery chinesemockexamOutput12-11Input8set physicsexercise 2set chinesemockexam 3set physicsexercise 1query physicsexercisequery chinesemockexamundo 4query physicsexercisequery chinesemockexamOutput010-1Input5query economicsessayremove economicsessayquery economicsessayundo 2query economicsessayOutput-1-1-1Input5set economicsessay 1remove economicsessayundo 1undo 1query economicsessayOutput-1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "97d83f48", "template_md5": "35d339e4", "result": "You are given a list of tasks. Each task has a priority level (a number, where lower numbers mean more important). You need to perform the following operations on the list:\n\n* **set ai x:** Add task `ai` to the list with priority `x`, or update the priority of existing task `ai` to `x`.\n* **remove ai:** Remove task `ai` from the list.\n* **query ai:**  Return the number of tasks in the list that have a priority lower than task `ai`. If `ai` is not in the list, return -1.\n* **undo d:** Undo the last `d` operations (excluding the current one).\n\nYou will be given a sequence of these operations. For each `query` operation, you must output the result immediately."}, {"prompt_md5": "f3c61f0f", "template_md5": "465699a0", "result": "You are given a list of tasks with priorities. You can add tasks, remove tasks, query the number of tasks with higher priority than a given task, and undo previous changes up to a certain point.  You must output the result of each query immediately."}]}