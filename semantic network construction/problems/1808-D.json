{"uid": "1808-D", "url": "https://codeforces.com/contest/1808/problem/D", "tags": ["binary search", " brute force", " data structures", " two pointers"], "title": "1808-D", "statement": "D. Petya, Petya, Petr, and Palindromestime limit per test1.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya and his friend, the robot Petya++, have a common friend — the cyborg Petr#. Sometimes Petr# comes to the friends for a cup of tea and tells them interesting problems.Today, Petr# told them the following problem.A palindrome is a sequence that reads the same from left to right as from right to left. For example, $$$[38, 12, 8, 12, 38]$$$, $$$[1]$$$, and $$$[3, 8, 8, 3]$$$ are palindromes.Let's call thepalindromicityof a sequence $$$a_1, a_2, \\\\dots, a_n$$$ the minimum count of elements that need to be replaced to make this sequence a palindrome. For example, the palindromicity of the sequence $$$[38, 12, 8, 38, 38]$$$ is $$$1$$$ since it is sufficient to replace the number $$$38$$$ at the fourth position with the number $$$12$$$. And the palindromicity of the sequence $$$[3, 3, 5, 5, 5]$$$ is two since you can replace the first two threes with fives, and the resulting sequence $$$[5, 5, 5, 5, 5]$$$ is a palindrome.Given a sequence $$$a$$$ of length $$$n$$$, and anoddinteger $$$k$$$, you need to find the sum of palindromicity of all subarrays of length $$$k$$$, i. e., the sum of the palindromicity values for the sequences $$$a_i, a_{i+1}, \\\\dots, a_{i+k-1}$$$ for all $$$i$$$ from $$$1$$$ to $$$n-k+1$$$.The students quickly solved the problem. Can you do it too?InputThe first line of the input contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$, $$$1 \\\\le k \\\\le n$$$, $$$k$$$ is odd) — the length of the sequence and the length of subarrays for which it is necessary to determine whether they are palindromes.The second line of the input contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\le a_i \\\\le 2 \\\\cdot 10^5$$$) — the sequence itself.OutputOutput a single integer — the total palindromicity of all subarrays of length $$$k$$$.ExamplesInput8 5 1 2 8 2 5 2 8 6Output4Input9 9 1 2 3 4 5 4 3 2 1Output0NoteIn the first example, the palindromicity of the subarray $$$[1, 2, 8, 2, 5]$$$ is $$$1$$$, the palindromicity of the string $$$[2, 8, 2, 5, 2]$$$ is also $$$1$$$, the palindromicity of the string $$$[8, 2, 5, 2, 8]$$$ is $$$0$$$, and the palindromicity of the string $$$[2, 5, 2, 8, 6]$$$ is $$$2$$$. The total palindromicity is $$$1+1+0+2 = 4$$$.In the second example, the only substring of length $$$9$$$ coincides with the entire string, and its palindromicity is $$$0$$$, so the answer is also $$$0$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "70caacff", "template_md5": "35d339e4", "result": "Given a sequence of $n$ integers $a_1, a_2, ..., a_n$ and an odd integer $k$, find the sum of the palindromicity of all subarrays of length $k$.\n\nThe palindromicity of a sequence is the minimum number of elements that need to be replaced to make it a palindrome.\n\nFor example, the palindromicity of the sequence $[38, 12, 8, 38, 38]$ is 1 because you can replace the number 38 at the fourth position with 12 to make it a palindrome.\n\n\nInput:\n* The first line contains two integers $n$ and $k$ ($1 \\le n \\le 2 \\cdot 10^5$, $1 \\le k \\le n$, $k$ is odd).\n* The second line contains $n$ integers $a_1, a_2, ..., a_n$ ($1 \\le a_i \\le 2 \\cdot 10^5$).\n\nOutput:\n* A single integer representing the sum of the palindromicity of all subarrays of length $k$."}, {"prompt_md5": "c92c5094", "template_md5": "465699a0", "result": "Given a sequence of numbers, find the total number of changes needed to make all subarrays of a fixed length palindromes.  A palindrome reads the same backward as forward."}]}