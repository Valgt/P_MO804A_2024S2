{"uid": "1870-B", "url": "https://codeforces.com/contest/1870/problem/B", "tags": ["bitmasks", " greedy", " math"], "title": "1870-B", "statement": "B. Friendly Arraystime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two arrays of integers — $$$a_1, \\\\ldots, a_n$$$ of length $$$n$$$, and $$$b_1, \\\\ldots, b_m$$$ of length $$$m$$$. You can choose any element $$$b_j$$$ from array $$$b$$$ ($$$1 \\\\leq j \\\\leq m$$$), and forall$$$1 \\\\leq i \\\\leq n$$$ perform $$$a_i = a_i | b_j$$$. You can perform any number of such operations.After all the operations, the value of $$$x = a_1 \\\\oplus a_2 \\\\oplus \\\\ldots \\\\oplus a_n$$$ will be calculated. Find the minimum and maximum values of $$$x$$$ that could be obtained after performing any set of operations.Above, $$$|$$$ is thebitwise OR operation, and $$$\\\\oplus$$$ is thebitwise XOR operation.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$) — the number of test cases. This is followed by the description of the test cases.The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\\\leq n, m \\\\leq 2 \\\\cdot 10^5$$$) — the sizes of arrays $$$a$$$ and $$$b$$$.The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$0 \\\\leq a_i \\\\leq 10^9$$$) — the array $$$a$$$.The third line of each test case contains $$$m$$$ integers $$$b_1, b_2, \\\\ldots, b_m$$$ ($$$0 \\\\leq b_i \\\\leq 10^9$$$) — the array $$$b$$$.It is guaranteed that the sum of values of $$$n$$$ and $$$m$$$ across all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output $$$2$$$ numbers: the minimum and maximum possible values of $$$x$$$ after performing any set of operations.ExampleInput22 30 11 2 33 11 1 21Output0 1 2 3NoteIn the first test case, if we apply the operation with element $$$b_1 = 1$$$, the array $$$a$$$ will become $$$[1, 1]$$$, and $$$x$$$ will be $$$0$$$. If no operations are applied, then $$$x = 1$$$.In the second test case, if no operations are applied, then $$$x = 2$$$. If we apply the operation with $$$b_1 = 1$$$, then $$$a = [1, 1, 3]$$$, and $$$x = 3$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a6c13331", "template_md5": "35d339e4", "result": "You are given two arrays of integers,  $a$ of length $n$ and $b$ of length $m$. You can choose any element $b_j$ from array $b$ and perform the following operation for all $i$ from 1 to $n$:\n\n$a_i = a_i | b_j$\n\nwhere $|$ represents the bitwise OR operation. You can perform this operation any number of times.\n\nAfter all operations, calculate the value of $x = a_1 \\oplus a_2 \\oplus ... \\oplus a_n$, where $\\oplus$ represents the bitwise XOR operation.\n\nFind the minimum and maximum possible values of $x$ that can be obtained after performing any set of operations."}, {"prompt_md5": "5202e9a3", "template_md5": "465699a0", "result": "You have two lists of numbers. You can pick one number from the second list and use it to change each number in the first list by performing a bitwise OR operation.  What is the smallest and largest possible sum of all the numbers in the first list after you've made these changes?"}]}