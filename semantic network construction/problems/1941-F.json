{"uid": "1941-F", "url": "https://codeforces.com/contest/1941/problem/F", "tags": ["binary search", " greedy", " sortings", " two pointers"], "title": "1941-F", "statement": "F. Rudolf and Imbalancetime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRudolf has prepared a set of $$$n$$$ problems with complexities $$$a_1 < a_2 < a_3 < \\\\dots < a_n$$$. He is not entirely satisfied with the balance, so he wants to addat most oneproblem to fix it.For this, Rudolf came up with $$$m$$$ models of problems and $$$k$$$ functions. The complexity of the $$$i$$$-th model is $$$d_i$$$, and the complexity of the $$$j$$$-th function is $$$f_j$$$. To create a problem, he selects values $$$i$$$ and $$$j$$$ ($$$1 \\\\le i \\\\le m$$$, $$$1 \\\\le j \\\\le k$$$) and by combining the $$$i$$$-th model with the $$$j$$$-th function, he obtains a new problem with complexity $$$d_i + f_j$$$ (a new element is inserted into the array $$$a$$$).To determine theimbalanceof the set, Rudolf sorts the complexities of the problems in ascending order and finds the largest value of $$$a_i - a_{i - 1}$$$ ($$$i > 1$$$).What is the minimum value ofimbalancethat Rudolf can achieve by adding at most one problem, created according to the described rules?InputThe first line of the input contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of testcases.The first line of each test case contains three integers $$$n$$$, $$$m$$$, and $$$k$$$ ($$$2 \\\\le n \\\\le 10^5$$$, $$$1 \\\\le m, k \\\\le 2 \\\\cdot 10^5$$$) — the number of prepared problems, the number of models, and the number of functions, respectively.The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, a_3, \\\\dots a_n$$$ ($$$1 \\\\le a_i \\\\le 2 \\\\cdot 10^9$$$, $$$a_i < a_{i+1}$$$) — the complexities of the prepared problems.The third line of each test case contains $$$m$$$ integers $$$d_1, d_2, d_3, \\\\dots d_m$$$ ($$$1 \\\\le d_i \\\\le 10^9$$$) — the complexities of the models.The fourth line of each test case contains $$$k$$$ integers $$$f_1, f_2, f_3, \\\\dots f_k$$$ ($$$1 \\\\le f_i \\\\le 10^9$$$) — the complexities of the functions.It is guaranteed that the sum of $$$n$$$ over all testcases does not exceed $$$10^5$$$.It is guaranteed that the sum of $$$m$$$ over all testcases does not exceed $$$2 \\\\cdot 10^5$$$.It is guaranteed that the sum of $$$k$$$ over all testcases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each testcase, output a single number — the minimumimbalancethat Rudolf can achieve.ExampleInput75 5 55 10 15 20 2611 14 16 13 816 4 5 3 17 6 51 4 7 10 18 21 222 3 5 7 4 26 8 9 3 27 6 51 4 7 10 18 21 222 3 5 7 4 26 8 13 3 25 6 32 10 13 20 2511 6 10 16 14 56 17 154 2 211 12 14 1519 1410 68 4 23 10 16 18 21 22 29 309 13 16 154 22 4 74 214 15 14 520 1 15 1 12 5 11Output5 4 5 8 2 7 11", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "2e889d76", "template_md5": "35d339e4", "result": "You are given an array of integers $a$ of size $n$ representing the complexities of $n$ problems, sorted in ascending order ($a_1 < a_2 < ... < a_n$). You want to minimize the imbalance of the set, which is defined as the largest difference between consecutive elements in the sorted array ($a_i - a_{i-1}$ for $i > 1$).\n\nYou can add at most one new problem to the set.  \n\nTo create a new problem, you can combine one of $m$ models (each with a complexity $d_i$) and one of $k$ functions (each with a complexity $f_j$). The complexity of the new problem is the sum of the model's complexity and the function's complexity ($d_i + f_j$).\n\nFind the minimum possible imbalance after adding at most one new problem.\n\n\n\nInput:\n\n* $t$: the number of test cases\n* For each test case:\n    * $n$: the number of original problems\n    * $m$: the number of models\n    * $k$: the number of functions\n    * $a$: the array of complexities of the original problems\n    * $d$: the array of complexities of the models\n    * $f$: the array of complexities of the functions\n\nOutput:\n\n* For each test case, output the minimum possible imbalance."}, {"prompt_md5": "df41aec9", "template_md5": "465699a0", "result": "You are given a list of numbers representing problem complexities. You can add one new problem by combining a model and a function.  Find the smallest difference between the largest pair of consecutive numbers in the sorted list after adding one problem."}]}