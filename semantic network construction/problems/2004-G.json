{"uid": "2004-G", "url": "https://codeforces.com/contest/2004/problem/G", "tags": ["data structures", " dp", " matrices"], "title": "2004-G", "statement": "G. Substring Compressiontime limit per test2 secondsmemory limit per test1024 megabytesinputstandard inputoutputstandard outputLet's define the operation of compressing a string $$$t$$$, consisting of at least $$$2$$$ digits from $$$1$$$ to $$$9$$$, as follows:split it into anevennumber of non-empty substrings — let these substrings be $$$t_1, t_2, \\\\dots, t_m$$$ (so, $$$t = t_1 + t_2 + \\\\dots + t_m$$$, where $$$+$$$ is the concatenation operation);write the string $$$t_2$$$ $$$t_1$$$ times, then the string $$$t_4$$$ $$$t_3$$$ times, and so on.For example, for a string \"12345\", one could do the following: split it into (\"1\", \"23\", \"4\", \"5\"), and write \"235555\".Let the function $$$f(t)$$$ for a string $$$t$$$ return the minimum length of the string that can be obtained as a result of that process.You are given a string $$$s$$$, consisting of $$$n$$$ digits from $$$1$$$ to $$$9$$$, and an integer $$$k$$$. Calculate the value of the function $$$f$$$ for all contiguous substrings of $$$s$$$ of length exactly $$$k$$$.InputThe first line contains two integers $$$n$$$ and $$$k$$$ ($$$2 \\\\le k \\\\le n \\\\le 2 \\\\cdot 10^5$$$).The second line contains the string $$$s$$$ ($$$|s| = n$$$), consisting only of digits from $$$1$$$ to $$$9$$$.OutputOutput $$$n - k + 1$$$ integers — $$$f(s_{1,k}), f(s_{2,k+1}), \\\\dots, f(s_{n - k + 1, n})$$$.ExamplesInput4 45999Output14Input10 31111111111Output2 2 2 2 2 2 2 2Input11 449998641312Output12 18 17 15 12 7 7 2", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "068b33a3", "template_md5": "465699a0", "result": "You are given a string of digits.  Find the shortest possible string you can make by repeatedly taking substrings of the original string and concatenating them together in a specific pattern.  The pattern is to take every other substring and repeat it a certain number of times.  You need to do this for all possible substrings of length  'k' within the original string."}, {"prompt_md5": "1605edd0", "template_md5": "35d339e4", "result": "You are given a string  $s$ of length $n$ consisting of digits from 1 to 9. You are also given an integer $k$. \n\nFor each substring of $s$ of length $k$, find the minimum length you can achieve by repeatedly concatenating substrings of the original string in a specific way.\n\nHere's how the concatenation works:\n\n1. Split the substring into an even number of non-empty substrings.\n2. Write the second substring followed by the first substring, then the fourth substring followed by the third substring, and so on.\n\nFor example, if the substring is \"12345\", you could split it into (\"1\", \"23\", \"4\", \"5\") and write \"235555\".\n\nOutput the minimum length you can achieve for each substring of $s$ of length $k$."}]}