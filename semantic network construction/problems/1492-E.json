{"uid": "1492-E", "url": "https://codeforces.com/contest/1492/problem/E", "tags": ["brute force", " constructive algorithms", " dfs and similar", " greedy", " implementation"], "title": "1492-E", "statement": "E. Almost Fault-Tolerant Databasetime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are storing an integer array of length $$$m$$$ in a database. To maintain internal integrity and protect data, the database stores $$$n$$$ copies of this array.Unfortunately, the recent incident may have altered the stored information in every copy in the database.It's believed, that the incident altered at most two elements in every copy. You need to recover the original array based on the current state of the database.In case there are multiple ways to restore the array, report any. If there is no array that differs from every copy in no more than two positions, report that as well.InputThe first line contains integers $$$n$$$ and $$$m$$$ ($$$2 \\\\le n$$$; $$$1 \\\\le m$$$; $$$n \\\\cdot m \\\\le 250\\\\,000$$$) — the number of copies and the size of the array.Each of the following $$$n$$$ lines describes one of the currently stored copies in the database, it consists of $$$m$$$ integers $$$s_{i, 1}, s_{i, 2}, \\\\dots, s_{i, m}$$$ ($$$1 \\\\le s_{i, j} \\\\le 10^9$$$).OutputIf there is an array consistent with all given copies, print \"Yes\" and then the array itself. The array must have length $$$m$$$ and contain integers between $$$1$$$ and $$$10^9$$$ only.Otherwise, print \"No\".If there are multiple possible arrays, print any of them.ExamplesInput3 4 1 10 10 100 1 1 1 100 10 100 1 100OutputYes 1 10 1 100Input10 7 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 2 1 1 1 1 2 2 1 1 1 1 2 2 1 1 1 1 2 2 1 1 1 1 2 2 1 1 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1OutputYes 1 1 1 1 1 1 1Input2 5 2 2 1 1 1 1 1 2 2 2OutputNoNoteIn the first example, the array $$$[1, 10, 1, 100]$$$ differs from first and second copies in just one position, and from the third copy in two positions.In the second example, array $$$[1, 1, 1, 1, 1, 1, 1]$$$ is the same as the first copy and differs from all other copies in at most two positions.In the third example, there is no array differing in at most two positions from every database's copy.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "c5dad8f9", "template_md5": "35d339e4", "result": "You have $n$ copies of an array of length $m$. Each element in the array can be between 1 and $10^9$.  At most two elements in each copy have been changed.  \n\nYour task is to find the original array. If there is no original array that satisfies the conditions, print \"No\". Otherwise, print \"Yes\" and the original array. \n\n**Input:**\n\n* The first line contains two integers, $n$ and $m$ ($2 \\le n$, $1 \\le m$, $n \\cdot m \\le 250,000$).\n* The next $n$ lines each contain $m$ integers representing the elements of a copy of the array.\n\n**Output:**\n\n* If there is a valid original array, print \"Yes\" followed by the original array.\n* If there is no valid original array, print \"No\"."}, {"prompt_md5": "fb249c3c", "template_md5": "465699a0", "result": "You have multiple copies of a list of numbers. Each copy might have at most two numbers changed.  Find a list of numbers that matches all the copies with at most two changes per copy. If no such list exists, say so."}]}