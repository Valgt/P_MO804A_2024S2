{"uid": "1728-G", "url": "https://codeforces.com/contest/1728/problem/G", "tags": ["binary search", " bitmasks", " brute force", " combinatorics", " dp", " math", " two pointers"], "title": "1728-G", "statement": "G. Illuminationtime limit per test8 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputConsider a segment $$$[0, d]$$$ of the coordinate line. There are $$$n$$$ lanterns and $$$m$$$ points of interest in this segment.For each lantern, you can choose its power — an integer between $$$0$$$ and $$$d$$$ (inclusive). A lantern with coordinate $$$x$$$ illuminates the point of interest with coordinate $$$y$$$ if $$$|x - y|$$$ is less than or equal to the power of the lantern.A way to choose the power values for all lanterns is consideredvalidif every point of interest is illuminated by at least one lantern.You have to process $$$q$$$ queries. Each query is represented by one integer $$$f_i$$$. To answer the $$$i$$$-th query, you have to:add a lantern on coordinate $$$f_i$$$;calculate the number of valid ways to assign power values to all lanterns, and print it modulo $$$998244353$$$;remove the lantern you just added.InputThe first line contains three integers $$$d$$$, $$$n$$$ and $$$m$$$ ($$$4 \\\\le d \\\\le 3 \\\\cdot 10^5$$$; $$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$; $$$1 \\\\le m \\\\le 16$$$) — the size of the segment, the number of lanterns and the number of points of interest, respectively.The second line contains $$$n$$$ integers $$$l_1, l_2, \\\\dots, l_n$$$ ($$$1 \\\\le l_i \\\\le d - 1$$$), where $$$l_i$$$ is the coordinate of the $$$i$$$-th lantern.The third line contains $$$m$$$ integers $$$p_1, p_2, \\\\dots, p_m$$$ ($$$1 \\\\le p_i \\\\le d - 1$$$), where $$$p_i$$$ is the coordinate of the $$$i$$$-th point of interest.The fourth line contains one integer $$$q$$$ ($$$1 \\\\le q \\\\le 5 \\\\cdot 10^5$$$) — the number of queries.The fifth line contains $$$q$$$ integers $$$f_1, f_2, \\\\dots, f_q$$$ ($$$1 \\\\le f_i \\\\le d - 1$$$), where $$$f_i$$$ is the integer representing the $$$i$$$-th query.Additional constraint on the input: during the processing of each query, no coordinate contains more than one object (i. e. there cannot be two or more lanterns with the same coordinate, two or more points of interest with the same coordinate, or a lantern and a point of interest with the same coordinate).OutputFor each query, print one integer — the answer to it, taken modulo $$$998244353$$$.ExamplesInput6 1 1 4 3 3 2 1 5Output48 47 47Input6 1 2 4 2 5 2 1 3Output44 46Input20 1 2 11 15 7 1 8Output413Input20 3 5 5 7 18 1 6 3 10 19 5 4 17 15 8 9Output190431 187503 188085 189903 189708", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0b582707", "template_md5": "35d339e4", "result": "You are given a line segment of length $d$. There are $n$ lanterns and $m$ points of interest on this segment.  \n\nEach lantern can have a power level between 0 and $d$ (inclusive). A lantern at coordinate $x$ illuminates a point of interest at coordinate $y$ if the distance between them ($|x-y|$) is less than or equal to the lantern's power.\n\nYou need to determine the number of valid ways to assign power levels to all lanterns such that every point of interest is illuminated by at least one lantern.\n\nYou will be given $q$ queries. Each query adds a new lantern at a specific coordinate $f_i$ and asks for the number of valid power assignments. After each query, the newly added lantern is removed.\n\n**Input:**\n\n* $d$, $n$, $m$: The length of the segment, the number of lanterns, and the number of points of interest, respectively.\n* $l_1, l_2, ..., l_n$: The coordinates of the existing lanterns.\n* $p_1, p_2, ..., p_m$: The coordinates of the points of interest.\n* $q$: The number of queries.\n* $f_1, f_2, ..., f_q$: The coordinates of the lanterns to be added in each query.\n\n**Output:**\n\nFor each query, print the number of valid power assignments modulo 998244353."}, {"prompt_md5": "cba2e7be", "template_md5": "465699a0", "result": "You have a line segment. There are existing points on this line. You can add new points to the line. For each point, you can set a power level.  A point's power determines how far it can \"reach\" and illuminate other points.  \n\nYou need to figure out how many ways you can set the power levels for all the points so that every existing point is illuminated by at least one other point.  You will be asked to add a new point multiple times and calculate the number of valid power level combinations after each addition, then remove the newly added point."}]}