{"uid": "1423-C", "url": "https://codeforces.com/contest/1423/problem/C", "tags": ["divide and conquer", " graphs", " trees"], "title": "1423-C", "statement": "C. Dušan's Railwaytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAs you may already know, Dušan is keen on playing with railway models. He has a big map with cities that are connected with railways. His map can be seen as a graph where vertices are cities and the railways connecting them are the edges. So far, the graph corresponding to his map is a tree. As you already know, a tree is a connected acyclic undirected graph.He is curious to find out whether his railway can be optimized somehow. He wants to add so-calledshortcuts, which are also railways connecting pairs of cities. This shortcut willrepresentthe railways in the unique path in the tree between the pair of cities it connects. Since Dušan doesn't like repeating the railways, he has also defined good paths in his newly obtained network (notice that after adding the shortcuts, his graph is no more a tree). He calls a pathgood, if no edge appears more than once, either as a regular railway edge or as an edge represented by some shortcut (Every shortcut in a good path has length 1, but uses up all the edges it represents - they can't appear again in that path). Having defined good paths, he definesgood distancebetween two cities to be the length of the shortest good path between them. Finally, theshortcutting diameterof his network is the largest good distance between any two cities.Now he is curious to find out whether it is possible to achieve shortcutting diameter less or equal than $$$k$$$, while adding as few shortcuts as possible.Your solution should add no more than $$$\\\\mathbf{10 \\\\cdot n}$$$ shortcuts.InputThe first line in the standard input contains an integer $$$n$$$ ($$$1 \\\\le n \\\\le 10^4$$$), representing the number of the cities in Dušan's railway map, and an integer k ($$$3 \\\\le k \\\\le n$$$) representing the shortcutting diameter that he wants to achieve.Each of the following $$$n - 1$$$ lines will contain two integers $$$u_i$$$ and $$$v_i$$$ ($$$1 \\\\le u_i, v_i \\\\le n, u_i \\\\neq v_i$$$), meaning that there is a railway between cities $$$u_i$$$ and $$$v_i$$$.OutputThe first line of the output should contain a number $$$t$$$ representing the number of the shortcuts that were added.Each of the following $$$t$$$ lines should contain two integers $$$u_i$$$ and $$$v_i$$$, signifying that a shortcut is added between cities $$$u_i$$$ and $$$v_i$$$.ExampleInput10 3 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10Output8 3 7 3 5 3 6 3 1 7 9 7 10 7 4 7 5NoteNotice that adding a shortcut between all cities and city 1 will make a graph theoretic diameter become 2. On the other hand, the paths obtained that way might not be good, since some of the edges might get duplicated. In the example, adding a shortcut between all cities and city 1 doesn't create a valid solution, because for cities 5 and 10 the path that uses shortcuts 5-1 and 1-10 is not valid because it uses edges 1-2, 2-3, 3-4, 4-5 twice.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "aca704c1", "template_md5": "35d339e4", "result": "You are given a tree with $n$ nodes.  You can add shortcuts between pairs of nodes. A shortcut represents all the edges in the unique path between the two nodes it connects.  \n\nA path is considered \"good\" if no edge is used more than once, either as a regular edge or as part of a shortcut. The \"good distance\" between two nodes is the length of the shortest good path between them.\n\nThe \"shortcutting diameter\" is the largest good distance between any two nodes in the graph.\n\nYour task is to find the minimum number of shortcuts needed to make the shortcutting diameter less than or equal to $k$. You can add at most $10n$ shortcuts.\n\n**Input:**\n\n* The first line contains two integers, $n$ (the number of nodes) and $k$ (the desired shortcutting diameter).\n* The next $n-1$ lines each contain two integers, $u_i$ and $v_i$, representing an edge between nodes $u_i$ and $v_i$.\n\n**Output:**\n\n* The first line contains the number of shortcuts added.\n* The next $t$ lines each contain two integers, $u_i$ and $v_i$, representing a shortcut between nodes $u_i$ and $v_i$."}, {"prompt_md5": "348d902e", "template_md5": "465699a0", "result": "You are given a connected graph with $n$ nodes.  You can add shortcuts between pairs of nodes, where each shortcut represents a path in the original graph.  Find the minimum number of shortcuts needed to make the longest shortest path between any two nodes less than or equal to $k$."}]}