{"uid": "1616-F", "url": "https://codeforces.com/contest/1616/problem/F", "tags": ["brute force", " graphs", " math", " matrices"], "title": "1616-F", "statement": "F. Tricolor Trianglestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a simple undirected graph with $$$n$$$ vertices and $$$m$$$ edges. Edge $$$i$$$ is colored in the color $$$c_i$$$, which is either $$$1$$$, $$$2$$$, or $$$3$$$, or left uncolored (in this case, $$$c_i = -1$$$).You need to color all of the uncolored edges in such a way that for any three pairwise adjacent vertices $$$1 \\\\leq a < b < c \\\\leq n$$$, the colors of the edges $$$a \\\\leftrightarrow b$$$, $$$b \\\\leftrightarrow c$$$, and $$$a \\\\leftrightarrow c$$$ are either pairwise different, or all equal. In case no such coloring exists, you need to determine that.InputThe first line of input contains one integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10$$$): the number of test cases.The following lines contain the description of the test cases.In the first line you are given two integers $$$n$$$ and $$$m$$$ ($$$3 \\\\leq n \\\\leq 64$$$, $$$0 \\\\leq m \\\\leq \\\\min(256, \\\\frac{n(n-1)}{2})$$$): the number of vertices and edges in the graph.Each of the next $$$m$$$ lines contains three integers $$$a_i$$$, $$$b_i$$$, and $$$c_i$$$ ($$$1 \\\\leq a_i, b_i \\\\leq n$$$, $$$a_i \\\\ne b_i$$$, $$$c_i$$$ is either $$$-1$$$, $$$1$$$, $$$2$$$, or $$$3$$$), denoting an edge between $$$a_i$$$ and $$$b_i$$$ with color $$$c_i$$$. It is guaranteed that no two edges share the same endpoints.OutputFor each test case, print $$$m$$$ integers $$$d_1, d_2, \\\\ldots, d_m$$$, where $$$d_i$$$ is the color of the $$$i$$$-th edge in your final coloring. If there is no valid way to finish the coloring, print $$$-1$$$.ExampleInput4 3 3 1 2 1 2 3 2 3 1 -1 3 3 1 2 1 2 3 1 3 1 -1 4 4 1 2 -1 2 3 -1 3 4 -1 4 1 -1 3 3 1 2 1 2 3 1 3 1 2Output1 2 3  1 1 1  1 2 2 3  -1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "db4dcdc9", "template_md5": "35d339e4", "result": "You are given a graph with $n$ vertices and $m$ edges. Each edge has a color, which can be 1, 2, 3, or uncolored (-1). \n\nYou need to color all the uncolored edges so that for any three vertices $a$, $b$, and $c$ where $a < b < c$, the edges connecting these vertices ( $a$ to $b$, $b$ to $c$, and $a$ to $c$) either all have the same color or all have different colors.\n\nIf it's impossible to color the edges this way, output -1. Otherwise, output the colors you assigned to each edge."}, {"prompt_md5": "d937d853", "template_md5": "465699a0", "result": "You are given a graph with nodes and edges. Some edges have colors (1, 2, or 3), while others are uncolored.  You need to color the uncolored edges so that for any three connected nodes, the colors of the edges between them are either all the same or all different. If this is impossible, say so."}]}