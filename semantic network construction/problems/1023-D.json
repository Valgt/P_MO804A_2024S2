{"uid": "1023-D", "url": "https://codeforces.com/contest/1023/problem/D", "tags": ["constructive algorithms", " data structures"], "title": "1023-D", "statement": "D. Array Restorationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputInitially there was an array $$$a$$$ consisting of $$$n$$$ integers. Positions in it are numbered from $$$1$$$ to $$$n$$$.Exactly $$$q$$$ queries were performed on the array. During the $$$i$$$-th query some segment $$$(l_i, r_i)$$$ $$$(1 \\\\le l_i \\\\le r_i \\\\le n)$$$ was selected and values of elements on positions from $$$l_i$$$ to $$$r_i$$$ inclusive got changed to $$$i$$$. The order of the queries couldn't be changed and all $$$q$$$ queries were applied. It is also known that every position from $$$1$$$ to $$$n$$$ got covered by at least one segment.We could have offered you the problem about checking if some given array (consisting of $$$n$$$ integers with values from $$$1$$$ to $$$q$$$) can be obtained by the aforementioned queries. However, we decided that it will come too easy for you.So the enhancement we introduced to it is the following. Some set of positions (possibly empty) in this array is selected and values of elements on these positions are set to $$$0$$$.Your task is to check if this array can be obtained by the aforementioned queries. Also if it can be obtained then restore this array.If there are multiple possible arrays then print any of them.InputThe first line contains two integers $$$n$$$ and $$$q$$$ ($$$1 \\\\le n, q \\\\le 2 \\\\cdot 10^5$$$) — the number of elements of the array and the number of queries perfomed on it.The second line contains $$$n$$$ integer numbers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$0 \\\\le a_i \\\\le q$$$) — the resulting array. If element at some position $$$j$$$ is equal to $$$0$$$ then the value of element at this position can be any integer from $$$1$$$ to $$$q$$$.OutputPrint \"YES\" if the array $$$a$$$ can be obtained by performing $$$q$$$ queries. Segments $$$(l_i, r_i)$$$ $$$(1 \\\\le l_i \\\\le r_i \\\\le n)$$$ are chosen separately for each query. Every position from $$$1$$$ to $$$n$$$ should be covered by at least one segment.Otherwise print \"NO\".If some array can be obtained then print $$$n$$$ integers on the second line — the $$$i$$$-th number should be equal to the $$$i$$$-th element of the resulting array and should have value from $$$1$$$ to $$$q$$$. This array should be obtainable by performing exactly $$$q$$$ queries.If there are multiple possible arrays then print any of them.ExamplesInput4 31 0 2 3OutputYES1 2 2 3Input3 1010 10 10OutputYES10 10 10Input5 66 5 6 2 2OutputNOInput3 50 0 0OutputYES5 4 2NoteIn the first example you can also replace $$$0$$$ with $$$1$$$ but not with $$$3$$$.In the second example it doesn't really matter what segments to choose until query $$$10$$$ when the segment is $$$(1, 3)$$$.The third example showcases the fact that the order of queries can't be changed, you can't firstly set $$$(1, 3)$$$ to $$$6$$$ and after that change $$$(2, 2)$$$ to $$$5$$$. The segment of $$$5$$$ should be applied before segment of $$$6$$$.There is a lot of correct resulting arrays for the fourth example.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e35b0b3d", "template_md5": "35d339e4", "result": "You are given an array of $n$ integers, $a$, where each element is between 0 and $q$ (inclusive).  \n\nYou know that the array was created by performing $q$ operations. Each operation modifies a segment of the array.  \n\n* In the $i$-th operation, all elements in the segment from index $l_i$ to $r_i$ (inclusive) are changed to the value $i$.\n\nYou are also given that every position in the array was modified by at least one operation.\n\n**Your task is to determine if the given array $a$ can be created using these operations.**\n\n* If yes, print \"YES\" and reconstruct one possible array that could have been created using the operations.\n* If no, print \"NO\". \n\n\n\n**Input:**\n\n* The first line contains two integers, $n$ and $q$ ($1 \\le n, q \\le 2 \\cdot 10^5$), representing the size of the array and the number of operations.\n* The second line contains $n$ integers, $a_1, a_2, ..., a_n$ ($0 \\le a_i \\le q$), representing the resulting array.\n\n**Output:**\n\n* Print \"YES\" if the array $a$ can be created using the operations.\n* If yes, print $n$ integers on the next line, representing one possible array that could have been created using the operations.\n* If no, print \"NO\"."}, {"prompt_md5": "72d212ae", "template_md5": "465699a0", "result": "You are given a list of numbers.  Some numbers in the list are 0.  You know that the list was created by repeatedly selecting a range of numbers in the list and changing all the numbers in that range to the same value.  You need to determine if it's possible to create the given list using this process, and if so, find one way to do it."}]}