{"uid": "1954-B", "url": "https://codeforces.com/contest/1954/problem/B", "tags": ["implementation", " math"], "title": "1954-B", "statement": "B. Make It Uglytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's call an array $$$a$$$beautifulif you can make all its elements the same by using the following operation an arbitrary number of times (possibly, zero):choose an index $$$i$$$ ($$$2 \\\\le i \\\\le |a| - 1$$$) such that $$$a_{i - 1} = a_{i + 1}$$$, and replace $$$a_i$$$ with $$$a_{i - 1}$$$.You are given a beautiful array $$$a_1, a_2, \\\\dots, a_n$$$. What is the minimum number of elements you have to remove from it in order for it to stop being beautiful? Swapping elements is prohibited. If it is impossible to do so, then output-1.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 3 \\\\cdot 10^5$$$).The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\le a_i \\\\le n$$$).Additional constraints on the input:in every test case, the given array $$$a$$$ is beautiful;the sum of $$$n$$$ over all test cases does not exceed $$$3 \\\\cdot 10^5$$$.OutputFor each test case, output a single integer — the minimum number of elements you have to remove from the array $$$a$$$ in order for it to stop being beautiful. If it is impossible, then output-1.ExampleInput432 2 251 2 1 2 11173 3 3 5 3 3 3Output-1 1 -1 3NoteIn the first testcase, it is impossible to modify the array in such a way that it stops being beautiful. An array consisting of identical numbers will remain beautiful no matter how many numbers we remove from it.In the second testcase, you can remove the number at the index $$$5$$$, for example.The resulting array will be $$$[1, 2, 1, 2]$$$. Let's check if it is beautiful. Two operations are available:Choose $$$i = 2$$$: the array becomes $$$[1, 1, 1, 2]$$$. No more operations can be applied to it, and the numbers are not all the same.Choose $$$i = 3$$$ instead: the array becomes $$$[1, 2, 2, 2]$$$. No more operations can be applied to it either, and the numbers are still not all the same.Thus, the array $$$[1, 2, 1, 2]$$$ is not beautiful.In the fourth testcase, you can remove the first three elements, for example. The resulting array $$$[5, 3, 3, 3]$$$ is not beautiful.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "1f1f24cf", "template_md5": "35d339e4", "result": "You are given an array of integers. You can perform the following operation any number of times:\n\n* Choose an index $i$ where $2 \\le i \\le n-1$ and $a_{i-1} = a_{i+1}$.\n* Replace $a_i$ with $a_{i-1}$.\n\nThe goal is to find the minimum number of elements you need to remove from the array so that it can no longer be made to have all elements equal using the above operation. If it's impossible to make the array not beautiful, output -1. \n\n**Input:**\n\n* The first line contains the number of test cases $t$.\n* For each test case:\n    * The first line contains the size of the array $n$.\n    * The second line contains $n$ integers representing the array $a$.\n\n**Output:**\n\n* For each test case, output the minimum number of elements to remove. If it's impossible, output -1."}, {"prompt_md5": "7f123154", "template_md5": "465699a0", "result": "You are given a list of numbers. You can repeatedly choose a number in the middle of the list and replace it with the number before it, as long as the numbers on either side of the chosen number are the same. What is the fewest numbers you need to remove from the list so that you can no longer make this replacement? If it's impossible to make the list not follow these rules, output -1."}]}