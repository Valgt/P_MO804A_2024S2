{"uid": "1621-E", "url": "https://codeforces.com/contest/1621/problem/E", "tags": ["binary search", " data structures", " dp", " greedy", " implementation", " sortings"], "title": "1621-E", "statement": "E. New Schooltime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have decided to open a new school. You have already found $$$n$$$ teachers and $$$m$$$ groups of students. The $$$i$$$-th group of students consists of $$$k_i \\\\geq 2$$$ students. You know age of each teacher and each student. The ages of teachers are $$$a_1, a_2, \\\\ldots, a_n$$$ and the ages of students of the $$$i$$$-th group are $$$b_{i, 1}, b_{i, 2}, \\\\ldots, b_{i, k_i}$$$.Tostart lessonsyou should assign the teacher to each group of students. Such assignment should satisfy the following requirements:To each group exactly one teacher assigned.To each teacher at most $$$1$$$ group of students assigned.The average of students' ages in each group doesn't exceed the age of the teacher assigned to this group.The average of set $$$x_1, x_2, \\\\ldots, x_k$$$ of $$$k$$$ integers is $$$\\\\frac{x_1 + x_2 + \\\\ldots + x_k}{k}$$$.Recently you have heard that one of the students will refuse to study in your school. After this, the size of one group will decrease by $$$1$$$ while all other groups will remain unchanged.You don't know who will refuse to study. For each student determine if you can start lessons in case of his refusal.Note, that it isnot guaranteedthat it is possible to start lessons before any refusal.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 1000$$$) — the number of test cases.The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\\\leq m \\\\leq n \\\\leq 10^5$$$) — the number of teachers and the number of groups of students.The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\leq a_i \\\\leq 10^5$$$) — the ages of teachers.The next $$$2m$$$ lines contains descriptions of groups.The first line of description of group contains a single integer $$$k_i$$$ ($$$2 \\\\leq k_i \\\\leq 10^5$$$) — the number of students in this group.The second line of description of group contains $$$k_i$$$ integers $$$b_{i, 1}, b_{i, 2}, \\\\ldots, b_{i, k_i}$$$ ($$$1 \\\\leq b_{i, j} \\\\leq 10^5$$$) — the ages of students of this group.It is guaranteed that the total sum of $$$n$$$ over all test cases doesn't exceed $$$10^5$$$ and that the total sum of $$$k_1 + k_2 + \\\\ldots + k_m$$$ over all test cases doesn't exceed $$$2 \\\\cdot 10^5$$$OutputFor each test case output string of symbols $$$0$$$ and $$$1$$$ of length $$$k_1 + k_2 + \\\\ldots + k_m$$$. The $$$i$$$-th symbol of this string should be equals $$$1$$$ if it is possible to start lessons in case of the $$$i$$$-th student refuse and it should be equals $$$0$$$ otherwise.Students are numbered by integers from $$$1$$$ to $$$k_1 + k_2 + \\\\ldots + k_m$$$ in the order they appear in the input. Thus, students of the $$$1$$$-st group are numbered by integers $$$1$$$, $$$2$$$, $$$\\\\ldots$$$, $$$k_1$$$, students of the $$$2$$$-nd group are numbered by integers $$$k_1 + 1$$$, $$$k_1 + 2$$$, $$$\\\\ldots$$$, $$$k_1 + k_2$$$ and so on.ExampleInput21 130325 16 374 29 12 12 624 53111 11 11Output101 00100NoteIn the first test case there is one group of students with average age $$$\\\\frac{25+16+37}{3}=26$$$ and one teacher with age $$$30$$$. There exists only one assignment that allows to start lessons.If the student with age $$$16$$$ will refuse to study, the average age of students in this group will become $$$\\\\frac{25+37}{2}=31$$$ so there won't be any assignment that allows to start lessons.In the second test case it is impossible to start lessons initially. However, if the $$$3$$$-rd student with age $$$111$$$ will refuse to study, the average ages of groups will become $$$\\\\frac{4 + 5}{2}=4.5$$$ and $$$\\\\frac{11+11}{2} = 11$$$ correspondingly. Then it is possible to assing the first group to the first teacher and the second group to the third teacher.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "746d56c6", "template_md5": "35d339e4", "result": "You have $n$ teachers and $m$ groups of students. The $i$-th group has $k_i$ students. You know the age of each teacher ($a_1, a_2, ..., a_n$) and each student ($b_{i,1}, b_{i,2}, ..., b_{i,k_i}$).\n\nYou need to assign each group of students to exactly one teacher, with the following rules:\n\n* Each teacher can only be assigned to one group.\n* The average age of students in each group must be less than or equal to the age of the assigned teacher.\n\nOne student will leave the school, reducing the size of one group by 1.  For each student, determine if it's possible to assign teachers to the groups after that student leaves, following the rules above.\n\n**Input:**\n\n* $t$: the number of test cases\n* For each test case:\n    * $n$: the number of teachers\n    * $m$: the number of groups of students\n    * $a_1, a_2, ..., a_n$: the ages of the teachers\n    * For each group:\n        * $k_i$: the number of students in the group\n        * $b_{i,1}, b_{i,2}, ..., b_{i,k_i}$: the ages of the students in the group\n\n**Output:**\n\n* For each test case, output a string of 0s and 1s, where:\n    * 1 means it's possible to assign teachers after the corresponding student leaves.\n    * 0 means it's not possible."}, {"prompt_md5": "7f304085", "template_md5": "465699a0", "result": "You have teachers and groups of students. Each group has a certain number of students with specific ages. You need to assign each group to a teacher, following these rules:\n\n* Each group gets one teacher.\n* Each teacher can only teach one group.\n* The average age of students in a group must be less than or equal to the teacher's age.\n\nOne student might leave from each group.  For each student, determine if it's still possible to assign teachers to groups after they leave, following the rules above."}]}