{"uid": "843-E", "url": "https://codeforces.com/contest/843/problem/E", "tags": ["flows", " graphs"], "title": "843-E", "statement": "E. Maximum Flowtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a directed graph, consisting ofnvertices andmedges. The verticessandtare marked as source and sink correspondingly. Additionally, there are no edges ending atsand there are no edges beginning int.The graph was constructed in a following way: initially each edge had capacityci> 0. A maximum flow with source atsand sink attwas constructed in this flow network. Let's denotefias the value of flow passing through edge with indexi. Next, all capacitiesciand flow valuefiwere erased. Instead, indicatorsgiwere written on edges — if flow value passing through edgeiwas positive, i.e.1iffi> 0and0otherwise.Using the graph and valuesgi, find out what is theminimumpossible number of edges in the initial flow network that could be saturated (the passing flow is equal to capacity, i.e.fi=ci). Also construct the corresponding flow network with maximum flow in it.A flow in directed graph is described by flow valuesfion each of the edges so that the following conditions are satisfied:for each vertex, except source and sink, total incoming flow and total outcoming flow are equal,for each edge0 ≤fi≤ciA flow is maximum if the difference between the sum of flow values on edges from the source, and the sum of flow values on edges to the source (there are no such in this problem), is maximum possible.InputThe first line of input data contains four positive integersn,m,s,t(2 ≤n≤ 100,1 ≤m≤ 1000,1 ≤s,t≤n,s≠t) — the number of vertices, the number of edges, index of source vertex and index of sink vertex correspondingly.Each of nextmlines of input data contain non-negative integersui,vi,gi(1 ≤ui,vi≤n,) — the beginning of edgei, the end of edgeiand indicator, which equals to1if flow value passing through edgeiwas positive and0if not.It's guaranteed that no edge connects vertex with itself. Also it's guaranteed that there are no more than one edge between each ordered pair of vertices and that there exists at least one network flow that satisfies all the constrains from input data.OutputIn the first line print single non-negative integerk— minimum number of edges, which should be saturated in maximum flow.In each of nextmlines print two integersfi,ci(1 ≤ci≤ 109,0 ≤fi≤ci) — the flow value passing through edgeiand capacity of edgei.This data should form a correct maximum flow in flow network. Also there must be exactlykedges with statementfi=cisatisfied. Also statementfi> 0must be true if and only ifgi= 1.If there are several possible answers, print any of them.ExampleInput5 6 1 51 2 12 3 13 5 11 4 14 3 04 5 1Output23 33 83 44 40 54 9NoteThe illustration for second sample case. The saturated edges are marked dark, while edges withgi= 0are marked with dotted line. The integer on edge is the index of this edge in input list.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a2051f12", "template_md5": "35d339e4", "result": "You are given a directed graph with $n$ vertices and $m$ edges.  Vertices $s$ and $t$ are the source and sink, respectively. There are no edges ending at $s$ and no edges beginning at $t$.\n\nThe graph was constructed as follows:\n\n1. Each edge initially had a capacity $c_i > 0$.\n2. A maximum flow was calculated from source $s$ to sink $t$ in this flow network. The flow value passing through edge $i$ was denoted as $f_i$.\n3. All capacities $c_i$ and flow values $f_i$ were erased.\n4. Instead, indicators $g_i$ were written on the edges: $g_i = 1$ if the flow value passing through edge $i$ was positive ($f_i > 0$), and $g_i = 0$ otherwise.\n\nUsing the graph and values $g_i$, determine the minimum number of edges in the initial flow network that could have been saturated (i.e., the flow value was equal to the capacity, $f_i = c_i$).  Also, construct the corresponding flow network with maximum flow.\n\n**Input:**\n\n* The first line contains four integers: $n$, $m$, $s$, and $t$ (2 ≤ $n$ ≤ 100, 1 ≤ $m$ ≤ 1000, 1 ≤ $s$, $t$ ≤ $n$, $s \\neq t$) — the number of vertices, the number of edges, the index of the source vertex, and the index of the sink vertex, respectively.\n* Each of the next $m$ lines contains three integers: $u_i$, $v_i$, and $g_i$ (1 ≤ $u_i$, $v_i$ ≤ $n$) — the beginning of edge $i$, the end of edge $i$, and the indicator, respectively.\n\n**Output:**\n\n* The first line contains a single non-negative integer $k$ — the minimum number of edges that should be saturated in the maximum flow.\n* Each of the next $m$ lines contains two integers: $f_i$ and $c_i$ (1 ≤ $c_i$ ≤ 10⁹, 0 ≤ $f_i$ ≤ $c_i$) — the flow value passing through edge $i$ and the capacity of edge $i$, respectively. This data should form a correct maximum flow in the flow network. There must be exactly $k$ edges with $f_i = c_i$ satisfied. Also, $f_i > 0$ must be true if and only if $g_i = 1$.\n\n\n\nIf there are several possible answers, print any of them."}, {"prompt_md5": "c0f498d0", "template_md5": "465699a0", "result": "You are given a network of connections with a starting point and an endpoint.  Some connections have a history of having traffic flow through them.  You need to figure out the minimum number of connections that must have been at full capacity in the past to create the observed traffic patterns.  You also need to reconstruct a possible network with maximum traffic flow that meets these conditions."}]}