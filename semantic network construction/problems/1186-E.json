{"uid": "1186-E", "url": "https://codeforces.com/contest/1186/problem/E", "tags": ["divide and conquer", " implementation", " math"], "title": "1186-E", "statement": "E. Vus the Cossack and a Fieldtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVus the Cossack has a field with dimensions $$$n \\\\times m$$$, which consists of \"0\" and \"1\". He is building an infinite field from this field. He is doing this in this way:He takes the current field and finds a new inverted field. In other words, the new field will contain \"1\" only there, where \"0\" was in the current field, and \"0\" there, where \"1\" was.To the current field, he adds the inverted field to the right.To the current field, he adds the inverted field to the bottom.To the current field, he adds the current field to the bottom right.He repeats it.For example, if the initial field was:$$$\\\\begin{matrix} 1 & 0 & \\\\\\\\ 1 & 1 & \\\\\\\\ \\\\end{matrix}$$$After the first iteration, the field will be like this:$$$\\\\begin{matrix} 1 & 0 & 0 & 1 \\\\\\\\ 1 & 1 & 0 & 0 \\\\\\\\ 0 & 1 & 1 & 0 \\\\\\\\ 0 & 0 & 1 & 1 \\\\\\\\ \\\\end{matrix}$$$After the second iteration, the field will be like this:$$$\\\\begin{matrix} 1 & 0 & 0 & 1 & 0 & 1 & 1 & 0 \\\\\\\\ 1 & 1 & 0 & 0 & 0 & 0 & 1 & 1 \\\\\\\\ 0 & 1 & 1 & 0 & 1 & 0 & 0 & 1 \\\\\\\\ 0 & 0 & 1 & 1 & 1 & 1 & 0 & 0 \\\\\\\\ 0 & 1 & 1 & 0 & 1 & 0 & 0 & 1 \\\\\\\\ 0 & 0 & 1 & 1 & 1 & 1 & 0 & 0 \\\\\\\\ 1 & 0 & 0 & 1 & 0 & 1 & 1 & 0 \\\\\\\\ 1 & 1 & 0& 0 & 0 & 0 & 1 & 1 \\\\\\\\ \\\\end{matrix}$$$And so on...Let's numerate lines from top to bottom from $$$1$$$ to infinity, and columns from left to right from $$$1$$$ to infinity. We call the submatrix $$$(x_1, y_1, x_2, y_2)$$$ all numbers that have coordinates $$$(x, y)$$$ such that $$$x_1 \\\\leq x \\\\leq x_2$$$ and $$$y_1 \\\\leq y \\\\leq y_2$$$.The Cossack needs sometimes to find the sum of all the numbers in submatrices. Since he is pretty busy right now, he is asking you to find the answers!InputThe first line contains three integers $$$n$$$, $$$m$$$, $$$q$$$ ($$$1 \\\\leq n, m \\\\leq 1\\\\,000$$$, $$$1 \\\\leq q \\\\leq 10^5$$$) — the dimensions of the initial matrix and the number of queries.Each of the next $$$n$$$ lines contains $$$m$$$ characters $$$c_{ij}$$$ ($$$0 \\\\leq c_{ij} \\\\leq 1$$$) — the characters in the matrix.Each of the next $$$q$$$ lines contains four integers $$$x_1$$$, $$$y_1$$$, $$$x_2$$$, $$$y_2$$$ ($$$1 \\\\leq x_1 \\\\leq x_2 \\\\leq 10^9$$$, $$$1 \\\\leq y_1 \\\\leq y_2 \\\\leq 10^9$$$) — the coordinates of the upper left cell and bottom right cell, between which you need to find the sum of all numbers.OutputFor each query, print the answer.ExamplesInput2 2 5 10 11 1 1 8 8 2 4 5 6 1 2 7 8 3 3 6 8 5 6 7 8Output32 5 25 14 4Input2 3 7 100 101 4 12 5 17 5 4 9 4 1 4 13 18 12 1 14 9 3 10 7 18 3 15 12 17 8 6 8 12Output6 3 98 13 22 15 3NoteThe first example is explained in the legend.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "8f0f83f5", "template_md5": "35d339e4", "result": "You are given a 2D grid of 0s and 1s.  This grid is repeatedly transformed as follows:\n\n1. Create a new grid that is the inverse of the current grid (swap 0s and 1s).\n2. Append the new grid to the right of the current grid.\n3. Append the new grid to the bottom of the current grid.\n4. Append the current grid to the bottom right corner of the current grid.\n\nRepeat steps 1-4.\n\nYou are given the size of the initial grid ($n$ rows, $m$ columns) and a number of queries ($q$). Each query consists of four integers ($x_1$, $y_1$, $x_2$, $y_2$) representing the top-left and bottom-right corners of a subgrid. For each query, find the sum of all the elements in the specified subgrid."}, {"prompt_md5": "211330d6", "template_md5": "465699a0", "result": "You are given a 2D grid of 0s and 1s.  The grid grows infinitely in size according to a specific rule:\n\n1. Create a mirrored version of the grid (swap 0s and 1s).\n2. Append the mirrored grid to the right of the original.\n3. Append the mirrored grid to the bottom of the original.\n4. Append the original grid to the bottom right corner.\n\nRepeat steps 1-4.\n\nYou are then given queries asking for the sum of all 0s and 1s within a specified rectangular region of this growing grid.  Find the sum for each query."}]}