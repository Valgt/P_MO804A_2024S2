{"uid": "1528-C", "url": "https://codeforces.com/contest/1528/problem/C", "tags": ["data structures", " dfs and similar", " greedy", " trees"], "title": "1528-C", "statement": "C. Trees of Tranquillitytime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSoroush and Keshi each have a labeled and rooted tree on $$$n$$$ vertices. Both of their trees are rooted from vertex $$$1$$$.Soroush and Keshi used to be at war. After endless decades of fighting, they finally became allies to prepare a Codeforces round. To celebrate this fortunate event, they decided to make a memorial graph on $$$n$$$ vertices.They add an edge between vertices $$$u$$$ and $$$v$$$ in the memorial graph ifbothof the following conditions hold:One of $$$u$$$ or $$$v$$$ is the ancestor of the other in Soroush's tree.Neither of $$$u$$$ or $$$v$$$ is the ancestor of the other in Keshi's tree.Here vertex $$$u$$$ is considered ancestor of vertex $$$v$$$, if $$$u$$$ lies on the path from $$$1$$$ (the root) to the $$$v$$$.Popping out of nowhere, Mashtali tried to find the maximum clique in the memorial graph for no reason. He failed because the graph was too big.Help Mashtali by finding the size of the maximum clique in the memorial graph.As a reminder, clique is a subset of vertices of the graph, each two of which are connected by an edge.InputThe first line contains an integer $$$t$$$ $$$(1\\\\le t\\\\le 3 \\\\cdot 10^5)$$$ — the number of test cases. The description of the test cases follows.The first line of each test case contains an integer $$$n$$$ $$$(2\\\\le n\\\\le 3 \\\\cdot 10^5)$$$.The second line of each test case contains $$$n-1$$$ integers $$$a_2, \\\\ldots, a_n$$$ $$$(1 \\\\le a_i < i)$$$, $$$a_i$$$ being the parent of the vertex $$$i$$$ in Soroush's tree.The third line of each test case contains $$$n-1$$$ integers $$$b_2, \\\\ldots, b_n$$$ $$$(1 \\\\le b_i < i)$$$, $$$b_i$$$ being the parent of the vertex $$$i$$$ in Keshi's tree.It is guaranteed that the given graphs are trees.It is guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$3 \\\\cdot 10^5$$$.OutputFor each test case print a single integer — thesizeof the maximum clique in the memorial graph.ExampleInput4 4 1 2 3 1 2 3 5 1 2 3 4 1 1 1 1 6 1 1 1 1 2 1 2 1 2 2 7 1 1 3 4 4 5 1 2 1 4 2 5Output1 4 1 3NoteIn the first and third test cases, you can pick any vertex.In the second test case, one of the maximum cliques is $$$\\\\{2, 3, 4, 5\\\\}$$$.In the fourth test case, one of the maximum cliques is $$$\\\\{3, 4, 6\\\\}$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "cf58af21", "template_md5": "35d339e4", "result": "You are given two rooted trees, each with $n$ vertices.  The roots of both trees are vertex 1.\n\nFor each pair of vertices $u$ and $v$, determine if an edge exists between them in a new graph based on the following rules:\n\n*  One of $u$ or $v$ must be an ancestor of the other in the first tree.\n*  Neither $u$ nor $v$ can be ancestors of each other in the second tree.\n\nFind the size of the largest possible clique (a set of vertices where every pair of vertices is connected by an edge) in this new graph.\n\nInput:\n\n* The first line contains $t$ ($1 \\le t \\le 3 \\cdot 10^5$) - the number of test cases.\n* For each test case:\n    * The first line contains $n$ ($2 \\le n \\le 3 \\cdot 10^5$) - the number of vertices in each tree.\n    * The second line contains $n-1$ integers $a_2, a_3, ..., a_n$ ($1 \\le a_i < i$) - the parent of each vertex in the first tree.\n    * The third line contains $n-1$ integers $b_2, b_3, ..., b_n$ ($1 \\le b_i < i$) - the parent of each vertex in the second tree.\n\nOutput:\n\nFor each test case, print a single integer - the size of the largest clique in the new graph."}, {"prompt_md5": "7061843a", "template_md5": "465699a0", "result": "You are given two trees with the same number of nodes.  Each node in a tree is connected to its parent.  Find the largest group of nodes where each pair of nodes is connected in the combined tree, but only if one node is a descendant of the other in one of the original trees, and neither node is a descendant of the other in the other tree."}]}