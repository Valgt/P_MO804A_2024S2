{"uid": "1906-J", "url": "https://codeforces.com/contest/1906/problem/J", "tags": ["combinatorics", " dp"], "title": "1906-J", "statement": "J. Count BFS Graphtime limit per test1 secondmemory limit per test1024 megabytesinputstandard inputoutputstandard outputYou are currently researching a graph traversal algorithm called the Breadth First Search (BFS). Suppose you have an input graph of $$$N$$$ nodes (numbered from $$$1$$$ to $$$N$$$). The graph is represented by an adjacency matrix $$$M$$$, for which node $$$u$$$ can traverse to node $$$v$$$ if $$$M_{u, v}$$$ is $$$1$$$, otherwise it is $$$0$$$. Your algorithm will output the order the nodes are visited in the BFS. The pseudocode of the algorithm is presented as follows.BFS(M[1..N][1..N]):let A be an empty arraylet Q be an empty queueappend 1 to Apush 1 to Qwhile Q is not empty:pop the front element of Q into ufor v = 1 to N:if M[u][v] == 1 and v is not in A:append v to Apush v to Qreturn ADuring your research, you are interested in the following problem. Given an array $$$A$$$ such that $$$A$$$ is a permutation of $$$1$$$ to $$$N$$$ and $$$A_1 = 1$$$. How manysimple undirected graphwith $$$N$$$ nodes and adjacency matrix $$$M$$$ such that $$$\\\\text{BFS}(M) = A$$$? Since the answer can be very large, calculate the answer modulo $$$998\\\\,244\\\\,353$$$.A simple graph has no self-loop ($$$M_{i, i} = 0$$$ for $$$1 \\\\leq i \\\\leq N$$$) and there is at most one edge that connects a pair of nodes. In an undirected graph, if node $$$u$$$ is adjacent to node $$$v$$$, then node $$$v$$$ is also adjacent to node $$$u$$$; formally, $$$M_{u, v} = M_{v, u}$$$ for $$$1 \\\\leq u < v \\\\leq N$$$.Two graphs are considered different if there is an edge that exists in one graph but not the other. In other words, two graphs are considered different if their adjacency matrices are different.InputThe first line consists of an integer $$$N$$$ ($$$2 \\\\leq N \\\\leq 5000$$$).The second line consists of $$$N$$$ integers $$$A_i$$$. The array $$$A$$$ is a permutation of $$$1$$$ to $$$N$$$ and $$$A_1 = 1$$$.OutputOutput an integer representing the number of simple undirected graphs with $$$N$$$ nodes and adjacency matrix $$$M$$$ such that $$$\\\\text{BFS}(M) = A$$$. Since the answer can be very large, output the answer modulo $$$998\\\\,244\\\\,353$$$.ExamplesInput3 1 2 3Output3Input3 1 3 2Output1Input5 1 3 2 4 5Output17Input11 1 2 3 4 5 6 7 8 9 10 11Output379394847NoteExplanation for the sample input/output #1The following illustration shows all graphs that satisfy the requirements.Explanation for the sample input/output #2The only graph that satisfies the requirements is a graph with two edges: one that connects nodes $$$1$$$ and $$$3$$$, and another one that connects nodes $$$3$$$ and $$$2$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "306fcb94", "template_md5": "35d339e4", "result": "You are given a permutation of numbers from 1 to $N$ ($A_1 = 1$).  \n\nFind the number of simple undirected graphs with $N$ nodes where the Breadth First Search (BFS) starting from node 1 visits the nodes in the order given by $A$.  \n\nThe adjacency matrix of the graph represents the connections between nodes.  An edge exists between nodes $u$ and $v$ if and only if $M_{u,v} = 1$.  \n\nSince the answer can be very large, output the answer modulo $998244353$. \n\n**Constraints:**\n\n* $2 \\le N \\le 5000$ \n\n\n\nLet me know if you'd like me to elaborate on any part of the problem!"}, {"prompt_md5": "9acd8393", "template_md5": "465699a0", "result": "You are given a list of numbers representing the order nodes should be visited in a graph.  Find how many different simple graphs (no loops, each connection goes both ways) can produce this order when using a specific algorithm to explore the graph.  The number of nodes in the graph is also given.  The answer can be very large, so give the result modulo 998244353."}]}