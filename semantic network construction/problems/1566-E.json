{"uid": "1566-E", "url": "https://codeforces.com/contest/1566/problem/E", "tags": ["constructive algorithms", " dfs and similar", " dp", " greedy", " trees"], "title": "1566-E", "statement": "E. Buds Re-hangingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA tree is a connected graph without cycles. A rooted tree has a special vertex called the root. The parent of a vertex $$$v$$$ (different from root) is the previous to $$$v$$$ vertex on the shortest path from the root to the vertex $$$v$$$. Children of the vertex $$$v$$$ are all vertices for which $$$v$$$ is the parent.A vertex is a leaf if it has no children. We call a vertex abud, if the following three conditions are satisfied:it is not a root,it has at least one child, andall its children are leaves.You are given a rooted tree with $$$n$$$ vertices. The vertex $$$1$$$ is the root. In one operation you can choose any bud with all its children (they are leaves) and re-hang them to any other vertex of the tree. By doing that you delete the edge connecting the bud and its parent and add an edge between the bud and the chosen vertex of the tree. The chosen vertex cannot be the bud itself or any of its children. All children of the bud stay connected to the bud.What is the minimum number of leaves it is possible to get if you can make any number of the above-mentioned operations (possibly zero)?InputThe input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases. Description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the number of the vertices in the given tree.Each of the next $$$n-1$$$ lines contains two integers $$$u$$$ and $$$v$$$ ($$$1 \\\\le u, v \\\\le n$$$, $$$u \\\\neq v$$$) meaning that there is an edge between vertices $$$u$$$ and $$$v$$$ in the tree.It is guaranteed that the given graph is a tree.It is guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case print a single integer — the minimal number of leaves that is possible to get after some operations.ExampleInput5 7 1 2 1 3 1 4 2 5 2 6 4 7 6 1 2 1 3 2 4 2 5 3 6 2 1 2 7 7 3 1 5 1 3 4 6 4 7 2 1 6 2 1 2 3 4 5 3 4 3 6Output2 2 1 2 1NoteIn the first test case the tree looks as follows:Firstly you can choose a bud vertex $$$4$$$ and re-hang it to vertex $$$3$$$. After that you can choose a bud vertex $$$2$$$ and re-hang it to vertex $$$7$$$. As a result, you will have the following tree with $$$2$$$ leaves:It can be proved that it is the minimal number of leaves possible to get.In the second test case the tree looks as follows:You can choose a bud vertex $$$3$$$ and re-hang it to vertex $$$5$$$. As a result, you will have the following tree with $$$2$$$ leaves:It can be proved that it is the minimal number of leaves possible to get.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e1c7e631", "template_md5": "465699a0", "result": "You are given a tree-shaped structure with a designated starting point.  You can move groups of connected \"leaves\" (end points) to any other point in the structure, except for themselves or their direct children. What is the fewest number of leaves you can have after making these moves?"}, {"prompt_md5": "33458d75", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices, where vertex 1 is the root.  A \"bud\" is a vertex that:\n\n* Is not the root\n* Has at least one child\n* All of its children are leaves (vertices with no children)\n\nYou can perform the following operation any number of times:\n\n* Choose a bud and re-hang all of its children to any other vertex in the tree (except the bud itself or its children). This means removing the edges connecting the bud to its children and adding new edges connecting the bud to the chosen vertex.\n\nWhat is the minimum number of leaves you can achieve after performing these operations?\n\n**Input:**\n\n* Multiple test cases.\n* For each test case:\n    * $n$ (number of vertices)\n    * $n-1$ lines, each with two integers $u$ and $v$, representing an edge between vertices $u$ and $v$.\n\n**Output:**\n\n* For each test case, print the minimum number of leaves achievable."}]}