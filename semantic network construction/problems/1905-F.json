{"uid": "1905-F", "url": "https://codeforces.com/contest/1905/problem/F", "tags": ["brute force", " data structures", " divide and conquer"], "title": "1905-F", "statement": "F. Field Should Not Be Emptytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a permutation$$$^{\\\\dagger}$$$ $$$p$$$ of length $$$n$$$.We call index $$$x$$$goodif for all $$$y < x$$$ it holds that $$$p_y < p_x$$$ and for all $$$y > x$$$ it holds that $$$p_y > p_x$$$. We call $$$f(p)$$$ the number of good indices in $$$p$$$.You can perform the following operation: pick $$$2$$$distinctindices $$$i$$$ and $$$j$$$ and swap elements $$$p_i$$$ and $$$p_j$$$.Find the maximum value of $$$f(p)$$$ after applying the aforementioned operationexactly once.$$$^{\\\\dagger}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array).InputEach test consists of multiple test cases. The first line of contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 2 \\\\cdot 10^4$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the length of the permutation $$$p$$$.The second line of each test case contain $$$n$$$ distinct integers $$$p_1, p_2, \\\\ldots, p_n$$$ ($$$1 \\\\le p_i \\\\le n$$$) — the elements of the permutation $$$p$$$.It is guaranteed that sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output a single integer — the maximum value of $$$f(p)$$$ after performing the operation exactly once.ExampleInput551 2 3 4 552 1 3 4 572 1 5 3 7 6 462 3 5 4 1 677 6 5 4 3 2 1Output3 5 2 3 2NoteIn the first test case, $$$p = [1,2,3,4,5]$$$ and $$$f(p)=5$$$ which is already maximum possible. But must perform the operation anyway. We can get $$$f(p)=3$$$ by choosing $$$i=1$$$ and $$$j=2$$$ which makes $$$p = [2,1,3,4,5]$$$.In the second test case, we can transform $$$p$$$ into $$$[1,2,3,4,5]$$$ by choosing $$$i=1$$$ and $$$j=2$$$. Thus $$$f(p)=5$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "fdb17834", "template_md5": "35d339e4", "result": "You are given a permutation $p$ of length $n$.  A permutation is an arrangement of numbers from 1 to $n$ in a specific order.\n\nWe call an index $x$ \"good\" if:\n\n* All numbers before index $x$ in the permutation are smaller than the number at index $x$.\n* All numbers after index $x$ in the permutation are larger than the number at index $x$.\n\nThe function $f(p)$ counts the number of \"good\" indices in the permutation $p$.\n\nYou can swap any two distinct elements in the permutation exactly once.\n\nFind the maximum value of $f(p)$ that you can achieve after performing this swap.\n\n\n\nLet me know if you'd like me to clarify any part of this!"}, {"prompt_md5": "49ef14f2", "template_md5": "465699a0", "result": "You are given a list of numbers.  You can swap any two numbers in the list once.  Find the largest number of positions in the list where the number at that position is smaller than all the numbers before it and larger than all the numbers after it."}]}