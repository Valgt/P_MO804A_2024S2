{"uid": "360-D", "url": "https://codeforces.com/contest/360/problem/D", "tags": ["number theory"], "title": "360-D", "statement": "D. Levko and Setstime limit per test3 secondsmemory limit per test256 megabytesinputstdinoutputstdoutLevko loves all sorts of sets very much.Levko has two arrays of integersa1,a2, ... ,anandb1,b2, ... ,bmand a prime numberp. Today he generatesnsets. Let's describe the generation process for thei-th set:First it has a single number1.Let's take any elementcfrom this set. For allj(1 ≤j≤m) if number(c·aibj)modpdoesn't occur in the set, then add it to the set.Repeat step2as long as we can add at least one element to our set.Levko wonders, how many numbers belong to at least one set. That is, he wants to know what size is the union ofngenerated sets.InputThe first line contains three integersn,mandp(1 ≤n≤ 104,1 ≤m≤ 105,2 ≤p≤ 109),pis prime.The second line contains space-separated integersa1,a2, ... ,an(1 ≤ai<p). The third line contains space-separated integersb1,b2, ... ,bm(1 ≤bi≤ 109).OutputThe single number — the size of the union of the sets.ExamplesInput1 1 725Output3Input1 2 722 4Output3Input2 1 71 62Output1Input2 1 71 65Output2", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "df85dee3", "template_md5": "35d339e4", "result": "You are given two arrays,  $a$ of length $n$ and $b$ of length $m$, and a prime number $p$. \n\nYou need to generate $n$ sets. The generation process for the $i$-th set is as follows:\n\n1. Start with a set containing only the number 1.\n2.  For each element $c$ in the set, for each element $b_j$ in array $b$, calculate $(c \\cdot a_i \\cdot b_j) \\mod p$. If this result is not already in the set, add it to the set.\n3. Repeat step 2 as long as you can add at least one new element to the set.\n\nFinally, determine the total number of unique elements present in all $n$ generated sets. \n\n\n\nLet me know if you'd like me to clarify any part of this!"}, {"prompt_md5": "e11c6760", "template_md5": "465699a0", "result": "Given two arrays of numbers and a prime number, generate sets based on these arrays. Each set starts with the number 1.  To build a set, repeatedly take a number from the set and multiply it by each number in the second array. If the result (modulo the prime number) is not already in the set, add it.  Find the total number of unique numbers that appear in all the generated sets."}]}