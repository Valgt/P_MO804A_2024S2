{"uid": "1270-D", "url": "https://codeforces.com/contest/1270/problem/D", "tags": ["constructive algorithms", " interactive", " math", " sortings"], "title": "1270-D", "statement": "D. Strange Devicetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis problem is interactive.We have hidden an array $$$a$$$ of $$$n$$$pairwise differentnumbers (this means that no two numbers are equal). You can get some information about this array using a new device you just ordered on Amazon.This device can answer queries of the following form: in response to the positions of $$$k$$$ different elements of the array, it will return the position and value of the $$$m$$$-th among them in the ascending order.Unfortunately, the instruction for the device was lost during delivery. However, you remember $$$k$$$, but don't remember $$$m$$$. Your task is to find $$$m$$$ using queries to this device.You can asknot more than $$$n$$$ queries.Note that the array $$$a$$$ and number $$$m$$$ are fixed before the start of the interaction and don't depend on your queries. In other words,interactor is not adaptive.Note that you don't have to minimize the number of queries, and you don't need to guess array $$$a$$$. You just have to guess $$$m$$$.InputThe first line contains two integers $$$n$$$ and $$$k$$$ ($$$1\\\\le k < n \\\\le 500$$$) — the length of the array and the number of the elements in the query.It is guaranteed that number $$$m$$$ satisfies $$$1\\\\le m \\\\le k$$$, elements $$$a_1, a_2, \\\\dots, a_n$$$ of the array satisfy $$$0\\\\le a_i \\\\le 10^9$$$, and all of them are different.InteractionYou begin the interaction by reading $$$n$$$ and $$$k$$$.To ask a question about elements on positions $$$x_1, x_2, \\\\dots, x_k$$$, in a separate line output$$$?$$$ $$$x_1$$$ $$$x_2$$$ $$$x_3$$$ ... $$$x_k$$$Numbers in the query have to satisfy $$$1 \\\\le x_i \\\\le n$$$, and all $$$x_i$$$ have to be different. Don't forget to 'flush', to get the answer.In response, you will receive two integers $$$pos$$$ and $$$a_{pos}$$$ — the position in the array $$$a$$$ of the $$$m$$$-th in ascending order element among $$$a_{x_1}, a_{x_2}, \\\\dots, a_{x_k}$$$, and the element on this position.In case your query is invalid or you asked more than $$$n$$$ queries, the program will print $$$-1$$$ and will finish interaction. You will receive aWrong answerverdict. Make sure to exit immediately to avoid getting other verdicts.When you determine $$$m$$$, output$$$!$$$ $$$m$$$After printing a query do not forget to output end of line and flush the output. Otherwise, you will getIdleness limit exceeded. To do this, use:fflush(stdout)orcout.flush()in C++;System.out.flush()in Java;flush(output)in Pascal;stdout.flush()in Python;see documentation for other languages.Hack formatFor the hacks use the following format:The first line has to contain three integers $$$n, k, m$$$ ($$$1 \\\\le m \\\\le k < n \\\\le 500$$$) — the length of the array, number of elements in the query, and which in the ascending order number the device returns.In the next line output $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$0\\\\le a_i \\\\le 10^9$$$) — the elements of the array. They have to be pairwise different.ExampleInput4 3 4 9 4 9 4 9 1 2Output? 2 3 4 ? 1 3 4 ? 1 2 4 ? 1 2 3 ! 3NoteIn the example, $$$n = 4$$$, $$$k = 3$$$, $$$m = 3$$$, $$$a = [2, 0, 1, 9]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "92e9fb86", "template_md5": "35d339e4", "result": "You are given an array of $n$ distinct numbers. You have a special device that can answer queries about the array. \n\nHere's how the device works:\n\n* You provide the device with $k$ distinct positions in the array.\n* The device returns the position and value of the $m$-th smallest element among the $k$ elements you selected.\n\nYou don't know the value of $m$, but you know $n$ and $k$. Your goal is to determine the value of $m$ by asking the device a series of queries.\n\nYou are allowed to ask at most $n$ queries. \n\n**Input:**\n\n* The first line contains two integers, $n$ and $k$ ($1 \\le k < n \\le 500$), representing the size of the array and the number of elements in each query.\n\n**Interaction:**\n\n* To ask a query, output \"? $x_1$ $x_2$ ... $x_k$\" where $x_1$, $x_2$, ..., $x_k$ are $k$ distinct positions in the array (between 1 and $n$).\n* The device will respond with two integers: the position and value of the $m$-th smallest element among the $k$ elements you selected.\n\n**Output:**\n\n* When you determine the value of $m$, output \"! $m\"\n\n**Constraints:**\n\n* $0 \\le a_i \\le 10^9$ for all elements in the array.\n* All elements in the array are distinct.\n\n\n\nLet me know if you have any other questions."}, {"prompt_md5": "6a750fed", "template_md5": "465699a0", "result": "You have a list of unique numbers. You can ask questions about a subset of these numbers. Each question returns the value of the third smallest number in the subset. Your goal is to figure out which number is the third smallest. You can ask up to the length of the list number of questions."}]}