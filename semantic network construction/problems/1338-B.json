{"uid": "1338-B", "url": "https://codeforces.com/contest/1338/problem/B", "tags": ["bitmasks", " constructive algorithms", " dfs and similar", " greedy", " math", " trees"], "title": "1338-B", "statement": "B. Edge Weight Assignmenttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have unweighted tree of $$$n$$$ vertices. You have to assign apositiveweight to each edge so that the following condition would hold:For every two different leaves $$$v_{1}$$$ and $$$v_{2}$$$ of this tree,bitwise XORof weights of all edges on the simple path between $$$v_{1}$$$ and $$$v_{2}$$$ has to be equal to $$$0$$$.Note that you can putvery largepositive integers (like $$$10^{(10^{10})}$$$).It's guaranteed that such assignment always exists under given constraints. Now let's define $$$f$$$ asthe number of distinct weightsin assignment.In this example, assignment is valid, because bitwise XOR of all edge weights between every pair of leaves is $$$0$$$. $$$f$$$ value is $$$2$$$ here, because there are $$$2$$$ distinct edge weights($$$4$$$ and $$$5$$$).In this example, assignment is invalid, because bitwise XOR of all edge weights between vertex $$$1$$$ and vertex $$$6$$$ ($$$3, 4, 5, 4$$$) is not $$$0$$$.What are the minimum and the maximum possible values of $$$f$$$ for the given tree? Find and print both.InputThe first line contains integer $$$n$$$ ($$$3 \\\\le n \\\\le 10^{5}$$$) — the number of vertices in given tree.The $$$i$$$-th of the next $$$n-1$$$ lines contains two integers $$$a_{i}$$$ and $$$b_{i}$$$ ($$$1 \\\\le a_{i} \\\\lt b_{i} \\\\le n$$$) — it means there is an edge between $$$a_{i}$$$ and $$$b_{i}$$$. It is guaranteed that given graph forms tree of $$$n$$$ vertices.OutputPrint two integers — the minimum and maximum possible value of $$$f$$$ can be made from valid assignment of given tree. Note that it's always possible to make an assignment under given constraints.ExamplesInput6 1 3 2 3 3 4 4 5 5 6Output1 4Input6 1 3 2 3 3 4 4 5 4 6Output3 3Input7 1 2 2 7 3 4 4 7 5 6 6 7Output1 6NoteIn the first example, possible assignments for each minimum and maximum are described in picture below. Of course, there are multiple possible assignments for each minimum and maximum.In the second example, possible assignments for each minimum and maximum are described in picture below. The $$$f$$$ value of valid assignment of this tree is always $$$3$$$.In the third example, possible assignments for each minimum and maximum are described in picture below. Of course, there are multiple possible assignments for each minimum and maximum.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0749494c", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices.  You need to assign a positive weight to each edge of the tree. The weights must satisfy the following condition: for any two different leaves $v_1$ and $v_2$ in the tree, the bitwise XOR of the weights of all edges on the path between $v_1$ and $v_2$ must be 0.\n\nYou can use very large positive integers as weights.\n\nLet $f$ be the number of distinct weights used in the assignment.\n\nFind the minimum and maximum possible values of $f$. \n\n\nInput:\n\n* The first line contains an integer $n$ ($3 \\le n \\le 10^5$) representing the number of vertices in the tree.\n* The next $n-1$ lines each contain two integers $a_i$ and $b_i$ ($1 \\le a_i < b_i \\le n$) representing an edge between vertices $a_i$ and $b_i$.\n\nOutput:\n\n* Print two integers, the minimum and maximum possible values of $f$."}, {"prompt_md5": "8d8ce2fd", "template_md5": "465699a0", "result": "You are given a tree with a certain number of nodes. You need to assign a positive weight to each edge in the tree. The weights must satisfy the condition that the bitwise XOR of all edge weights along any path between two leaves of the tree must equal zero.  Find the smallest and largest possible number of distinct weights you can use to achieve this."}]}