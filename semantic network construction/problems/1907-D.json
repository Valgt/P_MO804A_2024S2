{"uid": "1907-D", "url": "https://codeforces.com/contest/1907/problem/D", "tags": ["binary search", " constructive algorithms"], "title": "1907-D", "statement": "D. Jumping Through Segmentstime limit per test5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp is designing a level for a game. The level consists of $$$n$$$ segments on the number line, where the $$$i$$$-th segment starts at the point with coordinate $$$l_i$$$ and ends at the point with coordinate $$$r_i$$$.The player starts the level at the point with coordinate $$$0$$$. In one move, they can move to any point that is within a distance of no more than $$$k$$$. After their $$$i$$$-th move, the player must land within the $$$i$$$-th segment, that is, at a coordinate $$$x$$$ such that $$$l_i \\\\le x \\\\le r_i$$$. This means:After the first move, they must be inside the first segment (from $$$l_1$$$ to $$$r_1$$$);After the second move, they must be inside the second segment (from $$$l_2$$$ to $$$r_2$$$);...After the $$$n$$$-th move, they must be inside the $$$n$$$-th segment (from $$$l_n$$$ to $$$r_n$$$).The level is considered completed if the player reaches the $$$n$$$-th segment, following the rules described above. After some thought, Polycarp realized that it is impossible to complete the level with some values of $$$k$$$.Polycarp does not want the level to be too easy, so he asks you to determine the minimum integer $$$k$$$ with which it is possible to complete the level.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$)—the number of test cases. Descriptions of the test cases follow.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$)—the number of segments in the level.The following $$$n$$$ lines.The $$$i$$$-th line contain two integers $$$l_i$$$ and $$$r_i$$$ ($$$0 \\\\le l_i \\\\le r_i \\\\le 10^9$$$)—the boundaries of the $$$i$$$-th segment. Segments may intersect.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output a single integer—the minimum value of $$$k$$$ with which it is possible to complete the level.ExampleInput451 53 45 68 100 130 20 10 333 810 186 11410 200 515 172 2Output7 0 5 13NoteIn the third example, the player can make the following moves:Move from point $$$0$$$ to point $$$5$$$ ($$$3 \\\\le 5 \\\\le 8$$$);Move from point $$$5$$$ to point $$$10$$$ ($$$10 \\\\le 10 \\\\le 18$$$);Move from point $$$10$$$ to point $$$7$$$ ($$$6 \\\\le 7 \\\\le 11$$$).Note that for the last move, the player could have chosen not to move and still complete the level.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "236796ac", "template_md5": "35d339e4", "result": "You are given $n$ segments on a number line. Each segment is defined by its start point ($l_i$) and end point ($r_i$).  The player starts at point 0.  \n\nIn one move, the player can jump to any point within a distance of at most $k$ from their current position. After each move, the player must land within the corresponding segment. \n\nFind the minimum value of $k$ that allows the player to reach the $n$th segment, following these rules. \n\n**Input:**\n\n* The first line contains an integer $t$ representing the number of test cases.\n* For each test case:\n    * The first line contains an integer $n$ representing the number of segments.\n    * The following $n$ lines each contain two integers $l_i$ and $r_i$ representing the start and end points of each segment.\n\n**Output:**\n\nFor each test case, output a single integer representing the minimum value of $k$."}, {"prompt_md5": "e100f54a", "template_md5": "465699a0", "result": "You are given a series of intervals on a number line.  You start at 0 and must move through each interval in order, with each move limited to a maximum distance. Find the smallest maximum distance that allows you to successfully move through all the intervals."}]}