{"uid": "331-E1", "url": "https://codeforces.com/contest/331/problem/E1", "tags": ["constructive algorithms", " graphs", " implementation"], "title": "331-E1", "statement": "E1. Deja Vutime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutEverybody knows that we have been living in the Matrix for a long time. And in the new seventh Matrix the world is ruled by beavers.So let's take beaver Neo. Neo has so-called \"deja vu\" outbursts when he gets visions of events in some places he's been at or is going to be at. Let's examine the phenomenon in more detail.We can say that Neo's city is represented by a directed graph, consisting ofnshops andmstreets that connect the shops. No two streets connect the same pair of shops (besides, there can't be one street from A to B and one street from B to A). No street connects a shop with itself. As Neo passes some streets, he gets visions. No matter how many times he passes streetk, every time he will get the same visions in the same order. A vision is a sequence of shops.We know that Neo is going to get really shocked if he passes the way from some shopato some shopb, possible coinciding witha, such that the list of visited shops in the real life and in the visions coincide.Suggest beaver Neo such path of non-zero length. Or maybe you can even count the number of such paths modulo1000000007(109+ 7)?..InputThe first line contains integersnandm— the number of shops and the number of streets, correspondingly,1 ≤n≤ 50,. Nextmlines contain the descriptions of the streets in the following format:xiyikiv1v2...vk, wherexiandyi(1 ≤xi,yi≤n,xi≠yi)are indices of shops connected by a street,ki(0 ≤ki≤n)is the number of visions on the way fromxitoyi;v1,v2, ...,vk(1 ≤vi≤n)describe the visions: the numbers of the shops Neo saw. Note that the order of the visions matters.It is guaranteed that the total number of visions on all streets doesn't exceed105.to get 50 points, you need to find any (not necessarily simple) path of length at most2·n, that meets the attributes described above (subproblem E1);to get 50 more points, you need to count for each length from1to2·nthe number of paths that have the attribute described above (subproblem E2).OutputSubproblem E1. In the first line print an integerk(1 ≤k≤ 2·n)— the numbers of shops on Neo's path. In the next line printkintegers — the number of shops in the order Neo passes them. If the graph doesn't have such paths or the length of the shortest path includes more than2·nshops, print on a single line0.Subproblem E2. Print2·nlines. Thei-th line must contain a single integer — the number of required paths of lengthimodulo1000000007(109+ 7).ExamplesInput6 61 2 2 1 22 3 1 33 4 2 4 54 5 05 3 1 36 1 1 6Output46 1 2 3Input6 61 2 2 1 22 3 1 33 4 2 4 54 5 05 3 1 36 1 1 6Output121121121121NoteThe input in both samples are the same. The first sample contains the answer to the first subproblem, the second sample contains the answer to the second subproblem.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "c8c069a9", "template_md5": "35d339e4", "result": "You are given a directed graph with $n$ nodes (shops) and $m$ edges (streets). Each edge has a number $k$ representing the number of visions associated with it, and a sequence of $k$ nodes representing the shops seen in the visions.\n\n**Task 1:** Find a path of length at most $2n$ in the graph where the sequence of visited nodes in the path matches the sequence of shops seen in the visions of at least one edge along the path. If no such path exists, output 0.\n\n**Task 2:** For each path length from 1 to $2n$, count the number of paths that meet the condition described in Task 1. Output the count for each length modulo $10^9 + 7$."}, {"prompt_md5": "1e1b65da", "template_md5": "465699a0", "result": "You are given a graph with nodes representing locations and edges representing paths between them. Each path has a sequence of locations associated with it.  Find a path of a given length that visits locations in the same order as a specific sequence.  Calculate the number of such paths for each possible length."}]}