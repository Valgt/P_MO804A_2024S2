{"uid": "264-E", "url": "https://codeforces.com/contest/264/problem/E", "tags": ["data structures", " dp"], "title": "264-E", "statement": "E. Roadside Treestime limit per test5 secondsmemory limit per test256 megabytesinputstdinoutputstdoutSquirrel Liss loves nuts. Liss asks you to plant some nut trees.There arenpositions (numbered 1 tonfrom west to east) to plant a tree along a street. Trees grow one meter per month. At the beginning of each month you should process one query. The query is one of the following types:Plant a tree of heighthat positionp.Cut down thex-th existent (not cut) tree from the west (wherexis 1-indexed). When we cut the tree it drops down and takes all the available place at the position where it has stood. So no tree can be planted at this position anymore.After processing each query, you should print the length of the longest increasing subsequence. A subset of existent trees is called anincreasing subsequenceif the height of the trees in the set is strictly increasing from west to east (for example, the westmost tree in the set must be the shortest in the set). The length of the increasing subsequence is the number of trees in it.Note that Liss don't like the trees with the same heights, so it is guaranteed that at any time no two trees have the exactly same heights.InputThe first line contains two integers:nandm(1  ≤n≤ 105; 1 ≤m≤ 2·105) — the number of positions and the number of queries.Nextmlines contains the information of queries by following formats:If thei-th query is type 1, thei-th line contains three integers: 1,pi, andhi(1 ≤pi≤n, 1 ≤hi≤ 10), wherepiis the position of the new tree andhiis the initial height of the new tree.If thei-th query is type 2, thei-th line contains two integers: 2 andxi(1 ≤xi≤ 10), where thexiis the index of the tree we want to cut.The input is guaranteed to be correct, i.e.,For type 1 queries,piwill be pairwise distinct.For type 2 queries,xiwill be less than or equal to the current number of trees.At any time no two trees have the exactly same heights.In each line integers are separated by single spaces.OutputPrintmintegers — the length of the longest increasing subsequence after each query. Separate the numbers by whitespaces.ExamplesInput4 61 1 11 4 41 3 42 21 2 82 3Output123222NoteStates of street after each query you can see on the following animation:If your browser doesn't support animation png, please see the gif version here: http://212.193.37.254/codeforces/images/162/roadtree.gif", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "97a49627", "template_md5": "35d339e4", "result": "You are given $n$ positions along a street. You can plant trees at these positions. Each tree grows 1 meter per month.  You will be given $m$ queries. Each query can be one of two types:\n\n* **Type 1:** Plant a tree of height $h$ at position $p$.\n* **Type 2:** Cut down the $x$-th tree from the west.\n\nAfter each query, you need to find the length of the longest increasing subsequence of trees. An increasing subsequence is a set of trees where the height of each tree is strictly greater than the height of the tree to its west.\n\n**Input:**\n\n* The first line contains two integers: $n$ (the number of positions) and $m$ (the number of queries).\n* The next $m$ lines describe the queries. \n    * If the query is type 1, the line contains three integers: 1, $p$, and $h$.\n    * If the query is type 2, the line contains two integers: 2 and $x$.\n\n**Output:**\n\nPrint the length of the longest increasing subsequence after each query, separated by spaces."}, {"prompt_md5": "db17d58d", "template_md5": "465699a0", "result": "You are given a number of positions along a street. You can plant trees of increasing height at these positions or cut down existing trees. After each action, find the length of the longest sequence of trees where the heights increase from west to east."}]}