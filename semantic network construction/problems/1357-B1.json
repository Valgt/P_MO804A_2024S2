{"uid": "1357-B1", "url": "https://codeforces.com/contest/1357/problem/B1", "tags": [], "title": "1357-B1", "statement": "B1. \"Is the bit string balanced?\" oracletime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputImplement a quantum oracle on $$$N$$$ qubits which checks whether the input bit string is balanced, i.e., whether it has exactly $$$\\\\frac{N}{2}$$$ zeros and $$$\\\\frac{N}{2}$$$ ones in it.Your operation should take the following inputs:an array of $$$N \\\\le 10$$$ qubits \"inputs\" in an arbitrary state. $$$N$$$ will be an even number.a qubit \"output\" in an arbitrary state.Your operation should perform a unitary transformation on those qubits that can be described by its effect on the basis states: if \"inputs\" is in the basis state $$$|x\\\\rangle$$$ and \"output\" is in the basis state $$$|y\\\\rangle$$$, the result of applying the operation should be $$$|x\\\\rangle|y \\\\oplus f(x)\\\\rangle$$$, where $$$f(x) = 1$$$ if the bit string $$$x$$$ has the same number of zeros and ones in it, and $$$0$$$ otherwise.For example, if the qubits passed to your operation are in the state $$$\\\\frac{1}{\\\\sqrt{2}}(|01\\\\rangle + |00\\\\rangle)_x \\\\otimes |0\\\\rangle_y$$$, the state of the system after applying the operation should be $$$\\\\frac{1}{\\\\sqrt{2}}(|01\\\\rangle_x\\\\otimes |1\\\\rangle_y + |00\\\\rangle_x |0\\\\rangle_y)$$$.Your code should have the following signature (note that your operation should have Adjoint and Controlled variants defined for it;is Adj+Ctlin the operation signature will generate them automatically based on your code):namespace Solution {open Microsoft.Quantum.Intrinsic;operation Solve (inputs : Qubit[], output : Qubit) : Unit is Adj+Ctl {// your code here}}Your code is not allowed to use measurements or arbitrary rotation gates. This operation can be implemented using just the X gate and its controlled variants (possibly with multiple qubits as controls).", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "133e8ea2", "template_md5": "35d339e4", "result": "You are given a set of $N$ qubits, where $N$ is an even number.  You need to create a quantum operation that takes these $N$ qubits and a single additional qubit as input.  \n\nThe operation should determine if the input qubits represent a balanced bit string (meaning an equal number of 0s and 1s).\n\nHere's how the operation should work:\n\n* **Input:**\n    * $N$ qubits in an arbitrary state, representing a bit string.\n    * 1 qubit in an arbitrary state.\n\n* **Output:**\n    * The $N$ input qubits remain unchanged.\n    * The single output qubit is flipped (from 0 to 1 or 1 to 0) if and only if the input bit string is balanced.\n\n**Important:**\n\n* You can only use the X gate (and its controlled variants) to build your operation.\n* You cannot use measurements or arbitrary rotation gates.\n\n\nLet me know if you'd like help understanding any of the terms or concepts."}, {"prompt_md5": "0c0bcfda", "template_md5": "465699a0", "result": "You need to write a program that takes a sequence of bits and a special qubit. The program should flip the state of the special qubit depending on whether the sequence has an equal number of 0s and 1s."}]}