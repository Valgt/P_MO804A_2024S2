{"uid": "1083-F", "url": "https://codeforces.com/contest/1083/problem/F", "tags": ["data structures"], "title": "1083-F", "statement": "F. The Fair Nut and Amusing Xortime limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Fair Nut has two arrays $$$a$$$ and $$$b$$$, consisting of $$$n$$$ numbers. He found them so long ago that no one knows when they came to him.The Fair Nut often changes numbers in his arrays. He also is interested in how similar $$$a$$$ and $$$b$$$ are after every modification.Let's denote similarity of two arrays as the minimum number of operations to apply to make arrays equal (every operation can be applied for both arrays). If it is impossible, similarity will be equal $$$-1$$$.Per one operation you can choose a subarray with length $$$k$$$ ($$$k$$$ is fixed), and change every element $$$a_i$$$, which belongs to the chosen subarray, to $$$a_i \\\\oplus x$$$ ($$$x$$$ can be chosen), where $$$\\\\oplus$$$ denotes thebitwise XOR operation.Nut has already calculated the similarity of the arrays after every modification. Can you do it?Note that you just need to calculate those values, that is you do not need to apply any operations.InputThe first line contains three numbers $$$n$$$, $$$k$$$ and $$$q$$$ ($$$1 \\\\le k \\\\le n \\\\le 2 \\\\cdot 10^5$$$, $$$0 \\\\le q \\\\le 2 \\\\cdot 10^5$$$) — the length of the arrays, the length of the subarrays, to which the operations are applied, and the number of queries.The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$0 \\\\le a_i < 2^{14}$$$) — elements of array $$$a$$$.The third line contains $$$n$$$ integers $$$b_1, b_2, \\\\ldots, b_n$$$ ($$$0 \\\\le b_i < 2^{14}$$$) — elements of array $$$b$$$.Each of the next $$$q$$$ lines describes query and contains string $$$s$$$ and two integers $$$p$$$ and $$$v$$$ ($$$1 \\\\le p \\\\le n$$$, $$$0 \\\\le v < 2^{14}$$$) — array, which this query changes («a» or «b» without quotes), index of changing element and its new value.OutputOn the first line print initial similarity of arrays $$$a$$$ and $$$b$$$.On the $$$i$$$-th of following $$$q$$$ lines print similarity of $$$a$$$ and $$$b$$$ after applying first $$$i$$$ modifications.ExamplesInput3 3 10 4 21 2 3b 2 5Output-11Input3 2 21 3 20 0 0a 1 0b 1 1Output2-12NoteIn the first sample making arrays $$$[0, 4, 2]$$$ and $$$[1, 2, 3]$$$ is impossible with $$$k=3$$$. After the modification, you can apply the operation with $$$x=1$$$ to the whole first array (its length is equal to $$$k$$$), and it will be equal to the second array.In order to make arrays equal in the second sample before changes, you can apply operations with $$$x=1$$$ on subarray $$$[1, 2]$$$ of $$$a$$$ and with $$$x=2$$$ on subarray $$$[2, 3]$$$ of $$$b$$$.After all queries arrays will be equal $$$[0, 3, 2]$$$ and $$$[1, 0, 0]$$$. The same operations make them equal $$$[1, 2, 2]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "cc2125c4", "template_md5": "35d339e4", "result": "You are given two arrays, $a$ and $b$, of length $n$. You are also given an integer $k$.  \n\nYou can perform the following operation on a subarray of length $k$ within either array: choose an integer $x$ and change every element in the subarray to its bitwise XOR with $x$ ($a_i \\rightarrow a_i \\oplus x$).\n\nThe problem asks you to calculate the minimum number of operations needed to make the two arrays equal after a series of given modifications. Each modification is described by:\n\n* The array to modify (\"a\" or \"b\")\n* The index of the element to change\n* The new value of the element\n\nIf it is impossible to make the arrays equal, output -1.\n\n**Input:**\n\n* The first line contains three integers: $n$, $k$, and $q$ ($1 \\le k \\le n \\le 2 \\cdot 10^5$, $0 \\le q \\le 2 \\cdot 10^5$).\n* The second line contains $n$ integers: the elements of array $a$.\n* The third line contains $n$ integers: the elements of array $b$.\n* Each of the next $q$ lines describes a modification:\n    * The first word is \"a\" or \"b\"\n    * The next two integers are the index and the new value of the element to change.\n\n**Output:**\n\n* The first line contains the initial similarity of arrays $a$ and $b$.\n* Each of the next $q$ lines contains the similarity of $a$ and $b$ after applying the first $i$ modifications."}, {"prompt_md5": "742c2fc0", "template_md5": "465699a0", "result": "You are given two arrays of numbers. You can perform operations on each array by choosing a subarray of a fixed length and changing each element in that subarray by XORing it with a given number.  \n\nYour task is to determine the minimum number of operations needed to make the two arrays equal after a series of given operations are applied to each array. If it's impossible to make them equal, output -1."}]}