{"uid": "2011-E", "url": "https://codeforces.com/contest/2011/problem/E", "tags": ["*special", " greedy", " strings"], "title": "2011-E", "statement": "E. Rock-Paper-Scissors Bottime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputRock-Paper-Scissors is a game for two players. It is played in rounds. During each round, every player chooses one of three moves: Rock, Paper, or Scissors. Depending on the chosen moves, the following happens:if one player chooses Rock and the other player chooses Paper, the player who chooses Paper wins and gets a point;if one player chooses Scissors and the other player chooses Paper, the player who chooses Scissors wins and gets a point;if one player chooses Scissors and the other player chooses Rock, the player who chooses Rock wins and gets a point;and if both players choose the same move, nobody wins and nobody gets a point.Monocarp decided to play against a bot. During the game, Monocarp noticed that the bot's behavior is very predictable:in the first round, it chooses Rock;in every round except the first, it chooses the move that beats the opponent's move in the previous round (for example, if in the previous round its opponent played Scissors, then the bot chooses Rock now).Monocarp has a favorite string $$$s$$$, consisting of the charactersR,P, and/orS. Monocarp decided to play a series of rounds against the bot. However, he wants both of the following conditions to be met:the final score is in favor of Monocarp (i. e., the number of rounds he won is strictly greater than the number of rounds the bot won);the string $$$s$$$ appears as acontiguous substringin the sequence of the bot's moves (whereRdenotes Rock,Pdenotes Paper, andSdenotes Scissors).Help Monocarp and calculate the minimum number of rounds he needs to play against the bot to satisfy both of the aforementioned conditions.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases.The only line of each test case contains a string $$$s$$$ ($$$1 \\\\le |s| \\\\le 2 \\\\cdot 10^5$$$), consisting of the charactersR,P, and/orS.Additional constraint on the input: the sum of the lengths of the strings $$$s$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, print a single integer — the minimum number of rounds Monocarp needs to play against the bot to satisfy both of the aforementioned conditions.ExampleInput7SSRRPSRPPPSPPRSPPPPPROutput3 1 3 6 7 5 3NoteIn the first example, Monocarp can playPPR, then the bot's moves areRSS, and the score is $$$2:1$$$ in favor of Monocarp.In the second example, Monocarp can playP, then the bot's moves areR, and the score is $$$1:0$$$ in favor of Monocarp.In the third example, Monocarp can playRPR, then the bot's moves areRPS, and the score is $$$1:0$$$ in favor of Monocarp.In the fourth example, Monocarp can playRRRSPR, then the bot's moves areRPPPRS, and the score is $$$3:2$$$ in favor of Monocarp.In the fifth example, Monocarp can playPRRSPRS, then the bot's moves areRSPPRSP, and the score is $$$6:1$$$ in favor of Monocarp.In the sixth example, Monocarp can playPRRRS, then the bot's moves areRSPPP, and the score is $$$3:2$$$ in favor of Monocarp.In the seventh example, Monocarp can playRSR, then the bot's moves areRPR, and the score is $$$1:0$$$ in favor of Monocarp.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a960e250", "template_md5": "35d339e4", "result": "You are playing a game against a bot that follows a simple strategy:\n\n* **Round 1:** The bot always chooses \"Rock\".\n* **Round 2 onwards:** The bot chooses the move that beats the player's move from the previous round.\n\n  * Rock beats Scissors\n  * Paper beats Rock\n  * Scissors beats Paper\n\nYou have a favorite sequence of moves,  $s$, that you want to see the bot play in a row.  \n\nFind the minimum number of rounds you need to play to:\n\n1. Win more rounds than the bot.\n2. Have the bot play your sequence $s$ in a row."}, {"prompt_md5": "ed53f062", "template_md5": "465699a0", "result": "A player plays a game against a bot that follows a predictable pattern. The bot always chooses the move that beats the player's previous move. The player wants to win more rounds than the bot and also have a specific sequence of moves appear in the bot's moves. Find the minimum number of rounds the player needs to play to achieve both goals."}]}