{"uid": "1452-F", "url": "https://codeforces.com/contest/1452/problem/F", "tags": ["constructive algorithms", " greedy"], "title": "1452-F", "statement": "F. Divide Powerstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a multiset of powers of two. More precisely, for each $$$i$$$ from $$$0$$$ to $$$n$$$ exclusive you have $$$cnt_i$$$ elements equal to $$$2^i$$$.In one operation, you can choose any one element $$$2^l > 1$$$ and divide it into two elements $$$2^{l - 1}$$$.You should perform $$$q$$$ queries. Each query has one of two types:\"$$$1$$$ $$$pos$$$ $$$val$$$\" — assign $$$cnt_{pos} := val$$$;\"$$$2$$$ $$$x$$$ $$$k$$$\" — calculate the minimum number of operations you need to make at least $$$k$$$ elements with value lower or equal to $$$2^x$$$.Note that all queries of the second type don't change the multiset; that is, you just calculate the minimum number of operations, you don't perform them.InputThe first line contains two integers $$$n$$$ and $$$q$$$ ($$$1 \\\\le n \\\\le 30$$$; $$$1 \\\\le q \\\\le 2 \\\\cdot 10^5$$$) — the size of array $$$cnt$$$ and the number of queries.The second line contains $$$n$$$ integers $$$cnt_0, cnt_1, \\\\dots, cnt_{n - 1}$$$ ($$$0 \\\\le cnt_i \\\\le 10^6$$$).Next $$$q$$$ lines contain queries: one per line. Each query has one of two types:\"$$$1$$$ $$$pos$$$ $$$val$$$\" ($$$0 \\\\le pos < n$$$; $$$0 \\\\le val \\\\le 10^6$$$);\"$$$2$$$ $$$x$$$ $$$k$$$\" ($$$0 \\\\le x < n$$$; $$$1 \\\\le k \\\\le 10^{15}$$$).It's guaranteed that there is at least one query of the second type.OutputFor each query of the second type, print the minimum number of operations you need to make at least $$$k$$$ elements with a value lower or equal to $$$2^x$$$ or $$$-1$$$ if there is no way to do it.ExampleInput6 11 0 1 0 0 1 0 2 1 5 2 4 18 1 1 0 2 2 5 2 0 17 1 0 3 2 1 2 1 1 4 1 4 0 1 5 1 2 2 8Output4 16 4 -1 0 1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "89332b9c", "template_md5": "35d339e4", "result": "You are given a set of powers of two.  The set has $n$ elements, where the $i$-th element is $2^i$ and there are $cnt_i$ copies of $2^i$.\n\nYou can perform the following operation:\n\n* Choose an element $2^l$ where $l > 1$ and divide it into two elements $2^{l-1}$.\n\nYou will be given $q$ queries. Each query is one of two types:\n\n* **Type 1:**  Change the number of copies of $2^i$ to a new value $val$.\n* **Type 2:**  Find the minimum number of operations needed to have at least $k$ elements with a value less than or equal to $2^x$.\n\n**Input:**\n\n* The first line contains two integers $n$ and $q$ ($1 \\le n \\le 30$, $1 \\le q \\le 2 \\cdot 10^5$).\n* The second line contains $n$ integers $cnt_0, cnt_1, ..., cnt_{n-1}$ ($0 \\le cnt_i \\le 10^6$).\n* The next $q$ lines contain queries of type 1 or type 2.\n\n**Output:**\n\n* For each query of type 2, print the minimum number of operations needed. If it's impossible, print -1."}, {"prompt_md5": "d48089a6", "template_md5": "465699a0", "result": "You have a set of numbers, where each number is a power of 2. You can split a number into two smaller powers of 2.  You need to answer queries:\n\n* **Type 1:** Change the count of a specific power of 2.\n* **Type 2:**  Find the minimum number of splits needed to have at least a certain number of numbers less than or equal to a specific power of 2."}]}