{"uid": "398-B", "url": "https://codeforces.com/contest/398/problem/B", "tags": ["dp", " probabilities"], "title": "398-B", "statement": "B. Painting The Walltime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutUser ainta decided to paint a wall. The wall consists ofn2tiles, that are arranged in ann×ntable. Some tiles are painted, and the others are not. As he wants to paint it beautifully, he will follow the rules below.Firstly user ainta looks at the wall. If there is at least one painted cell on each row and at least one painted cell on each column, he stops coloring. Otherwise, he goes to step 2.User ainta choose any tile on the wall with uniform probability.If the tile he has chosen is not painted, he paints the tile. Otherwise, he ignores it.Then he takes a rest for one minute even if he doesn't paint the tile. And then ainta goes to step 1.However ainta is worried if it would take too much time to finish this work. So he wants to calculate the expected time needed to paint the wall by the method above. Help him find the expected time. You can assume that choosing and painting any tile consumes no time at all.InputThe first line contains two integersnandm(1 ≤n≤ 2·103;0 ≤m≤min(n2, 2·104)) — the size of the wall and the number of painted cells.Nextmlines goes, each contains two integersriandci(1 ≤ri,ci≤n) — the position of the painted cell. It is guaranteed that the positions are all distinct. Consider the rows of the table are numbered from1ton. Consider the columns of the table are numbered from1ton.OutputIn a single line print the expected time to paint the wall in minutes. Your answer will be considered correct if it has at most10- 4absolute or relative error.ExamplesInput5 22 34 1Output11.7669491886Input2 21 11 2Output2.0000000000Input1 11 1Output0.0000000000", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "9c763213", "template_md5": "35d339e4", "result": "You are given a rectangular grid of $n \\times n$ tiles. Some of the tiles are already painted.  \n\nA painter wants to paint the wall according to the following rules:\n\n1. **Check for completeness:** If there is at least one painted tile in each row and each column, the painter stops.\n2. **Choose a tile:** If the painter hasn't stopped, they randomly choose a tile.\n3. **Paint if unpainted:** If the chosen tile is not painted, the painter paints it.\n4. **Rest:** The painter takes a one-minute break, regardless of whether they painted a tile.\n5. **Repeat:** The painter goes back to step 1.\n\nThe painter wants to know the average (expected) amount of time it will take to paint the entire wall. \n\n**Input:**\n\n* The first line contains two integers, $n$ and $m$ ($1 \\le n \\le 2 \\cdot 10^3$, $0 \\le m \\le \\min(n^2, 2 \\cdot 10^4)$), representing the size of the grid and the number of painted tiles.\n* The next $m$ lines each contain two integers, $r_i$ and $c_i$ ($1 \\le r_i, c_i \\le n$), representing the row and column of each painted tile.\n\n**Output:**\n\nPrint the expected time in minutes to paint the wall, accurate to at most $10^{-4}$ absolute or relative error."}, {"prompt_md5": "c763b5d9", "template_md5": "465699a0", "result": "You have a grid of squares. Some squares are already colored. You randomly pick a square and color it if it's not already colored.  You repeat this process until every row and every column has at least one colored square. What is the average number of times you need to pick a square before you finish?"}]}