{"uid": "1156-D", "url": "https://codeforces.com/contest/1156/problem/D", "tags": ["dfs and similar", " divide and conquer", " dp", " dsu", " trees"], "title": "1156-D", "statement": "D. 0-1-Treetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a tree (an undirected connected acyclic graph) consisting of $$$n$$$ vertices and $$$n - 1$$$ edges. A number is written on each edge, each number is either $$$0$$$ (let's call such edges $$$0$$$-edges) or $$$1$$$ (those are $$$1$$$-edges).Let's call an ordered pair of vertices $$$(x, y)$$$ ($$$x \\\\ne y$$$)validif, while traversing the simple path from $$$x$$$ to $$$y$$$, we never go through a $$$0$$$-edge after going through a $$$1$$$-edge. Your task is to calculate the number ofvalidpairs in the tree.InputThe first line contains one integer $$$n$$$ ($$$2 \\\\le n \\\\le 200000$$$) — the number of vertices in the tree.Then $$$n - 1$$$ lines follow, each denoting an edge of the tree. Each edge is represented by three integers $$$x_i$$$, $$$y_i$$$ and $$$c_i$$$ ($$$1 \\\\le x_i, y_i \\\\le n$$$, $$$0 \\\\le c_i \\\\le 1$$$, $$$x_i \\\\ne y_i$$$) — the vertices connected by this edge and the number written on it, respectively.It is guaranteed that the given edges form a tree.OutputPrint one integer — the number ofvalidpairs of vertices.ExampleInput7 2 1 1 3 2 0 4 2 1 5 2 0 6 7 1 7 2 1Output34NoteThe picture corresponding to the first example:", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "b4ffe619", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices and $n-1$ edges. Each edge has a label of either 0 or 1.  \n\nA pair of vertices $(x, y)$ is valid if, when traveling along the path from $x$ to $y$, you never cross a 0-edge after crossing a 1-edge.\n\nCount the number of valid pairs of vertices in the tree."}, {"prompt_md5": "43589bff", "template_md5": "465699a0", "result": "You have a connected network of points. Each connection between points has a value of 0 or 1.  Find the number of pairs of points where you can travel between them only using connections with a value of 1.  You cannot switch between a connection with a value of 1 and a connection with a value of 0."}]}