{"uid": "773-E", "url": "https://codeforces.com/contest/773/problem/E", "tags": ["data structures", " sortings"], "title": "773-E", "statement": "E. Blog Post Ratingtime limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIt's well-known that blog posts are an important part of Codeforces platform. Every blog post has a global characteristic changing over time — itscommunity rating. A newly created blog post's community rating is 0. Codeforces users may visit the blog post page and rate it, changing its community rating by +1 or -1.Consider the following model of Codeforces users' behavior. Thei-th user has his ownestimated blog post ratingdenoted by an integerai. When a user visits a blog post page, he compares his estimated blog post rating to its community rating. If his estimated rating is higher, he rates the blog post with +1 (thus, the blog post's community rating increases by 1). If his estimated rating is lower, he rates the blog post with -1 (decreasing its community rating by 1). If the estimated rating and the community rating are equal, user doesn't rate the blog post at all (in this case we'll say that user rates the blog post for 0). In any case, after this procedure user closes the blog post page and never opens it again.Consider a newly created blog post with the initial community rating of 0. For each ofnCodeforces users, numbered from 1 ton, his estimated blog post ratingaiis known.For eachkfrom 1 ton, inclusive, the following question is asked. Let users with indices from 1 tok,in some order, visit the blog post page, rate the blog post and close the page. Each user opens the blog post only after the previous user closes it. What could be the maximum possible community rating of the blog post after thesekvisits?InputThe first line contains a single integern(1 ≤n≤ 5·105) — the number of Codeforces users.The second line containsnintegersa1,a2, ...,an(- 5·105≤ai≤ 5·105) — estimated blog post ratings for users in order from 1 ton.OutputFor eachkfrom 1 ton, output a single integer equal to the maximum possible community rating of the blog post after users with indices from 1 tok, in some order, visit the blog post page, rate the blog post, and close the page.ExamplesInput42 0 2 2Output1122Input72 -3 -2 5 0 -3 1Output10-10112", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "c7944088", "template_md5": "35d339e4", "result": "You are given an array of $n$ integers, $a_1, a_2, ..., a_n$, representing the estimated blog post ratings of $n$ users.  \n\nFor each $k$ from 1 to $n$, find the maximum possible community rating of a blog post after $k$ users visit it, rate it, and leave. \n\nHere's how the rating works:\n\n* A new blog post starts with a community rating of 0.\n* Each user compares their estimated rating ($a_i$) to the current community rating.\n* If $a_i$ is higher, they rate the post +1.\n* If $a_i$ is lower, they rate the post -1.\n* If $a_i$ is equal to the community rating, they don't rate it.\n* Users visit the blog post one after another.\n\nOutput the maximum possible community rating after $k$ users have visited."}, {"prompt_md5": "b62d504c", "template_md5": "465699a0", "result": "You are given a list of numbers representing how much each person thinks a blog post is worth.  People visit the blog post one at a time and change its rating based on their opinion. If they think it's worth more, they increase the rating. If they think it's worth less, they decrease the rating. If they think it's worth the same, they don't change it.  \n\nFor each number of people (from 1 to the total number of people), find the highest possible rating the blog post could have after those people visit it."}]}