{"uid": "1920-F1", "url": "https://codeforces.com/contest/1920/problem/F1", "tags": ["binary search", " brute force", " data structures", " dfs and similar", " dsu", " graphs", " shortest paths"], "title": "1920-F1", "statement": "F1. Smooth Sailing (Easy Version)time limit per test5 secondsmemory limit per test1024 megabytesinputstandard inputoutputstandard outputThe only difference between the two versions of this problem is the constraint on $$$q$$$. You can make hacks only if both versions of the problem are solved.Thomas is sailing around an island surrounded by the ocean. The ocean and island can be represented by a grid with $$$n$$$ rows and $$$m$$$ columns. The rows are numbered from $$$1$$$ to $$$n$$$ from top to bottom, and the columns are numbered from $$$1$$$ to $$$m$$$ from left to right. The position of a cell at row $$$r$$$ and column $$$c$$$ can be represented as $$$(r, c)$$$. Below is an example of a valid grid.Example of a valid gridThere are three types of cells: island, ocean and underwater volcano. Cells representing the island are marked with a '#', cells representing the ocean are marked with a '.', and cells representing an underwater volcano are marked with a 'v'. It is guaranteed that there is at least one island cell and at least one underwater volcano cell. It is also guaranteed that the set of all island cells forms a single connected component$$$^{\\\\dagger}$$$ and the set of all ocean cells and underwater volcano cells forms a single connected component. Additionally, it is guaranteed that there are no island cells at the edge of the grid (that is, at row $$$1$$$, at row $$$n$$$, at column $$$1$$$, and at column $$$m$$$).Define around tripstarting from cell $$$(x, y)$$$ as a path Thomas takes which satisfies the following conditions:The path starts and ends at $$$(x, y)$$$.If Thomas is at cell $$$(i, j)$$$, he can go to cells $$$(i+1, j)$$$, $$$(i-1, j)$$$, $$$(i, j-1)$$$, and $$$(i, j+1)$$$ as long as the destination cellis an ocean cell or an underwater volcano celland is still inside the grid. Note that it is allowed for Thomas to visit the same cell multiple times in the same round trip.The path must go around the island and fully encircle it. Some path $$$p$$$ fully encircles the island if it is impossible to go from an island cell to a cell on the grid border by only travelingto adjacent on a side or diagonalcells without visiting a cell on path $$$p$$$. In the image below, the path starting from $$$(2, 2)$$$, going to $$$(1, 3)$$$, and going back to $$$(2, 2)$$$ the other way doesnotfully encircle the island and is not considered a round trip.Example of a path that doesnotfully encircle the islandThesafetyof a round trip is the minimum Manhattan distance$$$^{\\\\ddagger}$$$ from a cell on the round trip to an underwater volcano (note that the presence of island cells does not impact this distance).You have $$$q$$$ queries. A query can be represented as $$$(x, y)$$$ and for every query, you want to find the maximum safety of a round trip starting from $$$(x, y)$$$. It is guaranteed that $$$(x, y)$$$ is an ocean cell or an underwater volcano cell.$$$^{\\\\dagger}$$$A set of cells forms a single connected component if from any cell of this set it is possible to reach any other cell of this set by moving only through the cells of this set, each time going to a cellwith a common side.$$$^{\\\\ddagger}$$$Manhattan distance between cells $$$(r_1, c_1)$$$ and $$$(r_2, c_2)$$$ is equal to $$$|r_1 - r_2| + |c_1 - c_2|$$$.InputThe first line contains three integers $$$n$$$, $$$m$$$, and $$$q$$$ ($$$3 \\\\leq n, m \\\\leq 10^5$$$, $$$9 \\\\leq n \\\\cdot m \\\\leq 3 \\\\cdot 10^5$$$, $$$1 \\\\leq q \\\\leq 5$$$) — the number of rows and columns of the grid and the number of queries.Each of the following $$$n$$$ lines contains $$$m$$$ characters describing the cells of the grid. The character '#' denotes an island cell, '.' denotes an ocean cell, and 'v' denotes an underwater volcano cell.It is guaranteed that there is at least one island cell and at least one underwater volcano cell. It is guaranteed that the set of all island cells forms a single connected component and the set of all ocean cells and underwater volcano cells forms a single connected component. Also, it is guaranteed that there are no island cells at the edge of the grid (that is, at the row $$$1$$$, at the row $$$n$$$, at the column $$$1$$$, and at the column $$$m$$$).The following $$$q$$$ lines describe the queries. Each of these lines contains two integers $$$x$$$ and $$$y$$$ ($$$1 \\\\leq x \\\\leq n$$$, $$$1 \\\\leq y \\\\leq m$$$) denoting a round trip starting from $$$(x, y)$$$.It is guaranteed that $$$(x, y)$$$ is an ocean cell or an underwater volcano cell.OutputFor each query, output a single integer — the maximum safety of a round trip starting from the specified position.ExamplesInput9 9 3 ......... ......... ....###.. ...v#.... ..###.... ...##...v ...##.... ......... v........ 1 1 9 1 5 7Output3 0 3Input3 3 5 ..v .#. ... 1 2 1 3 2 3 2 1 3 2Output0 0 0 0 0Input14 13 5 ............. ............. ............. ...vvvvvvv... ...v.....v... ...v.###.v... ...v.#.#.v... ...v..v..v... ...v..v..v... ....v...v.... .....vvv..... ............. ............. ............. 1 1 7 7 5 6 4 10 13 6Output3 0 1 0 2Input10 11 4 ........... ..#######.. ..#..#..#.. ..#.....#.. ..#..v..#.. ..#.###.#.. ..#.#.#.#.. ..#...#.#.. ..#####.#.. ........... 7 6 3 7 6 8 1 1Output1 2 3 4NoteFor the first example, the image below shows an optimal round trip starting from $$$(1, 1)$$$. The round trip has a safety of $$$3$$$ as the minimum Manhattan distance from a cell on the round trip to an underwater volcano is $$$3$$$.Example of an optimal round tripFor the fourth example, remember that it is allowed for Thomas to visit the same cell multiple times in the same round trip. For example, doing so is necessary for the round trip starting from $$$(7, 6)$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "4af6c2f5", "template_md5": "35d339e4", "result": "You are given a grid of size $n \\times m$ consisting of three types of cells:\n\n* '#' - Island\n* '.' - Ocean\n* 'v' - Underwater Volcano\n\nThe grid has at least one island cell and at least one underwater volcano cell. The island cells form a single connected component, and the ocean and volcano cells form another connected component. There are no island cells on the border of the grid.\n\nYou are given $q$ queries. Each query is a pair of coordinates $(x, y)$ representing a starting point on the grid.\n\nFor each query, find the maximum safety of a round trip starting from $(x, y)$.\n\nA round trip is a path that starts and ends at $(x, y)$ and visits only ocean or volcano cells. A round trip fully encircles the island if it is impossible to reach any island cell from any other cell on the grid by only moving to adjacent cells (horizontally, vertically, or diagonally) without visiting a cell on the round trip.\n\nThe safety of a round trip is the minimum Manhattan distance from any cell on the round trip to an underwater volcano cell.\n\n**Input:**\n\n* The first line contains three integers: $n$, $m$, and $q$.\n* The next $n$ lines contain $m$ characters each, representing the grid.\n* The next $q$ lines contain two integers each, representing the starting coordinates for each query.\n\n**Output:**\n\nFor each query, output a single integer representing the maximum safety of a round trip starting from the given coordinates."}, {"prompt_md5": "236cfc4f", "template_md5": "465699a0", "result": "You are given a grid of cells. Some cells are land, some are water, and some are volcanoes.  You start at a water or volcano cell.  You can move to any adjacent water or volcano cell.  Find the minimum distance to a volcano from any path that completely surrounds the land.  Do this for multiple starting points."}]}