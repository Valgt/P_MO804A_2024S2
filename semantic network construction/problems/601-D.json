{"uid": "601-D", "url": "https://codeforces.com/contest/601/problem/D", "tags": ["data structures", " dfs and similar", " dsu", " hashing", " strings", " trees"], "title": "601-D", "statement": "D. Acyclic Organic Compoundstime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given a treeTwithnvertices (numbered1throughn) and a letter in each vertex. The tree is rooted at vertex1.Let's look at the subtreeTvof some vertexv. It is possible to read a string along each simple path starting atvand ending at some vertex inTv(possiblyvitself). Let's denote the number ofdistinctstrings which can be read this way as.Also, there's a numbercvassigned to each vertexv. We are interested in vertices with the maximum value of.You should compute two statistics: the maximum value ofand the number of verticesvwith the maximum.InputThe first line of the input contains one integern(1 ≤n≤ 300 000) — the number of vertices of the tree.The second line containsnspace-separated integersci(0 ≤ci≤ 109).The third line contains a stringsconsisting ofnlowercase English letters — thei-th character of this string is the letter in vertexi.The followingn- 1lines describe the treeT. Each of them contains two space-separated integersuandv(1 ≤u,v≤n) indicating an edge between verticesuandv.It's guaranteed that the input will describe a tree.OutputPrint two lines.On the first line, printover all1 ≤i≤n.On the second line, print the number of verticesvfor which.ExamplesInput101 2 7 20 20 30 40 50 50 50cacabbcddd1 26 87 26 25 45 93 102 52 3Output513Input60 2 4 1 1 1raaaba1 22 32 42 53 6Output62NoteIn the first sample, the tree looks like this:The sets of strings that can be read from individual vertices are:Finally, the values ofare:In the second sample, the values ofare(5, 4, 2, 1, 1, 1). The distinct strings read inT2are; note thatcan be read down to vertices3or4.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "dcac9d2b", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices (numbered 1 through $n$). Each vertex has a letter assigned to it.  \n\n* **Subtree Strings:** For each vertex $v$, consider all the simple paths starting at $v$ and ending at any vertex within the subtree rooted at $v$.  Let $S_v$ be the number of distinct strings that can be formed by reading the letters along these paths.\n\n* **Vertex Values:** Each vertex $v$ also has a value $c_v$.\n\n**Your task is to:**\n\n1. Find the maximum value of $S_v$ over all vertices $v$.\n2. Count the number of vertices $v$ that achieve this maximum value.\n\n\n\n**Input:**\n\n* The first line contains $n$ (the number of vertices).\n* The second line contains $n$ space-separated integers $c_1, c_2, ..., c_n$.\n* The third line contains a string of $n$ lowercase English letters, where the $i$-th letter is the letter assigned to vertex $i$.\n* The following $n-1$ lines describe the tree edges, each line containing two integers $u$ and $v$ representing an edge between vertices $u$ and $v$.\n\n**Output:**\n\n* Print the maximum value of $S_v$ on the first line.\n* Print the number of vertices with this maximum value on the second line."}, {"prompt_md5": "1f6ff516", "template_md5": "465699a0", "result": "You are given a tree-like structure with labeled nodes. Each node has a value.  You need to find the node with the highest number of unique \"words\" that can be formed by reading the labels along paths starting from that node. Output the highest number of words and the count of nodes with that maximum."}]}