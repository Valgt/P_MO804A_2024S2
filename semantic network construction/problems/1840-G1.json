{"uid": "1840-G1", "url": "https://codeforces.com/contest/1840/problem/G1", "tags": ["constructive algorithms", " interactive", " math", " meet-in-the-middle", " probabilities"], "title": "1840-G1", "statement": "G1. In Search of Truth (Easy Version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between easy and hard versions is the maximum number of queries. In this version, you are allowed to ask at most $$$2023$$$ queries.This is an interactive problem.You are playing a game. The circle is divided into $$$n$$$ sectors, sectors are numbered from $$$1$$$ to $$$n$$$ in some order. You are in the adjacent room and do not know either the number of sectors or their numbers. There is also an arrow that initially points to some sector. Initially, the host tells you the number of the sector to which the arrow points. After that, you can ask the host to move the arrow $$$k$$$ sectors counterclockwise or clockwise at most $$$2023$$$ times. And each time you are told the number of the sector to which the arrow points.Your task is to determine the integer $$$n$$$ — the number of sectors in at most $$$2023$$$ queries.It is guaranteed that $$$1 \\\\le n \\\\le 10^6$$$.InputThe input consists of a single integer $$$x$$$ ($$$1 \\\\le x \\\\le n$$$) — the number of the initial sector.OutputAfter you determine the integer $$$n$$$ — the number of sectors, you should output \"! n\" ($$$1 \\\\le n \\\\le 10^6$$$). After that the program should immediately terminate.Note that, printing the answer does not count as a query.It is guaranteed that the integer $$$n$$$ and the numbers of the sectors are fixed initially and will not be changed by the jury program depending on the queries.InteractionAfter reading the description of the input, you may ask queries. Queries can be of two types:\"+ k\" ($$$0 \\\\le k \\\\le 10^9$$$) — ask to move the arrow $$$k$$$ sectors clockwise.\"- k\" ($$$0 \\\\le k \\\\le 10^9$$$) — ask to move the arrow $$$k$$$ sectors counterclockwise.After each query, you should read an integer $$$x$$$ ($$$1 \\\\le x \\\\le n$$$) — the number of the current sector to which the arrow points.You are allowed to make at most $$$2023$$$ queries in total.If you make too many queries, you will getWrong answer.After printing a query or the answer, do not forget to output a the end of line and flush the output. Otherwise, you will getIdleness limit exceeded. To do this, use:fflush(stdout)orcout.flush()in C++;System.out.flush()in Java;flush(output)in Pascal;stdout.flush()in Python;see the documentation for other languages.ExampleInput1  5  6  7  2  10  9  8  4  3  1Output+ 1  + 1  + 1  + 1  + 1  + 1  + 1  + 1  + 1  + 1  ! 10NoteHacksTo hack, use the following test format.In the first line, output a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 10^6$$$) — the number of sectors.In the second line, output $$$n$$$ different integers $$$1 \\\\le a_1, a_2, \\\\dots, a_n \\\\le n$$$ — the numbers of the sectors in clockwise order, the arrow initially points to the sector with the number $$$a_1$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "28b08612", "template_md5": "35d339e4", "result": "You are playing a game where a circle is divided into a number of sectors, but you don't know how many sectors there are or their order. You can see an arrow pointing to one of the sectors.\n\nYou can ask the game to move the arrow either clockwise or counterclockwise by a certain number of sectors. After each move, the game tells you the number of the sector the arrow is now pointing to.\n\nYour goal is to figure out the total number of sectors in the circle using as few moves as possible (at most 2023 moves).\n\n**Input:**\n\nThe first line of input contains a single integer,  $x$ ($1 \\le x \\le n$), which is the number of the sector the arrow is initially pointing to.\n\n**Output:**\n\nAfter you determine the number of sectors, output \"! n\" (where $n$ is the number of sectors) and the program will end.\n\n**Interaction:**\n\nYou can ask the game to move the arrow using the following commands:\n\n* \"+ k\" : Move the arrow $k$ sectors clockwise ($0 \\le k \\le 10^9$)\n* \"- k\" : Move the arrow $k$ sectors counterclockwise ($0 \\le k \\le 10^9$)\n\nAfter each command, the game will tell you the new sector number the arrow is pointing to."}, {"prompt_md5": "12850823", "template_md5": "465699a0", "result": "You are given a circular object divided into a number of sections. You don't know how many sections there are. You can move an arrow around the circle a certain number of steps at a time, and after each move, you are told the section the arrow is pointing to. Your goal is to figure out the total number of sections using as few moves as possible."}]}