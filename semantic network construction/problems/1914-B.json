{"uid": "1914-B", "url": "https://codeforces.com/contest/1914/problem/B", "tags": ["constructive algorithms", " math"], "title": "1914-B", "statement": "B. Preparing for the Contesttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMonocarp is practicing for a big contest. He plans to solve $$$n$$$ problems to make sure he's prepared. Each of these problems has a difficulty level: the first problem has a difficulty level of $$$1$$$, the second problem has a difficulty level of $$$2$$$, and so on, until the last ($$$n$$$-th) problem, which has a difficulty level of $$$n$$$.Monocarp will choose some order in which he is going to solve all $$$n$$$ problems. Whenever he solves a problem which is more difficult than the last problem he solved, he gets excited because he feels like he's progressing. He doesn't get excited when he solves the first problem in his chosen order.For example, if Monocarp solves the problems in the order $$$[3, \\\\underline{5}, 4, 1, \\\\underline{6}, 2]$$$, he gets excited twice (the corresponding problems are underlined).Monocarp wants to get excited exactly $$$k$$$ times during his practicing session. Help him to choose the order in which he has to solve the problems!InputThe first line contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 1000$$$) â€” the number of test cases.Each test case consists of one line containing two integers $$$n$$$ and $$$k$$$ ($$$2 \\\\le n \\\\le 50$$$; $$$0 \\\\le k \\\\le n - 1$$$).OutputFor each test case, print $$$n$$$distinctintegers from $$$1$$$ to $$$n$$$, denoting the order in which Monocarp should solve the problems. If there are multiple answers, print any of them.It can be shown that under the constraints of the problem, the answer always exists.ExampleInput36 25 45 0Output3 5 4 1 6 2 1 2 3 4 5 5 4 3 2 1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "b2e5ac4c", "template_md5": "35d339e4", "result": "You are given an integer $n$ and an integer $k$.  You need to output a permutation of the numbers from 1 to $n$ such that there are exactly $k$ numbers in the permutation that are greater than the previous number in the permutation."}, {"prompt_md5": "68b554e8", "template_md5": "465699a0", "result": "You are given a list of numbers from 1 to n. You need to arrange them in a specific order so that when you go through the list, you get excited exactly k times.  You get excited when the current number is larger than the previous number.  The first number in the list does not count towards the excitement."}]}