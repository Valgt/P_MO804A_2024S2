{"uid": "1367-B", "url": "https://codeforces.com/contest/1367/problem/B", "tags": ["greedy", " math"], "title": "1367-B", "statement": "B. Even Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array $$$a[0 \\\\ldots n-1]$$$ of length $$$n$$$ which consists of non-negative integers.Note that array indices start from zero.An array is calledgoodif the parity of each index matches the parity of the element at that index. More formally, an array is good if for all $$$i$$$ ($$$0 \\\\le i \\\\le n - 1$$$) the equality $$$i \\\\bmod 2 = a[i] \\\\bmod 2$$$ holds, where $$$x \\\\bmod 2$$$ is the remainder of dividing $$$x$$$ by 2.For example, the arrays [$$$0, 5, 2, 1$$$] and [$$$0, 17, 0, 3$$$] are good, and the array [$$$2, 4, 6, 7$$$] is bad, because for $$$i=1$$$, the parities of $$$i$$$ and $$$a[i]$$$ are different: $$$i \\\\bmod 2 = 1 \\\\bmod 2 = 1$$$, but $$$a[i] \\\\bmod 2 = 4 \\\\bmod 2 = 0$$$.In one move, you can takeanytwo elements of the array and swap them (these elements are not necessarily adjacent).Find the minimum number of moves in which you can make the array $$$a$$$ good, or say that this is not possible.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 1000$$$) — the number of test cases in the test. Then $$$t$$$ test cases follow.Each test case starts with a line containing an integer $$$n$$$ ($$$1 \\\\le n \\\\le 40$$$) — the length of the array $$$a$$$.The next line contains $$$n$$$ integers $$$a_0, a_1, \\\\ldots, a_{n-1}$$$ ($$$0 \\\\le a_i \\\\le 1000$$$) — the initial array.OutputFor each test case, output a single integer — the minimum number of moves to make the given array $$$a$$$ good, or-1if this is not possible.ExampleInput4 4 3 2 7 6 3 3 2 6 1 7 7 4 9 2 1 18 3 0Output2 1 -1 0NoteIn the first test case, in the first move, you can swap the elements with indices $$$0$$$ and $$$1$$$, and in the second move, you can swap the elements with indices $$$2$$$ and $$$3$$$.In the second test case, in the first move, you need to swap the elements with indices $$$0$$$ and $$$1$$$.In the third test case, you cannot make the array good.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e0d2532e", "template_md5": "35d339e4", "result": "You are given an array of non-negative integers. An array is \"good\" if the parity (evenness or oddness) of each index matches the parity of the element at that index.  \n\nFor example, the array [0, 5, 2, 1] is good because:\n\n* 0 is even and 0 is even\n* 1 is odd and 5 is odd\n* 2 is even and 2 is even\n* 3 is odd and 1 is odd\n\nThe array [2, 4, 6, 7] is bad because the parity of index 1 and the element at index 1 don't match.\n\nYou can swap any two elements in the array in one move. Find the minimum number of moves needed to make the array good, or say it's impossible. \n\n\nInput:\n\n* The first line contains the number of test cases (t).\n* Each test case starts with the length of the array (n).\n* The next line contains n integers, the elements of the array.\n\nOutput:\n\n* For each test case, output the minimum number of moves to make the array good, or -1 if it's impossible."}, {"prompt_md5": "d2852244", "template_md5": "465699a0", "result": "You are given a list of numbers.  A list is \"good\" if the parity (even or odd) of each number's position matches the parity of the number itself. You can swap any two numbers in the list. Find the fewest swaps needed to make the list good, or say it's impossible."}]}