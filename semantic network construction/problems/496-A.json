{"uid": "496-A", "url": "https://codeforces.com/contest/496/problem/A", "tags": ["brute force", " implementation", " math"], "title": "496-A", "statement": "A. Minimum Difficultytime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutMike is trying rock climbing but he is awful at it.There arenholds on the wall,i-th hold is at heightaioff the ground. Besides, let the sequenceaiincrease, that is,ai<ai+ 1for allifrom 1 ton- 1; we will call such sequence atrack. Mike thinks that the tracka1, ...,anhasdifficulty. In other words, difficulty equals the maximum distance between two holds that are adjacent in height.Today Mike decided to cover the track with holds hanging on heightsa1, ...,an. To make the problem harder, Mike decided to remove one hold, that is, remove one element of the sequence (for example, if we take the sequence(1, 2, 3, 4, 5)and remove the third element from it, we obtain the sequence(1, 2, 4, 5)). However, as Mike is awful at climbing, he wants the final difficulty (i.e. the maximum difference of heights between adjacent holds after removing the hold) to be as small as possible among all possible options of removing a hold. The first and last holdsmuststay at their positions.Help Mike determine the minimum difficulty of the track after removing one hold.InputThe first line contains a single integern(3 ≤n≤ 100) — the number of holds.The next line containsnspace-separated integersai(1 ≤ai≤ 1000), whereaiis the height where the hold numberihangs. The sequenceaiis increasing (i.e. each element except for the first one is strictly larger than the previous one).OutputPrint a single number — the minimum difficulty of the track after removing a single hold.ExamplesInput31 4 6Output5Input51 2 3 4 5Output2Input51 2 3 7 8Output4NoteIn the first sample you can remove only the second hold, then the sequence looks like(1, 6), the maximum difference of the neighboring elements equals 5.In the second test after removing every hold the difficulty equals 2.In the third test you can obtain sequences(1, 3, 7, 8),(1, 2, 7, 8),(1, 2, 3, 8), for which the difficulty is 4, 5 and 5, respectively. Thus, after removing the second element we obtain the optimal answer — 4.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d27ea577", "template_md5": "35d339e4", "result": "You are given a sequence of $n$ integers ($3 \\le n \\le 100$) representing the heights of $n$ holds on a climbing wall. The sequence is strictly increasing.  \n\nYou need to remove one hold from the sequence (you cannot remove the first or last hold).  \n\nFind the minimum possible maximum difference between the heights of any two adjacent holds after removing one hold."}, {"prompt_md5": "be1c940d", "template_md5": "465699a0", "result": "You are given a list of increasing numbers representing the heights of holds on a climbing wall.  You must remove one hold from the list.  What is the smallest possible difference you can make between the heights of any two adjacent holds after the removal?"}]}