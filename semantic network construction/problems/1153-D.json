{"uid": "1153-D", "url": "https://codeforces.com/contest/1153/problem/D", "tags": ["binary search", " dfs and similar", " dp", " greedy", " trees"], "title": "1153-D", "statement": "D. Serval and Rooted Treetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputNow Serval is a junior high school student in Japari Middle School, and he is still thrilled on math as before.As a talented boy in mathematics, he likes to play with numbers. This time, he wants to play with numbers on a rooted tree.A tree is a connected graph without cycles. A rooted tree has a special vertex called the root. A parent of a node $$$v$$$ is the last different from $$$v$$$ vertex on the path from the root to the vertex $$$v$$$. Children of vertex $$$v$$$ are all nodes for which $$$v$$$ is the parent. A vertex is a leaf if it has no children.The rooted tree Serval owns has $$$n$$$ nodes, node $$$1$$$ is the root. Serval will write some numbers into all nodes of the tree. However, there are some restrictions. Each of the nodes except leaves has an operation $$$\\\\max$$$ or $$$\\\\min$$$ written in it, indicating that the number in this node should be equal to the maximum or minimum of all the numbers in its sons, respectively.Assume that there are $$$k$$$ leaves in the tree. Serval wants to put integers $$$1, 2, \\\\ldots, k$$$ to the $$$k$$$ leaves (each number should be used exactly once). He loves large numbers, so he wants to maximize the number in the root. As his best friend, can you help him?InputThe first line contains an integer $$$n$$$ ($$$2 \\\\leq n \\\\leq 3\\\\cdot 10^5$$$), the size of the tree.The second line contains $$$n$$$ integers, the $$$i$$$-th of them represents the operation in the node $$$i$$$. $$$0$$$ represents $$$\\\\min$$$ and $$$1$$$ represents $$$\\\\max$$$. If the node is a leaf, there is still a number of $$$0$$$ or $$$1$$$, but you can ignore it.The third line contains $$$n-1$$$ integers $$$f_2, f_3, \\\\ldots, f_n$$$ ($$$1 \\\\leq f_i \\\\leq i-1$$$), where $$$f_i$$$ represents the parent of the node $$$i$$$.OutputOutput one integer — the maximum possible number in the root of the tree.ExamplesInput6 1 0 1 1 0 1 1 2 2 2 2Output1Input5 1 0 1 0 1 1 1 1 1Output4Input8 1 0 0 1 0 1 1 0 1 1 2 2 3 3 3Output4Input9 1 1 0 0 1 0 1 0 1 1 1 2 2 3 3 4 4Output5NotePictures below explain the examples. The numbers written in the middle of the nodes are their indices, and the numbers written on the top are the numbers written in the nodes.In the first example, no matter how you arrange the numbers, the answer is $$$1$$$.In the second example, no matter how you arrange the numbers, the answer is $$$4$$$.In the third example, one of the best solution to achieve $$$4$$$ is to arrange $$$4$$$ and $$$5$$$ to nodes $$$4$$$ and $$$5$$$.In the fourth example, the best solution is to arrange $$$5$$$ to node $$$5$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e42ed4cd", "template_md5": "35d339e4", "result": "You are given a rooted tree with $n$ nodes ($2 \\le n \\le 3 \\cdot 10^5$). Each node, except the leaves, has an operation written on it: either \"min\" or \"max\".  \n\n* A \"min\" operation means the value in that node must be the minimum of its children's values.\n* A \"max\" operation means the value in that node must be the maximum of its children's values.\n\nThere are $k$ leaves in the tree. You need to assign integers from 1 to $k$ to the leaves.  \n\nFind the maximum possible value that can be in the root of the tree after applying the operations.\n\n**Input:**\n\n* The first line contains $n$, the number of nodes.\n* The second line contains $n$ integers, where the $i$-th integer is 0 for \"min\" and 1 for \"max\" for the $i$-th node.\n* The third line contains $n-1$ integers $f_2, f_3, ..., f_n$, where $f_i$ is the parent of the $i$-th node.\n\n**Output:**\n\n* Output a single integer, the maximum possible value in the root."}, {"prompt_md5": "ade8aefb", "template_md5": "465699a0", "result": "You are given a tree with $n$ nodes, where each node has a label indicating whether it should store the maximum or minimum value of its children.  You need to assign numbers 1 through $k$ to the $k$ leaf nodes in a way that maximizes the value stored in the root node."}]}