{"uid": "1361-C", "url": "https://codeforces.com/contest/1361/problem/C", "tags": ["binary search", " bitmasks", " constructive algorithms", " dfs and similar", " dsu", " graphs"], "title": "1361-C", "statement": "C. Johnny and Megan's Necklacetime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputJohnny's younger sister Megan had a birthday recently. Her brother has bought her a box signed as \"Your beautiful necklace — do it yourself!\". It contains many necklace parts and some magic glue.The necklace part is a chain connecting two pearls. Color of each pearl can be defined by a non-negative integer. The magic glue allows Megan to merge two pearls (possibly from the same necklace part) into one. The beauty of a connection of pearls in colors $$$u$$$ and $$$v$$$ is defined as follows: let $$$2^k$$$ be the greatest power of two dividing $$$u \\\\oplus v$$$ —exclusive orof $$$u$$$ and $$$v$$$. Then the beauty equals $$$k$$$. If $$$u = v$$$, you may assume that beauty is equal to $$$20$$$.Each pearl can be combined with another at most once. Merging two parts of a necklace connects them. Using the glue multiple times, Megan can finally build the necklace, which is a cycle made from connected necklace parts (so every pearl in the necklace is combined with precisely one other pearl in it). The beauty of such a necklace is the minimum beauty of a single connection in it. The girl wants to use all available necklace parts to buildexactly onenecklace consisting ofall of themwith the largest possible beauty. Help her!InputThe first line contains $$$n$$$ $$$(1 \\\\leq n \\\\leq 5 \\\\cdot 10^5)$$$ — the number of necklace parts in the box. Each of the next $$$n$$$ lines contains two integers $$$a$$$ and $$$b$$$ $$$(0 \\\\leq a, b < 2^{20})$$$, which denote colors of pearls presented in the necklace parts. Pearls in the $$$i$$$-th line have indices $$$2i - 1$$$ and $$$2i$$$ respectively.OutputThe first line should contain a single integer $$$b$$$ denoting the maximum possible beauty of a necklace built from all given parts.The following line should contain $$$2n$$$ distinct integers $$$p_i$$$ $$$(1 \\\\leq p_i \\\\leq 2n)$$$ — the indices of initial pearls in the order in which they appear on a cycle. Indices of pearls belonging to the same necklace part have to appear at neighboring positions in this permutation (so $$$1\\\\,4\\\\,3\\\\,2$$$ is not a valid output, whereas $$$2\\\\,1\\\\,4\\\\,3$$$ and $$$4\\\\,3\\\\,1\\\\,2$$$ are). If there are many possible answers, you can print any.ExamplesInput5 13 11 11 1 3 5 17 1 9 27Output3 8 7 9 10 5 6 1 2 3 4Input5 13 11 11 1 3 5 17 1 7 29Output2 8 7 10 9 5 6 4 3 2 1Input1 1 1Output20 2 1NoteIn the first example the following pairs of pearls are combined: $$$(7, 9)$$$, $$$(10, 5)$$$, $$$(6, 1)$$$, $$$(2, 3)$$$ and $$$(4, 8)$$$. The beauties of connections equal correspondingly: $$$3$$$, $$$3$$$, $$$3$$$, $$$20$$$, $$$20$$$.The following drawing shows this construction.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "994d912e", "template_md5": "35d339e4", "result": "You are given $n$ necklace parts, where each part connects two pearls with colors represented by non-negative integers $a$ and $b$.  The beauty of connecting two pearls with colors $u$ and $v$ is defined as:\n\n*  Let $2^k$ be the largest power of two that divides $u \\oplus v$ (the bitwise XOR of $u$ and $v$). \n*  The beauty is $k$. If $u=v$, the beauty is 20.\n\nYou can merge any two pearls (possibly from the same part) at most once.  The goal is to build a single necklace by connecting all the parts, maximizing the minimum beauty of any connection in the necklace.\n\nOutput the maximum possible beauty and one possible order of the pearls in the necklace."}, {"prompt_md5": "c6b83905", "template_md5": "465699a0", "result": "You are given a set of pairs of numbers. Each pair represents two items that can be combined into one. The \"beauty\" of combining two items is determined by a specific rule involving the bitwise XOR operation.  \n\nYour task is to find the way to combine all the items into a single cycle (a closed loop) so that the minimum beauty of any combination in the cycle is as large as possible. \n\n\nOutput the maximum possible beauty and one possible arrangement of the items in the cycle."}]}