{"uid": "1455-F", "url": "https://codeforces.com/contest/1455/problem/F", "tags": ["dp", " greedy"], "title": "1455-F", "statement": "F. String and Operationstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string $$$s$$$ consisting of $$$n$$$ characters. These characters are among the first $$$k$$$ lowercase letters of the Latin alphabet. You have to perform $$$n$$$ operations with the string.During the $$$i$$$-th operation, you take the character thatinitially occupiedthe $$$i$$$-th position, and performoneof the following actions with it:swap it with the previous character in the string (if it exists). This operation is represented asL;swap it with the next character in the string (if it exists). This operation is represented asR;cyclically change it to the previous character in the alphabet (bbecomesa,cbecomesb, and so on;abecomes the $$$k$$$-th letter of the Latin alphabet). This operation is represented asD;cyclically change it to the next character in the alphabet (abecomesb,bbecomesc, and so on; the $$$k$$$-th letter of the Latin alphabet becomesa). This operation is represented asU;do nothing. This operation is represented as0.For example, suppose the initial string istest, $$$k = 20$$$, and the sequence of operations isURLD. Then the string is transformed as follows:the first operation isU, so we change the underlined letter intestto the next one in the first $$$20$$$ Latin letters, which isa. The string is nowaest;the second operation isR, so we swap the underlined letter with the next one in the stringaest. The string is nowaset;the third operation isL, so we swap the underlined letter with the previous one in the stringaset(note that this is now the $$$2$$$-nd character of the string, but it was initially the $$$3$$$-rd one, so the $$$3$$$-rd operation is performed to it). The resulting string issaet;the fourth operation isD, so we change the underlined letter insaetto the previous one in the first $$$20$$$ Latin letters, which iss. The string is nowsaes.The result of performing the sequence of operations issaes.Given the string $$$s$$$ and the value of $$$k$$$, find the lexicographically smallest string that can be obtained after applying a sequence of operations to $$$s$$$.InputThe first line contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 1000$$$) â€” the number of test cases.Each test case consists of two lines. The first line contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\\\le n \\\\le 500$$$; $$$2 \\\\le k \\\\le 26$$$).The second line contains a string $$$s$$$ consisting of $$$n$$$ characters. Each character is one of the $$$k$$$ first letters of the Latin alphabet (in lower case).OutputFor each test case, print one line containing the lexicographically smallest string that can be obtained from $$$s$$$ using one sequence of operations.ExampleInput6 4 2 bbab 7 5 cceddda 6 5 ecdaed 7 4 dcdbdaa 8 3 ccabbaca 5 7 eabbaOutputaaaa baccacd aabdac aabacad aaaaaaaa abadb", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6dfcbc2c", "template_md5": "465699a0", "result": "You are given a string of lowercase letters. You can perform operations on each letter in the string: swap it with the letter before it, swap it with the letter after it, move it one position back in the alphabet, move it one position forward in the alphabet, or do nothing.  Find the lexicographically smallest string you can create by applying these operations to the original string."}, {"prompt_md5": "5a8cb499", "template_md5": "35d339e4", "result": "You are given a string of length $n$ consisting of $k$ lowercase letters. You can perform the following operations on the string:\n\n* **L:** Swap the current character with the character before it (if it exists).\n* **R:** Swap the current character with the character after it (if it exists).\n* **D:** Cyclically move the current character one position back in the alphabet (e.g., 'a' becomes 'z', 'b' becomes 'a').\n* **U:** Do nothing.\n* **0:** Do nothing.\n\nFind the lexicographically smallest string that can be obtained by performing a sequence of these operations on the given string.\n\nInput:\n\n* The first line contains the number of test cases, $t$.\n* Each test case consists of two lines:\n    * The first line contains two integers, $n$ and $k$.\n    * The second line contains the string $s$.\n\nOutput:\n\n* For each test case, print the lexicographically smallest string that can be obtained."}]}