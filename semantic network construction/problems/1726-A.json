{"uid": "1726-A", "url": "https://codeforces.com/contest/1726/problem/A", "tags": ["greedy", " math"], "title": "1726-A", "statement": "A. Mainak and Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMainak has an array $$$a_1, a_2, \\\\ldots, a_n$$$ of $$$n$$$ positive integers. He will do the following operation to this arrayexactly once:Pick a subsegment of this array and cyclically rotate it by any amount.Formally, he can do the following exactly once:Pick two integers $$$l$$$ and $$$r$$$, such that $$$1 \\\\le l \\\\le r \\\\le n$$$, and any positive integer $$$k$$$.Repeat this $$$k$$$ times: set $$$a_l=a_{l+1}, a_{l+1}=a_{l+2}, \\\\ldots, a_{r-1}=a_r, a_r=a_l$$$ (all changes happen at the same time).Mainak wants tomaximizethe value of $$$(a_n - a_1)$$$ after exactly one such operation. Determine the maximum value of $$$(a_n - a_1)$$$ that he can obtain.InputEach test contains multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 50$$$) — the number of test cases. Description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 2000$$$).The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\le a_i \\\\le 999$$$).It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2000$$$.OutputFor each test case, output a single integer — the maximum value of $$$(a_n - a_1)$$$ that Mainak can obtain by doing the operationexactly once.ExampleInput561 3 9 11 5 712039 99 99942 1 8 132 1 5Output10 0 990 7 4NoteIn the first test case, we can rotate the subarray from index $$$3$$$ to index $$$6$$$ by an amount of $$$2$$$ (i.e. choose $$$l = 3$$$, $$$r = 6$$$ and $$$k = 2$$$) to get the optimal array: $$$$$$[1, 3, \\\\underline{9, 11, 5, 7}] \\\\longrightarrow [1, 3, \\\\underline{5, 7, 9, 11}]$$$$$$ So the answer is $$$a_n - a_1 = 11 - 1 = 10$$$.In the second testcase, it is optimal to rotate the subarray starting and ending at index $$$1$$$ and rotating it by an amount of $$$2$$$.In the fourth testcase, it is optimal to rotate the subarray starting from index $$$1$$$ to index $$$4$$$ and rotating it by an amount of $$$3$$$. So the answer is $$$8 - 1 = 7$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0fa4222a", "template_md5": "35d339e4", "result": "You are given an array of $n$ positive integers. You can perform one operation on the array:\n\n1. Choose two integers $l$ and $r$ where $1 \\le l \\le r \\le n$.\n2. Choose a positive integer $k$.\n3. Rotate the subarray from index $l$ to $r$ by $k$ positions to the right. This means:\n   - $a_l = a_{l+1}$, $a_{l+1} = a_{l+2}$, ..., $a_{r-1} = a_r$, $a_r = a_l$\n\nThe goal is to find the maximum possible value of $(a_n - a_1)$ after performing this operation exactly once. \n\nInput:\n\n- The first line contains an integer $t$ ($1 \\le t \\le 50$) representing the number of test cases.\n- For each test case:\n    - The first line contains an integer $n$ ($1 \\le n \\le 2000$) representing the size of the array.\n    - The second line contains $n$ integers $a_1, a_2, ..., a_n$ ($1 \\le a_i \\le 999$) representing the elements of the array.\n\nOutput:\n\nFor each test case, output a single integer representing the maximum possible value of $(a_n - a_1)$."}, {"prompt_md5": "b542f87a", "template_md5": "465699a0", "result": "You are given an array of numbers. You can choose a section of the array and shift its elements cyclically. What is the largest possible difference between the last and first element of the array after one such shift?"}]}