{"uid": "1110-E", "url": "https://codeforces.com/contest/1110/problem/E", "tags": ["constructive algorithms", " math", " sortings"], "title": "1110-E", "statement": "E. Magic Stonestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputGrigory has $$$n$$$ magic stones, conveniently numbered from $$$1$$$ to $$$n$$$. Thechargeof the $$$i$$$-th stone is equal to $$$c_i$$$.Sometimes Grigory gets bored and selects someinnerstone (that is, some stone with index $$$i$$$, where $$$2 \\\\le i \\\\le n - 1$$$), and after thatsynchronizesit with neighboring stones. After that, the chosen stone loses its own charge, but acquires the charges from neighboring stones. In other words, its charge $$$c_i$$$ changes to $$$c_i' = c_{i + 1} + c_{i - 1} - c_i$$$.Andrew, Grigory's friend, also has $$$n$$$ stones with charges $$$t_i$$$. Grigory is curious, whether there exists a sequence of zero or moresynchronizationoperations, which transforms charges of Grigory's stones into charges of corresponding Andrew's stones, that is, changes $$$c_i$$$ into $$$t_i$$$ for all $$$i$$$?InputThe first line contains one integer $$$n$$$ ($$$2 \\\\le n \\\\le 10^5$$$) — the number of magic stones.The second line contains integers $$$c_1, c_2, \\\\ldots, c_n$$$ ($$$0 \\\\le c_i \\\\le 2 \\\\cdot 10^9$$$) — the charges of Grigory's stones.The second line contains integers $$$t_1, t_2, \\\\ldots, t_n$$$ ($$$0 \\\\le t_i \\\\le 2 \\\\cdot 10^9$$$) — the charges of Andrew's stones.OutputIf there exists a (possibly empty) sequence ofsynchronizationoperations, which changes all charges to the required ones, print \"Yes\".Otherwise, print \"No\".ExamplesInput4 7 2 4 12 7 15 10 12OutputYesInput3 4 4 4 1 2 3OutputNoNoteIn the first example, we can perform the followingsynchronizations($$$1$$$-indexed):First,synchronizethe third stone $$$[7, 2, \\\\mathbf{4}, 12] \\\\rightarrow [7, 2, \\\\mathbf{10}, 12]$$$.Thensynchronizethe second stone: $$$[7, \\\\mathbf{2}, 10, 12] \\\\rightarrow [7, \\\\mathbf{15}, 10, 12]$$$.In the second example, any operation with the second stone will not change its charge.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "dccf6d89", "template_md5": "35d339e4", "result": "You are given two arrays of integers,  $c$ and $t$, both of length $n$.  \n\n* $c_i$ represents the charge of the $i$-th stone.\n* $t_i$ represents the target charge for the $i$-th stone.\n\nYou can perform the following operation on a stone with index $i$ (where $2 \\le i \\le n-1$):\n\n1. The stone loses its current charge ($c_i$).\n2. The stone gains the charges of its neighboring stones ($c_{i+1}$ and $c_{i-1}$).\n\n  The new charge of the stone becomes $c_i' = c_{i+1} + c_{i-1} - c_i$.\n\nDetermine if there exists a sequence of these operations that can transform the charges in array $c$ to match the charges in array $t$. \n\nIf such a sequence exists, output \"Yes\". Otherwise, output \"No\"."}, {"prompt_md5": "11b6925c", "template_md5": "465699a0", "result": "You are given two arrays of numbers.  You can repeatedly take a number in the middle of the first array and replace it with the sum of the numbers on either side of it.  Can you make the first array equal to the second array using this operation?"}]}