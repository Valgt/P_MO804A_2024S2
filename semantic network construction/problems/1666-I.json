{"uid": "1666-I", "url": "https://codeforces.com/contest/1666/problem/I", "tags": ["brute force", " constructive algorithms", " geometry", " interactive", " math"], "title": "1666-I", "statement": "I. Interactive Treasure Hunttime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputThis is an interactive problem.There is a grid of $$$n\\\\times m$$$ cells. Two treasure chests are buried in two different cells of the grid. Your task is to find both of them. You can make two types of operations:DIG $$$r$$$ $$$c$$$: try to find the treasure in the cell $$$(r, c)$$$. The interactor will tell you if you found the treasure or not.SCAN $$$r$$$ $$$c$$$: scan from the cell $$$(r, c)$$$. The result of this operation is the sum of Manhattan distances from the cell $$$(r, c)$$$ to the cells where the treasures are hidden. Manhattan distance from a cell $$$(r_1, c_1)$$$ to a cell $$$(r_2, c_2)$$$ is calculated as $$$|r_1 - r_2| + |c_1 - c_2|$$$.You need to find the treasures in at most 7 operations. This includes bothDIGandSCANoperations in total. To solve the test you need to callDIGoperation at least once in both of the cells where the treasures are hidden.InteractionYour program has to process multiple test cases in a single run. First, the testing system writes $$$t$$$ — the number of test cases ($$$1\\\\le t \\\\le 100$$$). Then, $$$t$$$ test cases should be processed one by one.In each test case, your program should start by reading the integers $$$n$$$ and $$$m$$$ ($$$2 \\\\le n, m \\\\le 16$$$).Then, your program can make queries of two types:DIG $$$r$$$ $$$c$$$($$$1\\\\le r\\\\le n$$$; $$$1\\\\le c\\\\le m$$$). The interactor responds with integer $$$1$$$, if you found the treasure, and $$$0$$$ if not. If you try to find the treasure in the same cell multiple times, the result will be $$$0$$$ since the treasure is already found.SCAN $$$r$$$ $$$c$$$($$$1\\\\le r\\\\le n$$$; $$$1\\\\le c\\\\le m$$$). The interactor responds with an integer that is the sum of Manhattan distances from the cell $$$(r, c)$$$ to the cells where the treasures were hidden. The sum is calculated for both cells with treasures, even if you already found one of them.After you found both treasures, i. e. you received $$$1$$$ for twoDIGoperations, your program should continue to the next test case or exit if that test case was the last one.ExampleInput1 2 3  1  1  3  0  1OutputSCAN 1 2  DIG 1 2  SCAN 2 2  DIG 1 1  DIG 1 3", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "83f59173", "template_md5": "35d339e4", "result": "You are given a grid of $n \\times m$ cells. Two treasures are hidden in two different cells of the grid. You have to find both treasures in at most 7 operations.\n\nYou can perform two types of operations:\n\n* **DIG (r c):** Try to find the treasure in the cell $(r, c)$. The system will tell you if you found a treasure (1) or not (0).\n* **SCAN (r c):** Scan from the cell $(r, c)$. The system will tell you the sum of Manhattan distances from cell $(r, c)$ to the cells where the treasures are hidden. Manhattan distance between two cells $(r_1, c_1)$ and $(r_2, c_2)$ is calculated as $|r_1 - r_2| + |c_1 - c_2|$.\n\nYou need to call the DIG operation at least once in each cell containing a treasure. \n\n\n\nLet me know if you'd like help with a specific strategy for solving this problem!"}, {"prompt_md5": "3df781a2", "template_md5": "465699a0", "result": "You need to find two hidden objects on a grid. You can either try to dig at a specific location or scan a location to get a sum representing the distance to the hidden objects. You have 7 actions total to find both objects."}]}