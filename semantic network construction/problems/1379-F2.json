{"uid": "1379-F2", "url": "https://codeforces.com/contest/1379/problem/F2", "tags": ["data structures", " divide and conquer"], "title": "1379-F2", "statement": "F2. Chess Strikes Back (hard version)time limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputNote that the difference between easy and hard versions is that in hard version unavailable cells can become available again and in easy version can't. You can make hacks only if all versions are solved.Ildar and Ivan are tired of chess, but they really like the chessboard, so they invented a new game. The field is a chessboard $$$2n \\\\times 2m$$$: it has $$$2n$$$ rows, $$$2m$$$ columns, and the cell in row $$$i$$$ and column $$$j$$$ is colored white if $$$i+j$$$ is even, and is colored black otherwise.The game proceeds as follows: Ildar marks some of thewhitecells of the chessboard asunavailable, and asks Ivan to place $$$n \\\\times m$$$ kings on the remainingwhitecells in such way, so that there are no kings attacking each other. A king can attack another king if they are located in the adjacent cells, sharing an edge or a corner.Ildar would like to explore different combinations of cells. Initially all cells are marked as available, and then he has $$$q$$$ queries. In each query he either marks a cell as unavailable, or marks the previously unavailable cell as available. After each query he would like to know whether it is possible to place the kings on the available cells in a desired way. Please help him!InputThe first line of input contains three integers $$$n$$$, $$$m$$$, $$$q$$$ ($$$1 \\\\leq n, m, q \\\\leq 200\\\\,000$$$) — the size of the board and the number of queries.$$$q$$$ lines follow, each of them contains a description of a query: two integers $$$i$$$ and $$$j$$$, denoting a white cell on the board ($$$1 \\\\leq i \\\\leq 2n$$$, $$$1 \\\\leq j \\\\leq 2m$$$, $$$i + j$$$ is even). If the cell $$$(i, j)$$$ was available before the query, then it becomes unavailable. Otherwise, if the cell was unavailable, it becomes available.OutputOutput $$$q$$$ lines, $$$i$$$-th line should contain answer for a board after $$$i$$$ queries of Ildar. This line should contain \"YES\" if it is possible to place the kings on the available cells in the desired way, or \"NO\" otherwise.ExamplesInput1 3 3 1 1 1 5 2 4OutputYES YES NOInput3 2 10 4 2 6 4 1 3 4 2 6 4 2 2 2 4 1 3 4 4 3 1OutputYES YES NO NO YES YES NO YES YES NONoteIn the first example case after the second query only cells $$$(1, 1)$$$ and $$$(1, 5)$$$ are unavailable. Then Ivan can place three kings on cells $$$(2, 2)$$$, $$$(2, 4)$$$ and $$$(2, 6)$$$.After the third query three cells $$$(1, 1)$$$, $$$(1, 5)$$$ and $$$(2, 4)$$$ are unavailable, so there remain only 3 available cells: $$$(2, 2)$$$, $$$(1, 3)$$$ and $$$(2, 6)$$$. Ivan can not put 3 kings on those cells, because kings on cells $$$(2, 2)$$$ and $$$(1, 3)$$$ attack each other, since these cells share a corner.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f91b97cd", "template_md5": "35d339e4", "result": "You are given a chessboard of size $2n \\times 2m$.  Each cell is colored white or black based on the parity of the sum of its row and column indices. \n\nA player can mark some white cells as unavailable.  The goal is to determine if it's possible to place $n \\times m$ kings on the remaining available white cells such that no two kings attack each other. Kings attack adjacent cells (sharing an edge or corner).\n\nThere are $q$ queries. Each query either marks a cell as unavailable or makes a previously unavailable cell available. After each query, determine if it's possible to place the kings.\n\n**Input:**\n\n* Three integers $n$, $m$, and $q$ (the size of the board and the number of queries).\n* $q$ lines, each containing two integers $i$ and $j$ representing a white cell.  Marking this cell unavailable or available.\n\n**Output:**\n\n* $q$ lines, each containing \"YES\" if it's possible to place the kings after the corresponding query, or \"NO\" otherwise."}, {"prompt_md5": "5a7c3e24", "template_md5": "465699a0", "result": "You are given a chessboard. Some squares are marked as unavailable.  You need to determine if it's possible to place a certain number of objects on the remaining available squares without any two objects being able to attack each other (attacking means sharing an edge or corner).  You will be given a series of updates to the available squares and need to answer this question after each update."}]}