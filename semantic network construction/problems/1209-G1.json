{"uid": "1209-G1", "url": "https://codeforces.com/contest/1209/problem/G1", "tags": ["data structures", " dsu", " greedy", " implementation", " two pointers"], "title": "1209-G1", "statement": "G1. Into Blocks (easy version)time limit per test5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is an easier version of the next problem. In this version, $$$q = 0$$$.A sequence of integers is calledniceif its elements are arranged in blocks like in $$$[3, 3, 3, 4, 1, 1]$$$. Formally, if two elements are equal, everything in between must also be equal.Let's definedifficultyof a sequence as a minimum possible number of elements to change to get a nice sequence. However, if you change at least one element of value $$$x$$$ to value $$$y$$$, you must also change all other elements of value $$$x$$$ into $$$y$$$ as well. For example, for $$$[3, 3, 1, 3, 2, 1, 2]$$$ it isn't allowed to change first $$$1$$$ to $$$3$$$ and second $$$1$$$ to $$$2$$$. You need to leave $$$1$$$'s untouched or change them to the same value.You are given a sequence of integers $$$a_1, a_2, \\\\ldots, a_n$$$ and $$$q$$$ updates.Each update is of form \"$$$i$$$ $$$x$$$\" — change $$$a_i$$$ to $$$x$$$. Updates are not independent (the change stays for the future).Print the difficulty of the initial sequence and of the sequence after every update.InputThe first line contains integers $$$n$$$ and $$$q$$$ ($$$1 \\\\le n \\\\le 200\\\\,000$$$, $$$q = 0$$$), the length of the sequence and the number of the updates.The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\le a_i \\\\le 200\\\\,000$$$), the initial sequence.Each of the following $$$q$$$ lines contains integers $$$i_t$$$ and $$$x_t$$$ ($$$1 \\\\le i_t \\\\le n$$$, $$$1 \\\\le x_t \\\\le 200\\\\,000$$$), the position and the new value for this position.OutputPrint $$$q+1$$$ integers, the answer for the initial sequence and the answer after every update.ExamplesInput5 0 3 7 3 7 3Output2Input10 0 1 2 1 2 3 1 1 1 50 1Output4Input6 0 6 6 3 3 4 4Output0Input7 0 3 3 1 3 2 1 2Output4", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "856e2f1d", "template_md5": "35d339e4", "result": "You are given a sequence of integers. A sequence is considered \"nice\" if its elements are arranged in blocks of equal numbers. For example, $[3, 3, 3, 4, 1, 1]$ is a nice sequence.\n\nThe \"difficulty\" of a sequence is the minimum number of changes needed to make it nice.  When you change a number, you must change all occurrences of that number to the same new value.\n\nYou will be given a sequence and a series of updates. Each update tells you to change a specific number in the sequence to a new value. After each update, you need to calculate the difficulty of the updated sequence.\n\n**Input:**\n\n* The first line contains two integers: the length of the sequence ($n$) and the number of updates ($q$).\n* The second line contains $n$ integers, representing the initial sequence.\n* Each of the following $q$ lines contains two integers: the position ($i$) of a number to change and the new value ($x$) to change it to.\n\n**Output:**\n\nPrint $q+1$ integers:\n\n* The first integer is the difficulty of the initial sequence.\n* The remaining $q$ integers are the difficulties of the sequence after each update."}, {"prompt_md5": "728edb86", "template_md5": "465699a0", "result": "You are given a list of numbers.  A \"nice\" list is one where all the same numbers are grouped together.  \n\nYou can change a number in the list to a new number. If you change one number to a new number, you must change all occurrences of that old number to the new number.\n\nFind the minimum number of changes needed to make the list \"nice\" and print this number after each change you make to the list."}]}