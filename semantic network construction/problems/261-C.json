{"uid": "261-C", "url": "https://codeforces.com/contest/261/problem/C", "tags": ["constructive algorithms", " dp", " math"], "title": "261-C", "statement": "C. Maxim and Matrixtime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutMaxim loves to fill in a matrix in a special manner. Here is a pseudocode of filling in a matrix of size(m+ 1) × (m+ 1):Maxim asks you to count, how many numbersm(1 ≤m≤n)are there, such that the sum of values in the cells in the row numberm+ 1of the resulting matrix equalst.Expression (xxory) means applying the operation of bitwise excluding \"OR\" to numbersxandy. The given operation exists in all modern programming languages. For example, in languagesC++andJavait is represented by character \"^\", inPascal— by \"xor\".InputA single line contains two integersnandt(1 ≤n,t≤ 1012,t≤n+ 1).Please, do not use the%lldspecifier to read or write 64-bit integers inC++. It is preferred to use thecin,coutstreams or the%I64dspecifier.OutputIn a single line print a single integer — the answer to the problem.ExamplesInput1 1Output1Input3 2Output1Input3 3Output0Input1000000000000 1048576Output118606527258", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ff84026f", "template_md5": "35d339e4", "result": "Given two integers $n$ and $t$ ($1 \\le n, t \\le 10^{12}$, $t \\le n+1$), find the number of integers $m$ ($1 \\le m \\le n$) such that the sum of the values in the $m+1$th row of a matrix of size $(m+1) \\times (m+1)$ is equal to $t$. \n\nThe matrix is filled in a special way, but the specific method of filling is not relevant to solving the problem. \n\n\nOutput a single integer representing the count of such $m$ values."}, {"prompt_md5": "d3a83b43", "template_md5": "465699a0", "result": "Given a number 'n' and a target sum 't', count how many numbers 'm' (between 1 and n) exist such that the sum of elements in the 'm+1'th row of a matrix results in 't'.  The matrix is filled in a specific way, but the exact method is not relevant to solving the problem."}]}