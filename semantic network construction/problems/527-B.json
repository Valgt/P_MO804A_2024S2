{"uid": "527-B", "url": "https://codeforces.com/contest/527/problem/B", "tags": ["greedy"], "title": "527-B", "statement": "B. Error Correct Systemtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputFord Prefect got a job as a web developer for a small company that makes towels. His current work task is to create a search engine for the website of the company. During the development process, he needs to write a subroutine for comparing stringsSandTof equal length to be \"similar\". After a brief search on the Internet, he learned about theHamming distancebetween two stringsSandTof the same length, which is defined as the number of positions in whichSandThave different characters. For example, the Hamming distance between words \"permanent\" and \"pergament\" is two, as these words differ in the fourth and sixth letters.Moreover, as he was searching for information, he also noticed that modern search engines have powerful mechanisms to correct errors in the request to improve the quality of search. Ford doesn't know much about human beings, so he assumed that the most common mistake in a request is swapping two arbitrary letters of the string (not necessarily adjacent). Now he wants to write a function that determines which two letters should be swapped in stringS, so that the Hamming distance between a new stringSand stringTwould be as small as possible, or otherwise, determine that such a replacement cannot reduce the distance between the strings.Help him do this!InputThe first line contains integern(1 ≤n≤ 200 000) — the length of stringsSandT.The second line contains stringS.The third line contains stringT.Each of the lines only containslowercaseLatin letters.OutputIn the first line, print numberx— the minimum possible Hamming distance between stringsSandTif you swap at most one pair of letters inS.In the second line, either print the indexesiandj(1 ≤i,j≤n,i≠j), if reaching the minimum possible distance is possible by swapping letters on positionsiandj, or print \"-1 -1\", if it is not necessary to swap characters.If there are multiple possible answers, print any of them.ExamplesInput9pergamentpermanentOutput14 6Input6wookiecookieOutput1-1 -1Input4petregorOutput21 2Input6doublebundleOutput24 1NoteIn the second test it is acceptable to printi= 2,j= 3.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "b1df4e62", "template_md5": "35d339e4", "result": "You are given two strings, S and T, of equal length. The Hamming distance between two strings is the number of positions where the characters are different.\n\nYou can swap any two characters in string S.  \n\nFind the minimum possible Hamming distance between S and T after swapping at most one pair of characters in S. If no swap is needed to reduce the distance, output -1 -1. \n\nIf multiple swaps achieve the minimum distance, output any one."}, {"prompt_md5": "5150d40e", "template_md5": "465699a0", "result": "Given two strings of equal length, find the minimum number of swaps needed to make them as similar as possible. If swapping one pair of letters is enough to achieve the minimum similarity, output the indices of those letters. Otherwise, output -1 -1."}]}