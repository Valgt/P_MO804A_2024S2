{"uid": "1373-B", "url": "https://codeforces.com/contest/1373/problem/B", "tags": ["games"], "title": "1373-B", "statement": "B. 01 Gametime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlica and Bob are playing a game.Initially they have a binary string $$$s$$$ consisting of only characters0and1.Alice and Bob make alternating moves: Alice makes the first move, Bob makes the second move, Alice makes the third one, and so on. During each move, the current player must choose twodifferent adjacentcharacters of string $$$s$$$ and delete them. For example, if $$$s = 1011001$$$ then the following moves are possible:delete $$$s_1$$$ and $$$s_2$$$: $$$\\\\textbf{10}11001 \\\\rightarrow 11001$$$;delete $$$s_2$$$ and $$$s_3$$$: $$$1\\\\textbf{01}1001 \\\\rightarrow 11001$$$;delete $$$s_4$$$ and $$$s_5$$$: $$$101\\\\textbf{10}01 \\\\rightarrow 10101$$$;delete $$$s_6$$$ and $$$s_7$$$: $$$10110\\\\textbf{01} \\\\rightarrow 10110$$$.If a player can't make any move, they lose. Both players play optimally. You have to determine if Alice can win.InputFirst line contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 1000$$$) — the number of test cases.Only line of each test case contains one string $$$s$$$ ($$$1 \\\\le |s| \\\\le 100$$$), consisting of only characters0and1.OutputFor each test case print answer in the single line.If Alice can win printDA(YES in Russian) in any register. Otherwise printNET(NO in Russian) in any register.ExampleInput3 01 1111 0011OutputDA NET NETNoteIn the first test case after Alice's move string $$$s$$$ become empty and Bob can not make any move.In the second test case Alice can not make any move initially.In the third test case after Alice's move string $$$s$$$ turn into $$$01$$$. Then, after Bob's move string $$$s$$$ become empty and Alice can not make any move.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "207c083c", "template_md5": "35d339e4", "result": "You are given a binary string consisting of 0s and 1s. Two players take turns deleting two adjacent characters from the string. The first player goes first.  If a player cannot make a move, they lose. Determine if the first player can always win."}, {"prompt_md5": "cbbdbd88", "template_md5": "465699a0", "result": "Two players take turns deleting pairs of adjacent characters from a binary string. The first player to be unable to make a move loses. Determine if the first player can always win."}]}