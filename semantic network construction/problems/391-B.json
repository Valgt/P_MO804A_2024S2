{"uid": "391-B", "url": "https://codeforces.com/contest/391/problem/B", "tags": ["brute force"], "title": "391-B", "statement": "B. Word Foldingtime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutYou will receive 5 points for solving this problem.Manao has invented a new operation on strings that is called folding. Each fold happens between a pair of consecutive letters and places the second part of the string above first part, running in the opposite direction and aligned to the position of the fold. Using this operation, Manao converts the string into a structure that has one more level than there were fold operations performed. See the following examples for clarity.We will denote the positions of folds with '|' characters. For example, the word \"ABRACADABRA\" written as \"AB|RACA|DAB|RA\" indicates that it has been folded three times: first, between the leftmost pair of 'B' and 'R' letters; second, between 'A' and 'D'; and third, between the rightmost pair of 'B' and 'R' letters. Here are several examples of folded strings:\"ABCDEF|GHIJK\" |  \"A|BCDEFGHIJK\" |  \"AB|RACA|DAB|RA\" |  \"X|XXXXX|X|X|XXXXXX\"|                 |                   |       XXXXXXKJIHG      |   KJIHGFEDCB    |      AR           |       XABCDEF      |            A    |     DAB           |       X|                 |     ACAR          |       XXXXX|                 |       AB          |           XOne last example for \"ABCD|EFGH|IJ|K\":KIJHGFEABCDManao noticed that each folded string can be viewed as several piles of letters. For instance, in the previous example, there are four piles, which can be read as \"AHI\", \"BGJK\", \"CF\", and \"DE\" from bottom to top. Manao wonders what is the highest pile of identical letters he can build using fold operations on a given word. Note that the pile should not contain gaps and should start at the bottom level. For example, in the rightmost of the four examples above, none of the piles would be considered valid since each of them has gaps, starts above the bottom level, or both.InputThe input will consist of one line containing a single string ofncharacters with1 ≤n≤ 1000and no spaces. All characters of the string will be uppercase letters.This problem doesn't have subproblems. You will get 5 points for the correct submission.OutputPrint a single integer — the size of the largest pile composed of identical characters that can be seen in a valid result of folding operations on the given string.ExamplesInputABRACADABRAOutput3InputABBBCBDBOutput3InputABOutput1NoteConsider the first example. Manao can create a pile of three 'A's using the folding \"AB|RACAD|ABRA\", which results in the following structure:ABRADACARABIn the second example, Manao can create a pile of three 'B's using the following folding: \"AB|BB|CBDB\".CBDBBBABAnother way for Manao to create a pile of three 'B's with \"ABBBCBDB\" is the following folding: \"AB|B|BCBDB\".BCBDBBABIn the third example, there are no folds performed and the string is just written in one line.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ebd39e33", "template_md5": "35d339e4", "result": "You are given a string of uppercase letters. You can perform a \"fold\" operation on the string by taking any two consecutive letters and placing the second part of the string above the first part, running in the opposite direction and aligned to the position of the fold.  \n\nFor example, folding \"ABRACADABRA\" between the 'B' and 'R' gives \"AB|RACA|DAB|RA\".\n\nYour task is to find the largest number of consecutive identical letters you can create by performing fold operations on the string. The pile of letters must be continuous and start at the bottom level of the folded structure. \n\nInput: A string of uppercase letters with length between 1 and 1000.\n\nOutput: The size of the largest pile of identical letters you can create."}, {"prompt_md5": "3a92fce3", "template_md5": "465699a0", "result": "Given a string, find the length of the longest sequence of identical characters that can be formed by repeatedly folding the string in a specific way.  Folding involves taking two consecutive parts of the string and placing the second part above the first, reversed.  The resulting structure should have a valid \"pile\" of identical characters that starts at the bottom level and has no gaps."}]}