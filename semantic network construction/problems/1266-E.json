{"uid": "1266-E", "url": "https://codeforces.com/contest/1266/problem/E", "tags": ["data structures", " greedy", " implementation"], "title": "1266-E", "statement": "E. Spaceship Solitairetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputBob is playing a game of Spaceship Solitaire. The goal of this game is to build a spaceship. In order to do this, he first needs to accumulate enough resources for the construction. There are $$$n$$$ types of resources, numbered $$$1$$$ through $$$n$$$. Bob needs at least $$$a_i$$$ pieces of the $$$i$$$-th resource to build the spaceship. The number $$$a_i$$$ is calledthe goal for resource $$$i$$$.Each resource takes $$$1$$$ turn to produce and in each turn only one resource can be produced. However, there are certain milestones that speed up production. Every milestone is a triple $$$(s_j, t_j, u_j)$$$, meaning that as soon as Bob has $$$t_j$$$ units of the resource $$$s_j$$$, he receives one unit of the resource $$$u_j$$$ for free, without him needing to spend a turn. It is possible that getting this free resource allows Bob to claim reward for another milestone. This way, he can obtain a large number of resources in a single turn.The game is constructed in such a way that there are never two milestones that have the same $$$s_j$$$and$$$t_j$$$, that is, the award for reaching $$$t_j$$$ units of resource $$$s_j$$$ is at most one additional resource.A bonus is never awarded for $$$0$$$ of any resource, neither for reaching the goal $$$a_i$$$ nor for going past the goal — formally, for every milestone $$$0 < t_j < a_{s_j}$$$.A bonus for reaching certain amount of a resource can be the resource itself, that is, $$$s_j = u_j$$$.Initially there are no milestones. You are to process $$$q$$$ updates, each of which adds, removes or modifies a milestone. After every update, output the minimum number of turns needed to finish the game, that is, to accumulate at least $$$a_i$$$ of $$$i$$$-th resource for each $$$i \\\\in [1, n]$$$.InputThe first line contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 2 \\\\cdot 10^5$$$) — the number of types of resources.The second line contains $$$n$$$ space separated integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\leq a_i \\\\leq 10^9$$$), the $$$i$$$-th of which is the goal for the $$$i$$$-th resource.The third line contains a single integer $$$q$$$ ($$$1 \\\\leq q \\\\leq 10^5$$$) — the number of updates to the game milestones.Then $$$q$$$ lines follow, the $$$j$$$-th of which contains three space separated integers $$$s_j$$$, $$$t_j$$$, $$$u_j$$$ ($$$1 \\\\leq s_j \\\\leq n$$$, $$$1 \\\\leq t_j < a_{s_j}$$$, $$$0 \\\\leq u_j \\\\leq n$$$). For each triple, perform the following actions:First, if there is already a milestone for obtaining $$$t_j$$$ units of resource $$$s_j$$$, it is removed.If $$$u_j = 0$$$, no new milestone is added.If $$$u_j \\\\neq 0$$$, add the following milestone: \"For reaching $$$t_j$$$ units of resource $$$s_j$$$, gain one free piece of $$$u_j$$$.\"Output the minimum number of turns needed to win the game.OutputOutput $$$q$$$ lines, each consisting of a single integer, the $$$i$$$-th represents the answer after the $$$i$$$-th update.ExampleInput2 2 3 5 2 1 1 2 2 1 1 1 1 2 1 2 2 2 0Output4 3 3 2 3NoteAfter the first update, the optimal strategy is as follows. First produce $$$2$$$ once, which gives a free resource $$$1$$$. Then, produce $$$2$$$ twice and $$$1$$$ once, for a total of four turns.After the second update, the optimal strategy is to produce $$$2$$$ three times — the first two times a single unit of resource $$$1$$$ is also granted.After the third update, the game is won as follows.First produce $$$2$$$ once. This gives a free unit of $$$1$$$. This gives additional bonus of resource $$$1$$$. After the first turn, the number of resources is thus $$$[2, 1]$$$.Next, produce resource $$$2$$$ again, which gives another unit of $$$1$$$.After this, produce one more unit of $$$2$$$.The final count of resources is $$$[3, 3]$$$, and three turns are needed to reach this situation. Notice that we have more of resource $$$1$$$ than its goal, which is of no use.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "91569c62", "template_md5": "35d339e4", "result": "There are $n$ types of resources. To win the game, you need to collect at least $a_i$ units of the $i$-th resource for each $i$ from 1 to $n$.\n\nEach turn, you can produce one unit of a single resource. There are milestones that can speed up production. Each milestone is a triple $(s_j, t_j, u_j)$ meaning that when you have $t_j$ units of the $s_j$-th resource, you get one free unit of the $u_j$-th resource.\n\nYou are given $q$ updates. Each update can:\n\n* Remove an existing milestone.\n* Add a new milestone $(s_j, t_j, u_j)$ if $u_j \\neq 0$.\n\nAfter each update, find the minimum number of turns needed to win the game."}, {"prompt_md5": "0fa3e8b3", "template_md5": "465699a0", "result": "You have a set of items, each with a target quantity needed.  You can produce one item per turn.  There are milestones that give you extra items for reaching certain quantities of specific items.  After each change to the milestones, determine the fewest turns needed to collect enough of each item to meet its target."}]}