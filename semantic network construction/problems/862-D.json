{"uid": "862-D", "url": "https://codeforces.com/contest/862/problem/D", "tags": ["binary search", " divide and conquer", " interactive"], "title": "862-D", "statement": "D. Mahmoud and Ehab and the binary stringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMahmoud and Ehab are in the fourth stage now.Dr. Evil has a hidden binary string of lengthn. He guarantees that there is at least one '0' symbol and at least one '1' symbol in it. Now he wants Mahmoud and Ehab to find a position of any '0' symbol and any '1' symbol. In order to do this, Mahmoud and Ehab can ask Dr. Evil up to15questions. They tell Dr. Evil some binary string of lengthn, and Dr. Evil tells the Hamming distance between these two strings. Hamming distance between 2 binary strings of the same length is the number of positions in which they have different symbols. You can find the definition of Hamming distance in the notes section below.Help Mahmoud and Ehab find these two positions.You will getWrong Answerverdict ifYour queries doesn't satisfy interaction protocol described below.You ask strictly more than15questions and your program terminated after exceeding queries limit. Please note, that you can do up to15ask queries and one answer query.Your final answer is not correct.You will getIdleness Limit Exceededif you don't print anything or if you forget to flush the output, including for the final answer (more info about flushing output below).If you exceed the maximum number of queries, You should terminate with 0, In this case you'll get Wrong Answer, If you don't terminate you may receive any verdict because you'll be reading from a closed stream .InputThe first line of input will contain a single integern(2 ≤n≤ 1000) — the length of the hidden binary string.OutputTo print the final answer, print \"! pos0 pos1\" (without quotes), wherepos0andpos1are positions of some '0' and some '1' in the string (the string is 1-indexed).Don't forget to flush the output after printing the answer!InteractionTo ask a question use the format \"? s\" (without quotes), wheresis a query string.Don't forget to flush the output after printing a query!After each query you can read a single integer from standard input — the Hamming distance between the hidden string and the query string.To flush the output you can use:-fflush(stdout) in C++;System.out.flush() in Java;stdout.flush() in Python;flush(output) in Pascal;See the documentation for other languages .Hacking.To hack someone just print one binary string with length up to1000, containing at least one '0' and at least one '1'.ExampleInput3213210Output? 000? 001? 010? 011? 100? 101! 2 1NoteHamming distance definition:https://en.wikipedia.org/wiki/Hamming_distanceIn the first test case the hidden binary string is 101, The first query is 000, so the Hamming distance is2. In the second query the hidden string is still 101and query is 001, so the Hamming distance is1.After some queries you find that symbol at position2is '0' and symbol at position1is '1', so you print \"! 2 1\".", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "9ce6e9be", "template_md5": "35d339e4", "result": "You are given a binary string of length $n$ (where $2 \\le n \\le 1000$) that contains at least one '0' and at least one '1'. You can ask up to 15 questions to find the positions of one '0' and one '1' in the string.\n\nHere's how you can ask questions:\n\n*  For each question, provide a binary string of length $n$ (your query).\n*  The system will respond with the Hamming distance between your query and the hidden string. The Hamming distance is the number of positions where the two strings have different characters.\n\nYour goal is to find the positions of a '0' and a '1' in the hidden string using these queries.  \n\nTo submit your answer, print \"! pos0 pos1\" (without quotes), where pos0 and pos1 are the positions of the '0' and '1' you found (remember, positions are 1-indexed)."}, {"prompt_md5": "17c0989f", "template_md5": "465699a0", "result": "You need to find the positions of a '0' and a '1' in a hidden binary string of a given length. You can ask up to 15 questions. Each question is a binary string of the same length, and the answer is the number of positions where the question string differs from the hidden string."}]}