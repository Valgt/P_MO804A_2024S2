{"uid": "1187-B", "url": "https://codeforces.com/contest/1187/problem/B", "tags": ["binary search", " implementation", " strings"], "title": "1187-B", "statement": "B. Letters Shoptime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe letters shop showcase is a string $$$s$$$, consisting of $$$n$$$ lowercase Latin letters. As the name tells, letters are sold in the shop.Letters are sold one by one from the leftmost to the rightmost. Any customer can only buy some prefix of letters from the string $$$s$$$.There are $$$m$$$ friends, the $$$i$$$-th of them is named $$$t_i$$$. Each of them is planning to estimate the following value: how many letters (the length of the shortest prefix) would s/he need to buy if s/he wanted to construct her/his name of bought letters. The name can be constructed if each letter is presented in the equal or greater amount.For example, for $$$s$$$=\"arrayhead\" and $$$t_i$$$=\"arya\" $$$5$$$ letters have to be bought (\"arrayhead\").For example, for $$$s$$$=\"arrayhead\" and $$$t_i$$$=\"harry\" $$$6$$$ letters have to be bought (\"arrayhead\").For example, for $$$s$$$=\"arrayhead\" and $$$t_i$$$=\"ray\" $$$5$$$ letters have to be bought (\"arrayhead\").For example, for $$$s$$$=\"arrayhead\" and $$$t_i$$$=\"r\" $$$2$$$ letters have to be bought (\"arrayhead\").For example, for $$$s$$$=\"arrayhead\" and $$$t_i$$$=\"areahydra\" all $$$9$$$ letters have to be bought (\"arrayhead\").It is guaranteed that every friend can construct her/his name using the letters from the string $$$s$$$.Note that the values for friends are independent, friends are only estimating them but not actually buying the letters.InputThe first line contains one integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the length of showcase string $$$s$$$.The second line contains string $$$s$$$, consisting of exactly $$$n$$$ lowercase Latin letters.The third line contains one integer $$$m$$$ ($$$1 \\\\le m \\\\le 5 \\\\cdot 10^4$$$) — the number of friends.The $$$i$$$-th of the next $$$m$$$ lines contains $$$t_i$$$ ($$$1 \\\\le |t_i| \\\\le 2 \\\\cdot 10^5$$$) — the name of the $$$i$$$-th friend.It is guaranteed that $$$\\\\sum \\\\limits_{i=1}^m |t_i| \\\\le 2 \\\\cdot 10^5$$$.OutputFor each friend print the length of the shortest prefix of letters from $$$s$$$ s/he would need to buy to be able to construct her/his name of them. The name can be constructed if each letter is presented in the equal or greater amount.It is guaranteed that every friend can construct her/his name using the letters from the string $$$s$$$.ExampleInput9 arrayhead 5 arya harry ray r areahydraOutput5 6 5 2 9", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "eac74ac3", "template_md5": "35d339e4", "result": "You are given a string $s$ of lowercase letters. There are $m$ people, each with a name $t_i$.  Each person wants to know the shortest length of a prefix of $s$ that contains all the letters in their name, with each letter appearing at least as many times as it does in their name.\n\nOutput the shortest prefix length for each person. \n\n**Example:**\n\n* $s$ = \"arrayhead\"\n* $m$ = 5\n* $t_1$ = \"arya\"\n* $t_2$ = \"harry\"\n* $t_3$ = \"ray\"\n* $t_4$ = \"r\"\n* $t_5$ = \"areahydra\"\n\n**Output:**\n\n* 5\n* 6\n* 5\n* 2\n* 9"}, {"prompt_md5": "11c69ebb", "template_md5": "465699a0", "result": "You are given a string of letters and a list of other strings.  For each string in the list, find the shortest section of the original string that contains all the letters needed to make that string."}]}