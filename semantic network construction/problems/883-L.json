{"uid": "883-L", "url": "https://codeforces.com/contest/883/problem/L", "tags": ["data structures"], "title": "883-L", "statement": "L. Berland.Taxitime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBerland.Taxi is a new taxi company withkcars which started operating in the capital of Berland just recently. The capital hasnhouses on a straight line numbered from1(leftmost) ton(rightmost), and the distance between any two neighboring houses is the same.You have to help the company schedule all the taxi rides which come throughout the day according to the following rules:All cars are available for picking up passengers. Initially thej-th car is located next to the house with the numberxjat time0.All cars have the same speed. It takes exactly1minute for any car to travel between neighboring housesiandi+ 1.Thei-th request for taxi ride comes at the timeti, asking for a passenger to be picked up at the houseaiand dropped off at the housebi. All requests for taxi rides are given in the increasing order ofti. Alltiare distinct.When a request for taxi ride is received at timeti, Berland.Taxi operator assigns a car to it as follows:Out of cars which are currently available, operator assigns the car which is theclosestto the pick up spotai. Needless to say, if a car is already on a ride with a passenger, it won't be available for any rides until that passenger is dropped off at the corresponding destination.If there are several such cars, operator will pick one of them whichhas been waiting the mostsince it became available.If there are several such cars, operator will pick one of them whichhas the lowest number.After a car gets assigned to the taxi ride request:The driver immediately starts driving from current position to the houseai.Once the car reaches houseai, the passenger is immediately picked up and the driver starts driving to housebi.Once housebiis reached, the passenger gets dropped off and the car becomes available for new rides staying next to the housebi.It is allowed for multiple cars to be located next to the same house at the same point in time, while waiting for ride requests or just passing by.If there are no available cars at timetiwhen a request for taxi ride comes, then:Thei-th passenger will have to wait for a car to become available.When a car becomes available, operator will immediately assign it to this taxi ride request.If multiple cars become available at once while the passenger is waiting, operator will pick a car out of them according to the rules described above.Operator processes taxi ride requests one by one. So if multiple passengers are waiting for the cars to become available, operator will not move on to processing the(i+ 1)-th ride request until the car gets assigned to thei-th ride request.Your task is to write a program that will process the given list ofmtaxi ride requests. For each request you have to find out which car will get assigned to it, and how long the passenger will have to wait for a car to arrive. Note, if there is already car located at the houseai, then the corresponding wait time will be0.InputThe first line of input contains integersn,kandm(2 ≤n≤ 2·105,1 ≤k,m≤ 2·105) — number of houses, number of cars, and number of taxi ride requests. The second line contains integersx1,x2, ...,xk(1 ≤xi≤n) — initial positions of cars.xiis a house number at which thei-th car is located initially. It's allowed for more than one car to be located next to the same house.The followingmlines contain information about ride requests. Each ride request is represented by integerstj,ajandbj(1 ≤tj≤ 1012,1 ≤aj,bj≤n,aj≠bj), wheretjis time in minutes when a request is made,ajis a house where passenger needs to be picked up, andbjis a house where passenger needs to be dropped off. All taxi ride requests are given in the increasing order oftj. Alltjare distinct.OutputPrintmlines: thej-th line should contain two integer numbers, the answer for thej-th ride request —car numberassigned by the operator andpassenger wait time.ExamplesInput10 1 235 2 89 10 3Output1 11 5Input5 2 11 510 3 5Output1 2Input5 2 21 510 3 520 4 1Output1 22 1NoteIn the first sample test, a request comes in at time5and the car needs to get from house3to house2to pick up the passenger. Therefore wait time will be1and the ride will be completed at time5 + 1 + 6 = 12. The second request comes in at time9, so the passenger will have to wait for the car to become available at time12, and then the car needs another2minutes to get from house8to house10. So the total wait time is3 + 2 = 5.In the second sample test, cars1and2are located at the same distance from the first passenger and have the same \"wait time since it became available\". Car1wins a tiebreaker according to the rules because it has the lowest number. It will come to house3at time3, so the wait time will be2.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "9d89d272", "template_md5": "35d339e4", "result": "There are $n$ houses on a straight line numbered from 1 to $n$.  There are $k$ taxis, each initially located at a different house.  \n\nTaxis travel at the same speed and take 1 minute to travel between adjacent houses.\n\nThere are $m$ taxi requests, each with a time $t_i$, a pickup location $a_i$, and a drop-off location $b_i$. Requests are given in increasing order of time.\n\nWhen a request arrives, a taxi is assigned to it as follows:\n\n1. The taxi closest to the pickup location $a_i$ is chosen.\n2. If multiple taxis are the same distance away, the taxi that has been available the longest is chosen.\n3. If multiple taxis have been available for the same amount of time, the taxi with the lowest number is chosen.\n\nThe taxi immediately drives to the pickup location, picks up the passenger, and then drives to the drop-off location.\n\nFor each request, determine:\n\n* The number of the taxi assigned to the request.\n* The amount of time the passenger waits for a taxi."}, {"prompt_md5": "f19a8e43", "template_md5": "465699a0", "result": "You have a number of cars and a number of requests to travel between houses on a line. Each car starts at a specific house.  Requests come in order of time, and each request specifies a pickup and drop-off house.  \n\nCars travel at the same speed and take one minute to move between houses.  \n\nFor each request, determine which car is assigned and how long the passenger has to wait.  Cars are assigned based on proximity to the pickup location and which car has been waiting the longest."}]}