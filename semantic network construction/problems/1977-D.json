{"uid": "1977-D", "url": "https://codeforces.com/contest/1977/problem/D", "tags": ["bitmasks", " brute force", " greedy", " hashing"], "title": "1977-D", "statement": "D. XORificatortime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a binary (consisting only of0s and1s) $$$n \\\\times m$$$ matrix. You are also given a XORificator, using which you can invert all the values in a chosen row (i.e. replace0with1and1with0).A column in the matrix is consideredspecialif it contains exactly one1. Your task is to find the maximum number of columns that can be madespecialat the same time, and the set of rows the XORificator should be used on to achieve that.InputEach test contains multiple test cases. The first line of input contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\\\leq n, m \\\\leq 3 \\\\cdot 10^5$$$, $$$n \\\\cdot m \\\\leq 3 \\\\cdot 10^5$$$).Each of the following $$$n$$$ lines of the test case contains a binary string of length $$$m$$$.It is guaranteed that the sum of $$$n \\\\cdot m$$$ over all test cases does not exceed $$$3 \\\\cdot 10^5$$$.OutputFor each test case, output two lines.In the first line, output the maximum number ofspecialcolumns that is possible to get simultaneously.In the second line, output a binary string of length $$$n$$$, where the $$$i$$$-th character is0, if you don't use the XORificator on the $$$i$$$-th row, and1, if you use the XORificator on the $$$i$$$-th row.If there are multiple valid XORificator configurations that achieve the optimal answer, you can output any of them.ExampleInput53 41010011001001 111 102 500101101103 3101111000Output3 010 1 0 1 1 3 00 2 010NoteIn the first test case, you can use the XORificator on the second row to make the columns $$$2$$$, $$$3$$$, and $$$4$$$special.In the second test case, the only column is alreadyspecial, so you don't need to use the XORificator.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "7370858b", "template_md5": "35d339e4", "result": "You are given a grid of 0s and 1s. You have a tool that can flip all the 0s to 1s and 1s to 0s in a single row of the grid.  A column is considered \"special\" if it has exactly one 1.\n\nYour task is to find the largest number of columns you can make \"special\" at the same time, and tell which rows to flip to achieve this. \n\n**Input:**\n\n* The first line contains the number of test cases.\n* For each test case:\n    * The first line contains two numbers,  $n$ (number of rows) and $m$ (number of columns).\n    * The next $n$ lines each contain a string of $m$ 0s and 1s, representing the grid.\n\n**Output:**\n\n* For each test case:\n    * The first line contains the maximum number of \"special\" columns possible.\n    * The second line contains a string of $n$ 0s and 1s, where a 1 indicates that the corresponding row should be flipped."}, {"prompt_md5": "1b502199", "template_md5": "465699a0", "result": "You have a grid of 0s and 1s. You can flip all the 0s to 1s and 1s to 0s in any row.  Find the maximum number of columns that can have exactly one 1 after flipping rows, and which rows to flip."}]}