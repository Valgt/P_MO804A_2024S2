{"uid": "1081-F", "url": "https://codeforces.com/contest/1081/problem/F", "tags": ["constructive algorithms", " implementation", " interactive"], "title": "1081-F", "statement": "F. Tricky Interactortime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is an interactive problem.Chouti was tired of studying, so he opened the computer and started playing a puzzle game.Long long ago, the boy found a sequence $$$s_1, s_2, \\\\ldots, s_n$$$ of length $$$n$$$, kept by a tricky interactor. It consisted of $$$0$$$s and $$$1$$$s only and the number of $$$1$$$s is $$$t$$$. The boy knows nothing about this sequence except $$$n$$$ and $$$t$$$, but he can try to find it out with some queries with the interactor.We define an operation called flipping. Flipping $$$[l,r]$$$ ($$$1 \\\\leq l \\\\leq r \\\\leq n$$$) means for each $$$x \\\\in [l,r]$$$, changing $$$s_x$$$ to $$$1-s_x$$$.In each query, the boy can give the interactor two integers $$$l,r$$$ satisfying $$$1 \\\\leq l \\\\leq r \\\\leq n$$$ and the interactor will either flip $$$[1,r]$$$ or $$$[l,n]$$$ (both outcomes have the same probability and all decisions made by interactor are independent from each other, seeNotessection for more details). The interactor will tell the current number of $$$1$$$s after each operation. Note, that the sequencewon't be restoredafter each operation.Help the boy to find theoriginalsequence in no more than $$$10000$$$ interactions.\"Weird legend, dumb game.\" he thought. However, after several tries, he is still stuck with it. Can you help him beat this game?InteractionThe interaction starts with a line containing two integers $$$n$$$ and $$$t$$$ ($$$1 \\\\leq n \\\\leq 300$$$, $$$0 \\\\leq t \\\\leq n$$$) — the length of the sequence and the number of $$$1$$$s in it.After that, you can make queries.To make a query, print a line \"? l r\" ($$$1 \\\\leq l \\\\leq r \\\\leq n$$$), thenflushthe output.After each query, read a single integer $$$t$$$ ($$$-1 \\\\leq t \\\\leq n$$$).If $$$t=-1$$$, it means that you're out of queries, you should terminate your program immediately, then you will getWrong Answer, otherwise the judging result would be undefined because you will interact with a closed stream.If $$$t \\\\geq 0$$$, it represents the current number of $$$1$$$s in the sequence.When you found the original sequence, print a line \"! s\",flushthe output and terminate. Print $$$s_1, s_2, \\\\ldots, s_n$$$ as a binary string and do not print spaces in between.Your solution will getIdleness Limit Exceededif you don't print anything or forget to flush the output.Toflushyou need to do the following right after printing a query and a line end:fflush(stdout)orcout.flush()in C++;System.out.flush()in Java;flush(output)in Pascal;stdout.flush()in Python;see documentation for other languages.HacksFor hacks, use the following format:In the first and only line, print a non-empty binary string. Its length will be $$$n$$$ and it will be treated as $$$s_1, s_2, \\\\ldots, s_n$$$.For example, the the test corresponding to the example contains a line \"0011\".ExampleInput4 2220Output? 1 1? 1 1? 3 4! 0011NoteFor first query $$$1,1$$$, the interactor should flip $$$[1,1]$$$ or $$$[1,4]$$$. It chose to flip $$$[1,4]$$$, so the sequence became1100.For second query $$$1,1$$$, the interactor should flip $$$[1,1]$$$ or $$$[1,4]$$$. It again chose to flip $$$[1,4]$$$, so the sequence became0011.For third query $$$3,4$$$, the interactor should flip $$$[1,4]$$$ or $$$[3,4]$$$. It chose to flip $$$[3,4]$$$, so the sequence became0000.Q: How does interactor choose between $$$[1,r]$$$ and $$$[l,n]$$$? Is it really random?A: The interactor will use asecretpseudorandom number generator. Only $$$s$$$ and your queries will be hashed and used as the seed. So if you give the same sequence of queries twice for the same secret string, you will get the same results. Except this, you can consider the choices fully random, like flipping a fair coin.You needn't (and shouldn't) exploit the exact generator to pass this problem.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "49305b2d", "template_md5": "35d339e4", "result": "You are given an array of $n$ bits ($0$s and $1$s) with $t$ ones. You can perform the following operation:\n\n* **Flip:** Choose two integers $l$ and $r$ ($1 \\le l \\le r \\le n$) and flip all the bits in the subarray from index $l$ to $r$ (change $0$ to $1$ and $1$ to $0$).\n\nYou can ask the interactor to perform a flip operation on either subarray $[1, r]$ or $[l, n]$. The interactor will tell you the number of ones in the array after the operation.\n\nYour goal is to find the original array in at most 10000 operations."}, {"prompt_md5": "ec93624b", "template_md5": "465699a0", "result": "You are given the length of a binary sequence and the number of '1's in it. You can perform queries to flip parts of the sequence. Each query involves choosing two positions and the interactor flips either the segment between those positions or the segment from one position to the end. After each flip, the interactor tells you the new number of '1's. Your goal is to determine the original sequence in at most 10,000 queries."}]}