{"uid": "1628-A", "url": "https://codeforces.com/contest/1628/problem/A", "tags": ["binary search", " constructive algorithms", " greedy", " implementation", " math", " two pointers"], "title": "1628-A", "statement": "A. Meximum Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMihai has just learned about theMEXconcept and since he liked it so much, he decided to use it right away.Given an array $$$a$$$ of $$$n$$$ non-negative integers, Mihai wants to createa new array $$$b$$$that is formed in the following way:While $$$a$$$ is not empty:Choose an integer $$$k$$$ ($$$1 \\\\leq k \\\\leq |a|$$$).Append the MEX of the first $$$k$$$ numbers of the array $$$a$$$ to the end of array $$$b$$$ and erase them from the array $$$a$$$, shifting the positions of the remaining numbers in $$$a$$$.But, since Mihai loves big arrays as much as the MEX concept, he wants the new array $$$b$$$ to be thelexicographically maximum. So, Mihai asks you to tell him what the maximum array $$$b$$$ that can be created by constructing the array optimally is.An array $$$x$$$ is lexicographically greater than an array $$$y$$$ if in the first position where $$$x$$$ and $$$y$$$ differ $$$x_i > y_i$$$ or if $$$|x| > |y|$$$ and $$$y$$$ is a prefix of $$$x$$$ (where $$$|x|$$$ denotes the size of the array $$$x$$$).TheMEXof a set of non-negative integers is the minimal non-negative integer such that it is not in the set. For example,MEX({$$${1, 2, 3}$$$}) $$$= 0$$$ andMEX({$$${0, 1, 2, 4, 5}$$$}) $$$= 3$$$.InputThe first line of the input contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 100$$$) — the number of test cases. The description of test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 2 \\\\cdot 10^5$$$) — the number of elements in the array $$$a$$$.The second line of each test case contains $$$n$$$non-negativeintegers $$$a_1, \\\\ldots, a_n$$$ ($$$0 \\\\leq a_i \\\\leq n$$$), where $$$a_i$$$ is the $$$i$$$-th integer from the array $$$a$$$.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case print $$$m$$$ — the length of the maximum array $$$b$$$ Mihai can create, followed by $$$m$$$ integers denoting the elements of the array $$$b$$$.ExampleInput651 0 2 0 382 2 3 4 0 1 2 01150 1 2 3 440 1 1 0100 0 2 1 1 1 0 0 1 1Output1 4  2 5 1  1 0  1 5  2 2 2  4 3 2 2 0NoteIn the first test case, the lexicographically maximum array $$$b$$$ is obtained by selecting $$$k=5$$$, resulting in the $$$MEX$$$ of the whole array $$$a$$$. It is lexicographically maximum because an array starting with a smaller number than $$$4$$$ is lexicographically smaller, and choosing a $$$k<5$$$ would result in an array starting with a number smaller than $$$4$$$.In the second test case, there are two ways to obtain the maximum array: first selecting $$$k=6$$$, then $$$k=2$$$, or first selecting $$$k=7$$$ and then $$$k=1$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "cc23a9fe", "template_md5": "35d339e4", "result": "You are given an array of non-negative integers.  You can repeatedly do the following:\n\n1. Choose a number $k$ between 1 and the size of the array.\n2. Find the smallest non-negative integer that is not in the first $k$ elements of the array (this is called the MEX).\n3. Append this MEX to a new array.\n4. Remove the first $k$ elements from the original array.\n\nYour goal is to find the lexicographically largest possible new array you can create. \n\n**Input:**\n\n* The first line contains the number of test cases $t$.\n* For each test case:\n    * The first line contains the size of the array $n$.\n    * The second line contains the $n$ integers of the array.\n\n**Output:**\n\nFor each test case, output:\n\n* The length of the lexicographically largest new array.\n* The elements of the lexicographically largest new array."}, {"prompt_md5": "aee31ebe", "template_md5": "465699a0", "result": "You are given a list of non-negative integers.  You can repeatedly take a sublist of the integers, find the smallest missing non-negative integer (the MEX), and add it to a new list.  You must choose the sublist sizes to maximize the lexicographically largest possible new list.  Output the length of the new list and its elements."}]}