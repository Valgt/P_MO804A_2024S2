{"uid": "1304-E", "url": "https://codeforces.com/contest/1304/problem/E", "tags": ["data structures", " dfs and similar", " shortest paths", " trees"], "title": "1304-E", "statement": "E. 1-Trees and Queriestime limit per test4 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputGildong was hiking a mountain, walking by millions of trees. Inspired by them, he suddenly came up with an interesting idea for trees in data structures:What if we add another edge in a tree?Then he found that such tree-like graphs are called1-trees. Since Gildong was bored of solving too many tree problems, he wanted to see if similar techniques in trees can be used in 1-trees as well. Instead of solving it by himself, he's going to test you by providing queries on 1-trees.First, he'll provide you a tree (not 1-tree) with $$$n$$$ vertices, then he will ask you $$$q$$$ queries. Each query contains $$$5$$$ integers: $$$x$$$, $$$y$$$, $$$a$$$, $$$b$$$, and $$$k$$$. This means you're asked to determine if there exists a path from vertex $$$a$$$ to $$$b$$$ that contains exactly $$$k$$$ edges after adding a bidirectional edge between vertices $$$x$$$ and $$$y$$$.A path can contain the same vertices and same edges multiple times. All queries are independent of each other; i.e. the added edge in a query is removed in the next query.InputThe first line contains an integer $$$n$$$ ($$$3 \\\\le n \\\\le 10^5$$$), the number of vertices of the tree.Next $$$n-1$$$ lines contain two integers $$$u$$$ and $$$v$$$ ($$$1 \\\\le u,v \\\\le n$$$, $$$u \\\\ne v$$$) each, which means there is an edge between vertex $$$u$$$ and $$$v$$$. All edges are bidirectional and distinct.Next line contains an integer $$$q$$$ ($$$1 \\\\le q \\\\le 10^5$$$), the number of queries Gildong wants to ask.Next $$$q$$$ lines contain five integers $$$x$$$, $$$y$$$, $$$a$$$, $$$b$$$, and $$$k$$$ each ($$$1 \\\\le x,y,a,b \\\\le n$$$, $$$x \\\\ne y$$$, $$$1 \\\\le k \\\\le 10^9$$$) – the integers explained in the description. It is guaranteed that the edge between $$$x$$$ and $$$y$$$ does not exist in the original tree.OutputFor each query, print \"YES\" if there exists a path that contains exactly $$$k$$$ edges from vertex $$$a$$$ to $$$b$$$ after adding an edge between vertices $$$x$$$ and $$$y$$$. Otherwise, print \"NO\".You can print each letter in any case (upper or lower).ExampleInput5 1 2 2 3 3 4 4 5 5 1 3 1 2 2 1 4 1 3 2 1 4 1 3 3 4 2 3 3 9 5 2 3 3 9OutputYES YES NO YES NONoteThe image below describes the tree (circles and solid lines) and the added edges for each query (dotted lines).Possible paths for the queries with \"YES\" answers are:$$$1$$$-st query: $$$1$$$ – $$$3$$$ – $$$2$$$$$$2$$$-nd query: $$$1$$$ – $$$2$$$ – $$$3$$$$$$4$$$-th query: $$$3$$$ – $$$4$$$ – $$$2$$$ – $$$3$$$ – $$$4$$$ – $$$2$$$ – $$$3$$$ – $$$4$$$ – $$$2$$$ – $$$3$$$", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f1214e47", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices.  You will be asked $q$ queries. Each query consists of five integers: $x$, $y$, $a$, $b$, and $k$.  For each query, you need to determine if there exists a path from vertex $a$ to vertex $b$ that contains exactly $k$ edges after adding a bidirectional edge between vertices $x$ and $y$.  \n\nNote that:\n\n* The edge between $x$ and $y$ does not exist in the original tree.\n* A path can contain the same vertices and edges multiple times.\n* All queries are independent of each other.\n\n\nFor each query, output \"YES\" if such a path exists, and \"NO\" otherwise."}, {"prompt_md5": "5ce1e786", "template_md5": "465699a0", "result": "You are given a tree with a certain number of nodes. You will be asked multiple questions. Each question involves adding a new edge between two nodes in the tree and then determining if there is a path between two other nodes that uses exactly a given number of edges, including the newly added edge."}]}