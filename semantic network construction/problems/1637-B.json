{"uid": "1637-B", "url": "https://codeforces.com/contest/1637/problem/B", "tags": ["brute force", " dp", " greedy", " math"], "title": "1637-B", "statement": "B. MEX and Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet there be an array $$$b_1, b_2, \\\\ldots, b_k$$$. Let there be a partition of this array into segments $$$[l_1; r_1], [l_2; r_2], \\\\ldots, [l_c; r_c]$$$, where $$$l_1 = 1$$$, $$$r_c = k$$$, and for any $$$2 \\\\leq i \\\\leq c$$$ holds that $$$r_{i-1} + 1 = l_i$$$. In other words, each element of the array belongs to exactly one segment.Let's define thecostof a partition as $$$$$$c + \\\\sum_{i = 1}^{c} \\\\operatorname{mex}(\\\\{b_{l_i}, b_{l_i + 1}, \\\\ldots, b_{r_i}\\\\}),$$$$$$ where $$$\\\\operatorname{mex}$$$ of a set of numbers $$$S$$$ is the smallest non-negative integer that does not occur in the set $$$S$$$. In other words, thecostof a partition is the number of segments plus the sum of MEX over all segments. Let's define thevalueof an array $$$b_1, b_2, \\\\ldots, b_k$$$ as themaximumpossiblecostover all partitions of this array.You are given an array $$$a$$$ of size $$$n$$$. Find the sum ofvaluesof all its subsegments.An array $$$x$$$ is a subsegment of an array $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.InputThe input contains several test cases. The first line contains one integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 30$$$) — the number of test cases.The first line for each test case contains one integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 100$$$) — the length of the array.The second line contains a sequence of integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$0 \\\\leq a_i \\\\leq 10^9$$$) — the array elements.It is guaranteed that the sum of the values $$$n$$$ over all test cases does not exceed $$$100$$$.OutputFor each test case print a single integer — the answer to the problem.ExampleInput421 232 0 142 0 5 150 1 1 0 1Output4 14 26 48NoteIn the second test case:The best partition for the subsegment $$$[2, 0, 1]$$$: $$$[2], [0, 1]$$$. The cost of this partition equals to $$$2 + \\\\operatorname{mex}(\\\\{2\\\\}) + \\\\operatorname{mex}(\\\\{0, 1\\\\}) = 2 + 0 + 2 = 4$$$.The best partition for the subsegment $$$[2, 0]$$$: $$$[2], [0]$$$. The cost of this partition equals to $$$2 + \\\\operatorname{mex}(\\\\{2\\\\}) + \\\\operatorname{mex}(\\\\{0\\\\}) = 2 + 0 + 1 = 3$$$The best partition for the subsegment $$$[2]$$$: $$$[2]$$$. The cost of this partition equals to $$$1 + \\\\operatorname{mex}(\\\\{2\\\\}) = 1 + 0 = 1$$$.The best partition for the subsegment $$$[0, 1]$$$: $$$[0, 1]$$$. The cost of this partition equals to $$$1 + \\\\operatorname{mex}(\\\\{0, 1\\\\}) = 1 + 2 = 3$$$.The best partition for the subsegment $$$[0]$$$: $$$[0]$$$. The cost of this partition equals to $$$1 + \\\\operatorname{mex}(\\\\{0\\\\}) = 1 + 1 = 2$$$.The best partition for the subsegment $$$[1]$$$: $$$[1]$$$. The cost of this partition equals to $$$1 + \\\\operatorname{mex}(\\\\{1\\\\}) = 1 + 0 = 1$$$.The sum of values over all subsegments equals to $$$4 + 3 + 1 + 3 + 2 + 1 = 14$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0c5b546e", "template_md5": "35d339e4", "result": "You are given an array of integers.  \n\nFor a given subarray of this array, find the minimum number of segments you can divide it into such that the sum of the smallest missing non-negative integer in each segment (MEX) plus the number of segments is minimized.\n\nCalculate the minimum cost for all subarrays of the given array and sum them up. \n\n\n\nLet me know if you'd like me to elaborate on any part of the problem statement."}, {"prompt_md5": "e519b900", "template_md5": "465699a0", "result": "You are given an array of numbers.  Find the sum of the maximum possible costs for all subarrays of the given array. The cost of a subarray is calculated as 1 plus the sum of the smallest missing non-negative integers within that subarray."}]}