{"uid": "1967-F", "url": "https://codeforces.com/contest/1967/problem/F", "tags": ["brute force", " data structures", " implementation"], "title": "1967-F", "statement": "F. Next and Prevtime limit per test15 secondsmemory limit per test1024 megabytesinputstandard inputoutputstandard outputLet $$$p_1, \\\\ldots, p_n$$$ be a permutation of $$$[1, \\\\ldots, n]$$$.Let the $$$q$$$-subsequence of $$$p$$$ be a permutation of $$$[1, q]$$$, whose elements are in the same relative order as in $$$p_1, \\\\ldots, p_n$$$. That is, we extract all elements not exceeding $$$q$$$ together from $$$p$$$ in the original order, and they make the $$$q$$$-subsequence of $$$p$$$.For a given array $$$a$$$, let $$$pre(i)$$$ be the largest value satisfying $$$pre(i) < i$$$ and $$$a_{pre(i)} > a_i$$$. If it does not exist, let $$$pre(i) = -10^{100}$$$. Let $$$nxt(i)$$$ be the smallest value satisfying $$$nxt(i) > i$$$ and $$$a_{nxt(i)} > a_i$$$. If it does not exist, let $$$nxt(i) = 10^{100}$$$.For each $$$q$$$ such that $$$1 \\\\leq q \\\\leq n$$$, let $$$a_1, \\\\ldots, a_q$$$ be the $$$q$$$-subsequence of $$$p$$$. For each $$$i$$$ such that $$$1 \\\\leq i \\\\leq q$$$, $$$pre(i)$$$ and $$$nxt(i)$$$ will be calculated as defined. Then, you will be given some integer values of $$$x$$$, and for each of them you have to calculate $$$\\\\sum\\\\limits_{i=1}^q \\\\min(nxt(i) - pre(i), x)$$$.InputEach test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1\\\\le t\\\\le 10^4$$$). The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 3\\\\cdot 10^5$$$) — the length of the permutation.The second line of each test case contains $$$n$$$ integers $$$p_1, \\\\ldots, p_n$$$ ($$$1 \\\\leq p_i \\\\leq n$$$) — the initial permutation.Then, for each $$$q$$$ such that $$$1 \\\\leq q \\\\leq n$$$ in ascending order, you will be given an integer $$$k$$$ ($$$0 \\\\leq k \\\\leq 10^5$$$), representing the number of queries for the $$$q$$$-subsequence. Then $$$k$$$ numbers in a line follow: each of them is the value of $$$x$$$ for a single query ($$$1 \\\\leq x \\\\leq q$$$).It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$3\\\\cdot 10^5$$$ and the sum of $$$k$$$ over all test cases does not exceed $$$10^5$$$.OutputFor each test case, for each query, print a single line with an integer: the answer to the query.ExampleInput176 1 4 3 2 5 71 101 31 23 1 2 31 32 2 6Output1 9 8 5 10 14 16 14 30NoteThe $$$1$$$-subsequence is $$$[1]$$$, and $$$pre=[-10^{100}]$$$, $$$nxt=[10^{100}]$$$. $$$ans(1)=\\\\min(10^{100}-(-10^{100}),1)=1$$$.The $$$5$$$-subsequence is $$$[1,4,3,2,5]$$$, and $$$pre=[-10^{100},-10^{100},2,3,-10^{100}]$$$, $$$nxt=[2,5,5,5,10^{100}]$$$. $$$ans(1)=5,ans(2)=10,ans(3)=14$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e1f75b95", "template_md5": "35d339e4", "result": "You are given a permutation of integers $p_1, p_2, ..., p_n$.  For each subsequence of $p$ with length $q$ (where $1 \\le q \\le n$), calculate the following for each $i$ from 1 to $q$:\n\n*  $pre(i)$: The largest integer $j$ such that $j < i$ and $p_j > p_i$. If no such integer exists, set $pre(i)$ to $-10^{100}$.\n*  $nxt(i)$: The smallest integer $j$ such that $j > i$ and $p_j > p_i$. If no such integer exists, set $nxt(i)$ to $10^{100}$.\n\nYou will then be given a set of integers $x$. For each $q$ and each $x$, calculate the following sum:\n\n$$\\sum_{i=1}^{q} \\min(nxt(i) - pre(i), x)$$\n\n**Input:**\n\n* The first line contains the number of test cases $t$.\n* For each test case:\n    * The first line contains the length of the permutation $n$.\n    * The second line contains the permutation $p_1, p_2, ..., p_n$.\n    * For each $q$ from 1 to $n$:\n        * The first line contains the number of queries $k$ for the $q$-subsequence.\n        * The next line contains $k$ integers, each representing a value of $x$ for a query.\n\n**Output:**\n\nFor each test case, for each query, print a single line with the calculated sum."}, {"prompt_md5": "0210a1f6", "template_md5": "465699a0", "result": "You are given a list of numbers. For each possible sublist of the original list, calculate the sum of the minimum values between the difference between the next larger number and the previous larger number in the sublist, and a given value."}]}