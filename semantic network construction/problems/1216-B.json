{"uid": "1216-B", "url": "https://codeforces.com/contest/1216/problem/B", "tags": ["greedy", " implementation", " sortings"], "title": "1216-B", "statement": "B. Shootingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecently Vasya decided to improve his pistol shooting skills. Today his coach offered him the following exercise. He placed $$$n$$$ cans in a row on a table. Cans are numbered from left to right from $$$1$$$ to $$$n$$$. Vasya has to knock down each can exactly once to finish the exercise. He is allowed to choosethe orderin which he will knock the cans down.Vasya knows that thedurabilityof the $$$i$$$-th can is $$$a_i$$$. It means that if Vasya has already knocked $$$x$$$ cans down and is now about to start shooting the $$$i$$$-th one, he will need $$$(a_i \\\\cdot x + 1)$$$ shots to knock it down. You can assume that if Vasya starts shooting the $$$i$$$-th can, he will be shooting it until he knocks it down.Your task is to choose such an order of shooting so that the number of shots required to knock each of the $$$n$$$ given cans down exactly once is minimum possible.InputThe first line of the input contains one integer $$$n$$$ $$$(2 \\\\le n \\\\le 1\\\\,000)$$$ — the number of cans.The second line of the input contains the sequence $$$a_1, a_2, \\\\dots, a_n$$$ $$$(1 \\\\le a_i \\\\le 1\\\\,000)$$$, where $$$a_i$$$ is the durability of the $$$i$$$-th can.OutputIn the first line print the minimum number of shots required to knock each of the $$$n$$$ given cans down exactly once.In the second line print the sequence consisting of $$$n$$$distinctintegers from $$$1$$$ to $$$n$$$ — the order of indices of cans that minimizes the number of shots required. If there are several answers, you can print any of them.ExamplesInput3 20 10 20Output43 1 3 2Input4 10 10 10 10Output64 2 1 4 3Input6 5 4 5 4 4 5Output69 6 1 3 5 2 4Input2 1 4Output3 2 1NoteIn the first example Vasya can start shooting from the first can. He knocks it down with the first shot because he haven't knocked any other cans down before. After that he has to shoot the third can. To knock it down he shoots $$$20 \\\\cdot 1 + 1 = 21$$$ times. After that only second can remains. To knock it down Vasya shoots $$$10 \\\\cdot 2 + 1 = 21$$$ times. So the total number of shots is $$$1 + 21 + 21 = 43$$$.In the second example the order of shooting does not matter because all cans have the same durability.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "84bbb9be", "template_md5": "35d339e4", "result": "You are given $n$ cans arranged in a row. Each can has a durability value $a_i$.  To knock down a can, you need to shoot it $(a_i \\cdot x + 1)$ times, where $x$ is the number of cans you have already knocked down.\n\nFind the order in which to shoot the cans to minimize the total number of shots required to knock down all $n$ cans.\n\nOutput:\n\n1. The minimum number of shots required.\n2. The order of the cans to be shot (as a sequence of integers from 1 to $n$)."}, {"prompt_md5": "8f17af57", "template_md5": "465699a0", "result": "You are given a list of numbers representing the durability of objects. You need to find the order to process these objects in to minimize the total number of actions required. Each action taken on an object costs more depending on how many other objects have already been processed.  What is the minimum number of actions and the optimal order?"}]}