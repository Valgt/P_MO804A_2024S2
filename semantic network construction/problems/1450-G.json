{"uid": "1450-G", "url": "https://codeforces.com/contest/1450/problem/G", "tags": ["bitmasks", " dp", " trees"], "title": "1450-G", "statement": "G. Communismtime limit per test1.5 secondsmemory limit per test32 megabytesinputstandard inputoutputstandard outputPlease pay attention to the unusual memory limit in this problem.In a parallel universe, Satan is called \"Trygub\". For that reason, the letters of his namesake were deleted from the alphabet in ancient times.The government has $$$n$$$ workers standing in a row and numbered with integers from $$$1$$$ to $$$n$$$ from left to right. Their job categories can be represented as a string $$$s$$$ of length $$$n$$$, where the character $$$s_i$$$ represents the job category of the $$$i$$$-th worker.A new law will be approved to increase the equality between the workers. The government decided to make everyone have the same job category by performing the following operation any number of times (possibly zero).There is a fixedrationalparameter $$$k=\\\\frac ab$$$ describing how easy it is to convince the public, and it will be used to determine the success of an operation.In an operation, the government first selects a job category $$$x$$$ with at least one worker at the current moment. Suppose $$$i_1,\\\\ldots, i_m$$$ ($$$i_1<\\\\ldots<i_m$$$) are the positions of all the workers with job category $$$x$$$. If $$$k\\\\cdot (i_m-i_1+1)\\\\le m$$$, the government is able to choose any job category $$$y$$$ with at least one worker at the current moment and change the job category ofallworkers with job category $$$x$$$ to job category $$$y$$$.If it is possible to make all workers have job category $$$x$$$, we say that $$$x$$$ is obtainable. Can you tell the government the set of obtainable job categories?InputThe first line contains three integers $$$n, a, b$$$ ($$$1 \\\\le n \\\\le 5000$$$, $$$1\\\\le a\\\\le b\\\\le 10^5$$$) — the number of workers and the numerator and denominator of the parameter $$$k$$$, respectively.The second line contains a string $$$s$$$ of length $$$n$$$, consisting of lowercase English characters — the job categories of each worker.The characters 't', 'r', 'y', 'g', 'u', and 'b' do not appear in the string $$$s$$$.OutputPrint an integer $$$c$$$ equal to the number of obtainable job categories followed by $$$c$$$ space-separated characters — the obtainable job categories sorted in the lexicographical order.ExampleInput7 1 2 comicomOutput3 c m oNoteThe first operation must select the job category 'i' because all other job categories cannot satisfy the condition, therefore 'i' is not obtainable.Below is showed how to obtain 'c', 'm', and 'o'. The square brackets denote the segment containing all workers of the selected category, the red color denotes this category and the blue color denotes the new category after the change.Get 'c':($$$\\\\texttt{com}\\\\color{red}{\\\\texttt{[i]}}\\\\texttt{com} \\\\rightarrow \\\\texttt{com}\\\\color{#1E90FF}{\\\\texttt{[o]}}\\\\texttt{com}$$$)($$$\\\\texttt{c}\\\\color{red}{\\\\texttt{[o}}\\\\texttt{m}\\\\color{red}{\\\\texttt{o}}\\\\texttt{c}\\\\color{red}{\\\\texttt{o]}}\\\\texttt{m} \\\\rightarrow \\\\texttt{c}\\\\color{#1E90FF}{\\\\texttt{[m}}\\\\texttt{m}\\\\color{#1E90FF}{\\\\texttt{m}}\\\\texttt{c}\\\\color{#1E90FF}{\\\\texttt{m]}}\\\\texttt{m}$$$)($$$\\\\texttt{c}\\\\color{red}{\\\\texttt{[mmm}}\\\\texttt{c}\\\\color{red}{\\\\texttt{mm]}} \\\\rightarrow \\\\texttt{c}\\\\color{#1E90FF}{\\\\texttt{[ccc}}\\\\texttt{c}\\\\color{#1E90FF}{\\\\texttt{cc]}}$$$)Get 'm':($$$\\\\texttt{com}\\\\color{red}{\\\\texttt{[i]}}\\\\texttt{com} \\\\rightarrow \\\\texttt{com}\\\\color{#1E90FF}{\\\\texttt{[o]}}\\\\texttt{com}$$$)($$$\\\\texttt{c}\\\\color{red}{\\\\texttt{[o}}\\\\texttt{m}\\\\color{red}{\\\\texttt{o}}\\\\texttt{c}\\\\color{red}{\\\\texttt{o]}}\\\\texttt{m} \\\\rightarrow \\\\texttt{c}\\\\color{#1E90FF}{\\\\texttt{[c}}\\\\texttt{m}\\\\color{#1E90FF}{\\\\texttt{c}}\\\\texttt{c}\\\\color{#1E90FF}{\\\\texttt{c]}}\\\\texttt{m}$$$)($$$\\\\color{red}{\\\\texttt{[cc}}\\\\texttt{m}\\\\color{red}{\\\\texttt{ccc]}}\\\\texttt{m} \\\\rightarrow \\\\color{#1E90FF}{\\\\texttt{[mm}}\\\\texttt{m}\\\\color{#1E90FF}{\\\\texttt{mmm]}}\\\\texttt{m}$$$)Get 'o':($$$\\\\texttt{com}\\\\color{red}{\\\\texttt{[i]}}\\\\texttt{com} \\\\rightarrow \\\\texttt{com}\\\\color{#1E90FF}{\\\\texttt{[c]}}\\\\texttt{com}$$$)($$$\\\\color{red}{\\\\texttt{[c}}\\\\texttt{om}\\\\color{red}{\\\\texttt{cc]}}\\\\texttt{om} \\\\rightarrow \\\\color{#1E90FF}{\\\\texttt{[m}}\\\\texttt{om}\\\\color{#1E90FF}{\\\\texttt{mm]}}\\\\texttt{om}$$$)($$$\\\\color{red}{\\\\texttt{[m}}\\\\texttt{o}\\\\color{red}{\\\\texttt{mmm}}\\\\texttt{o}\\\\color{red}{\\\\texttt{m]}} \\\\rightarrow \\\\color{#1E90FF}{\\\\texttt{[o}}\\\\texttt{o}\\\\color{#1E90FF}{\\\\texttt{ooo}}\\\\texttt{o}\\\\color{#1E90FF}{\\\\texttt{o]}}$$$)", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "cd8ad965", "template_md5": "35d339e4", "result": "You are given a string $s$ of length $n$ representing the job categories of $n$ workers.  Each character in the string represents a unique job category.  \n\nYou can change the job category of a group of workers to a new job category if the following condition is met:\n\n*  Let $i_1, i_2, ..., i_m$ be the indices of all workers with the current job category.\n*  The fraction $\\frac{i_m - i_1 + 1}{m}$ must be less than or equal to a given constant $k = \\frac{a}{b}$.\n\nDetermine all the job categories that can be made the job category of all workers. \n\n**Input:**\n\n* $n$: the number of workers\n* $a$, $b$: the numerator and denominator of the constant $k$\n* $s$: the string representing the job categories of the workers\n\n**Output:**\n\n* The number of obtainable job categories\n* A list of the obtainable job categories in lexicographical order."}, {"prompt_md5": "8a2b6ea3", "template_md5": "465699a0", "result": "You are given a list of workers, each with a job category. You can change the job category of a group of workers to a new category if the number of workers in the group is at least  $k$ times the size of the group's span (the difference between the highest and lowest worker index in the group).  Find all the job categories that can be made the job category of all workers."}]}