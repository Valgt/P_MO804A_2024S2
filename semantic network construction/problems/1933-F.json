{"uid": "1933-F", "url": "https://codeforces.com/contest/1933/problem/F", "tags": ["dfs and similar", " dp", " graphs", " shortest paths"], "title": "1933-F", "statement": "F. Turtle Mission: Robot and the Earthquaketime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe world is a grid with $$$n$$$ rows and $$$m$$$ columns. The rows are numbered $$$0, 1, \\\\ldots, n-1$$$, while the columns are numbered $$$0, 1, \\\\ldots, m-1$$$. In this world, the columns arecyclic(i.e. the top and the bottom cells in each column are adjacent). The cell on the $$$i$$$-th row and the $$$j$$$-th column ($$$0 \\\\le i < n, 0 \\\\le j < m$$$) is denoted as $$$(i,j)$$$.At time $$$0$$$, the cell $$$(i,j)$$$ (where $$$0 \\\\le i < n, 0 \\\\le j < m$$$) contains either arockornothing. The state of cell $$$(i,j)$$$ can be described using the integer $$$a_{i,j}$$$:If $$$a_{i,j} = 1$$$, there is a rock at $$$(i,j)$$$.If $$$a_{i,j} = 0$$$, there is nothing at $$$(i,j)$$$.As a result of aftershocks from the earthquake, the columns follow tectonic plate movements: each column moves cyclicallyupwardsat a velocity of $$$1$$$ cell per unit of time. Formally, for some $$$0 \\\\le i < n, 0 \\\\le j < m$$$, if $$$(i,j)$$$ contains a rock at the moment, it will move from $$$(i, j)$$$ to $$$(i - 1, j)$$$ (or to $$$(n - 1, j)$$$ if $$$i=0$$$).The robot called RT is initially positioned at $$$(0,0)$$$. It has to go to $$$(n-1,m-1)$$$ to carry out an earthquake rescue operation (to the bottom rightmost cell). The earthquake doesn't change the position of the robot, they only change the position of rocks in the world.Let RT's current position be $$$(x,y)$$$ ($$$0 \\\\le x < n, 0 \\\\le y < m$$$), it can perform the following operations:Go one cell cyclically upwards, i.e. from $$$(x,y)$$$ to $$$((x+n-1) \\\\bmod n, y)$$$ using $$$1$$$ unit of time.Go one cell cyclically downwards, i.e. $$$(x,y)$$$ to $$$((x+1) \\\\bmod n, y)$$$ using $$$1$$$ unit of time.Go one cell to the right, i.e. $$$(x,y)$$$ to $$$(x, y+1)$$$ using $$$1$$$ unit of time. (RT may perform this operation only if $$$y < m-1$$$.)Note that RT cannot go left using the operations nor can he stay at a position.Unfortunately, RT will explode upon colliding with a rock. As such, when RT is at $$$(x,y)$$$ and there is a rock at $$$((x+1) \\\\bmod n, y)$$$ or $$$((x+2) \\\\bmod n, y)$$$, RT cannot move down or it will be hit by the rock.Similarly, if $$$y+1 < m$$$ and there is a rock at $$$((x+1) \\\\bmod n, y+1)$$$, RT cannot move right or it will be hit by the rock.However, it is worth noting that if there is a rock at $$$(x \\\\bmod n, y+1)$$$ and $$$((x+1) \\\\bmod n, y)$$$, RT can still move right safely.Find the minimum amount of time RT needs to reach $$$(n-1,m-1)$$$ without colliding with any rocks. If it is impossible to do so, output $$$-1$$$.InputThe first line of the input contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases.In each test case, the first line contains two integers $$$n$$$, $$$m$$$ ($$$3 \\\\le n, m \\\\le 10^3$$$) — the size of the planet's boundaries.Each of the next $$$n$$$ lines contains $$$m$$$ integers. The $$$(j+1)$$$-th integer on the $$$(i+1)$$$-th line ($$$0 \\\\le i < n, 0 \\\\le j < m$$$) is $$$a_{i,j}$$$ ($$$0 \\\\le a_{i,j} \\\\le 1$$$), which denotes whether or not there is a rock at $$$(i,j)$$$ at time $$$0$$$.Additionally, it is guaranteed that $$$a_{0,0} = 0$$$, and $$$a_{i, m-1} = 0$$$ for $$$0 \\\\le i < n$$$.In other words, there is no rock at RT's initial position as well as column $$$m-1$$$.The sum of $$$n \\\\cdot m$$$ over all test cases does not exceed $$$10^6$$$.OutputFor each test case:If the destination can be reached without colliding with any rocks, output a single integer — the minimum amount of time RT needs to reach $$$(n-1,m-1)$$$.Otherwise, output $$$-1$$$.ExamplesInput64 50 1 0 0 00 0 1 0 01 0 1 1 00 0 0 0 03 30 0 01 0 00 0 05 30 0 00 0 01 0 00 0 01 0 03 70 0 1 0 0 1 01 0 1 0 1 0 00 1 0 0 0 0 03 40 1 0 01 0 0 00 1 1 05 50 0 0 0 00 1 0 1 00 1 0 1 00 1 0 1 00 0 0 1 0Output7 3 3 8 -1 12Input63 30 0 00 0 00 0 04 30 1 01 0 00 1 01 0 04 30 1 00 1 00 1 00 1 03 30 0 01 1 00 0 03 30 1 00 0 00 1 05 50 0 0 0 00 1 1 0 00 1 1 0 00 0 0 0 00 0 1 0 0Output3 3 -1 -1 3 8NoteVisual explanation of the first test case in the example:", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "7e84a402", "template_md5": "465699a0", "result": "A robot needs to move from the top left corner to the bottom right corner of a grid.  The grid has rocks that move one cell up each time step. The robot can move one cell up, down, or right. The robot cannot move into a cell with a rock. Find the minimum time for the robot to reach the destination without colliding with any rocks. If it's impossible, return -1."}, {"prompt_md5": "cd3d332b", "template_md5": "35d339e4", "result": "You are given a grid of size $n \\times m$. Each cell in the grid can either contain a rock (represented by 1) or be empty (represented by 0).  \n\nA robot starts at the top-left corner of the grid (0,0) and needs to reach the bottom-right corner (n-1, m-1). \n\nEvery second, all the rocks in each column move one cell up. The robot can move one cell up, one cell down, or one cell to the right. The robot cannot move left. \n\nThe robot will explode if it collides with a rock.\n\nFind the minimum time it takes for the robot to reach the destination without colliding with any rocks. If it is impossible, output -1."}]}