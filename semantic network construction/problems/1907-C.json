{"uid": "1907-C", "url": "https://codeforces.com/contest/1907/problem/C", "tags": ["constructive algorithms", " greedy", " math", " strings"], "title": "1907-C", "statement": "C. Removal of Unattractive Pairstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVlad found a string $$$s$$$ consisting of $$$n$$$ lowercase Latin letters, and he wants to make it as short as possible.To do this, he can removeanypair of adjacent characters from $$$s$$$ any number of times, provided they aredifferent. For example, if $$$s$$$=racoon, then by removing one pair of characters he can obtain the stringscoon,roon,raon, andraco, but he cannot obtainracn(because the removed letters were the same) orrcon(because the removed letters were not adjacent).What is the minimum length Vlad can achieve by applying any number of deletions?InputThe first line of the input contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases. Descriptions of the test cases follow.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the length of the string $$$s$$$.The second line of each test case contains the string $$$s$$$ consisting of $$$n$$$ lowercase Latin letters.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output a single number—the minimum length of the string $$$s$$$, after removing pairs of adjacent characters with different values.ExampleInput104aabc5abaca10avbvvcvvvd7abcdefg5dabbb8aacebeaa7bbbbacc6dacfcc6fdfcdc9dbdcfbbdcOutput0 1 2 1 1 0 1 0 0 1NoteIn the first test case of the example, you need to act as follows: \"aabc\" $$$\\\\rightarrow$$$ \"ac\" $$$\\\\rightarrow$$$ \"\". Note that with a different order of deletions, the string will not become empty.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d670736d", "template_md5": "35d339e4", "result": "You are given a string of lowercase letters. You can remove any two adjacent letters from the string if they are different. What is the shortest possible length you can make the string? \n\nFor example:\n\n*  \"aabc\" can be shortened to \"ac\" and then to \"\". \n* \"abaca\" can be shortened to \"aca\" and then to \"a\". \n\n\nInput:\n\nThe first line contains the number of test cases. Each test case has two lines:\n\n* The first line contains the length of the string.\n* The second line contains the string itself.\n\nOutput:\n\nFor each test case, output the shortest possible length of the string after removing pairs of adjacent letters."}, {"prompt_md5": "1d2700fe", "template_md5": "465699a0", "result": "Given a string, you can remove any two adjacent characters that are different. What is the shortest possible string you can make?"}]}