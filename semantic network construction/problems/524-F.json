{"uid": "524-F", "url": "https://codeforces.com/contest/524/problem/F", "tags": ["data structures", " greedy", " hashing", " string suffix structures", " strings"], "title": "524-F", "statement": "F. And Yet Another Bracket Sequencetime limit per test5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarpus has a finite sequence of opening and closing brackets. In order not to fall asleep in a lecture, Polycarpus is having fun with his sequence. He is able to perform two operations:adding any bracket in any position (in the beginning, the end, or between any two existing brackets);cyclic shift — moving the last bracket from the end of the sequence to the beginning.Polycarpus can apply any number of operations to his sequence and adding a cyclic shift in any order. As a result, he wants to get the correct bracket sequence of the minimum possible length. If there are several such sequences, Polycarpus is interested in the lexicographically smallest one. Help him find such a sequence.Acorrect bracket sequenceis a sequence of opening and closing brackets, from which you can get a correct arithmetic expression by adding characters \"1\" and \"+\" . Each opening bracket must correspond to a closed one. For example, the sequences \"(())()\", \"()\", \"(()(()))\" are correct and \")(\", \"(()\" and \"(()))(\" are not.The sequencea1a2...anis lexicographically smaller than sequenceb1b2...bn, if there is such numberifrom1ton, thatak=bkfor1 ≤k<iandai<bi. Consider that \"(\"<\")\".InputThe first line contains Polycarpus's sequence consisting of characters \"(\" and \")\". The length of a line is from1to1 000 000.OutputPrint a correct bracket sequence of the minimum length that Polycarpus can obtain by his operations. If there are multiple such sequences, print the lexicographically minimum one.ExamplesInput()(())Output(())()Input()(Output(())NoteThe sequence in the first example is already correct, but to get the lexicographically minimum answer, you need to perform four cyclic shift operations. In the second example you need to add a closing parenthesis between the second and third brackets and make a cyclic shift. You can first make the shift, and then add the bracket at the end.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "89afb5a2", "template_md5": "35d339e4", "result": "Given a sequence of opening and closing brackets, find the shortest possible correct bracket sequence that can be obtained by adding brackets and performing cyclic shifts. A correct bracket sequence is one where every opening bracket has a corresponding closing bracket.  If there are multiple shortest sequences, output the lexicographically smallest one.\n\n**Input:**\n\nA string consisting of \"(\" and \")\" characters.\n\n**Output:**\n\nA string consisting of \"(\" and \")\" characters representing the shortest correct bracket sequence."}, {"prompt_md5": "4e66e5d8", "template_md5": "465699a0", "result": "Given a sequence of opening and closing brackets, find the shortest possible correct bracket sequence that can be obtained by adding brackets and cyclically shifting the sequence.  The shortest sequence should also be the lexicographically smallest."}]}