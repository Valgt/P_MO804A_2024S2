{"uid": "234-H", "url": "https://codeforces.com/contest/234/problem/H", "tags": ["constructive algorithms", " greedy"], "title": "234-H", "statement": "H. Merging Two Deckstime limit per test2 secondsmemory limit per test256 megabytesinputinput.txtoutputoutput.txtThere are two decks of cards lying on the table in front of you, some cards in these decks lay face up, some of them lay face down. You want to merge them into one deck in which each card is face down. You're going to do it in two stages.The first stage is to merge the two decks in such a way that the relative order of the cards from the same deck doesn't change. That is, for any two different cardsiandjin one deck, if cardilies above cardj, then after the merge cardimust also be above cardj.The second stage is performed on the deck that resulted from the first stage. At this stage, the executed operation is the turning operation. In one turn you can take a few of the top cards, turn all of them, and put them back. Thus, each of the taken cards gets turned and the order of these cards is reversed. That is, the card that was on the bottom before the turn, will be on top after it.Your task is to make sure that all the cards are lying face down. Find such an order of merging cards in the first stage and the sequence of turning operations in the second stage, that make all the cards lie face down, and the number of turns is minimum.InputThe first input line contains a single integern— the number of cards in the first deck(1 ≤n≤ 105).The second input line containsnintegers, separated by single spacesa1,a2, ...,an(0 ≤ai≤ 1). Valueaiequals 0, if thei-th card is lying face down, and 1, if the card is lying face up. The cards are given in the order from the topmost one to the bottommost one.The third input line contains integerm— the number of cards in the second deck(1 ≤m≤ 105).The fourth input line containsmintegers, separated by single spacesb1,b2, ...,bm(0 ≤bi≤ 1). Valuebiequals 0, if thei-th card is lying face down, and 1, if the card is lying face up. The cards are given in the order from the topmost to the bottommost.OutputIn the first line printn+mspace-separated integers — the numbers of the cards in the order, in which they will lie after the first stage. List the cards from top to bottom. The cards from the first deck should match their indexes from1tonin the order from top to bottom. The cards from the second deck should match their indexes, increased byn, that is, numbers fromn+ 1ton+min the order from top to bottom.In the second line print a single integerx— the minimum number of turn operations you need to make all cards in the deck lie face down. In the third line printxintegers:c1,c2, ...,cx(1 ≤ci≤n+m), each of them represents the number of cards to take from the top of the deck to perform a turn operation. Print the operations in the order, in which they should be performed.If there are multiple optimal solutions, print any of them. It is guaranteed that the minimum number of operations doesn't exceed6·105.ExamplesInput31 0 141 1 1 1Output1 4 5 6 7 2 335 6 7Input51 1 1 1 150 1 0 1 0Output6 1 2 3 4 5 7 8 9 1041 7 8 9", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a1e63623", "template_md5": "35d339e4", "result": "You have two decks of cards. Each deck has cards that are either face up (1) or face down (0).  \n\n**Goal:** Merge the two decks into one, with all cards face down.\n\n**Rules:**\n\n1. **Merging:**  When merging, the order of cards within each original deck must be preserved.\n2. **Turning:** You can perform \"turning operations\" on the merged deck. A turning operation involves taking some cards from the top of the deck, flipping them over (changing 0 to 1 and 1 to 0), and putting them back on top.\n\n**Input:**\n\n* The first line contains the number of cards in the first deck ($n$).\n* The second line contains $n$ numbers (0 or 1) representing the face status of each card in the first deck, from top to bottom.\n* The third line contains the number of cards in the second deck ($m$).\n* The fourth line contains $m$ numbers (0 or 1) representing the face status of each card in the second deck, from top to bottom.\n\n**Output:**\n\n* The first line should list the $n+m$ cards in the merged deck, in the order they should be placed after the first merging step.\n* The second line should contain the minimum number of turning operations required.\n* The third line should list the number of cards to take for each turning operation.\n\n\n\nLet me know if you'd like me to elaborate on any part of the problem!"}, {"prompt_md5": "36315f27", "template_md5": "465699a0", "result": "You have two decks of cards, some face up and some face down.  You need to merge them into one deck with all cards face down.  You can merge the decks in a way that keeps the order of cards within each deck the same. Then, you can perform operations where you take a group of cards from the top, flip them, and put them back on top. Find the minimum number of these flip operations needed to make all cards face down."}]}