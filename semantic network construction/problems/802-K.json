{"uid": "802-K", "url": "https://codeforces.com/contest/802/problem/K", "tags": ["dp", " trees"], "title": "802-K", "statement": "K. Send the Fool Further! (medium)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThank you for helping Heidi! It is now the second of April, but she has been summoned by Jenny again. The pranks do not seem to end...In the meantime, Heidi has decided that she does not trust her friends anymore. Not too much, anyway. Her relative lack of trust is manifested as follows: whereas previously she would not be made to visit the same person twice, now she can only be sure that she will not be made to visit the same person more thanktimes. (In the case of Jenny, this includes her first visit in the beginning. The situation from the easy version corresponds to settingk= 1.)This is not as bad as it looks, since a single ticket for a route between two friends allows Heidi to travel between this pair of friends the whole day (in both directions). In other words, once she pays for travel between a pair of friends, all further travels between that pair are free.How much money will Heidi waste now, in a worst-case scenario?InputThe first line contains two space-separated integers – the number of friendsn() and the parameterk(1 ≤k≤ 105). The nextn- 1lines each contain three space-separated integersu,vandc(0 ≤u,v≤n- 1,1 ≤c≤ 104) meaning thatuandvare friends and the cost for traveling betweenuandvisc.It is again guaranteed that the social network of the input forms a tree.OutputAgain, output a single integer – the maximum sum of costs of tickets.ExamplesInput9 30 1 10 2 11 3 21 4 21 5 22 6 32 7 32 8 3Output15Input9 50 1 10 2 11 3 21 4 21 5 22 6 32 7 32 8 3Output17Input11 61 0 79322 1 19523 2 22274 0 91125 4 60676 0 67867 6 38838 4 71379 1 279610 5 6200Output54092NoteIn the first example, the worst-case scenario for Heidi is to visit the friends in the following order:0, 1, 5, 1, 3, 1, 0, 2, 6, 2, 7, 2, 8. Observe that no friend is visited more than3times.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "fafe4a8a", "template_md5": "35d339e4", "result": "There are $n$ friends. Each pair of friends can travel between each other at a cost of $c$.  A single ticket allows travel between two friends all day.  \n\nYou are given a tree representing the relationships between the friends.  \n\nFind the maximum cost to travel between friends if you are allowed to visit each friend at most $k$ times. \n\n\nInput:\n\n* The first line contains two integers: $n$ (the number of friends) and $k$ (the maximum number of times a friend can be visited).\n* The next $n-1$ lines each contain three integers: $u$, $v$, and $c$ representing friends $u$ and $v$ and the cost $c$ of traveling between them.\n\nOutput:\n\n* A single integer representing the maximum cost to travel between friends."}, {"prompt_md5": "342e8769", "template_md5": "465699a0", "result": "You are given a network of people where each pair of people can travel between each other at a known cost.  You need to find the maximum cost to travel between people in this network, given that you can visit each person a maximum of k times."}]}