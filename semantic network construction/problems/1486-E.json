{"uid": "1486-E", "url": "https://codeforces.com/contest/1486/problem/E", "tags": ["binary search", " brute force", " constructive algorithms", " dp", " flows", " graphs", " shortest paths"], "title": "1486-E", "statement": "E. Paired Paymenttime limit per test4 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputThere are $$$n$$$ cities and $$$m$$$ bidirectional roads in the country. The roads in the country form an undirected weighted graph. The graphis not guaranteed to be connected. Each road has it's own parameter $$$w$$$. You can travel through the roads, but the government made a new law: you can only go through two roads at a time (go from city $$$a$$$ to city $$$b$$$ and then from city $$$b$$$ to city $$$c$$$) and you will have to pay $$$(w_{ab} + w_{bc})^2$$$ money to go through those roads. Find out whether it is possible to travel from city $$$1$$$ to every other city $$$t$$$ and what's the minimum amount of money you need to get from $$$1$$$ to $$$t$$$.InputFirst line contains two integers $$$n$$$, $$$m$$$ ($$$2 \\\\leq n \\\\leq 10^5$$$, $$$1 \\\\leq m \\\\leq min(\\\\frac{n \\\\cdot (n - 1)}{2}, 2 \\\\cdot 10^5)$$$).Next $$$m$$$ lines each contain three integers $$$v_i$$$, $$$u_i$$$, $$$w_i$$$ ($$$1 \\\\leq v_i, u_i \\\\leq n$$$, $$$1 \\\\leq w_i \\\\leq 50$$$, $$$u_i \\\\neq v_i$$$). It's guaranteed that there are no multiple edges, i.e. for any edge $$$(u_i, v_i)$$$ there are no other edges $$$(u_i, v_i)$$$ or $$$(v_i, u_i)$$$.OutputFor every city $$$t$$$ print one integer. If there is no correct path between $$$1$$$ and $$$t$$$ output $$$-1$$$. Otherwise print out the minimum amount of money needed to travel from $$$1$$$ to $$$t$$$.ExamplesInput5 6 1 2 3 2 3 4 3 4 5 4 5 6 1 5 1 2 4 2Output0 98 49 25 114Input3 2 1 2 1 2 3 2Output0 -1 9NoteThe graph in the first example looks like this.In the second example the path from $$$1$$$ to $$$3$$$ goes through $$$2$$$, so the resulting payment is $$$(1 + 2)^2 = 9$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "fbe7e5bc", "template_md5": "35d339e4", "result": "There are $n$ cities and $m$ roads connecting them. Each road has a weight $w$. You can only travel through two roads at a time (e.g., from city $a$ to city $b$ and then from city $b$ to city $c$). The cost of traveling this way is $(w_{ab} + w_{bc})^2$.\n\nDetermine if it's possible to travel from city 1 to every other city $t$. If so, find the minimum cost to travel from city 1 to each city $t$. \n\n**Input:**\n\n* The first line contains two integers, $n$ (number of cities) and $m$ (number of roads).\n* The next $m$ lines each contain three integers: $v_i$, $u_i$, and $w_i$, representing a road connecting cities $v_i$ and $u_i$ with weight $w_i$.\n\n**Output:**\n\n* For each city $t$, print the minimum cost to travel from city 1 to city $t$. If there is no path from city 1 to city $t$, print -1."}, {"prompt_md5": "ed8014fe", "template_md5": "465699a0", "result": "You have a network of cities connected by roads. Each road has a cost. You can only travel by taking two roads consecutively (city A to city B, then city B to city C).  Find the minimum cost to travel from city 1 to every other city. If it's impossible to reach a city, output -1."}]}