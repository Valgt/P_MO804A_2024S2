{"uid": "1943-E2", "url": "https://codeforces.com/contest/1943/problem/E2", "tags": ["binary search", " greedy", " two pointers"], "title": "1943-E2", "statement": "E2. MEX Game 2 (Hard Version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is the hard version of the problem. The only difference between the two versions is the constraint on $$$t$$$, $$$m$$$ and the sum of $$$m$$$. You can make hacks only if both versions of the problem are solved.Alice and Bob play yet another game on an array $$$a$$$ of size $$$n$$$. Alice starts with an empty array $$$c$$$. Both players take turns playing, with Alice starting first.On Alice's turn, she picks one element from $$$a$$$, appends that element to $$$c$$$, and then deletes it from $$$a$$$.On Bob's turn, he picks at most $$$k$$$ elements from $$$a$$$, and then deletes it from $$$a$$$.The game ends when the array $$$a$$$ is empty. Alice's score is defined to be the MEX$$$^\\\\dagger$$$ of $$$c$$$. Alice wants to maximize her score while Bob wants to minimize it. Find Alice's final score if both players play optimally.The array will be given in compressed format. Instead of giving the elements present in the array, we will be giving their frequencies. Formally, you will be given $$$m$$$, the maximum element in the array, and then $$$m + 1$$$ integers $$$f_0, f_1, \\\\ldots, f_{m}$$$, where $$$f_i$$$ represents the number of times $$$i$$$ occurs in the array $$$a$$$.$$$^\\\\dagger$$$ The $$$\\\\operatorname{MEX}$$$ (minimum excludant) of an array of integers is defined as the smallest non-negative integer which does not occur in the array. For example:The MEX of $$$[2,2,1]$$$ is $$$0$$$, because $$$0$$$ does not belong to the array.The MEX of $$$[3,1,0,1]$$$ is $$$2$$$, because $$$0$$$ and $$$1$$$ belong to the array, but $$$2$$$ does not.The MEX of $$$[0,3,1,2]$$$ is $$$4$$$, because $$$0$$$, $$$1$$$, $$$2$$$ and $$$3$$$ belong to the array, but $$$4$$$ does not.InputEach test contains multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^5$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains two integers $$$m$$$ and $$$k$$$ ($$$1 \\\\le m \\\\le 2 \\\\cdot 10^5, 1 \\\\le k \\\\le 10^9$$$).The second line contains $$$m + 1$$$ integers $$$f_0, f_1, \\\\ldots, f_m$$$ ($$$1 \\\\le f_i \\\\le 10^9$$$).It is guaranteed the sum of $$$m$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, find Alice's score if both players play optimally.ExampleInput51 44 52 10000000001000000000 1000000000 10000000003 22 3 100 11 12 23 11 1 1 1Output2 1 3 2 1NoteIn the first test case, the array $$$a$$$ is $$$[0, 0, 0, 0, 1, 1, 1, 1, 1]$$$. A possible game with a score of $$$2$$$ is as follows:Alice chooses the element $$$0$$$. After this move, $$$a = [0, 0, 0, 1, 1, 1, 1, 1]$$$ and $$$c=[0]$$$.Bob chooses to remove the $$$3$$$ elements $$$0$$$, $$$0$$$ and $$$1$$$. After this move, $$$a = [0, 1, 1, 1, 1]$$$ and $$$c=[0]$$$.Alice chooses the element $$$1$$$. After this move, $$$a = [0,1,1,1]$$$ and $$$c=[0,1]$$$.Bob removes the $$$4$$$ remaining elements $$$0$$$, $$$1$$$, $$$1$$$ and $$$1$$$. After this move, $$$a=[\\\\,]$$$ and $$$c=[0,1]$$$.At the end, $$$c=[0,1]$$$ which has a MEX of $$$2$$$. Note that this is an example game and does not necessarily represent the optimal strategy for both players.In the second test case, Alice can choose a $$$0$$$ in her first turn, guaranteeing that her score is at least $$$1$$$. While Bob can remove all copies element $$$1$$$ in his first turn, thus guaranteeing that Alice's score cannot exceed $$$1$$$. So Alice's score is $$$1$$$ if both players play optimally.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "55bb3eab", "template_md5": "35d339e4", "result": "You are given an array of integers represented by its frequencies.  The maximum value in the array is $m$. The $i$-th frequency $f_i$ represents the number of times the integer $i$ appears in the array.\n\nTwo players take turns in a game.\n\n* **Player 1's turn:**  Player 1 chooses one integer from the array, adds it to their own array, and removes it from the main array.\n* **Player 2's turn:** Player 2 chooses at most $k$ integers from the main array and removes them.\n\nThe game ends when the main array is empty. Player 1's score is the smallest non-negative integer that does not appear in their array (this is called the MEX).\n\nFind Player 1's score if both players play optimally.\n\n\n\n**Input:**\n\n* $t$ - the number of test cases\n* For each test case:\n    * $m$ - the maximum value in the array\n    * $k$ - the maximum number of integers Player 2 can remove on their turn\n    * $f_0, f_1, ..., f_m$ - the frequencies of the integers from 0 to $m$\n\n**Output:**\n\n* For each test case, print Player 1's score."}, {"prompt_md5": "a6589447", "template_md5": "465699a0", "result": "Two players take turns removing elements from an array. The first player can remove one element at a time, while the second player can remove up to a certain number of elements at a time. The game ends when the array is empty. The first player's score is the smallest missing number in the array they built.  Find the first player's best possible score if both players play optimally."}]}