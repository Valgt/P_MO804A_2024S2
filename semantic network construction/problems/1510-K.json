{"uid": "1510-K", "url": "https://codeforces.com/contest/1510/problem/K", "tags": ["brute force", " graphs", " implementation"], "title": "1510-K", "statement": "K. King's Tasktime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputThe brave Knight came to the King and asked permission to marry the princess. The King knew that the Knight was brave, but he also wanted to know if he was smart enough. So he asked him to solve the following task.There is a permutation $$$p_i$$$ of numbers from 1 to $$$2n$$$. You can make two types of operations.Swap $$$p_1$$$ and $$$p_2$$$, $$$p_3$$$ and $$$p_4$$$, ..., $$$p_{2n-1}$$$ and $$$p_{2n}$$$.Swap $$$p_1$$$ and $$$p_{n+1}$$$, $$$p_2$$$ and $$$p_{n+2}$$$, ..., $$$p_{n}$$$ and $$$p_{2n}$$$.The task is to find the minimal number of operations required to sort the given permutation.The Knight was not that smart actually, but quite charming, so the princess asks you to help him to solve the King's task.InputThe first line contains the integer $$$n$$$ ($$$1\\\\le n\\\\le 1000$$$). The second line contains $$$2n$$$ integers $$$p_i$$$ — the permutation of numbers from 1 to $$$2n$$$.OutputPrint one integer — the minimal number of operations required to sort the permutation. If it is impossible to sort the permutation using these operations, print $$$-1$$$.ExamplesInput3 6 3 2 5 4 1Output3Input2 3 4 2 1Output-1Input4 1 2 3 4 5 6 7 8Output0NoteIn the first example, you can sort the permutation in three operations:Make operation 1: $$$3, 6, 5, 2, 1, 4$$$.Make operation 2: $$$2, 1, 4, 3, 6, 5$$$.Make operation 1: $$$1, 2, 3, 4, 5, 6$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ff0b03d3", "template_md5": "35d339e4", "result": "You are given a permutation $p_1, p_2, ..., p_{2n}$ of numbers from 1 to $2n$. You can perform the following two types of operations:\n\n1. Swap $p_1$ and $p_2$, $p_3$ and $p_4$, ..., $p_{2n-1}$ and $p_{2n}$.\n2. Swap $p_1$ and $p_{n+1}$, $p_2$ and $p_{n+2}$, ..., $p_n$ and $p_{2n}$.\n\nFind the minimum number of operations required to sort the permutation. If it is impossible to sort the permutation using these operations, output -1."}, {"prompt_md5": "0d6782f9", "template_md5": "465699a0", "result": "You are given a list of numbers. You can swap pairs of numbers in the list in two specific ways:\n\n1. Swap the first and second numbers, the third and fourth numbers, and so on.\n2. Swap the first number with the number in the middle of the list, the second number with the number after the middle, and so on.\n\nWhat is the fewest swaps needed to sort the list in ascending order? If it's impossible to sort the list this way, say -1."}]}