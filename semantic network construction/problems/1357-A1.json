{"uid": "1357-A1", "url": "https://codeforces.com/contest/1357/problem/A1", "tags": [], "title": "1357-A1", "statement": "A1. Figure out direction of CNOTtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an operation that implements a two-qubit unitary transformation: either the CNOT gate with the first qubit as control and the second qubit as target (CNOT$$$_{12}$$$), or the CNOT gate with the second qubit as control and the first qubit as target (CNOT$$$_{21}$$$). The operation will have Adjoint and Controlled variants defined.Your task is to perform necessary operations and measurements to figure out which unitary it was and to return 0 if it was the CNOT$$$_{12}$$$ gate or 1 if it was the CNOT$$$_{21}$$$ gate.You are allowed to apply the given operation and its adjoint/controlled variantsexactly once.You have to implement an operation which takes a two-qubit operationunitaryas an input and returns an integer. The operationunitarywill accept an array of qubits as input, but it will fail if the array is empty or has one or more than two qubits. Your code should have the following signature:namespace Solution {open Microsoft.Quantum.Intrinsic;operation Solve (unitary : (Qubit[] => Unit is Adj+Ctl)) : Int {// your code here}}", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "fe9004eb", "template_md5": "35d339e4", "result": "You are given a function that performs one of two operations on two qubits:\n\n*  CNOT gate where the first qubit is the control and the second is the target ($CNOT_{12}$).\n*  CNOT gate where the second qubit is the control and the first is the target ($CNOT_{21}$).\n\nYou can also apply the inverse (adjoint) and controlled versions of these operations.\n\nYour task is to figure out which of the two original operations was performed. You can only apply the given function and its variants once.\n\nYou need to write a function that takes the function as input and returns:\n\n* 0 if the original operation was $CNOT_{12}$\n* 1 if the original operation was $CNOT_{21}$"}, {"prompt_md5": "7ff8145b", "template_md5": "465699a0", "result": "You are given a special operation that can be applied to two bits.  You need to figure out which of two specific variations of the operation was used, and return 0 for one variation and 1 for the other. You can only apply the operation and its inverse once."}]}