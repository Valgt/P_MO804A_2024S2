{"uid": "201-B", "url": "https://codeforces.com/contest/201/problem/B", "tags": ["math", " ternary search"], "title": "201-B", "statement": "B. Guess That Car!time limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutA widely known among some people Belarusian sport programmer Yura possesses lots of information about cars. That is why he has been invited to participate in a game show called \"Guess That Car!\".The game show takes place on a giant parking lot, which is4nmeters long from north to south and4mmeters wide from west to east. The lot hasn+ 1dividing lines drawn from west to east andm+ 1dividing lines drawn from north to south, which divide the parking lot inton·m4by4meter squares. There is a car parked strictly inside each square. The dividing lines are numbered from0tonfrom north to south and from0tomfrom west to east. Each square has coordinates(i,j)so that the square in the north-west corner has coordinates(1, 1)and the square in the south-east corner has coordinates(n,m). See the picture in the notes for clarifications.Before the game show the organizers offer Yura to occupy any of the(n+ 1)·(m+ 1)intersection points of the dividing lines. After that he can start guessing the cars. After Yura chooses a point, he will be prohibited to move along the parking lot before the end of the game show. As Yura is a car expert, he will always guess all cars he is offered, it's just a matter of time. Yura knows that to guess each car he needs to spend time equal to the square of the euclidean distance between his point and the center of the square with this car, multiplied by some coefficient characterizing the machine's \"rarity\" (the rarer the car is, the harder it is to guess it). More formally, guessing a car with \"rarity\"cplaced in a square whose center is at distancedfrom Yura takesc·d2seconds. The time Yura spends on turning his head can be neglected.It just so happened that Yura knows the \"rarity\" of each car on the parking lot in advance. Help him choose his point so that the total time of guessing all cars is the smallest possible.InputThe first line contains two integersnandm(1 ≤n,m≤ 1000)— the sizes of the parking lot. Each of the nextnlines containsmintegers: thej-th number in thei-th line describes the \"rarity\"cij(0 ≤cij≤ 100000) of the car that is located in the square with coordinates(i,j).OutputIn the first line print the minimum total time Yura needs to guess all offered cars. In the second line print two numbersliandlj(0 ≤li≤n, 0 ≤lj≤m) — the numbers of dividing lines that form a junction that Yura should choose to stand on at the beginning of the game show. If there are multiple optimal starting points, print the point with smallerli. If there are still multiple such points, print the point with smallerlj.Please do not use the%lldspecifier to read or write 64-bit integers in С++. It is preferred to use thecin,coutstreams or the%I64dspecifier.ExamplesInput2 33 4 53 9 1Output3921 1Input3 41 0 0 00 0 3 00 0 5 5Output2402 3NoteIn the first test case the total time of guessing all cars is equal to 3·8 + 3·8 + 4·8 + 9·8 + 5·40 + 1·40 = 392.The coordinate system of the field:", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "cf42e4ee", "template_md5": "35d339e4", "result": "You are given a parking lot that is $n \\times m$ meters long and wide, divided into $n \\times m$ squares of size $4 \\times 4$ meters. Each square contains a car with a specific \"rarity\" value.\n\nYou can choose to stand at any of the intersection points of the dividing lines that form the squares.  \n\nTo guess a car, you need time equal to the square of the Euclidean distance between your position and the center of the square containing the car, multiplied by the car's rarity.\n\nFind the intersection point that minimizes the total time needed to guess all the cars.\n\n**Input:**\n\n* Two integers $n$ and $m$ (1 ≤ $n$, $m$ ≤ 1000) representing the dimensions of the parking lot.\n* $n$ lines, each containing $m$ integers representing the rarity of the cars in each square.\n\n**Output:**\n\n* The minimum total time required to guess all cars.\n* Two integers $l_i$ and $l_j$ (0 ≤ $l_i$ ≤ $n$, 0 ≤ $l_j$ ≤ $m$) representing the coordinates of the optimal intersection point. If there are multiple optimal points, choose the one with the smallest $l_i$, and if there are still ties, choose the one with the smallest $l_j$."}, {"prompt_md5": "2fb169de", "template_md5": "465699a0", "result": "You are given a grid of squares. Each square contains a car with a certain rarity value. You need to choose a point on the grid to stand at.  The time it takes to guess a car is equal to the square of the distance between your point and the car, multiplied by the car's rarity. Find the point that minimizes the total time to guess all the cars."}]}