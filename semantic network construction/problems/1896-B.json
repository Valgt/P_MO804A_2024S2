{"uid": "1896-B", "url": "https://codeforces.com/contest/1896/problem/B", "tags": ["greedy", " strings", " two pointers"], "title": "1896-B", "statement": "B. AB Flippingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string $$$s$$$ of length $$$n$$$ consisting of characters $$$\\\\texttt{A}$$$ and $$$\\\\texttt{B}$$$. You are allowed to do the following operation:Choose an index $$$1 \\\\le i \\\\le n - 1$$$ such that $$$s_i = \\\\texttt{A}$$$ and $$$s_{i + 1} = \\\\texttt{B}$$$. Then, swap $$$s_i$$$ and $$$s_{i+1}$$$.You are only allowed to do the operationat most oncefor each index $$$1 \\\\le i \\\\le n - 1$$$. However, you can do it in any order you want. Find the maximum number of operations that you can carry out.InputEach test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\\\le t \\\\le 1000$$$). Description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 2\\\\cdot 10^5$$$) — the length of string $$$s$$$.The second line of each test case contains the string $$$s$$$ ($$$s_i=\\\\texttt{A}$$$ or $$$s_i=\\\\texttt{B}$$$).It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2\\\\cdot 10^5$$$.OutputFor each test case, print a single integer containing the maximum number of operations that you can carry out.ExampleInput32AB4BBBA4AABBOutput1 0 3NoteIn the first test case, we can do the operation exactly once for $$$i=1$$$ as $$$s_1=\\\\texttt{A}$$$ and $$$s_2=\\\\texttt{B}$$$.In the second test case, it can be proven that it is not possible to do an operation.In the third test case, we can do an operation on $$$i=2$$$ to form $$$\\\\texttt{ABAB}$$$, then another operation on $$$i=3$$$ to form $$$\\\\texttt{ABBA}$$$, and finally another operation on $$$i=1$$$ to form $$$\\\\texttt{BABA}$$$. Note that even though at the end, $$$s_2 = \\\\texttt{A}$$$ and $$$s_3 = \\\\texttt{B}$$$, we cannot do an operation on $$$i=2$$$ again as we can only do the operation at most once for each index.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "51ea4e3f", "template_md5": "35d339e4", "result": "You are given a string of length $n$ consisting of only the characters 'A' and 'B'. You can swap adjacent characters 'A' and 'B' in the string, but you can only do this operation at most once for each position in the string.  Find the maximum number of swaps you can perform.\n\nInput:\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains the length of the string, $n$.\n    * The second line contains the string.\n\nOutput:\n\n* For each test case, print the maximum number of swaps you can perform."}, {"prompt_md5": "722a9492", "template_md5": "465699a0", "result": "You are given a string of A's and B's. You can swap adjacent A and B characters at most once for each position in the string. Find the maximum number of swaps you can make."}]}