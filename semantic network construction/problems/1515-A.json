{"uid": "1515-A", "url": "https://codeforces.com/contest/1515/problem/A", "tags": ["constructive algorithms", " greedy", " math"], "title": "1515-A", "statement": "A. Phoenix and Goldtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPhoenix has collected $$$n$$$ pieces of gold, and he wants to weigh them together so he can feel rich. The $$$i$$$-th piece of gold has weight $$$w_i$$$. All weights aredistinct. He will put his $$$n$$$ pieces of gold on a weight scale, one piece at a time.The scale has an unusual defect: if the total weight on it isexactly$$$x$$$, it will explode. Can he put all $$$n$$$ gold pieces onto the scale in some order, without the scale exploding during the process? If so, help him find some possible order.Formally, rearrange the array $$$w$$$ so that for each $$$i$$$ $$$(1 \\\\le i \\\\le n)$$$, $$$\\\\sum\\\\limits_{j = 1}^{i}w_j \\\\ne x$$$.InputThe input consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\\\le t \\\\le 1000$$$) — the number of test cases.The first line of each test case contains two integers $$$n$$$ and $$$x$$$ ($$$1 \\\\le n \\\\le 100$$$; $$$1 \\\\le x \\\\le 10^4$$$) — the number of gold pieces that Phoenix has and the weight to avoid, respectively.The second line of each test case contains $$$n$$$ space-separated integers $$$(1 \\\\le w_i \\\\le 100)$$$ — the weights of the gold pieces. It is guaranteed that the weights arepairwise distinct.OutputFor each test case, if Phoenix cannot place all $$$n$$$ pieces without the scale exploding, printNO. Otherwise, printYESfollowed by the rearranged array $$$w$$$. If there are multiple solutions, print any.ExampleInput3 3 2 3 2 1 5 3 1 2 3 4 8 1 5 5OutputYES 3 2 1 YES 8 1 2 3 4 NONoteIn the first test case, Phoenix puts the gold piece with weight $$$3$$$ on the scale first, then the piece with weight $$$2$$$, and finally the piece with weight $$$1$$$. The total weight on the scale is $$$3$$$, then $$$5$$$, then $$$6$$$. The scale does not explode because the total weight on the scale is never $$$2$$$.In the second test case, the total weight on the scale is $$$8$$$, $$$9$$$, $$$11$$$, $$$14$$$, then $$$18$$$. It is never $$$3$$$.In the third test case, Phoenix must put the gold piece with weight $$$5$$$ on the scale, and the scale will always explode.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "171e161f", "template_md5": "35d339e4", "result": "You are given an array of $n$ distinct positive integers, representing the weights of gold pieces. You also have a target weight $x$.  \n\nDetermine if it is possible to arrange the gold pieces in an order such that the sum of the weights at any point during the arrangement is never equal to $x$. If it is possible, output \"YES\" followed by the arrangement. If it is not possible, output \"NO\"."}, {"prompt_md5": "8d633e2d", "template_md5": "465699a0", "result": "You are given a list of distinct numbers.  Find a way to order the numbers so that the sum of the numbers up to any point in the list is never equal to a given target number. If this is possible, output \"YES\" followed by the ordered list. Otherwise, output \"NO\"."}]}