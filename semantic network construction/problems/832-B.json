{"uid": "832-B", "url": "https://codeforces.com/contest/832/problem/B", "tags": ["implementation", " strings"], "title": "832-B", "statement": "B. Petya and Examtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIt's hard times now. Today Petya needs to score 100 points on Informatics exam. The tasks seem easy to Petya, but he thinks he lacks time to finish them all, so he asks you to help with one..There is a glob pattern in the statements (a string consisting of lowercase English letters, characters \"?\" and \"*\"). It is known that character \"*\" occursno more than oncein the pattern.Also,nquery strings are given, it is required to determine for each of them if the pattern matches it or not.Everything seemed easy to Petya, but then he discovered thatthe special pattern characters differ from their usual meaning.A pattern matches a string if it is possible to replace each character \"?\" with onegoodlowercase English letter, and the character \"*\" (if there is one) with any, including empty, string ofbadlowercase English letters, so that the resulting string is the same as the given string.The good letters are given to Petya. All the others are bad.InputThe first line contains a string with length from1to26consisting of distinct lowercase English letters. These letters are good letters, all the others are bad.The second line contains the pattern — a stringsof lowercase English letters, characters \"?\" and \"*\" (1 ≤ |s| ≤ 105). It is guaranteed that character \"*\" occurs insno more than once.The third line contains integern(1 ≤n≤ 105) — the number of query strings.nlines follow, each of them contains single non-empty string consisting of lowercase English letters — a query string.It is guaranteed that the total length of all query strings is not greater than105.OutputPrintnlines: in thei-th of them print \"YES\" if the pattern matches thei-th query string, and \"NO\" otherwise.You can choose the case (lower or upper) for each letter arbitrary.ExamplesInputaba?a2aaaaabOutputYESNOInputabca?a?a*4abacabaabacaapapaaaaaaxOutputNOYESNOYESNoteIn the first example we can replace \"?\" with good letters \"a\" and \"b\", so we can see that the answer for the first query is \"YES\", and the answer for the second query is \"NO\", because we can't match the third letter.Explanation of the second example.The first query: \"NO\", because character \"*\" can be replaced with a string of bad letters only, but the only way to match the query string is to replace it with the string \"ba\", in which both letters are good.The second query: \"YES\", because characters \"?\" can be replaced with corresponding good letters, and character \"*\" can be replaced with empty string, and the strings will coincide.The third query: \"NO\", because characters \"?\" can't be replaced with bad letters.The fourth query: \"YES\", because characters \"?\" can be replaced with good letters \"a\", and character \"*\" can be replaced with a string of bad letters \"x\".", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "04380868", "template_md5": "35d339e4", "result": "You are given a string of good letters and a pattern string containing lowercase English letters, characters \"?\" and \"*\".  \n\n* \"?\" can be replaced with any good letter.\n* \"*\" can be replaced with any string of bad letters (all letters not in the good letter string).\n\nYou are given a number of query strings. For each query string, determine if it can be matched to the pattern string by replacing \"?\" and \"*\" according to the rules above.\n\n**Input:**\n\n* Line 1: A string of distinct good letters.\n* Line 2: The pattern string.\n* Line 3: The number of query strings.\n* Lines 4 to n+3: Each line contains a query string.\n\n**Output:**\n\n* For each query string, print \"YES\" if it matches the pattern, and \"NO\" otherwise."}, {"prompt_md5": "1a9ac4fd", "template_md5": "465699a0", "result": "You are given a list of allowed letters and a pattern containing allowed letters, question marks, and at most one asterisk.  \n\nYou are also given a list of strings. For each string, determine if it can be made to match the pattern by replacing question marks with any allowed letter and the asterisk with any sequence of letters (allowed or not)."}]}