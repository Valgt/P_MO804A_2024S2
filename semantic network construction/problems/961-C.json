{"uid": "961-C", "url": "https://codeforces.com/contest/961/problem/C", "tags": ["bitmasks", " brute force", " implementation"], "title": "961-C", "statement": "C. Chessboardtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMagnus decided to play a classic chess game. Though what he saw in his locker shocked him! His favourite chessboard got broken into4pieces, each of sizenbyn,nisalways odd. And what's even worse, some squares were of wrong color.j-th square of thei-th row ofk-th piece of the board has colorak,i,j;1being black and0being white.Now Magnus wants to change color of some squares in such a way that he recolors minimum number of squares and obtained pieces form a valid chessboard. Every square has its color different to each of the neightbouring by side squares in a valid board. Its size should be2nby2n. You are allowed to move pieces butnot allowed to rotate or flip them.InputThe first line containsoddintegern(1 ≤n≤ 100)— the size of all pieces of the board.Then4segments follow, each describes one piece of the board. Each consists ofnlines ofncharacters;j-th one ofi-th line is equal to1if the square is black initially and0otherwise. Segments are separated by an empty line.OutputPrint one number — minimum number of squares Magnus should recolor to be able to obtain a valid chessboard.ExamplesInput10010Output1Input3101010101101000101010101011010101010Output2", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "55f6dba0", "template_md5": "35d339e4", "result": "A chessboard is broken into 4 pieces, each of size $n \\times n$ where $n$ is odd. Each piece is represented by a grid of 0s and 1s, where 1 represents a black square and 0 represents a white square.  \n\nThe goal is to determine the minimum number of squares that need to be re-colored to make the pieces form a valid chessboard when assembled.  A valid chessboard has the property that every square is a different color than its directly adjacent neighbors.\n\nThe pieces can be moved around but not rotated or flipped. \n\n\nInput:\n\n* The first line contains an odd integer $n$ (1 ≤ $n$ ≤ 100), the size of each piece.\n* The next four segments, each separated by a blank line, represent the four pieces. Each segment is a grid of $n \\times n$ characters (0s and 1s).\n\nOutput:\n\n* Print a single number representing the minimum number of squares that need to be re-colored."}, {"prompt_md5": "4d17ceb5", "template_md5": "465699a0", "result": "You are given a broken chessboard made of four pieces. Each piece is a square grid of odd size. Some squares on the board have the wrong color. You can move the pieces around but not rotate or flip them.  Find the minimum number of squares you need to change color to make the entire board a valid chessboard (where each square is a different color from its neighbors)."}]}