{"uid": "1578-E", "url": "https://codeforces.com/contest/1578/problem/E", "tags": ["implementation", " math"], "title": "1578-E", "statement": "E. Easy Schedulingtime limit per test2 secondsmemory limit per test1024 megabytesinputstandard inputoutputstandard outputEonathan Eostar decided to learn the magic of multiprocessor systems. He has a full binary tree of tasks with height $$$h$$$. In the beginning, there is only onereadytask in the tree — the task in the root. At each moment of time, $$$p$$$ processes choose at most $$$p$$$readytasks and perform them. After that, tasks whose parents were performed becomereadyfor the next moment of time. Once the task becomesready, it staysreadyuntil it is performed.You shall calculate the smallest number of time moments the system needs to perform all the tasks.InputThe first line of the input contains the number of tests $$$t$$$ ($$$1 \\\\leq t \\\\leq 5\\\\cdot 10^5$$$). Each of the next $$$t$$$ lines contains the description of a test. A test is described by two integers $$$h$$$ ($$$1 \\\\leq h \\\\leq 50$$$) and $$$p$$$ ($$$1 \\\\leq p \\\\leq 10^4$$$) — the height of the full binary tree and the number of processes. It is guaranteed that all the tests are different.OutputFor each test output one integer on a separate line — the smallest number of time moments the system needs to perform all the tasks.ExampleInput3 3 1 3 2 10 6Output7 4 173NoteLet us consider the second test from the sample input. There is a full binary tree of height $$$3$$$ and there are two processes. At the first moment of time, there is only one ready task, $$$1$$$, and $$$p_1$$$ performs it. At the second moment of time, there are two ready tasks, $$$2$$$ and $$$3$$$, and the processes perform them. At the third moment of time, there are four ready tasks, $$$4$$$, $$$5$$$, $$$6$$$, and $$$7$$$, and $$$p_1$$$ performs $$$6$$$ and $$$p_2$$$ performs $$$5$$$. At the fourth moment of time, there are two ready tasks, $$$4$$$ and $$$7$$$, and the processes perform them. Thus, the system spends $$$4$$$ moments of time to perform all the tasks.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "24c94cb2", "template_md5": "35d339e4", "result": "You are given a full binary tree with a height of $h$. There is one task ready to be processed at the root of the tree. At each time step, $p$ processes can each choose at most $p$ ready tasks to process. After a task is processed, its parent tasks become ready.  \n\nFind the minimum number of time steps required to process all the tasks in the tree. \n\nInput:\n\n* The first line contains the number of test cases, $t$.\n* Each of the next $t$ lines contains two integers, $h$ (the height of the tree) and $p$ (the number of processes).\n\nOutput:\n\n* For each test case, output the minimum number of time steps required to process all tasks."}, {"prompt_md5": "c73dbd1e", "template_md5": "465699a0", "result": "You have a tree-like structure with tasks. At each step, a number of workers can perform tasks.  Tasks become available for workers when their parent tasks are completed. Find the minimum number of steps needed to complete all tasks."}]}