{"uid": "219-E", "url": "https://codeforces.com/contest/219/problem/E", "tags": ["data structures"], "title": "219-E", "statement": "E. Parking Lottime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutA parking lot in the City consists ofnparking spaces, standing in a line. The parking spaces are numbered from 1 tonfrom left to right.When a car arrives at the lot, the operator determines an empty parking space for it. For the safety's sake the chosen place should be located as far from the already occupied places as possible. That is, the closest occupied parking space must be as far away as possible. If there are several such places, then the operator chooses the place with the minimum index from them. If all parking lot places are empty, then the car gets place number1.We consider the distance between thei-th and thej-th parking spaces equal to4·|i-j|meters.You are given the parking lot records of arriving and departing cars in the chronological order. For each record of an arriving car print the number of the parking lot that was given to this car.InputThe first line contains two space-separated integersnandm(1 ≤n,m≤ 2·105)— the number of parking places and the number of records correspondingly.Nextmlines contain the descriptions of the records, one per line. Thei-th line contains numbersti,idi(1 ≤ti≤ 2; 1 ≤idi≤ 106). Iftiequals 1, then the corresponding record says that the car numberidiarrived at the parking lot. Iftiequals 2, then the corresponding record says that the car numberidideparted from the parking lot.Records about arriving to the parking lot and departing from the parking lot are given chronologically. All events occurred consecutively, no two events occurred simultaneously.It is guaranteed that all entries are correct:each car arrived at the parking lot at most once and departed from the parking lot at most once,there is no record of a departing car if it didn't arrive at the parking lot earlier,there are no more thanncars on the parking lot at any moment.You can consider the cars arbitrarily numbered from 1 to106, all numbers are distinct. Initially all places in the parking lot are empty.OutputFor each entry of an arriving car print the number of its parking space. Print the numbers of the spaces in the order, in which the cars arrive to the parking lot.ExamplesInput7 111 151 1231231 31 52 1231232 151 212 31 61 71 8Output17427413", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "906f893b", "template_md5": "35d339e4", "result": "There are $n$ parking spaces numbered from 1 to $n$. Cars arrive and depart from the parking lot.  \n\nWhen a car arrives, it must be parked as far away as possible from any already parked cars. If there are multiple equally distant spaces, the car is parked in the space with the lowest number. If all spaces are empty, the car parks in space 1.\n\nThe distance between two spaces is calculated as $4 \\cdot |i - j|$ where $i$ and $j$ are the space numbers.\n\nYou are given a list of events:\n\n* **1** $i$: Car $i$ arrives.\n* **2** $i$: Car $i$ departs.\n\nFor each arrival event, print the number of the parking space assigned to the car. \n\n\n\n**Input:**\n\n* The first line contains two integers, $n$ and $m$: the number of parking spaces and the number of events, respectively.\n* The next $m$ lines describe the events. Each line contains two integers: the event type (1 or 2) and the car number.\n\n**Output:**\n\n* For each arrival event, print the parking space number assigned to the car."}, {"prompt_md5": "2e3d2a1f", "template_md5": "465699a0", "result": "You are given a list of cars arriving and leaving a parking lot.  Each car needs to be assigned a parking space as far away from any other occupied spaces as possible.  Print the parking space number assigned to each arriving car."}]}