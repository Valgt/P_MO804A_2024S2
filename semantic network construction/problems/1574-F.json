{"uid": "1574-F", "url": "https://codeforces.com/contest/1574/problem/F", "tags": ["combinatorics", " dfs and similar", " dp", " dsu", " fft", " graphs"], "title": "1574-F", "statement": "F. Occurrencestime limit per test7 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputA subarray of array $$$a$$$ from index $$$l$$$ to the index $$$r$$$ is the array $$$[a_l, a_{l+1}, \\\\dots, a_{r}]$$$. The number of occurrences of the array $$$b$$$ in the array $$$a$$$ is the number of subarrays of $$$a$$$ such that they are equal to $$$b$$$.You are given $$$n$$$ arrays $$$A_1, A_2, \\\\dots, A_n$$$; the elements of these arrays are integers from $$$1$$$ to $$$k$$$. You have to build an array $$$a$$$ consisting of $$$m$$$ integers from $$$1$$$ to $$$k$$$ in such a way that, foreverygiven subarray $$$A_i$$$, the number of occurrences of $$$A_i$$$ in the array $$$a$$$ isnot lessthan the number of occurrences of each non-empty subarray of $$$A_i$$$ in $$$a$$$. Note that if $$$A_i$$$ doesn't occur in $$$a$$$, and no subarray of $$$A_i$$$ occurs in $$$a$$$, this condition is still met for $$$A_i$$$.Your task is to calculate the number of different arrays $$$a$$$ you can build, and print it modulo $$$998244353$$$.InputThe first line contains three integers $$$n$$$, $$$m$$$ and $$$k$$$ ($$$1 \\\\le n, m, k \\\\le 3 \\\\cdot 10^5$$$) — the number of the given arrays, the desired length of the array $$$a$$$, and the upper bound on the values in the arrays.Then $$$n$$$ lines follow. The $$$i$$$-th line represents the array $$$A_i$$$. The first integer in the $$$i$$$-th line is $$$c_i$$$ ($$$1 \\\\le c_i \\\\le m$$$) — the number of elements in $$$A_i$$$; then, $$$c_i$$$ integers from $$$1$$$ to $$$k$$$ follow — the elements of the array $$$A_i$$$.Additional constraint on the input: $$$\\\\sum\\\\limits_{i=1}^n c_i \\\\le 3 \\\\cdot 10^5$$$; i. e., the number of elements in the given arrays in total does not exceed $$$3 \\\\cdot 10^5$$$.OutputPrint one integer — the number of different arrays $$$a$$$ you can build, taken modulo $$$998244353$$$.ExamplesInput2 4 3 2 1 2 1 3Output5Input2 4 3 2 1 2 3 3 2 1Output0Input1 42 1337 2 13 31Output721234447", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0c317d5f", "template_md5": "35d339e4", "result": "You are given $n$ arrays, $A_1, A_2, ..., A_n$. Each array has integers from 1 to $k$. You need to create a new array $a$ with $m$ integers from 1 to $k$. \n\nThe new array $a$ must satisfy the following condition for each given array $A_i$:\n\n* The number of times $A_i$ appears as a subarray in $a$ must be greater than or equal to the number of times any non-empty subarray of $A_i$ appears in $a$.\n\nFind the number of different arrays $a$ that satisfy this condition and print the result modulo 998244353."}, {"prompt_md5": "c282b365", "template_md5": "465699a0", "result": "You are given a set of smaller arrays. You need to create a larger array that satisfies a condition: for each smaller array, the number of times it appears within the larger array must be greater than or equal to the number of times any of its subarrays appear.  Count how many different larger arrays you can create."}]}