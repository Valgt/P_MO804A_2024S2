{"uid": "1994-C", "url": "https://codeforces.com/contest/1994/problem/C", "tags": ["binary search", " dp", " two pointers"], "title": "1994-C", "statement": "C. Hungry Gamestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYaroslav is playing a computer game, and at one of the levels, he encountered $$$n$$$ mushrooms arranged in a row. Each mushroom has its own level of toxicity; the $$$i$$$-th mushroom from the beginning has a toxicity level of $$$a_i$$$. Yaroslav can choose two integers $$$1 \\\\le l \\\\le r \\\\le n$$$, and then his character will take turns from left to right to eat mushrooms from this subsegment one by one, i.e., the mushrooms with numbers $$$l, l+1, l+2, \\\\ldots, r$$$.The character has a toxicity level $$$g$$$, initially equal to $$$0$$$. The computer game is defined by the number $$$x$$$ — the maximum toxicity level at any given time. When eating a mushroom with toxicity level $$$k$$$, the following happens:The toxicity level of the character is increased by $$$k$$$.If $$$g \\\\leq x$$$, the process continues; otherwise, $$$g$$$ becomes zero and the process continues.Yaroslav became interested in how many ways there are to choose the values of $$$l$$$ and $$$r$$$ such that the final value of $$$g$$$ is not zero. Help Yaroslav find this number!InputEach test consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^{4}$$$) — the number of test cases. Then follows the description of the test cases.The first line of each test case contains two integers $$$n$$$, $$$x$$$ ($$$1 \\\\leq n \\\\leq 2 \\\\cdot 10^5, 1 \\\\le x \\\\le 10^9$$$) — the number of mushrooms and the maximum toxicity level.The second line of each test case contains $$$n$$$ numbers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\leq a_i \\\\leq 10^9$$$).It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output a single number — the number of subsegments such that the final value of $$$g$$$ will not be zero.ExampleInput54 21 1 1 13 21 2 31 6106 31 2 1 4 3 85 999999999999999999 999999998 1000000000 1000000000 500000000Output8 2 0 10 7NoteIn the first test case, the subsegments $$$(1, 1)$$$, $$$(1, 2)$$$, $$$(1, 4)$$$, $$$(2, 2)$$$, $$$(2, 3)$$$, $$$(3, 3)$$$, $$$(3, 4)$$$ and $$$(4, 4)$$$ are suitable.In the second test case, non-zero $$$g$$$ will remain only on the subsegments $$$(1, 1)$$$ and $$$(2, 2)$$$.In the third test case, on the only possible subsegment, $$$g$$$ will be zero.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "941443c7", "template_md5": "35d339e4", "result": "You are given an array of $n$ integers, $a_1, a_2, ..., a_n$, representing the toxicity levels of mushrooms. You can choose a subsegment of the array, defined by integers $l$ and $r$ ($1 \\le l \\le r \\le n$).  \n\nYour character starts with a toxicity level of 0.  They will eat the mushrooms in the subsegment from index $l$ to $r$ (inclusive), increasing their toxicity level by the toxicity of each mushroom.  \n\nThe game has a maximum toxicity level, $x$. If the character's toxicity level exceeds $x$, it resets to 0.\n\nFind the number of valid subsegments $(l, r)$ such that the character's toxicity level is not 0 after eating all the mushrooms in the subsegment."}, {"prompt_md5": "4a9e581d", "template_md5": "465699a0", "result": "You are given a list of numbers.  You can choose a range of numbers from this list.  For each number in the range, add it to a running total. If the running total exceeds a given limit, reset it to zero.  Count how many ranges of numbers will result in a non-zero running total."}]}