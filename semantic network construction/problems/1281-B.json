{"uid": "1281-B", "url": "https://codeforces.com/contest/1281/problem/B", "tags": ["greedy"], "title": "1281-B", "statement": "B. Azamon Web Servicestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYour friend Jeff Zebos has been trying to run his new online company, but it's not going very well. He's not getting a lot of sales on his website which he decided to callAzamon. His big problem, you think, is that he's not ranking high enough on the search engines. If only he could rename his products to have better names than his competitors, then he'll be at the top of the search results and will be a millionaire.After doing some research, you find out that search engines only sort their results lexicographically. If your friend could rename his products to lexicographically smaller strings than his competitor's, then he'll be at the top of the rankings!To make your strategy less obvious to his competitors, you decide to swap no more than two letters of the product names.Please help Jeff to find improved names for his products that are lexicographically smaller than his competitor's!Given the string $$$s$$$ representing Jeff's product name and the string $$$c$$$ representing his competitor's product name, find a way to swapat most one pairof characters in $$$s$$$ (that is, find two distinct indices $$$i$$$ and $$$j$$$ and swap $$$s_i$$$ and $$$s_j$$$) such that the resulting new name becomes strictly lexicographically smaller than $$$c$$$, or determine that it is impossible.Note:String $$$a$$$ isstrictly lexicographically smallerthan string $$$b$$$ if and only if one of the following holds:$$$a$$$ is aproper prefixof $$$b$$$, that is, $$$a$$$ is aprefixof $$$b$$$ such that $$$a \\\\neq b$$$;There exists an integer $$$1 \\\\le i \\\\le \\\\min{(|a|, |b|)}$$$ such that $$$a_i < b_i$$$ and $$$a_j = b_j$$$ for $$$1 \\\\le j < i$$$.InputThe first line of input contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 1500$$$) denoting the number of test cases. The next lines contain descriptions of the test cases.Each test case consists of a single line containing two space-separated strings $$$s$$$ and $$$c$$$ ($$$2 \\\\le |s| \\\\le 5000, 1 \\\\le |c| \\\\le 5000$$$). The strings $$$s$$$ and $$$c$$$ consists of uppercase English letters.It is guaranteed that the sum of $$$|s|$$$ in the input is at most $$$5000$$$ and the sum of the $$$|c|$$$ in the input is at most $$$5000$$$.OutputFor each test case, output a single line containing a single string, which is eitherthe new name which is obtained after swapping no more than one pair of characters that is strictly lexicographically smaller than $$$c$$$. In case there are many possible such strings, you can output any of them;three dashes (the string \"---\" without quotes) if it is impossible.ExampleInput3 AZAMON APPLE AZAMON AAAAAAAAAAALIBABA APPLE BANANAOutputAMAZON --- APPLENoteIn the first test case, it is possible to swap the second and the fourth letters of the string and the resulting string \"AMAZON\" is lexicographically smaller than \"APPLE\".It is impossible to improve the product's name in the second test case and satisfy all conditions.In the third test case, it is possible not to swap a pair of characters. The name \"APPLE\" is lexicographically smaller than \"BANANA\". Note that there are other valid answers, e.g., \"APPEL\".", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f3683568", "template_md5": "465699a0", "result": "Given two strings, find a way to swap at most two letters in the first string to make it lexicographically smaller than the second string. If this is not possible, output \"---\"."}, {"prompt_md5": "77f822c8", "template_md5": "35d339e4", "result": "You are given two strings,  $s$ and $c$.  \n\nYour task is to determine if you can swap at most two letters in string $s$ to create a new string that is lexicographically smaller than string $c$. \n\nIf such a string can be created, output it. Otherwise, output \"---\".\n\n**Lexicographically smaller** means:\n\n* String $a$ is lexicographically smaller than string $b$ if $a$ is a proper prefix of $b$ (meaning $a$ is a part of $b$ but not equal to $b$).\n* String $a$ is lexicographically smaller than string $b$ if there is an index $i$ where $a_i < b_i$ (the characters at index $i$ in $a$ and $b$ differ, and the character in $a$ comes earlier in the alphabet), and $a_j = b_j$ for all indices $j$ less than $i$. \n\n\n\nLet me know if you'd like me to elaborate on any of these concepts!"}]}