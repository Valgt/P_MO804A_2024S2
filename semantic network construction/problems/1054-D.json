{"uid": "1054-D", "url": "https://codeforces.com/contest/1054/problem/D", "tags": ["greedy", " implementation"], "title": "1054-D", "statement": "D. Changing Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAt a break Vanya came to the class and saw an array of $$$n$$$ $$$k$$$-bit integers $$$a_1, a_2, \\\\ldots, a_n$$$ on the board. An integer $$$x$$$ is called a $$$k$$$-bit integer if $$$0 \\\\leq x \\\\leq 2^k - 1$$$.Of course, Vanya was not able to resist and started changing the numbers written on the board. To ensure that no one will note anything, Vanya allowed himself to make only one type of changes: choose an index of the array $$$i$$$ ($$$1 \\\\leq i \\\\leq n$$$) and replace the number $$$a_i$$$ with the number $$$\\\\overline{a_i}$$$. We define $$$\\\\overline{x}$$$ for a $$$k$$$-bit integer $$$x$$$ as the $$$k$$$-bit integer such that all its $$$k$$$ bits differ from the corresponding bits of $$$x$$$.Vanya does not like the number $$$0$$$. Therefore, he likes such segments $$$[l, r]$$$ ($$$1 \\\\leq l \\\\leq r \\\\leq n$$$) such that $$$a_l \\\\oplus a_{l+1} \\\\oplus \\\\ldots \\\\oplus a_r \\\\neq 0$$$, where $$$\\\\oplus$$$ denotes thebitwise XOR operation. Determine the maximum number of segments he likes Vanya can get applying zero or more operations described above.InputThe first line of the input contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\\\leq n \\\\leq 200\\\\,000$$$, $$$1 \\\\leq k \\\\leq 30$$$).The next line contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$0 \\\\leq a_i \\\\leq 2^k - 1$$$), separated by spaces — the array of $$$k$$$-bit integers.OutputPrint one integer — the maximum possible number of segments with XOR not equal to $$$0$$$ that can be obtained by making several (possibly $$$0$$$) operations described in the statement.ExamplesInput3 21 3 0Output5Input6 31 4 4 7 3 4Output19NoteIn the first example if Vasya does not perform any operations, he gets an array that has $$$5$$$ segments that Vanya likes. If he performs the operation with $$$i = 2$$$, he gets an array $$$[1, 0, 0]$$$, because $$$\\\\overline{3} = 0$$$ when $$$k = 2$$$. This array has $$$3$$$ segments that Vanya likes. Also, to get an array with $$$5$$$ segments that Vanya likes, he can perform two operations with $$$i = 3$$$ and with $$$i = 2$$$. He then gets an array $$$[1, 0, 3]$$$. It can be proven that he can't obtain $$$6$$$ or more segments that he likes.In the second example, to get $$$19$$$ segments that Vanya likes, he can perform $$$4$$$ operations with $$$i = 3$$$, $$$i = 4$$$, $$$i = 5$$$, $$$i = 6$$$ and get an array $$$[1, 4, 3, 0, 4, 3]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "464ae45e", "template_md5": "35d339e4", "result": "You are given an array of $n$ integers, where each integer is a $k$-bit integer ($0 \\leq x \\leq 2^k - 1$).  You can perform the following operation on an element of the array:\n\n* Choose an index $i$ and replace the element $a_i$ with its bitwise complement, denoted as $\\overline{a_i}$.  The bitwise complement of a number has all its bits flipped compared to the original number.\n\nYou want to maximize the number of segments in the array where the bitwise XOR of all elements in the segment is not equal to 0.  \n\n**Input:**\n\n* The first line contains two integers $n$ and $k$ ($1 \\leq n \\leq 200,000$, $1 \\leq k \\leq 30$).\n* The second line contains $n$ integers $a_1, a_2, ..., a_n$ ($0 \\leq a_i \\leq 2^k - 1$).\n\n**Output:**\n\n* Print one integer, the maximum number of segments you can create with the given operations."}, {"prompt_md5": "a454e120", "template_md5": "465699a0", "result": "You are given an array of numbers. Each number has a fixed number of bits. You can change each number to its bitwise complement (flipping all the bits).  Find the maximum number of subarrays in the array where the sum of the numbers in the subarray is not zero after applying these changes."}]}