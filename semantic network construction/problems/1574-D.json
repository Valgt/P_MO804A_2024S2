{"uid": "1574-D", "url": "https://codeforces.com/contest/1574/problem/D", "tags": ["binary search", " brute force", " data structures", " dfs and similar", " graphs", " greedy", " hashing", " implementation"], "title": "1574-D", "statement": "D. The Strongest Buildtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIvan is playing yet another roguelike computer game. He controls a single hero in the game. The hero has $$$n$$$ equipment slots. There is a list of $$$c_i$$$ items for the $$$i$$$-th slot, the $$$j$$$-th of them increases the hero strength by $$$a_{i,j}$$$. The items for each slot are pairwise distinct and are listed in the increasing order of their strength increase. So, $$$a_{i,1} < a_{i,2} < \\\\dots < a_{i,c_i}$$$.For each slot Ivan chooses exactly one item. Let the chosen item for the $$$i$$$-th slot be the $$$b_i$$$-th item in the corresponding list. The sequence of choices $$$[b_1, b_2, \\\\dots, b_n]$$$ is calleda build.The strength of a build is the sum of the strength increases of the items in it. Some builds are banned from the game. There is a list of $$$m$$$ pairwise distinct banned builds. It's guaranteed that there's at least one build that's not banned.What is the build with the maximum strength that is not banned from the game? If there are multiple builds with maximum strength, print any of them.InputThe first line contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 10$$$) — the number of equipment slots.The $$$i$$$-th of the next $$$n$$$ lines contains the description of the items for the $$$i$$$-th slot. First, one integer $$$c_i$$$ ($$$1 \\\\le c_i \\\\le 2 \\\\cdot 10^5$$$) — the number of items for the $$$i$$$-th slot. Then $$$c_i$$$ integers $$$a_{i,1}, a_{i,2}, \\\\dots, a_{i,c_i}$$$ ($$$1 \\\\le a_{i,1} < a_{i,2} < \\\\dots < a_{i,c_i} \\\\le 10^8$$$).The sum of $$$c_i$$$ doesn't exceed $$$2 \\\\cdot 10^5$$$.The next line contains a single integer $$$m$$$ ($$$0 \\\\le m \\\\le 10^5$$$) — the number of banned builds.Each of the next $$$m$$$ lines contains a description of a banned build — a sequence of $$$n$$$ integers $$$b_1, b_2, \\\\dots, b_n$$$ ($$$1 \\\\le b_i \\\\le c_i$$$).The builds are pairwise distinct, and there's at least one build that's not banned.OutputPrint the build with the maximum strength that is not banned from the game. If there are multiple builds with maximum strength, print any of them.ExamplesInput3 3 1 2 3 2 1 5 3 2 4 6 2 3 2 3 3 2 2Output2 2 3Input3 3 1 2 3 2 1 5 3 2 4 6 2 3 2 3 2 2 3Output1 2 3Input3 3 1 2 3 2 1 5 3 2 4 6 2 3 2 3 2 2 3Output3 2 2Input4 1 10 1 4 1 7 1 3 0Output1 1 1 1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "3a6307d7", "template_md5": "35d339e4", "result": "There are $n$ equipment slots. For each slot $i$, there are $c_i$ items, where the $j$-th item increases strength by $a_{i,j}$.  The items in each slot are listed in increasing order of strength increase.\n\nYou must choose one item from each slot.  A \"build\" is a sequence of these choices, one for each slot. The strength of a build is the sum of the strength increases of the chosen items.\n\nThere are $m$ banned builds.  Find the build with the maximum strength that is not banned. If there are multiple builds with maximum strength, print any one. \n\n\nInput:\n\n* The first line contains $n$.\n* The next $n$ lines each describe a slot:\n    * The first number is $c_i$.\n    * The next $c_i$ numbers are $a_{i,1}, a_{i,2}, ..., a_{i,c_i}$.\n* The next line contains $m$.\n* The next $m$ lines each describe a banned build:\n    * Each line contains $n$ numbers, one for each slot, representing the chosen item for that slot.\n\nOutput:\n\n* Print the build with the maximum strength that is not banned."}, {"prompt_md5": "06eb354d", "template_md5": "465699a0", "result": "You have a set of slots, each with a list of items that increase a value. You can choose one item from each slot.  Some combinations of items are forbidden. Find the combination of items that gives the highest total value, while avoiding the forbidden combinations."}]}