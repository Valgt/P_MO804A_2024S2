{"uid": "1906-E", "url": "https://codeforces.com/contest/1906/problem/E", "tags": ["constructive algorithms", " dp"], "title": "1906-E", "statement": "E. Merge Not Sorttime limit per test1 secondmemory limit per test1024 megabytesinputstandard inputoutputstandard outputYou are currently researching the Merge Sort algorithm. Merge Sort is a sorting algorithm that is based on the principle of Divide and Conquer. It works by dividing an array into two subarrays of equal length, sorting each subarrays, then merging the sorted subarrays back together to form the final sorted array.You are particularly interested in the merging routine. Common merge implementation will combine two subarrays by iteratively comparing their first elements, and move the smaller one to a new merged array. More precisely, the merge algorithm can be presented by the following pseudocode.Merge(A[1..N], B[1..N]):C = []i = 1j = 1while i <= N AND j <= N:if A[i] < B[j]:append A[i] to Ci = i + 1else:append B[j] to Cj = j + 1while i <= N:append A[i] to Ci = i + 1while j <= N:append B[j] to Cj = j + 1return CDuring your research, you are keen to understand the behaviour of the merge algorithm when arrays $$$A$$$ and $$$B$$$ are not necessarily sorted. For example, if $$$A = [3, 1, 6]$$$ and $$$B = [4, 5, 2]$$$, then $$$\\\\text{Merge}(A, B) = [3, 1, 4, 5, 2, 6]$$$.To further increase the understanding of the merge algorithm, you decided to work on the following problem. You are given an array $$$C$$$ of length $$$2 \\\\cdot N$$$ such that it is a permutation of $$$1$$$ to $$$2 \\\\cdot N$$$. Construct any two arrays $$$A$$$ and $$$B$$$ of thesame length$$$N$$$, such that $$$\\\\text{Merge}(A, B) = C$$$, or determine if it is impossible to do so.InputThe first line consists of an integer $$$N$$$ ($$$1 \\\\leq N \\\\leq 1000$$$).The following line consists of $$$2 \\\\cdot N$$$ integers $$$C_i$$$. The array $$$C$$$ is a permutation of $$$1$$$ to $$$2 \\\\cdot N$$$.OutputIf it is impossible to construct two arrays $$$A$$$ and $$$B$$$ of length $$$N$$$ such that $$$\\\\text{Merge}(A, B) = C$$$, then output-1.Otherwise, output the arrays $$$A$$$ and $$$B$$$ in two lines. The first line consists of $$$N$$$ integers $$$A_i$$$. The second line consists of $$$N$$$ integers $$$B_i$$$. If there are several possible answers, output any of them.ExamplesInput3 3 1 4 5 2 6Output3 1 6 4 5 2Input4 1 2 3 4 5 6 7 8Output2 3 5 7 1 4 6 8Input2 4 3 2 1Output-1NoteExplanation for the sample input/output #1The solution $$$A = [3, 1, 4]$$$ and $$$B = [5, 2, 6]$$$ is also correct.Explanation for the sample input/output #2The solution $$$A = [1, 2, 3, 4]$$$ and $$$B = [5, 6, 7, 8]$$$ is also correct.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "2d4602a5", "template_md5": "35d339e4", "result": "You are given an array $C$ of length $2N$ where the elements of $C$ are a permutation of the numbers 1 to $2N$.  \n\nDetermine if it is possible to construct two arrays $A$ and $B$, both of length $N$, such that the merge of $A$ and $B$ (using the merge algorithm described in the original problem statement) results in the array $C$.\n\nIf it is possible, output the arrays $A$ and $B$. If it is not possible, output -1."}, {"prompt_md5": "1a736ccf", "template_md5": "465699a0", "result": "You are given a list of numbers.  Determine if you can split this list into two smaller lists of equal length so that merging the two smaller lists back together results in the original list. If possible, output the two smaller lists. If not possible, output -1."}]}