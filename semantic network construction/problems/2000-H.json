{"uid": "2000-H", "url": "https://codeforces.com/contest/2000/problem/H", "tags": ["binary search", " brute force", " data structures", " implementation"], "title": "2000-H", "statement": "H. Ksyusha and the Loaded Settime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputKsyusha decided to start a game development company. To stand out among competitors and achieve success, she decided to write her own game engine. The engine must support a set initially consisting of $$$n$$$ distinct integers $$$a_1, a_2, \\\\ldots, a_n$$$.The set will undergo $$$m$$$ operations sequentially. The operations can be of the following types:Insert element $$$x$$$ into the set;Remove element $$$x$$$ from the set;Report the $$$k$$$-load of the set.The $$$k$$$-load of the set is defined as theminimumpositiveinteger $$$d$$$ such that the integers $$$d, d + 1, \\\\ldots, d + (k - 1)$$$ do not appear in this set. For example, the $$$3$$$-load of the set $$$\\\\{3, 4, 6, 11\\\\}$$$ is $$$7$$$, since the integers $$$7, 8, 9$$$ are absent from the set, and no smaller value fits.Ksyusha is busy with management tasks, so you will have to write the engine. Implement efficient support for the described operations.InputThe first line contains an integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases.The following lines describe the test cases.The first line contains an integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the initial size of the set.The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\le a_1 < a_2 < \\\\ldots < a_n \\\\le 2 \\\\cdot 10^6$$$) — the initial state of the set.The third line contains an integer $$$m$$$ ($$$1 \\\\le m \\\\le 2 \\\\cdot 10^5$$$) — the number of operations.The next $$$m$$$ lines contain the operations. The operations are given in the following format:+$$$x$$$ ($$$1 \\\\le x \\\\le 2 \\\\cdot 10^6$$$) — insert element $$$x$$$ into the set (it is guaranteed that $$$x$$$ is not in the set);-$$$x$$$ ($$$1 \\\\le x \\\\le 2 \\\\cdot 10^6$$$) — remove element $$$x$$$ from the set (it is guaranteed that $$$x$$$ is in the set);?$$$k$$$ ($$$1 \\\\le k \\\\le 2 \\\\cdot 10^6$$$) — output the value of the $$$k$$$-load of the set.It is guaranteed that the sum of $$$n$$$ across all test cases does not exceed $$$2 \\\\cdot 10^5$$$, and the same holds for $$$m$$$.OutputFor each test case, output the answers to the operations of type \"?\".ExampleInput351 2 5 905 200000015- 2? 2? 1- 1? 1+ 4+ 2? 2+ 6- 4+ 7? 2? 3? 4? 200000053 4 5 6 89? 5- 5? 5+ 1? 2- 6- 8+ 6? 556 7 8 9 1010? 5- 6? 4- 10+ 5- 8+ 3+ 2- 3+ 10Output2 2 1 6 3 8 8 2000001  9 9 9 7  1 1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f7d79657", "template_md5": "35d339e4", "result": "You are given a set of distinct integers. You will be performing operations on this set:\n\n* **Insert:** Add an integer to the set.\n* **Remove:** Delete an integer from the set.\n* **Query:** Find the smallest positive integer $d$ such that the integers $d$, $d+1$, ..., $d+(k-1)$ are not present in the set. This value is called the $k$-load of the set.\n\nYour task is to efficiently process these operations.\n\n**Input:**\n\n* The first line contains the number of test cases $t$.\n* Each test case consists of:\n    * The initial size of the set $n$.\n    * $n$ integers representing the initial state of the set.\n    * The number of operations $m$.\n    * $m$ lines describing the operations (Insert, Remove, or Query).\n\n**Output:**\n\nFor each Query operation, output the $k$-load of the set."}, {"prompt_md5": "dbd95169", "template_md5": "465699a0", "result": "You are given a set of distinct numbers. You need to process a series of operations:\n\n* **Insert:** Add a number to the set.\n* **Remove:** Delete a number from the set.\n* **Query:** Find the smallest number 'd' such that the numbers 'd', 'd+1', ..., 'd+k-1' are not in the set. \n\n\n\nYou need to efficiently perform these operations."}]}