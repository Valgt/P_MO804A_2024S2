{"uid": "748-F", "url": "https://codeforces.com/contest/748/problem/F", "tags": ["constructive algorithms", " dfs and similar", " graphs", " trees"], "title": "748-F", "statement": "F. Santa Clauses and a Soccer Championshiptime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe country Treeland consists ofncities connected withn- 1bidirectional roads in such a way that it's possible to reach every city starting from any other city using these roads. There will be a soccer championship next year, and all participants are Santa Clauses. There are exactly2kteams from2kdifferent cities.During the first stage all teams are divided intokpairs. Teams of each pair play two games against each other: one in the hometown of the first team, and the other in the hometown of the other team. Thus, each of the2kcities holds exactly one soccer game. However, it's not decided yet how to divide teams into pairs.It's also necessary to choose several cities to settle players in. Organizers tend to useas few cities as possibleto settle the teams.Nobody wants to travel too much during the championship, so if a team plays in citiesuandv, it wants to live in one of the cities on the shortest path betweenuandv(maybe, inuor inv). There is another constraint also: the teams from one pair must live in the same city.Summarizing, the organizers want to divide2kteams into pairs and settle them in the minimum possible number of citiesmin such a way that teams from each pair live in the same city which lies between their hometowns.InputThe first line of input contains two integersnandk(2 ≤n≤ 2·105, 2 ≤ 2k≤n) — the number of cities in Treeland and the number of pairs of teams, respectively.The followingn- 1lines describe roads in Treeland: each of these lines contains two integersaandb(1 ≤a,b≤n,a≠b) which mean that there is a road between citiesaandb. It's guaranteed that there is a path between any two cities.The last line contains2kdistinct integersc1,c2, ...,c2k(1 ≤ci≤n), whereciis the hometown of thei-th team. All these numbers are distinct.OutputThe first line of output must contain the only positive integermwhich should be equal to the minimum possible number of cities the teams can be settled in.The second line should containmdistinct numbersd1,d2, ...,dm(1 ≤di≤n) denoting the indices of the cities where the teams should be settled.Theklines should follow, thej-th of them should contain3integersuj,vjandxj, whereujandvjare the hometowns of thej-th pair's teams, andxjis the city they should live in during the tournament. Each of the numbersc1,c2, ...,c2kshould occur in alluj's andvj's exactly once. Each of the numbersxjshould belong to{d1,d2, ...,dm}.If there are several possible answers, print any of them.ExampleInput6 21 21 32 42 53 62 5 4 6Output125 4 26 2 2NoteIn the first test the orginizers can settle all the teams in the city number2. The way to divide all teams into pairs is not important, since all requirements are satisfied anyway, because the city2lies on the shortest path between every two cities from{2, 4, 5, 6}.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "49d2282c", "template_md5": "35d339e4", "result": "There are $n$ cities connected by $n-1$ roads, forming a single connected network.  There are $2k$ teams, each from a different city.  \n\nThe teams are divided into $k$ pairs, and each pair plays two games: one in each team's home city.  \n\nThe organizers want to choose the fewest possible cities to house the teams, with the following rules:\n\n* Teams in a pair must live in the same city.\n* The chosen city must lie on the shortest path between the two cities where the teams in the pair play their games.\n\nGiven the cities and the hometowns of the teams, find the minimum number of cities needed to house the teams and list the cities."}, {"prompt_md5": "f5490f98", "template_md5": "465699a0", "result": "You are given a connected graph with cities and roads.  There are pairs of teams, each team from a different city.  Teams need to play two games against each other, one in each team's city.  \n\nThe goal is to find the fewest cities needed to house all the teams so that:\n\n* Teams in each pair live in the same city.\n* The chosen city is on the shortest path between the two cities where the teams play their games."}]}