{"uid": "384-B", "url": "https://codeforces.com/contest/384/problem/B", "tags": ["greedy", " implementation", " sortings", " two pointers"], "title": "384-B", "statement": "B. Multitaskingtime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutIahub wants to enhance his multitasking abilities. In order to do this, he wants to sortnarrays simultaneously, each array consisting ofmintegers.Iahub can choose a pair of distinct indicesiandj(1 ≤i,j≤m,i≠j). Then in each array the values at positionsiandjare swapped only if the value at positioniis strictly greater than the value at positionj.Iahub wants to find an array of pairs of distinct indices that, chosen in order, sort all of thenarrays in ascending or descending order (the particular order is given in input). The size of the array can be at most(at mostpairs). Help Iahub, find any suitable array.InputThe first line contains three integersn(1 ≤n≤ 1000),m(1 ≤m≤  100)andk. Integerkis0if the arrays must be sorted in ascending order, and1if the arrays must be sorted in descending order. Each lineiof the nextnlines containsmintegers separated by a space, representing thei-th array. For each elementxof the arrayi,1 ≤x≤ 106holds.OutputOn the first line of the output print an integerp, the size of the array (pcan be at most). Each of the nextplines must contain two distinct integersiandj(1 ≤i,j≤m,i≠j), representing the chosen indices.If there are multiple correct answers, you can print any.ExamplesInput2 5 01 3 2 5 41 4 3 2 5Output32 42 34 5Input3 2 11 22 33 4Output12 1NoteConsider the first sample. After the first operation, the arrays become[1, 3, 2, 5, 4]and[1, 2, 3, 4, 5]. After the second operation, the arrays become[1, 2, 3, 5, 4]and[1, 2, 3, 4, 5]. After the third operation they become[1, 2, 3, 4, 5]and[1, 2, 3, 4, 5].", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "1c7ec363", "template_md5": "35d339e4", "result": "You are given $n$ arrays, each with $m$ integers. You can swap elements in the arrays according to the following rule:\n\n* Choose two distinct indices $i$ and $j$ (where $1 \\le i, j \\le m$ and $i \\neq j$).\n* Swap the elements at positions $i$ and $j$ in **all** the arrays **only if** the element at position $i$ is strictly greater than the element at position $j$.\n\nThe goal is to find a sequence of swaps that sorts all the arrays in either ascending or descending order (the desired order is specified in the input).\n\n**Input:**\n\n* The first line contains three integers: $n$, $m$, and $k$.\n* $n$ is the number of arrays.\n* $m$ is the number of integers in each array.\n* $k$ is 0 if the arrays should be sorted in ascending order, and 1 if they should be sorted in descending order.\n* The next $n$ lines each contain $m$ integers, representing the elements of each array.\n\n**Output:**\n\n* The first line should contain an integer $p$, which is the number of swaps you will perform.\n* The next $p$ lines should each contain two integers $i$ and $j$, representing a swap operation."}, {"prompt_md5": "108a70ef", "template_md5": "465699a0", "result": "You are given multiple lists of numbers. You can swap any two numbers within a list if the first number is larger than the second.  Find a sequence of swaps that will sort all the lists in either ascending or descending order (specified in the input).  The number of swaps you make is limited."}]}