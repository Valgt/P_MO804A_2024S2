{"uid": "1896-C", "url": "https://codeforces.com/contest/1896/problem/C", "tags": ["binary search", " constructive algorithms", " greedy", " sortings"], "title": "1896-C", "statement": "C. Matching Arraystime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two arrays $$$a$$$ and $$$b$$$ of size $$$n$$$. Thebeautyof the arrays $$$a$$$ and $$$b$$$ is the number of indices $$$i$$$ such that $$$a_i > b_i$$$.You are also given an integer $$$x$$$. Determine whether it is possible to rearrange the elements of $$$b$$$ such that the beauty of the arrays becomes $$$x$$$. If it is possible, output one valid rearrangement of $$$b$$$.InputEach test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$). The description of the test cases follows.The first line of each test case contains two integers $$$n$$$ and $$$x$$$ ($$$1 \\\\le n \\\\le 2\\\\cdot 10^5$$$, $$$0 \\\\le x \\\\le n$$$) — the size of arrays $$$a$$$ and $$$b$$$ and the desired beauty of the arrays.The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\le a_i \\\\le 2n$$$) — the elements of array $$$a$$$.The third line of each test case contains $$$n$$$ integers $$$b_1, b_2, \\\\ldots, b_n$$$ ($$$1 \\\\le b_i \\\\le 2n$$$) — the elements of array $$$b$$$.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2\\\\cdot 10^5$$$.OutputFor each test case, output \"NO\" if it is not possible to rearrange $$$b$$$ to make the beauty of the arrays equal to $$$x$$$.Otherwise, output \"YES\". Then, on the next line, output $$$n$$$ integers which represent the rearrangement of $$$b$$$.If there are multiple solutions, you may output any of them.You can output \"YES\" and \"NO\" in any case (upper or lower). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive responses.ExampleInput71 0121 1123 02 4 34 1 23 12 4 34 1 23 22 4 34 1 23 32 4 34 1 25 26 4 5 6 29 7 9 1 1OutputYES 2 NO NO YES 2 4 1 YES 4 1 2 NO YES 1 9 9 7 1NoteIn test cases 1 and 2, the beauty of the arrays has to be $$$0$$$ since $$$a_1 = 1 \\\\le 2 = b_1$$$.In test cases 3, 4, 5 and 6, the only possible beauty of the arrays is $$$x = 1$$$ and $$$x = 2$$$. In particular, if $$$b$$$ is rearranged to $$$[2, 4, 1]$$$, then $$$a_3 = 3 > 1 = b_3$$$, so the beauty of the arrays is $$$1$$$. If $$$b$$$ is kept in the same order as given the input, then $$$a_2 = 4 > b_2 = 1$$$ and $$$a_3 = 3 > 2 = b_3$$$, so the beauty of the arrays is $$$2$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "56803994", "template_md5": "35d339e4", "result": "You are given two arrays,  *a* and *b*, both of size *n*. The \"beauty\" of the arrays is the number of indices *i* where *a<sub>i</sub>* is greater than *b<sub>i</sub>*.\n\nYou are also given an integer *x*.  Determine if it's possible to rearrange the elements of array *b* so that the beauty of the arrays becomes *x*. If it's possible, output one valid rearrangement of *b*.\n\n**Input:**\n\n* The first line contains the number of test cases *t*.\n* For each test case:\n    * The first line contains two integers *n* and *x* (1 ≤ *n* ≤ 2 * 10<sup>5</sup>, 0 ≤ *x* ≤ *n*).\n    * The second line contains *n* integers *a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>* (1 ≤ *a<sub>i</sub>* ≤ 2*n*).\n    * The third line contains *n* integers *b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>n</sub>* (1 ≤ *b<sub>i</sub>* ≤ 2*n*).\n\n**Output:**\n\n* For each test case:\n    * Output \"NO\" if it's not possible to rearrange *b* to achieve the desired beauty.\n    * Otherwise, output \"YES\" followed by *n* integers representing a valid rearrangement of *b*."}, {"prompt_md5": "a161be30", "template_md5": "465699a0", "result": "You are given two lists of numbers.  You want to rearrange one of the lists so that the number of positions where the first list's number is bigger than the rearranged list's number is equal to a target number.  Determine if this is possible and, if so, show one way to rearrange the list."}]}