{"uid": "479-A", "url": "https://codeforces.com/contest/479/problem/A", "tags": ["brute force", " math"], "title": "479-A", "statement": "A. Expressiontime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutPetya studies in a school and he adores Maths. His class has been studying arithmetic expressions. On the last class the teacher wrote three positive integersa,b,con the blackboard. The task was to insert signs of operations '+' and '*', and probably brackets between the numbers so that the value of the resulting expression is as large as possible. Let's consider an example: assume that the teacher wrote numbers 1, 2 and 3 on the blackboard. Here are some ways of placing signs and brackets:1+2*3=71*(2+3)=51*2*3=6(1+2)*3=9Note that you can insert operation signs only betweenaandb, and betweenbandc, that is, you cannot swap integers. For instance, in the given sample you cannot get expression (1+3)*2.It's easy to see that the maximum value that you can obtain is 9.Your task is: givena,bandcprint the maximum value that you can get.InputThe input contains three integersa,bandc, each on a single line (1 ≤a,b,c≤ 10).OutputPrint the maximum value of the expression that you can obtain.ExamplesInput123Output9Input2103Output60", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5fdf40f7", "template_md5": "35d339e4", "result": "Given three positive integers $a$, $b$, and $c$ (where $1 \\le a, b, c \\le 10$), find the largest possible value you can get by inserting one '+' and one '*' operator, and possibly parentheses, between the numbers.  You can only insert the operators between $a$ and $b$, and between $b$ and $c$.\n\nFor example:\n\n* If $a = 1$, $b = 2$, and $c = 3$, the largest possible value is 9, achieved with the expression $(1 + 2) * 3$."}, {"prompt_md5": "fc1b6a0d", "template_md5": "465699a0", "result": "Given three positive integers, find the largest possible sum you can create by using only addition and multiplication, and placing parentheses as needed. You can only place operators between the given numbers, not swap their order."}]}