{"uid": "1637-H", "url": "https://codeforces.com/contest/1637/problem/H", "tags": ["data structures", " greedy", " math", " sortings"], "title": "1637-H", "statement": "H. Minimize Inversions Numbertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a permutation $$$p$$$ of length $$$n$$$.You can choose any subsequence, remove it from the permutation, and insert it at the beginning of the permutation keeping the same order.For every $$$k$$$ from $$$0$$$ to $$$n$$$, find the minimal possible number of inversions in the permutation after you choose a subsequence of length exactly $$$k$$$.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 50\\\\,000$$$) — the number of test cases.The first line of each test case contains one integer $$$n$$$ ($$$1 \\\\le n \\\\le 5 \\\\cdot 10^5$$$) — the length of the permutation.The second line of each test case contains the permutation $$$p_1, p_2, \\\\ldots, p_n$$$ ($$$1 \\\\le p_i \\\\le n$$$).It is guaranteed that the total sum of $$$n$$$ doesn't exceed $$$5 \\\\cdot 10^5$$$.OutputFor each test case output $$$n + 1$$$ integers. The $$$i$$$-th of them must be the answer for the subsequence length of $$$i - 1$$$.ExampleInput31144 2 1 355 1 3 2 4Output0 0 4 2 2 1 4 5 4 2 2 1 5NoteIn the second test case:For the length $$$0$$$: $$$[4, 2, 1, 3] \\\\rightarrow [4, 2, 1, 3]$$$: $$$4$$$ inversions.For the length $$$1$$$: $$$[4, 2, \\\\mathbf{1}, 3] \\\\rightarrow [1, 4, 2, 3]$$$: $$$2$$$ inversions.For the length $$$2$$$: $$$[4, \\\\mathbf{2}, \\\\mathbf{1}, 3] \\\\rightarrow [2, 1, 4, 3]$$$, or $$$[4, 2, \\\\mathbf{1}, \\\\textbf{3}] \\\\rightarrow [1, 3, 4, 2]$$$: $$$2$$$ inversions.For the length $$$3$$$: $$$[4, \\\\mathbf{2}, \\\\mathbf{1}, \\\\mathbf{3}] \\\\rightarrow [2, 1, 3, 4]$$$: $$$1$$$ inversion.For the length $$$4$$$: $$$[\\\\mathbf{4}, \\\\mathbf{2}, \\\\mathbf{1}, \\\\mathbf{3}] \\\\rightarrow [4, 2, 1, 3]$$$: $$$4$$$ inversions.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6303cbb3", "template_md5": "35d339e4", "result": "You are given a list of $n$ numbers. You can take any subsequence of length $k$ from the list, remove it, and put it at the beginning of the list while keeping the order of the subsequence the same.  \n\nFor each $k$ from 0 to $n$, find the minimum number of inversions in the list after you make this move.\n\nAn inversion is a pair of numbers in the list where the first number is larger than the second number but they are not in that order. \n\n\n\nInput:\n\n* The first line contains the number of test cases $t$.\n* For each test case:\n    * The first line contains the length of the list $n$.\n    * The second line contains the list of $n$ numbers.\n\nOutput:\n\nFor each test case, output $n+1$ numbers. The $i$-th number is the minimum number of inversions after taking a subsequence of length $i-1$."}, {"prompt_md5": "61b1d9c4", "template_md5": "465699a0", "result": "You are given a list of numbers.  You can take a section of this list, remove it, and put it at the beginning of the list. For each possible section size, find the smallest number of times a smaller number appears after a larger number in the resulting list."}]}