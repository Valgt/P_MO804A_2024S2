{"uid": "1217-E", "url": "https://codeforces.com/contest/1217/problem/E", "tags": ["data structures", " greedy", " implementation", " math"], "title": "1217-E", "statement": "E. Sum Queries?time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's define abalancedmultiset the following way. Write down the sum of all elements of the multiset in its decimal representation. For each position of that number check if the multiset includes at least one element such that the digit of the element and the digit of the sum at that position are the same. If that holds for every position, then the multiset isbalanced. Otherwise it'sunbalanced.For example, multiset $$$\\\\{20, 300, 10001\\\\}$$$ isbalancedand multiset $$$\\\\{20, 310, 10001\\\\}$$$ isunbalanced:The red digits mark the elements and the positions for which these elements have the same digit as the sum. The sum of the first multiset is $$$10321$$$, every position has the digit required. The sum of the second multiset is $$$10331$$$ and the second-to-last digit doesn't appear in any number, thus making the multisetunbalanced.You are given an array $$$a_1, a_2, \\\\dots, a_n$$$, consisting of $$$n$$$ integers.You are asked to perform some queries on it. The queries can be of two types:$$$1~i~x$$$ — replace $$$a_i$$$ with the value $$$x$$$;$$$2~l~r$$$ — find theunbalancedsubset of the multiset of the numbers $$$a_l, a_{l + 1}, \\\\dots, a_r$$$ with the minimum sum, or report that nounbalancedsubset exists.Note that the empty multiset isbalanced.For each query of the second type print the lowest sum of theunbalancedsubset. Print-1if nounbalancedsubset exists.InputThe first line contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\\\le n, m \\\\le 2 \\\\cdot 10^5$$$) — the number of elements in the array and the number of queries, respectively.The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\le a_i < 10^9$$$).Each of the following $$$m$$$ lines contains a query of one of two types:$$$1~i~x$$$ ($$$1 \\\\le i \\\\le n$$$, $$$1 \\\\le x < 10^9$$$) — replace $$$a_i$$$ with the value $$$x$$$;$$$2~l~r$$$ ($$$1 \\\\le l \\\\le r \\\\le n$$$) — find theunbalancedsubset of the multiset of the numbers $$$a_l, a_{l + 1}, \\\\dots, a_r$$$ with the lowest sum, or report that nounbalancedsubset exists.It is guaranteed that there is at least one query of the second type.OutputFor each query of the second type print the lowest sum of theunbalancedsubset. Print-1if nounbalancedsubset exists.ExampleInput4 5 300 10001 20 20 2 1 3 1 1 310 2 1 3 2 3 3 2 3 4Output-1 330 -1 40NoteAll the subsets of multiset $$$\\\\{20, 300, 10001\\\\}$$$ arebalanced, thus the answer is-1.The possibleunbalancedsubsets in the third query are $$$\\\\{20, 310\\\\}$$$ and $$$\\\\{20, 310, 10001\\\\}$$$. The lowest sum one is $$$\\\\{20, 310\\\\}$$$. Note that you are asked to choose a subset, not a subsegment, thus the chosen elements might not be adjancent in the array.The fourth query includes only the empty subset and subset $$$\\\\{20\\\\}$$$. Both of them arebalanced.The last query includes the empty subset and the subsets $$$\\\\{20\\\\}$$$, $$$\\\\{20\\\\}$$$ and $$$\\\\{20, 20\\\\}$$$. Only $$$\\\\{20, 20\\\\}$$$ isunbalanced, its sum is $$$40$$$. Note that you are asked to choose a multiset, thus it might include equal elements.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "1f339a28", "template_md5": "35d339e4", "result": "You are given an array of integers $a_1, a_2, ..., a_n$.  You need to perform queries on this array. There are two types of queries:\n\n* **Type 1:** Replace the element at index $i$ with the value $x$ ($1 \\le i \\le n$, $1 \\le x < 10^9$).\n* **Type 2:** Find the subset of the array from index $l$ to $r$ ($1 \\le l \\le r \\le n$) with the minimum sum that is \"unbalanced\". A subset is unbalanced if the sum of its elements does not have the same digits as the sum of all elements in the subset. If no unbalanced subset exists, report -1.\n\nFor each Type 2 query, print the lowest sum of an unbalanced subset."}, {"prompt_md5": "8b58b3de", "template_md5": "465699a0", "result": "You are given a list of numbers. You can change some of the numbers.  You need to find the smallest sum of a subset of numbers in a given range that does not meet a specific balancing condition. If no such subset exists, output -1. The balancing condition is that the sum of the subset must have the same digits as the subset's numbers."}]}