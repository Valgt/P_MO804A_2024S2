{"uid": "1000-G", "url": "https://codeforces.com/contest/1000/problem/G", "tags": ["data structures", " dp", " trees"], "title": "1000-G", "statement": "G. Two-Pathstime limit per test3.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a weighted tree (undirected connected graph with no cycles, loops or multiple edges) with $$$n$$$ vertices. The edge $$$\\\\{u_j, v_j\\\\}$$$ has weight $$$w_j$$$. Also each vertex $$$i$$$ has its own value $$$a_i$$$ assigned to it.Let's call a path starting in vertex $$$u$$$ and ending in vertex $$$v$$$, where each edge can appear no more than twice (regardless of direction), a2-path. Vertices can appear in the 2-path multiple times (even start and end vertices).For some 2-path $$$p$$$ profit $$$\\\\text{Pr}(p) = \\\\sum\\\\limits_{v \\\\in \\\\text{distinct vertices in } p}{a_v} - \\\\sum\\\\limits_{e \\\\in \\\\text{distinct edges in } p}{k_e \\\\cdot w_e}$$$, where $$$k_e$$$ is the number of times edge $$$e$$$ appears in $$$p$$$. That is, vertices are counted once, but edges are counted the number of times they appear in $$$p$$$.You are about to answer $$$m$$$ queries. Each query is a pair of vertices $$$(qu, qv)$$$. For each query find 2-path $$$p$$$ from $$$qu$$$ to $$$qv$$$ with maximal profit $$$\\\\text{Pr}(p)$$$.InputThe first line contains two integers $$$n$$$ and $$$q$$$ ($$$2 \\\\le n \\\\le 3 \\\\cdot 10^5$$$, $$$1 \\\\le q \\\\le 4 \\\\cdot 10^5$$$) — the number of vertices in the tree and the number of queries.The second line contains $$$n$$$ space-separated integers $$$a_1, a_2, \\\\dots, a_n$$$ $$$(1 \\\\le a_i \\\\le 10^9)$$$ — the values of the vertices.Next $$$n - 1$$$ lines contain descriptions of edges: each line contains three space separated integers $$$u_i$$$, $$$v_i$$$ and $$$w_i$$$ ($$$1 \\\\le u_i, v_i \\\\le n$$$, $$$u_i \\\\neq v_i$$$, $$$1 \\\\le w_i \\\\le 10^9$$$) — there is edge $$$\\\\{u_i, v_i\\\\}$$$ with weight $$$w_i$$$ in the tree.Next $$$q$$$ lines contain queries (one per line). Each query contains two integers $$$qu_i$$$ and $$$qv_i$$$ $$$(1 \\\\le qu_i, qv_i \\\\le n)$$$ — endpoints of the 2-path you need to find.OutputFor each query print one integer per line — maximal profit $$$\\\\text{Pr}(p)$$$ of the some 2-path $$$p$$$ with the corresponding endpoints.ExampleInput7 66 5 5 3 2 1 21 2 22 3 22 4 14 5 16 4 27 3 251 14 45 66 43 43 7Output999812-14NoteExplanation of queries:$$$(1, 1)$$$ — one of the optimal 2-paths is the following: $$$1 \\\\rightarrow 2 \\\\rightarrow 4 \\\\rightarrow 5 \\\\rightarrow 4 \\\\rightarrow 2 \\\\rightarrow 3 \\\\rightarrow 2 \\\\rightarrow 1$$$. $$$\\\\text{Pr}(p) = (a_1 + a_2 + a_3 + a_4 + a_5) - (2 \\\\cdot w(1,2) + 2 \\\\cdot w(2,3) + 2 \\\\cdot w(2,4) + 2 \\\\cdot w(4,5)) = 21 - 2 \\\\cdot 12 = 9$$$.$$$(4, 4)$$$: $$$4 \\\\rightarrow 2 \\\\rightarrow 1 \\\\rightarrow 2 \\\\rightarrow 3 \\\\rightarrow 2 \\\\rightarrow 4$$$. $$$\\\\text{Pr}(p) = (a_1 + a_2 + a_3 + a_4) - 2 \\\\cdot (w(1,2) + w(2,3) + w(2,4)) = 19 - 2 \\\\cdot 10 = 9$$$.$$$(5, 6)$$$: $$$5 \\\\rightarrow 4 \\\\rightarrow 2 \\\\rightarrow 3 \\\\rightarrow 2 \\\\rightarrow 1 \\\\rightarrow 2 \\\\rightarrow 4 \\\\rightarrow 6$$$.$$$(6, 4)$$$: $$$6 \\\\rightarrow 4 \\\\rightarrow 2 \\\\rightarrow 1 \\\\rightarrow 2 \\\\rightarrow 3 \\\\rightarrow 2 \\\\rightarrow 4$$$.$$$(3, 4)$$$: $$$3 \\\\rightarrow 2 \\\\rightarrow 1 \\\\rightarrow 2 \\\\rightarrow 4$$$.$$$(3, 7)$$$: $$$3 \\\\rightarrow 2 \\\\rightarrow 1 \\\\rightarrow 2 \\\\rightarrow 4 \\\\rightarrow 5 \\\\rightarrow 4 \\\\rightarrow 2 \\\\rightarrow 3 \\\\rightarrow 7$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a55fcf2c", "template_md5": "35d339e4", "result": "You are given a tree (a connected graph with no cycles) with $n$ vertices. Each vertex has a value $a_i$ assigned to it. Each edge $(u_j, v_j)$ has a weight $w_j$.\n\nA 2-path is a path starting at vertex $u$ and ending at vertex $v$ where each edge can appear at most twice (regardless of direction). Vertices can appear multiple times in a 2-path.\n\nThe profit of a 2-path $p$ is calculated as:\n\n$$Pr(p) = \\sum_{v \\in \\text{distinct vertices in } p} a_v - \\sum_{e \\in \\text{distinct edges in } p} k_e \\cdot w_e$$\n\nwhere $k_e$ is the number of times edge $e$ appears in $p$.\n\nYou need to answer $q$ queries. Each query is a pair of vertices $(qu, qv)$. For each query, find the 2-path from $qu$ to $qv$ with the maximum profit $Pr(p)$.\n\n\n\nLet me know if you need any further clarification!"}, {"prompt_md5": "5d74db8d", "template_md5": "465699a0", "result": "You are given a tree (a connected graph with no cycles) where each node has a value and each edge has a weight.  You need to find the path between two given nodes that maximizes the profit, where profit is calculated as the sum of node values minus the sum of edge weights (each edge weight is counted based on how many times it appears in the path)."}]}