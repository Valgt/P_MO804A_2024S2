{"uid": "1327-C", "url": "https://codeforces.com/contest/1327/problem/C", "tags": ["constructive algorithms", " implementation"], "title": "1327-C", "statement": "C. Game with Chipstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya has a rectangular Board of size $$$n \\\\times m$$$. Initially, $$$k$$$ chips are placed on the board, $$$i$$$-th chip is located in the cell at the intersection of $$$sx_i$$$-th row and $$$sy_i$$$-th column.In one action, Petya can moveall the chipsto the left, right, down or up by $$$1$$$ cell.If the chip was in the $$$(x, y)$$$ cell, then after the operation:left, its coordinates will be $$$(x, y - 1)$$$;right, its coordinates will be $$$(x, y + 1)$$$;down, its coordinates will be $$$(x + 1, y)$$$;up, its coordinates will be $$$(x - 1, y)$$$.If the chip is located by the wall of the board, and the action chosen by Petya moves it towards the wall, then the chip remains in its current position.Note that several chips can be located in the same cell.For each chip, Petya chose the position which it should visit. Note that it's not necessary for a chip to end up in this position.Since Petya does not have a lot of free time, he is ready to do no more than $$$2nm$$$ actions.You have to find out what actions Petya should do so that each chip visits the position that Petya selected for it at least once. Or determine that it is not possible to do this in $$$2nm$$$ actions.InputThe first line contains three integers $$$n, m, k$$$ ($$$1 \\\\le n, m, k \\\\le 200$$$) — the number of rows and columns of the board and the number of chips, respectively.The next $$$k$$$ lines contains two integers each $$$sx_i, sy_i$$$ ($$$ 1 \\\\le sx_i \\\\le n, 1 \\\\le sy_i \\\\le m$$$) — the starting position of the $$$i$$$-th chip.The next $$$k$$$ lines contains two integers each $$$fx_i, fy_i$$$ ($$$ 1 \\\\le fx_i \\\\le n, 1 \\\\le fy_i \\\\le m$$$) — the position that the $$$i$$$-chip should visit at least once.OutputIn the first line print the number of operations so that each chip visits the position that Petya selected for it at least once.In the second line output the sequence of operations. To indicate operations left, right, down, and up, use the characters $$$L, R, D, U$$$ respectively.If the required sequence does not exist, print-1in the single line.ExamplesInput3 3 2 1 2 2 1 3 3 3 2Output3 DRDInput5 4 3 3 4 3 1 3 3 5 3 1 3 1 4Output9 DDLUUUURR", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "99331319", "template_md5": "35d339e4", "result": "You are given a rectangular board of size $n \\times m$. There are $k$ chips initially placed on the board, the $i$-th chip is located at the cell in the $sx_i$-th row and $sy_i$-th column.\n\nIn one move, you can move all the chips one cell in any of the four directions: left, right, down, or up. If a chip is on the edge of the board and the move would take it off the board, it stays in its current position.\n\nFor each chip, you have a target position ($fx_i$, $fy_i$). You want to find a sequence of moves so that each chip visits its target position at least once. You are allowed to make at most $2nm$ moves.\n\nOutput the minimum number of moves required to achieve this, and the sequence of moves. If it's impossible to achieve this in $2nm$ moves, output -1."}, {"prompt_md5": "809c44b6", "template_md5": "465699a0", "result": "You have a grid and some chips on it. Each chip needs to be moved to a specific target location. You can move chips one cell at a time in four directions (up, down, left, right).  You have a limited number of moves. Find the minimum number of moves needed to get each chip to its target, or determine if it's impossible."}]}