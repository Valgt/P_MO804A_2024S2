{"uid": "1268-C", "url": "https://codeforces.com/contest/1268/problem/C", "tags": ["binary search", " data structures"], "title": "1268-C", "statement": "C. K Integerstime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a permutation $$$p_1, p_2, \\\\ldots, p_n$$$.In one move you can swap two adjacent values.You want to perform a minimum number of moves, such that in the end there will exist a subsegment $$$1,2,\\\\ldots, k$$$, in other words in the end there should be an integer $$$i$$$, $$$1 \\\\leq i \\\\leq n-k+1$$$ such that $$$p_i = 1, p_{i+1} = 2, \\\\ldots, p_{i+k-1}=k$$$.Let $$$f(k)$$$ be the minimum number of moves that you need to make a subsegment with values $$$1,2,\\\\ldots,k$$$ appear in the permutation.You need to find $$$f(1), f(2), \\\\ldots, f(n)$$$.InputThe first line of input contains one integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 200\\\\,000$$$): the number of elements in the permutation.The next line of input contains $$$n$$$ integers $$$p_1, p_2, \\\\ldots, p_n$$$: given permutation ($$$1 \\\\leq p_i \\\\leq n$$$).OutputPrint $$$n$$$ integers, the minimum number of moves that you need to make a subsegment with values $$$1,2,\\\\ldots,k$$$ appear in the permutation, for $$$k=1, 2, \\\\ldots, n$$$.ExamplesInput5 5 4 3 2 1Output0 1 3 6 10Input3 1 2 3Output0 0 0", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0c97b4a5", "template_md5": "35d339e4", "result": "You are given a list of $n$ numbers ($p_1, p_2, ..., p_n$).  You can swap any two adjacent numbers in the list.  \n\nThe goal is to find the minimum number of swaps needed to create a sublist within the original list that contains the numbers 1 through $k$ in order. This sublist can start at any position in the original list.\n\nFor example, if the list is $[5, 4, 3, 2, 1]$ and $k=3$, you would need 3 swaps to create the sublist $[1, 2, 3]$.\n\nYou need to find the minimum number of swaps needed for $k = 1, 2, 3, ..., n$. \n\n\n\nLet me know if you'd like help with the code to solve this problem!"}, {"prompt_md5": "390f0e19", "template_md5": "465699a0", "result": "You are given a list of numbers.  You can swap any two adjacent numbers in the list.  Find the fewest swaps needed to create a sublist where the numbers are in order from 1 to some number k, for each k from 1 to the length of the list."}]}