{"uid": "2000-B", "url": "https://codeforces.com/contest/2000/problem/B", "tags": ["two pointers"], "title": "2000-B", "statement": "B. Seating in a Bustime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn Berland, a bus consists of a row of $$$n$$$ seats numbered from $$$1$$$ to $$$n$$$. Passengers are advised to always board the bus following these rules:If there are no occupied seats in the bus, a passenger can sit in any free seat;Otherwise, a passenger should sit in any free seat that has at least one occupied neighboring seat. In other words, a passenger can sit in a seat with index $$$i$$$ ($$$1 \\\\le i \\\\le n$$$) only if at least one of the seats with indices $$$i-1$$$ or $$$i+1$$$ is occupied.Today, $$$n$$$ passengers boarded the bus. The array $$$a$$$ chronologically records the seat numbers they occupied. That is, $$$a_1$$$ contains the seat number where the first passenger sat, $$$a_2$$$ — the seat number where the second passenger sat, and so on.You know the contents of the array $$$a$$$. Determine whether all passengers followed the recommendations.For example, if $$$n = 5$$$, and $$$a$$$ = [$$$5, 4, 2, 1, 3$$$], then the recommendations were not followed, as the $$$3$$$-rd passenger sat in seat number $$$2$$$, while the neighboring seats with numbers $$$1$$$ and $$$3$$$ were free.InputThe first line of input contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases.The following describes the input test cases.The first line of each test case contains exactly one integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the number of seats in the bus and the number of passengers who boarded the bus.The second line of each test case contains $$$n$$$distinctintegers $$$a_i$$$ ($$$1 \\\\le a_i \\\\le n$$$) — the seats that the passengers occupied in chronological order.It is guaranteed that the sum of $$$n$$$ values across all test cases does not exceed $$$2 \\\\cdot 10^5$$$, and that no passenger sits in an already occupied seat.OutputFor each test case, output on a separate line:\"YES\", if all passengers followed the recommendations;\"NO\" otherwise.You may output the answer in any case (for example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as a positive answer).ExampleInput455 4 2 1 332 3 142 3 1 451 2 3 5 4OutputNO YES YES NONoteThe first test case is explained in the problem statement.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "c83dfb74", "template_md5": "35d339e4", "result": "You are given a bus with $n$ seats numbered from 1 to $n$.  $n$ passengers boarded the bus and sat in seats according to the array $a$, where $a_i$ is the seat number the $i$-th passenger sat in.\n\nPassengers follow these rules:\n\n* If there are no occupied seats, they can sit in any free seat.\n* Otherwise, they must sit in a free seat that has at least one occupied neighboring seat (i.e., a seat with an occupied seat to its left or right).\n\nDetermine if all passengers followed these rules.\n\n**Input:**\n\n* The first line contains $t$ (the number of test cases).\n* For each test case:\n    * The first line contains $n$ (the number of seats and passengers).\n    * The second line contains $n$ distinct integers $a_1, a_2, ..., a_n$.\n\n**Output:**\n\nFor each test case, output \"YES\" if all passengers followed the rules, and \"NO\" otherwise."}, {"prompt_md5": "09092f14", "template_md5": "465699a0", "result": "You are given a list of numbers representing the seats people sat in on a bus.  The rules are that people must sit in a seat next to someone else if there are any available seats next to them.  Determine if everyone followed the rules."}]}