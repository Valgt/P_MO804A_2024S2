{"uid": "1889-B", "url": "https://codeforces.com/contest/1889/problem/B", "tags": ["constructive algorithms", " greedy", " math", " sortings"], "title": "1889-B", "statement": "B. Doremy's Connecting Plantime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputDoremy lives in a country consisting of $$$n$$$ cities numbered from $$$1$$$ to $$$n$$$, with $$$a_i$$$ people living in the $$$i$$$-th city. It can be modeled as an undirected graph with $$$n$$$ nodes.Initially, there are no edges in the graph. Now Doremy wants to make the graphconnected.To do this, she can add an edge between $$$i$$$ and $$$j$$$ if$$$$$$ \\\\sum_{k \\\\in S} a_k \\\\ge i\\\\cdot j \\\\cdot c, $$$$$$where $$$S$$$ is the set of all the nodes that are currently in the same connected component of either $$$i$$$ or $$$j$$$, and $$$c$$$ is a given constant.Can Doremy make the graph connected?Two nodes $$$(i, j)$$$ are in the same connected component if there exists a path from $$$i$$$ to $$$j$$$. A graph is connected if all its nodes are in the same connected component.InputThe input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1\\\\le t\\\\le 10^4$$$) — the number of test cases. The description of the test cases follows.The first line contains two integers $$$n$$$, $$$c$$$ ($$$2\\\\le n\\\\le 2\\\\cdot 10^5$$$, $$$1 \\\\le c \\\\le 10^6$$$) — the number of nodes and the constant.The second line of each test case contains $$$ n $$$ integers $$$ a_1,a_2,\\\\ldots,a_n $$$ ($$$0 \\\\le a_i \\\\le 10^{12}$$$) — the number of people living in the $$$i$$$-th city.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2\\\\cdot 10^5$$$.OutputFor each test case, print \"YES\" (without quotes), if it is possible to make the graph connected, and \"NO\" (without quotes) otherwise.You can print letters in any case (upper or lower).ExampleInput74 100 20 15 102 11 15 10 1 0 4 1995 21 1 3 1 15 55 6 1 10 25 10000001000000000000 1000000000000 1000000000000 1000000000000 10000000000003 10 0 2OutputYes Yes Yes No No Yes NoNoteIn the first test case, Doremy can add edges in the following order:Add $$$(1,2)$$$. This operation is valid because $$$a_1 + a_2 = 20 \\\\ge i\\\\cdot j \\\\cdot c = 20$$$.Add $$$(1,3)$$$. This operation is valid because $$$a_1 + a_2 + a_3 = 35 \\\\ge i \\\\cdot j \\\\cdot c = 30$$$.Add $$$(1,4)$$$. This operation is valid because $$$a_1 + a_2 + a_3 + a_4 = 45 \\\\ge i \\\\cdot j \\\\cdot c = 40$$$.In the second test case, Doremy can add edge $$$(1,2)$$$ because $$$a_1 + a_2 =2 \\\\ge 1 \\\\cdot 2 \\\\cdot 1$$$. After that, the graph is connected.In the third test case, Doremy can add edges in the order $$$(5,4)$$$, $$$(5,3)$$$, $$$(5,2)$$$ and $$$(5,1)$$$.In the fourth test case, Doremy cannot add any edge at all.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "29f6be8b", "template_md5": "35d339e4", "result": "You are given a graph with $n$ nodes, each node representing a city with a population $a_i$. Initially, there are no edges between the cities. You can connect two cities $i$ and $j$ by adding an edge if the sum of the populations of all cities in the same connected component as $i$ or $j$ is greater than or equal to $i \\cdot j \\cdot c$, where $c$ is a constant.\n\nDetermine if it is possible to connect all the cities in the graph."}, {"prompt_md5": "71091177", "template_md5": "465699a0", "result": "You are given a number of cities and the population of each city. You can connect any two cities with a road if the total population of all cities connected by that road is greater than or equal to a given constant times the product of the city numbers.  Determine if it is possible to connect all the cities with roads."}]}