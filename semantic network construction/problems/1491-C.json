{"uid": "1491-C", "url": "https://codeforces.com/contest/1491/problem/C", "tags": ["brute force", " data structures", " dp", " greedy", " implementation"], "title": "1491-C", "statement": "C. Pekora and Trampolinetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a trampoline park with $$$n$$$ trampolines in a line. The $$$i$$$-th of which has strength $$$S_i$$$.Pekora can jump on trampolines in multiple passes. She starts the pass by jumping on any trampoline of her choice.If at the moment Pekora jumps on trampoline $$$i$$$, the trampoline will launch her to position $$$i + S_i$$$, and $$$S_i$$$ will become equal to $$$\\\\max(S_i-1,1)$$$. In other words, $$$S_i$$$ will decrease by $$$1$$$, except of the case $$$S_i=1$$$, when $$$S_i$$$ will remain equal to $$$1$$$.If there is no trampoline in position $$$i + S_i$$$, then this pass is over. Otherwise, Pekora will continue the pass by jumping from the trampoline at position $$$i + S_i$$$ by the same rule as above.Pekora can't stop jumping during the pass until she lands at the position larger than $$$n$$$ (in which there is no trampoline). Poor Pekora!Pekora is a naughty rabbit and wants to ruin the trampoline park by reducing all $$$S_i$$$ to $$$1$$$. What is the minimum number of passes she needs to reduce all $$$S_i$$$ to $$$1$$$?InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 500$$$) — the number of test cases.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 5000$$$) — the number of trampolines.The second line of each test case contains $$$n$$$ integers $$$S_1, S_2, \\\\dots, S_n$$$ ($$$1 \\\\le S_i \\\\le 10^9$$$), where $$$S_i$$$ is the strength of the $$$i$$$-th trampoline.It's guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$5000$$$.OutputFor each test case, output a single integer — the minimum number of passes Pekora needs to do to reduce all $$$S_i$$$ to $$$1$$$.ExampleInput3 7 1 4 2 2 2 2 2 2 2 3 5 1 1 1 1 1Output4 3 0NoteFor the first test case, here is an optimal series of passes Pekora can take. (The bolded numbers are the positions that Pekora jumps into during these passes.)$$$[1,4,\\\\textbf{2},2,\\\\textbf{2},2,\\\\textbf{2}]$$$$$$[1,\\\\textbf{4},1,2,1,\\\\textbf{2},1]$$$$$$[1,\\\\textbf{3},1,2,\\\\textbf{1},\\\\textbf{1},\\\\textbf{1}]$$$$$$[1,\\\\textbf{2},1,\\\\textbf{2},1,\\\\textbf{1},\\\\textbf{1}]$$$For the second test case, the optimal series of passes is show below.$$$[\\\\textbf{2},3]$$$$$$[1,\\\\textbf{3}]$$$$$$[1,\\\\textbf{2}]$$$For the third test case, all $$$S_i$$$ are already equal to $$$1$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ddaf6aee", "template_md5": "35d339e4", "result": "There are $n$ trampolines in a line. Each trampoline has a strength value $S_i$. \n\nA person can jump on a trampoline and be launched to position $i + S_i$. After jumping, the strength of the trampoline decreases by 1, unless it was already 1, in which case it remains 1.\n\nIf the jump lands on a position with no trampoline, the jump ends.\n\nThe person can keep jumping in a single pass until they land on a position with no trampoline.\n\nWhat is the minimum number of jumps needed to reduce the strength of all trampolines to 1?\n\n\nInput:\n\n* The first line contains the number of test cases $t$.\n* For each test case:\n    * The first line contains the number of trampolines $n$.\n    * The second line contains $n$ integers $S_1, S_2, ..., S_n$ representing the strength of each trampoline.\n\nOutput:\n\n* For each test case, output the minimum number of jumps needed."}, {"prompt_md5": "8bb95fd4", "template_md5": "465699a0", "result": "You are given a line of objects with varying strengths. You can jump from one object to another, with the jump distance determined by the strength of the object you jump from.  Each jump reduces the strength of the object by one, except if the strength is already 1.  \n\nYour goal is to find the fewest jumps needed to reduce the strength of all objects to 1."}]}