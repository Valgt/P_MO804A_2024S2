{"uid": "1861-B", "url": "https://codeforces.com/contest/1861/problem/B", "tags": ["constructive algorithms", " dp", " greedy"], "title": "1861-B", "statement": "B. Two Binary Stringstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two strings $$$a$$$ and $$$b$$$ of equal length, consisting of only characters0and/or1; both strings start with character0and end with character1.You can perform the following operation any number of times (possibly zero):choose one of the strings and twoequalcharacters in it; then turn all characters between them into those characters.Formally, you choose one of these two strings (let the chosen string be $$$s$$$), then pick two integers $$$l$$$ and $$$r$$$ such that $$$1 \\\\le l < r \\\\le |s|$$$ and $$$s_l = s_r$$$, then replace every character $$$s_i$$$ such that $$$l < i < r$$$ with $$$s_l$$$.For example, if the chosen string is010101, you can transform it into one of the following strings by applying one operation:000101if you choose $$$l = 1$$$ and $$$r = 3$$$;000001if you choose $$$l = 1$$$ and $$$r = 5$$$;010001if you choose $$$l = 3$$$ and $$$r = 5$$$;010111if you choose $$$l = 4$$$ and $$$r = 6$$$;011111if you choose $$$l = 2$$$ and $$$r = 6$$$;011101if you choose $$$l = 2$$$ and $$$r = 4$$$.You have to determine if it's possible to make the given strings equal by applying this operation any number of times.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 2000$$$)  — the number of test cases.Each test case consists of two lines:the first line contains the string $$$a$$$ ($$$2 \\\\le |a| \\\\le 5000$$$), consisting of only characters0and/or1.the second line contains the string $$$b$$$ ($$$2 \\\\le |b| \\\\le 5000$$$), consisting of only characters0and/or1.Additional constraints on the input:in each test case, $$$|a| = |b|$$$ (the strings have equal length);in each test case, both strings start with0and end with1;the total length of all strings $$$a$$$ in all test cases does not exceed $$$5000$$$.OutputFor each test case, printYESif it is possible to make the strings equal. Otherwise, printNO. You can print each letter in any register.ExampleInput7010100010111010101001010010001010101110000101111011001001001011011010001011011OutputYES YES YES NO NO NO YESNoteIn the first test case, we can perform the following operations:choose the string $$$a$$$, $$$l = 2$$$, $$$r = 4$$$; after this operation, $$$a$$$ is01110001, $$$b$$$ is01110101;choose the string $$$b$$$, $$$l = 5$$$, $$$r = 7$$$; after this operation, $$$a$$$ is01110001, $$$b$$$ is01110001.In the second test case, the strings are already equal.In the third test case, we can perform the following operations:choose the string $$$a$$$, $$$l = 4$$$, $$$r = 6$$$; after this operation, $$$a$$$ is000111, $$$b$$$ is010111;choose the string $$$b$$$, $$$l = 1$$$, $$$r = 3$$$; after this operation, $$$a$$$ is000111, $$$b$$$ is000111;In the fourth and fifth test cases, it's impossible to make the given strings equal.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5e9f9fa2", "template_md5": "35d339e4", "result": "You are given two equal-length binary strings,  $a$ and $b$, that both start with 0 and end with 1. You can perform the following operation any number of times:\n\n1. Choose one of the strings.\n2. Select two equal characters within the string.\n3. Replace all characters between those two characters with the chosen character.\n\nDetermine if it's possible to make the two strings equal by performing this operation.\n\n**Input:**\n\n* The first line contains the number of test cases, $t$.\n* Each test case consists of two lines:\n    * The first line contains string $a$.\n    * The second line contains string $b$.\n\n**Output:**\n\nFor each test case, print \"YES\" if the strings can be made equal, and \"NO\" otherwise."}, {"prompt_md5": "e502d3db", "template_md5": "465699a0", "result": "You are given two equal-length strings of 0s and 1s that both start with 0 and end with 1. You can change any section of a string to be the same by choosing two matching characters within that section.  Determine if you can make the two strings identical using this operation."}]}