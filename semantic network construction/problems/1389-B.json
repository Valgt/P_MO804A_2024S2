{"uid": "1389-B", "url": "https://codeforces.com/contest/1389/problem/B", "tags": ["brute force", " dp", " greedy"], "title": "1389-B", "statement": "B. Array Walktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array $$$a_1, a_2, \\\\dots, a_n$$$, consisting of $$$n$$$positiveintegers.Initially you are standing at index $$$1$$$ and have a score equal to $$$a_1$$$. You can perform two kinds of moves:move right — go from your current index $$$x$$$ to $$$x+1$$$ and add $$$a_{x+1}$$$ to your score. This move can only be performed if $$$x<n$$$.move left — go from your current index $$$x$$$ to $$$x-1$$$ and add $$$a_{x-1}$$$ to your score. This move can only be performed if $$$x>1$$$.Also, you can't perform two or more moves to the left in a row.You want to performexactly$$$k$$$ moves. Also, there should be no more than $$$z$$$ moves to the left among them.What is the maximum score you can achieve?InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of testcases.The first line of each testcase contains three integers $$$n, k$$$ and $$$z$$$ ($$$2 \\\\le n \\\\le 10^5$$$, $$$1 \\\\le k \\\\le n - 1$$$, $$$0 \\\\le z \\\\le min(5, k)$$$) — the number of elements in the array, the total number of moves you should perform and the maximum number of moves to the left you can perform.The second line of each testcase contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\le a_i \\\\le 10^4$$$) — the given array.The sum of $$$n$$$ over all testcases does not exceed $$$3 \\\\cdot 10^5$$$.OutputPrint $$$t$$$ integers — for each testcase output the maximum score you can achieve if you make exactly $$$k$$$ moves in total, no more than $$$z$$$ of them are to the left and there are no two or more moves to the left in a row.ExampleInput4 5 4 0 1 5 4 3 2 5 4 1 1 5 4 3 2 5 4 4 10 20 30 40 50 10 7 3 4 6 8 2 9 9 7 4 10 9Output15 19 150 56NoteIn the first testcase you are not allowed to move left at all. So you make four moves to the right and obtain the score $$$a_1 + a_2 + a_3 + a_4 + a_5$$$.In the second example you can move one time to the left. So we can follow these moves: right, right, left, right. The score will be $$$a_1 + a_2 + a_3 + a_2 + a_3$$$.In the third example you can move four times to the left but it's not optimal anyway, you can just move four times to the right and obtain the score $$$a_1 + a_2 + a_3 + a_4 + a_5$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a32e5209", "template_md5": "35d339e4", "result": "You are given an array of positive integers. You start at the first element of the array with a score equal to that element. You can make moves to the right or left, but with some restrictions:\n\n* **Right move:** Move to the next element in the array and add its value to your score. You can only do this if you are not at the last element.\n* **Left move:** Move to the previous element in the array and add its value to your score. You can only do this if you are not at the first element.\n* You cannot make two or more left moves in a row.\n\nYou need to make exactly $k$ moves in total, with no more than $z$ of them being left moves. What is the maximum score you can achieve?\n\n**Input:**\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains three integers: $n$ (the number of elements in the array), $k$ (the number of moves), and $z$ (the maximum number of left moves).\n    * The second line contains $n$ integers, representing the elements of the array.\n\n**Output:**\n\nFor each test case, print the maximum score you can achieve."}, {"prompt_md5": "3544863e", "template_md5": "465699a0", "result": "You have a list of numbers. You start at the beginning of the list and can move either right or left.  Each move adds the value of the number at your new position to your score. You can only move right if you are not at the end of the list, and you can only move left if you are not at the beginning. You can't move left twice in a row.  You must make a specific number of moves total, and no more than a certain number of those moves can be left. What is the highest score you can achieve?"}]}