{"uid": "343-D", "url": "https://codeforces.com/contest/343/problem/D", "tags": ["data structures", " dfs and similar", " graphs", " trees"], "title": "343-D", "statement": "D. Water Treetime limit per test4 secondsmemory limit per test256 megabytesinputstdinoutputstdoutMad scientist Mike has constructed a rooted tree, which consists ofnvertices. Each vertex is a reservoir which can be either empty or filled with water.The vertices of the tree are numbered from 1 tonwith the root at vertex 1. For each vertex, the reservoirs of its children are located below the reservoir of this vertex, and the vertex is connected with each of the children by a pipe through which water can flow downwards.Mike wants to do the following operations with the tree:Fill vertexvwith water. Thenvand all its children are filled with water.Empty vertexv. Thenvand all its ancestors are emptied.Determine whether vertexvis filled with water at the moment.Initially all vertices of the tree are empty.Mike has already compiled a full list of operations that he wants to perform in order. Before experimenting with the tree Mike decided to run the list through a simulation. Help Mike determine what results will he get after performing all the operations.InputThe first line of the input contains an integern(1 ≤n≤ 500000) — the number of vertices in the tree. Each of the followingn- 1lines contains two space-separated numbersai,bi(1 ≤ai,bi≤n,ai≠bi) — the edges of the tree.The next line contains a numberq(1 ≤q≤ 500000) — the number of operations to perform. Each of the followingqlines contains two space-separated numbersci(1 ≤ci≤ 3),vi(1 ≤vi≤n), whereciis the operation type (according to the numbering given in the statement), andviis the vertex on which the operation is performed.It is guaranteed that the given graph is a tree.OutputFor each type 3 operation print 1 on a separate line if the vertex is full, and 0 if the vertex is empty. Print the answers to queries in the order in which the queries are given in the input.ExamplesInput51 25 12 34 2121 12 33 13 23 33 41 22 43 13 33 43 5Output00010101", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5f13f1ee", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices, numbered from 1 to $n$. Each vertex represents a reservoir that can hold water.  \n\nThere are two types of operations:\n\n1. **Fill vertex $v$:** Fill vertex $v$ with water, and all its descendant vertices with water.\n2. **Empty vertex $v$:** Empty vertex $v$, and all its ancestor vertices.\n\nYou are given a list of operations to perform. Determine the state (filled or empty) of each vertex after all operations are completed.\n\n**Input:**\n\n* The first line contains an integer $n$ (the number of vertices).\n* The next $n-1$ lines each contain two integers $a_i$ and $b_i$ representing an edge between vertices $a_i$ and $b_i$.\n* The next line contains an integer $q$ (the number of operations).\n* The next $q$ lines each contain three integers $c_i$, $v_i$ representing an operation:\n    * If $c_i = 1$, perform \"Fill vertex $v_i$\".\n    * If $c_i = 2$, perform \"Empty vertex $v_i$\".\n    * If $c_i = 3$, check if vertex $v_i$ is filled.\n\n**Output:**\n\nFor each operation of type 3, print 1 if the vertex is filled, and 0 if it is empty."}, {"prompt_md5": "c2b45878", "template_md5": "465699a0", "result": "You are given a tree-like structure with nodes. Each node can be either full or empty. You are given a list of operations:\n\n* Fill a node and all its descendants.\n* Empty a node and all its ancestors.\n* Check if a node is full.\n\nDetermine the state (full or empty) of each node after all operations are performed."}]}