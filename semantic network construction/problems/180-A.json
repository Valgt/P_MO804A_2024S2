{"uid": "180-A", "url": "https://codeforces.com/contest/180/problem/A", "tags": ["implementation"], "title": "180-A", "statement": "A. Defragmentationtime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutIn this problem you have to implement an algorithm to defragment your hard disk. The hard disk consists of a sequence of clusters, numbered by integers from1ton. The disk hasmrecorded files, thei-th file occupies clusters with numbersai, 1,ai, 2, ...,ai,ni. These clusters are not necessarily located consecutively on the disk, but the order in which they are given corresponds to their sequence in the file (clusterai, 1contains the first fragment of thei-th file, clusterai, 2has the second fragment, etc.). Also the disc must have one or several clusters which are free from files.You are permitted to perform operations of copying the contents of cluster numberito cluster numberj(iandjmust be different). Moreover, if the cluster numberjused to keep some information, it is lost forever. Clusters are not cleaned, but after the defragmentation is complete, some of them are simply declared unusable (although they may possibly still contain some fragments of files).Your task is to use a sequence of copy operations to ensure that each file occupies a contiguous area of memory. Each file should occupy a consecutive cluster section, the files must follow one after another from the beginning of the hard disk. After defragmentation all free (unused) clusters should be at the end of the hard disk. After defragmenting files can be placed in an arbitrary order. Clusters of each file should go consecutively from first to last. See explanatory examples in the notes.Print the sequence of operations leading to the disk defragmentation. Note thatyou do not have to minimizethe number of operations, but it should not exceed2n.InputThe first line contains two integersnandm(1 ≤n,m≤ 200) — the number of clusters and the number of files, correspondingly. Nextmlines contain descriptions of the files. The first number in the line isni(ni≥ 1), the number of clusters occupied by thei-th file. Then followninumbersai, 1,ai, 2, ...,ai,ni(1 ≤ai,j≤n). It is guaranteed that each cluster number occurs not more than once and, that is, there exists at least one unused cluster. Numbers on each line are separated by spaces.OutputIn the first line print a single integerk(0 ≤k≤ 2n) — the number of operations needed to defragment the disk. Nextklines should contain the operations' descriptions as \"ij\" (copy the contents of the cluster numberito the cluster numberj).ExamplesInput7 22 1 23 3 4 5Output0Input7 22 1 33 2 4 5Output32 63 26 3NoteLet's say that a disk consists of8clusters and contains two files. The first file occupies two clusters and the second file occupies three clusters. Let's look at examples of correct and incorrect positions of files after defragmentation.Example 2: each file must occupy a contiguous area of memory.Example 3: the order of files to each other is not important, at first the second file can be written, and then — the first one.Example 4: violating the order of file fragments to each other is not allowed.Example 5: unused clusters should be located at the end, and in this example the unused clusters are3,7,8.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "37d31b24", "template_md5": "35d339e4", "result": "You are given a hard disk with $n$ clusters numbered from 1 to $n$. There are $m$ files, the $i$-th file occupies clusters numbered $a_{i,1}, a_{i,2}, ..., a_{i,n_i}$.  \n\nYour task is to rearrange the files so that each file occupies a contiguous set of clusters, and all unused clusters are at the end of the disk. You can do this by copying the contents of one cluster to another.  \n\nOutput the number of operations needed and a list of operations, where each operation is a pair of integers $(i,j)$ representing a copy from cluster $i$ to cluster $j$. \n\n**Input:**\n\n* The first line contains two integers $n$ and $m$.\n* The next $m$ lines describe the files. Each line starts with an integer $n_i$ (the number of clusters in the file) followed by $n_i$ integers $a_{i,1}, a_{i,2}, ..., a_{i,n_i}$.\n\n**Output:**\n\n* The first line contains an integer $k$ (the number of operations).\n* The next $k$ lines each contain a pair of integers $(i,j)$ representing a copy operation."}, {"prompt_md5": "b703bf94", "template_md5": "465699a0", "result": "You are given a set of items and a limited number of containers. Each item has a size and can only fit in one container.  You need to arrange the items in the containers so that no container is overfilled and all items are placed.  Output the sequence of moves needed to achieve this arrangement."}]}