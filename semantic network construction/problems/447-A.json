{"uid": "447-A", "url": "https://codeforces.com/contest/447/problem/A", "tags": ["implementation"], "title": "447-A", "statement": "A. DZY Loves Hashtime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutDZY has a hash table withpbuckets, numbered from0top- 1. He wants to insertnnumbers, in the order they are given, into the hash table. For thei-th numberxi, DZY will put it into the bucket numberedh(xi), whereh(x)is the hash function. In this problem we will assume, thath(x) =xmodp. Operationamodbdenotes taking a remainder after divisionabyb.However, each bucket can contain no more than one element. If DZY wants to insert an number into a bucket which is already filled, we say a \"conflict\" happens. Suppose the first conflict happens right after thei-th insertion, you should outputi. If no conflict happens, just output-1.InputThe first line contains two integers,pandn(2 ≤p,n≤ 300). Thennlines follow. Thei-th of them contains an integerxi(0 ≤xi≤ 109).OutputOutput a single integer — the answer to the problem.ExamplesInput10 5021534153Output4Input5 501234Output-1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "37ec1a9e", "template_md5": "35d339e4", "result": "You are given a hash table with $p$ buckets, numbered from 0 to $p-1$. You will insert $n$ numbers into the hash table. The $i$-th number is $x_i$.  \n\nThe hash function is $h(x) = x \\mod p$. This means that the $i$-th number will be placed in bucket number $h(x_i)$.\n\nEach bucket can hold only one number. If you try to insert a number into a bucket that is already full, this is called a \"conflict\".\n\nFind the index of the first number that causes a conflict when inserted into the hash table. If no conflicts occur, output -1. \n\n**Input:**\n\n* The first line contains two integers, $p$ and $n$ (2 ≤ $p$, $n$ ≤ 300).\n* The next $n$ lines each contain an integer $x_i$ (0 ≤ $x_i$ ≤ 10⁹).\n\n**Output:**\n\n* Output a single integer - the index of the first number that causes a conflict. If no conflicts occur, output -1."}, {"prompt_md5": "3ee78fae", "template_md5": "465699a0", "result": "You are given a table with a fixed number of slots. You also have a list of numbers.  Each number is placed into a specific slot based on its remainder when divided by a given number. If a slot is already occupied, a conflict occurs. Find the index of the first number that causes a conflict. If no conflicts occur, output -1."}]}