{"uid": "59-D", "url": "https://codeforces.com/contest/59/problem/D", "tags": ["constructive algorithms", " greedy", " implementation"], "title": "59-D", "statement": "D. Team Arrangementtime limit per test3 secondsmemory limit per test256 megabytesinputstdinoutputstdoutRecently personal training sessions have finished in the Berland State University Olympiad Programmer Training Centre. By the results of these training sessions teams are composed for the oncoming team contest season. Each team consists of three people. All the students of the Centre possess numbers from1to3n, and all the teams possess numbers from1ton. The splitting of students into teams is performed in the following manner: while there are people who are not part of a team, a person with the best total score is chosen among them (the captain of a new team), this person chooses for himself two teammates from those who is left according to his list of priorities. The list of every person's priorities is represented as a permutation fromthe rest of3n- 1students who attend the centre, besides himself.You are given the results of personal training sessions which are a permutation of numbers from1to3n, where thei-th number is the number of student who has won thei-th place. No two students share a place. You are also given the arrangement of the already formed teams in the order in which they has been created. Your task is to determine the list of priorities for the student numberk. If there are several priority lists, choose the lexicographically minimal one.InputThe first line contains an integern(1 ≤n≤ 105) which is the number of resulting teams. The second line contains3nspace-separated integers from1to3nwhich are the results of personal training sessions. It is guaranteed that every student appears in the results exactly once.Then follownlines each containing three integers from1to3n— each line describes the members of a given team. The members of one team can be listed in any order, but the teams themselves are listed in the order in which they were created. It is guaranteed that the arrangement is correct, that is that every student is a member of exactly one team and those teams could really be created from the given results using the method described above.The last line contains numberk(1 ≤k≤ 3n) which is the number of a student for who the list of priorities should be found.OutputPrint3n- 1numbers — the lexicographically smallest list of priorities for the student numberk.The lexicographical comparison is performed by the standard < operator in modern programming languages. The listais lexicographically less that the listbif exists such ani(1 ≤i≤ 3n), thatai<bi, and for anyj(1 ≤j<i)aj=bj. Note, that the list1 9 10is lexicographically less than the list1 10 9. That is, the comparison of lists is different from the comparison of lines.ExamplesInput35 4 1 2 6 3 7 8 95 6 29 3 41 7 84Output2 3 5 6 9 1 7 8Input35 4 1 2 6 3 7 8 95 6 29 3 41 7 88Output1 2 3 4 5 6 7 9Input24 1 3 2 5 64 6 51 2 34Output5 6 1 2 3", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "688c1f1a", "template_md5": "35d339e4", "result": "You are given a list of $3n$ students ranked by their performance in a competition.  Each student has a list of priorities for choosing teammates. Teams of 3 students are formed one at a time, with the highest-ranked student choosing two teammates from the remaining students according to their priority list.\n\nYou are given the ranking of the students and the order in which the teams were formed. Your task is to determine the priority list for a specific student, $k$.  If there are multiple possible priority lists, output the lexicographically smallest one.\n\n**Input:**\n\n* The first line contains an integer $n$ (1 ≤ $n$ ≤ 10⁵), the number of teams.\n* The second line contains $3n$ space-separated integers from 1 to $3n$, representing the ranking of the students.\n* The following lines each contain three integers from 1 to $3n$, representing the members of each team.\n* The last line contains the number $k$ (1 ≤ $k$ ≤ $3n$) of the student whose priority list you need to find.\n\n**Output:**\n\nPrint $3n-1$ numbers, representing the lexicographically smallest priority list for student $k$."}, {"prompt_md5": "0c732fee", "template_md5": "465699a0", "result": "You are given a list of rankings for a competition and a list of teams formed from those rankings.  You need to determine the order of preference for a specific person, given the rules of how teams were formed."}]}