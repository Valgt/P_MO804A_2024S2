{"uid": "949-B", "url": "https://codeforces.com/contest/949/problem/B", "tags": ["constructive algorithms", " math"], "title": "949-B", "statement": "B. A Leapfrog in the Arraytime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputDima is a beginner programmer. During his working process, he regularly has to repeat the following operation again and again: to remove every second element from the array. One day he has been bored with easy solutions of this problem, and he has come up with the following extravagant algorithm.Let's consider that initially array containsnnumbers from1tonand the numberiis located in the cell with the index2i- 1(Indices are numbered starting from one) and other cells of the array are empty. Each step Dima selects a non-empty array cell with the maximum index and moves the number written in it to the nearest empty cell to the left of the selected one. The process continues until allnnumbers will appear in the firstncells of the array. For example ifn= 4, the array is changing as follows:You have to write a program that allows you to determine what number will be in the cell with indexx(1 ≤x≤n) after Dima's algorithm finishes.InputThe first line contains two integersnandq(1 ≤n≤ 1018,1 ≤q≤ 200 000), the number of elements in the array and the number of queries for which it is needed to find the answer.Nextqlines contain integersxi(1 ≤xi≤n), the indices of cells for which it is necessary to output their content after Dima's algorithm finishes.OutputFor each ofqqueries output one integer number, the value that will appear in the corresponding array cell after Dima's algorithm finishes.ExamplesInput4 3234Output324Input13 410548Output13389NoteThe first example is shown in the picture.In the second example the final array is[1, 12, 2, 8, 3, 11, 4, 9, 5, 13, 6, 10, 7].", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "05a07cd2", "template_md5": "35d339e4", "result": "You are given an array of size $n$ with numbers from $1$ to $n$. Each number is initially placed in a specific cell of the array. The cell index of the $i$-th number is $2i-1$.\n\nThe algorithm works as follows:\n\n1. Find the cell with the maximum index that is not empty.\n2. Move the number in that cell to the nearest empty cell to its left.\n3. Repeat steps 1 and 2 until all $n$ numbers are in the first $n$ cells of the array.\n\nGiven $q$ queries, each query asks for the value in a specific cell index $x$ after the algorithm finishes.\n\n**Input:**\n\n* The first line contains two integers $n$ and $q$ ($1 \\le n \\le 10^{18}$, $1 \\le q \\le 200000$).\n* The next line contains $q$ integers $x_i$ ($1 \\le x_i \\le n$), representing the cell indices for the queries.\n\n**Output:**\n\n* For each query, output the value that will be in the cell with index $x_i$ after the algorithm finishes."}, {"prompt_md5": "44c94b24", "template_md5": "465699a0", "result": "You are given a sequence of numbers.  You repeatedly move the last non-empty element to the leftmost empty position.  Find the value in a specific position after this process is complete."}]}