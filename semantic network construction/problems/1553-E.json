{"uid": "1553-E", "url": "https://codeforces.com/contest/1553/problem/E", "tags": ["brute force", " combinatorics", " constructive algorithms", " dfs and similar", " dsu", " graphs", " math"], "title": "1553-E", "statement": "E. Permutation Shifttime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAn identity permutation of length $$$n$$$ is an array $$$[1, 2, 3, \\\\dots, n]$$$.We performed the following operations to an identity permutation of length $$$n$$$:firstly, we cyclically shifted it to the right by $$$k$$$ positions, where $$$k$$$ is unknown to you (the only thing you know is that $$$0 \\\\le k \\\\le n - 1$$$). When an array is cyclically shifted to the right by $$$k$$$ positions, the resulting array is formed by taking $$$k$$$ last elements of the original array (without changing their relative order), and then appending $$$n - k$$$ first elements to the right of them (without changing relative order of the first $$$n - k$$$ elements as well). For example, if we cyclically shift the identity permutation of length $$$6$$$ by $$$2$$$ positions, we get the array $$$[5, 6, 1, 2, 3, 4]$$$;secondly, we performed the following operationat most$$$m$$$ times: pick any two elements of the array and swap them.You are given the values of $$$n$$$ and $$$m$$$, and the resulting array. Your task is to find all possible values of $$$k$$$ in the cyclic shift operation.InputThe first line contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^5$$$) — the number of test cases.Each test case consists of two lines. The first line contains two integers $$$n$$$ and $$$m$$$ ($$$3 \\\\le n \\\\le 3 \\\\cdot 10^5$$$; $$$0 \\\\le m \\\\le \\\\frac{n}{3}$$$).The second line contains $$$n$$$ integers $$$p_1, p_2, \\\\dots, p_n$$$ ($$$1 \\\\le p_i \\\\le n$$$, each integer from $$$1$$$ to $$$n$$$ appears in this sequence exactly once) — the resulting array.The sum of $$$n$$$ over all test cases does not exceed $$$3 \\\\cdot 10^5$$$.OutputFor each test case, print the answer in the following way:firstly, print one integer $$$r$$$ ($$$0 \\\\le r \\\\le n$$$) — the number of possible values of $$$k$$$ for the cyclic shift operation;secondly, print $$$r$$$ integers $$$k_1, k_2, \\\\dots, k_r$$$ ($$$0 \\\\le k_i \\\\le n - 1$$$) — all possible values of $$$k$$$in increasing order.ExampleInput4 4 1 2 3 1 4 3 1 1 2 3 3 1 3 2 1 6 0 1 2 3 4 6 5Output1 3 1 0 3 0 1 2 0NoteConsider the example:in the first test case, the only possible value for the cyclic shift is $$$3$$$. If we shift $$$[1, 2, 3, 4]$$$ by $$$3$$$ positions, we get $$$[2, 3, 4, 1]$$$. Then we can swap the $$$3$$$-rd and the $$$4$$$-th elements to get the array $$$[2, 3, 1, 4]$$$;in the second test case, the only possible value for the cyclic shift is $$$0$$$. If we shift $$$[1, 2, 3]$$$ by $$$0$$$ positions, we get $$$[1, 2, 3]$$$. Then we don't change the array at all (we stated that we madeat most$$$1$$$ swap), so the resulting array stays $$$[1, 2, 3]$$$;in the third test case, all values from $$$0$$$ to $$$2$$$ are possible for the cyclic shift:if we shift $$$[1, 2, 3]$$$ by $$$0$$$ positions, we get $$$[1, 2, 3]$$$. Then we can swap the $$$1$$$-st and the $$$3$$$-rd elements to get $$$[3, 2, 1]$$$;if we shift $$$[1, 2, 3]$$$ by $$$1$$$ position, we get $$$[3, 1, 2]$$$. Then we can swap the $$$2$$$-nd and the $$$3$$$-rd elements to get $$$[3, 2, 1]$$$;if we shift $$$[1, 2, 3]$$$ by $$$2$$$ positions, we get $$$[2, 3, 1]$$$. Then we can swap the $$$1$$$-st and the $$$2$$$-nd elements to get $$$[3, 2, 1]$$$;in the fourth test case, we stated that we didn't do any swaps after the cyclic shift, but no value of cyclic shift could produce the array $$$[1, 2, 3, 4, 6, 5]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "61e67e72", "template_md5": "35d339e4", "result": "You are given an array of $n$ integers. This array was originally an identity permutation (1, 2, 3, ..., n) but was modified in two steps:\n\n1. **Cyclic Shift:** The array was shifted to the right by some unknown number of positions, $k$ (where $0 \\le k \\le n-1$).\n\n2. **Swaps:** At most $m$ swaps were made between elements of the array.\n\nYour task is to find all possible values of $k$ that could have been used in the cyclic shift. \n\n**Input:**\n\n* $t$: The number of test cases.\n* For each test case:\n    * $n$: The length of the array.\n    * $m$: The maximum number of swaps made.\n    * $p_1, p_2, ..., p_n$: The resulting array.\n\n**Output:**\n\n* For each test case:\n    * $r$: The number of possible values of $k$.\n    * $k_1, k_2, ..., k_r$: All possible values of $k$ in increasing order."}, {"prompt_md5": "615a5147", "template_md5": "465699a0", "result": "You are given a shuffled list of numbers. You know the list was originally in order and then shifted to the right by some unknown number of positions. You also know that some swaps were made after the shift.  Find all the possible numbers of positions the list could have been shifted."}]}