{"uid": "1883-D", "url": "https://codeforces.com/contest/1883/problem/D", "tags": ["data structures", " greedy"], "title": "1883-D", "statement": "D. In Lovetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputInitially, you have an empty multiset of segments. You need to process $$$q$$$ operations of two types:$$$+$$$ $$$l$$$ $$$r$$$ — Add the segment $$$(l, r)$$$ to the multiset,$$$-$$$ $$$l$$$ $$$r$$$ — Removeexactlyone segment $$$(l, r)$$$ from the multiset. It is guaranteed that this segment exists in the multiset.After each operation, you need to determine if there exists a pair of segments in the multiset that do not intersect. A pair of segments $$$(l, r)$$$ and $$$(a, b)$$$ do not intersect if there does not exist a point $$$x$$$ such that $$$l \\\\leq x \\\\leq r$$$ and $$$a \\\\leq x \\\\leq b$$$.InputThe first line of each test case contains an integer $$$q$$$ ($$$1 \\\\leq q \\\\leq 10^5$$$) — the number of operations.The next $$$q$$$ lines describe two types of operations. If it is an addition operation, it is given in the format $$$+$$$ $$$l$$$ $$$r$$$. If it is a deletion operation, it is given in the format $$$-$$$ $$$l$$$ $$$r$$$ ($$$1 \\\\leq l \\\\leq r \\\\leq 10^9$$$).OutputAfter each operation, print \"YES\" if there exists a pair of segments in the multiset that do not intersect, and \"NO\" otherwise.You can print the answer in any case (uppercase or lowercase). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive answers.ExampleInput12+ 1 2+ 3 4+ 2 3+ 2 2+ 3 4- 3 4- 3 4- 1 2+ 3 4- 2 2- 2 3- 3 4OutputNO YES YES YES YES YES NO NO YES NO NO NONoteIn the example, after the second, third, fourth, and fifth operations, there exists a pair of segments $$$(1, 2)$$$ and $$$(3, 4)$$$ that do not intersect.Then we remove exactly one segment $$$(3, 4)$$$, and by that time we had two segments. Therefore, the answer after this operation also exists.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "9964f6dd", "template_md5": "35d339e4", "result": "You are given a set of segments. You can perform two types of operations:\n\n1. **Add a segment:** Add a new segment  $(l, r)$ to the set.\n2. **Remove a segment:** Remove one existing segment $(l, r)$ from the set.\n\nAfter each operation, determine if there are two segments in the set that do not overlap. Two segments $(l, r)$ and $(a, b)$ do not overlap if there is no number $x$ such that $l \\le x \\le r$ and $a \\le x \\le b$.\n\n**Input:**\n\n* The first line contains an integer $q$ (the number of operations).\n* The next $q$ lines describe the operations. Each line is in one of the following formats:\n    * `+ l r`: Add the segment $(l, r)$.\n    * `- l r`: Remove the segment $(l, r)$.\n\n**Output:**\n\nAfter each operation, print \"YES\" if there are non-overlapping segments, and \"NO\" otherwise."}, {"prompt_md5": "0b372a7b", "template_md5": "465699a0", "result": "You are given a list of intervals. You can add or remove intervals from the list. After each change, determine if there are two intervals in the list that don't overlap."}]}