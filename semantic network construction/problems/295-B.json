{"uid": "295-B", "url": "https://codeforces.com/contest/295/problem/B", "tags": ["dp", " graphs", " shortest paths"], "title": "295-B", "statement": "B. Greg and Graphtime limit per test3 secondsmemory limit per test256 megabytesinputstdinoutputstdoutGreg has a weighed directed graph, consisting ofnvertices. In this graph any pair of distinct vertices has an edge between them in both directions. Greg loves playing with the graph and now he has invented a new game:The game consists ofnsteps.On thei-th step Greg removes vertex numberxifrom the graph. As Greg removes a vertex, he also removes all the edges that go in and out of this vertex.Before executing each step, Greg wants to know the sum of lengths of the shortest paths between all pairs of the remaining vertices. The shortest path can go through any remaining vertex. In other words, if we assume thatd(i,v,u)is the shortest path between verticesvanduin the graph that formed before deleting vertexxi, then Greg wants to know the value of the following sum:.Help Greg, print the value of the required sum before each step.InputThe first line contains integern(1 ≤n≤ 500)— the number of vertices in the graph.Nextnlines containnintegers each — the graph adjacency matrix: thej-th number in thei-th lineaij(1 ≤aij≤ 105,aii= 0)represents the weight of the edge that goes from vertexito vertexj.The next line containsndistinct integers:x1,x2, ...,xn(1 ≤xi≤n)— the vertices that Greg deletes.OutputPrintnintegers — thei-th number equals the required sum before thei-th step.Please, do not use the%lldspecifier to read or write 64-bit integers inC++. It is preferred to use thecin,coutstreams of the%I64dspecifier.ExamplesInput101Output0Input20 54 01 2Output9 0Input40 3 1 16 0 400 12 4 0 11 1 1 04 1 2 3Output17 23 404 0", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5c60d2e4", "template_md5": "35d339e4", "result": "You are given a weighted, directed graph with $n$ vertices. Every pair of distinct vertices has an edge between them in both directions.\n\nFor each of $n$ steps, you will remove a vertex from the graph, along with all edges connected to it. Before each step, you need to calculate the sum of the shortest path lengths between all pairs of remaining vertices. The shortest path can go through any remaining vertex.\n\n**Input:**\n\n* The first line contains $n$ (the number of vertices).\n* The next $n$ lines contain $n$ integers each, representing the adjacency matrix of the graph. $a_{ij}$ represents the weight of the edge from vertex $i$ to vertex $j$.\n* The next line contains $n$ distinct integers, representing the vertices to be removed in each step.\n\n**Output:**\n\nPrint $n$ integers, where the $i$-th integer is the sum of shortest path lengths between all pairs of remaining vertices before the $i$-th step."}, {"prompt_md5": "606a58b4", "template_md5": "465699a0", "result": "You are given a weighted, directed graph with edges going both ways between every pair of vertices.  You need to repeatedly remove a vertex from the graph and calculate the sum of the shortest distances between all remaining pairs of vertices.  The shortest distance can go through any remaining vertex.  Output this sum before each vertex removal."}]}