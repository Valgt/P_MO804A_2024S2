{"uid": "1239-B", "url": "https://codeforces.com/contest/1239/problem/B", "tags": ["implementation"], "title": "1239-B", "statement": "B. The World Is Just a Programming Task (Hard Version)time limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputThis is a harder version of the problem. In this version, $$$n \\\\le 300\\\\,000$$$.Vasya is an experienced developer of programming competitions' problems. As all great minds at some time, Vasya faced a creative crisis. To improve the situation, Petya gifted him a string consisting of opening and closing brackets only. Petya believes, that the beauty of the bracket string is a number of its cyclical shifts, which form a correct bracket sequence.To digress from his problems, Vasya decided to select two positions of the string (not necessarily distinct) and swap characters located at this positions with each other. Vasya will apply this operation exactly once. He is curious what is the maximum possible beauty he can achieve this way. Please help him.We remind that bracket sequence $$$s$$$ is called correct if:$$$s$$$ is empty;$$$s$$$ is equal to \"($$$t$$$)\", where $$$t$$$ is correct bracket sequence;$$$s$$$ is equal to $$$t_1 t_2$$$, i.e. concatenation of $$$t_1$$$ and $$$t_2$$$, where $$$t_1$$$ and $$$t_2$$$ are correct bracket sequences.For example, \"(()())\", \"()\" are correct, while \")(\" and \"())\" are not.The cyclical shift of the string $$$s$$$ of length $$$n$$$ by $$$k$$$ ($$$0 \\\\leq k < n$$$) is a string formed by a concatenation of the last $$$k$$$ symbols of the string $$$s$$$ with the first $$$n - k$$$ symbols of string $$$s$$$. For example, the cyclical shift of string \"(())()\" by $$$2$$$ equals \"()(())\".Cyclical shifts $$$i$$$ and $$$j$$$ are considered different, if $$$i \\\\ne j$$$.InputThe first line contains an integer $$$n$$$ ($$$1 \\\\le n \\\\le 300\\\\,000$$$), the length of the string.The second line contains a string, consisting of exactly $$$n$$$ characters, where each of the characters is either \"(\" or \")\".OutputThe first line should contain a single integer — the largest beauty of the string, which can be achieved by swapping some two characters.The second line should contain integers $$$l$$$ and $$$r$$$ ($$$1 \\\\leq l, r \\\\leq n$$$) — the indices of two characters, which should be swapped in order to maximize the string's beauty.In case there are several possible swaps, print any of them.ExamplesInput10 ()()())(()Output5 8 7Input12 )(()(()())()Output4 5 10Input6 )))(()Output0 1 1NoteIn the first example, we can swap $$$7$$$-th and $$$8$$$-th character, obtaining a string \"()()()()()\". The cyclical shifts by $$$0, 2, 4, 6, 8$$$ of this string form a correct bracket sequence.In the second example, after swapping $$$5$$$-th and $$$10$$$-th character, we obtain a string \")(())()()(()\". The cyclical shifts by $$$11, 7, 5, 3$$$ of this string form a correct bracket sequence.In the third example, swap of any two brackets results in $$$0$$$ cyclical shifts being correct bracket sequences.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "477dc939", "template_md5": "35d339e4", "result": "You are given a string consisting only of '(' and ')' characters. You can swap any two characters in the string exactly once.  \n\nFind the maximum number of distinct cyclical shifts of the string that form a valid bracket sequence after the swap. A valid bracket sequence is one that follows these rules:\n\n* It is empty.\n* It is of the form \"(...)\" where the content within the parentheses is a valid bracket sequence.\n* It is the concatenation of two valid bracket sequences.\n\nOutput the maximum number of valid cyclical shifts and the indices of the two characters that should be swapped to achieve this maximum. \n\n**Note:**\n\n* A cyclical shift of a string is obtained by taking the last $k$ characters of the string and concatenating them with the first $n-k$ characters, where $n$ is the length of the string.\n* Two cyclical shifts are considered different if the shift values are different."}, {"prompt_md5": "e5da6975", "template_md5": "465699a0", "result": "You are given a string of parentheses. You can swap any two parentheses in the string. What is the maximum number of ways you can rearrange the string to form a valid sequence of parentheses?  Output the maximum number and the indices of the two parentheses to swap."}]}