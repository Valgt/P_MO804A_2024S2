{"uid": "593-D", "url": "https://codeforces.com/contest/593/problem/D", "tags": ["data structures", " dfs and similar", " graphs", " math", " trees"], "title": "593-D", "statement": "D. Happy Tree Partytime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBogdan has a birthday today and mom gave him a tree consisting ofnvertecies. For every edge of the treei, some numberxiwas written on it. In case you forget, a tree is a connected non-directed graph without cycles. After the present was granted,mguests consecutively come to Bogdan's party. When thei-th guest comes, he performs exactly one of the two possible operations:Chooses some numberyi, and two verteciesaiandbi. After that, he moves along the edges of the tree from vertexaito vertexbiusing the shortest path (of course, such a path is unique in the tree). Every time he moves along some edgej, he replaces his current numberyiby, that is, by the result of integer divisionyidivxj.Chooses some edgepiand replaces the value written in itxpiby some positive integerci<xpi.As Bogdan cares about his guests, he decided to ease the process. Write a program that performs all the operations requested by guests and outputs the resulting valueyifor eachiof the first type.InputThe first line of the input contains integers,nandm(2 ≤n≤ 200 000,1 ≤m≤ 200 000) — the number of vertecies in the tree granted to Bogdan by his mom and the number of guests that came to the party respectively.Nextn- 1lines contain the description of the edges. Thei-th of these lines contains three integersui,viandxi(1 ≤ui,vi≤n,ui≠vi,1 ≤xi≤ 1018), denoting an edge that connects verteciesuiandvi, with the numberxiinitially written on it.The followingmlines describe operations, requested by Bogdan's guests. Each description contains three or four integers and has one of the two possible forms:1aibiyicorresponds to a guest, who chooses the operation of the first type.2picicorresponds to a guests, who chooses the operation of the second type.It is guaranteed that all the queries are correct, namely1 ≤ai,bi≤n,1 ≤pi≤n- 1,1 ≤yi≤ 1018and1 ≤ci<xpi, wherexpirepresents a number written on edgepiat this particular moment of time that is not necessarily equal to the initial valuexpi, as some decreases may have already been applied to it. The edges are numbered from1ton- 1in the order they appear in the input.OutputFor each guest who chooses the operation of the first type, print the result of processing the valueyithrough the path fromaitobi.ExamplesInput6 61 2 11 3 71 4 42 5 52 6 21 4 6 172 3 21 4 6 171 5 5 202 4 11 5 1 3Output24203Input5 41 2 71 3 33 4 23 5 51 4 2 1001 5 4 12 2 21 1 3 4Output202NoteInitially the tree looks like this:The response to the first query is:= 2After the third edge is changed, the tree looks like this:The response to the second query is:= 4In the third query the initial and final vertex coincide, that is, the answer will be the initial number 20.After the change in the fourth edge the tree looks like this:In the last query the answer will be:= 3", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ec8dc03a", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices and $n-1$ edges. Each edge has a non-negative integer value $x_i$ written on it. \n\nThere are $m$ operations to be performed. Each operation is of one of two types:\n\n* **Type 1:** Choose two vertices $a$ and $b$ and an integer $y$. Starting at vertex $a$, traverse the shortest path to vertex $b$ along the edges of the tree. For each edge traversed, replace the current value of $y$ with the result of integer division $y \\div x_j$, where $x_j$ is the value on the edge $j$ being traversed. Output the final value of $y$.\n\n* **Type 2:** Choose an edge $p$ and a positive integer $c$ where $c < x_p$. Replace the value on edge $p$ with $c$.\n\nPerform all the operations and output the result of each Type 1 operation."}, {"prompt_md5": "b529da26", "template_md5": "465699a0", "result": "You are given a tree with weighted edges. Guests perform two types of operations:\n\n1. Start at one vertex, travel to another vertex along the shortest path, and update a value at each edge along the path by dividing it by a given number. Output the final value.\n2. Choose an edge and change its weight to a smaller positive number.\n\nPerform all the operations and output the final value for each operation of the first type."}]}