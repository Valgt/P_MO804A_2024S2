{"uid": "49-D", "url": "https://codeforces.com/contest/49/problem/D", "tags": ["brute force", " dp", " implementation"], "title": "49-D", "statement": "D. Gametime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutVasya and Petya have invented a new game. Vasya takes a stripe consisting of1 ×nsquare and paints the squares black and white. After that Petya can start moves — during a move he may choose any two neighboring squares of one color and repaint these two squares any way he wants, perhaps in different colors. Petya can only repaint the squares in white and black colors. Petya’s aim is to repaint the stripe so that no two neighboring squares were of one color. Help Petya, using the given initial coloring, find the minimum number of moves Petya needs to win.InputThe first line contains numbern(1 ≤n≤ 1000) which represents the stripe’s length. The second line contains exactlynsymbols — the line’s initial coloring.0corresponds to a white square,1corresponds to a black one.OutputIf Petya cannot win with such an initial coloring, print-1. Otherwise print the minimum number of moves Petya needs to win.ExamplesInput6111010Output1Input510001Output1Input71100010Output2Input500100Output2NoteIn the first sample Petya can take squares 1 and 2. He repaints square 1 to black and square 2 to white.In the second sample Petya can take squares 2 and 3. He repaints square 2 to white and square 3 to black.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0618de73", "template_md5": "35d339e4", "result": "You are given a line of $n$ squares, where each square is either white (0) or black (1).  \n\nYou can perform the following operation any number of times:\n\n* Choose any two adjacent squares of the same color.\n* Change the color of both squares to the opposite color.\n\nWhat is the minimum number of operations needed to make it so that no two adjacent squares have the same color? If it is impossible to achieve this, output -1."}, {"prompt_md5": "05962530", "template_md5": "465699a0", "result": "You are given a line of alternating black and white squares. You can swap the colors of any two adjacent squares. What is the fewest swaps needed to make sure no two adjacent squares have the same color? If it's impossible, output -1."}]}