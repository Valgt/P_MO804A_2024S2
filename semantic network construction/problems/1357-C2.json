{"uid": "1357-C2", "url": "https://codeforces.com/contest/1357/problem/C2", "tags": [], "title": "1357-C2", "statement": "C2. Prepare superposition of basis states with the same paritytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given $$$N$$$ qubits in the state $$$|0...0 \\\\rangle$$$, and an integer $$$parity \\\\in \\\\{0, 1\\\\}$$$. Your task is to prepare an equal superposition of all basis states that have the given parity of the number of $$$1$$$s in their binary notation, i.e., the basis states that have anevennumber of $$$1$$$s if $$$parity = 0$$$ or the basis states that have anoddnumber of $$$1$$$s if $$$parity = 1$$$.For example, for $$$N = 2$$$ the required state would be$$$\\\\frac{1}{\\\\sqrt{2}} \\\\big( |00 \\\\rangle + |11 \\\\rangle)$$$ if $$$parity = 0$$$.$$$\\\\frac{1}{\\\\sqrt{2}} \\\\big( |01 \\\\rangle + |10 \\\\rangle)$$$ if $$$parity = 1$$$.You are not allowed to use any gates except the Pauli gates (X, Y and Z), the Hadamard gate and the controlled versions of those (you are allowed to use multiple qubits as controls in the controlled versions of gates). However, you are allowed to use measurements.You have to implement an operation which takes an array of $$$N$$$ qubits and an integer as an input and has no output. The \"output\" of your solution is the state in which it left the input qubits.Your code should have the following signature:namespace Solution {open Microsoft.Quantum.Intrinsic;operation Solve (qs : Qubit[], parity : Int) : Unit {// your code here}}", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d9db059c", "template_md5": "35d339e4", "result": "You are given $N$ qubits, all initially in the state $|0...0\\rangle$. You need to create a superposition of all possible qubit states where the number of 1s in the binary representation of each state is either even or odd, depending on the input integer `parity` (0 for even, 1 for odd). \n\nYou can only use the following quantum gates:\n\n* Pauli gates (X, Y, Z)\n* Hadamard gate\n* Controlled versions of the above gates (you can use multiple qubits as controls)\n\nYou cannot use any other gates.\n\nYou must implement a function that takes an array of $N$ qubits and the integer `parity` as input. The function does not return any output, but the state of the qubits will change to the desired superposition."}, {"prompt_md5": "be02a1a3", "template_md5": "465699a0", "result": "You are given a set of qubits, all initially in a state of 0. You need to manipulate these qubits using specific allowed operations to create a state where all possible combinations of 0s and 1s have an equal probability, but the number of 1s must either be even or odd, depending on a given input."}]}