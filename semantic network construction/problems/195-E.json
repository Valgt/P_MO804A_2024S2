{"uid": "195-E", "url": "https://codeforces.com/contest/195/problem/E", "tags": ["data structures", " dsu", " graphs"], "title": "195-E", "statement": "E. Building Foresttime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutAnoriented weighted forestis an acyclic weighted digraph in which from each vertex at most one edge goes.Therootof vertexvof an oriented weighted forest is a vertex from which no edge goes and which can be reached from vertexvmoving along the edges of the weighted oriented forest. We denote the root of vertexvasroot(v).Thedepthof vertexvis the sum of weights of paths passing from the vertexvto its root. Let's denote the depth of the vertexvasdepth(v).Let's consider the process of constructing a weighted directed forest. Initially, the forest does not contain vertices. Vertices are added sequentially one by one. Overall, there arenperformed operations of adding. Thei-th(i> 0)adding operation is described by a set of numbers(k,v1,x1,v2,x2,  ... ,vk,xk)and means that we should add vertex numberiandkedges to the graph: an edge from vertexroot(v1)to vertexiwith weightdepth(v1) +x1, an edge from vertexroot(v2)to vertexiwith weightdepth(v2) +x2and so on. Ifk= 0, then only vertexiis added to the graph, there are no added edges.Your task is like this: given the operations of adding vertices, calculate the sum of the weights of all edges of the forest, resulting after the application of all defined operations, modulo1000000007(109+ 7).InputThe first line contains a single integern(1 ≤n≤ 105)— the number of operations of adding a vertex.Nextnlines contain descriptions of the operations, thei-th line contains the description of the operation of adding thei-th vertex in the following format: the first number of a line is an integerk(0 ≤k≤i- 1), then follow2kspace-separated integers:v1,x1,v2,x2, ... ,vk,xk(1 ≤vj≤i- 1, |xj| ≤ 109).The operations are given in the order, in which they should be applied to the graph. It is guaranteed that sumkof all operations does not exceed105, also that applying operations of adding vertexes does not result in loops and multiple edges.OutputPrint a single number — the sum of weights of all edges of the resulting graph modulo1000000007(109+ 7).ExamplesInput6001 2 12 1 5 2 21 1 21 3 4Output30Input501 1 5002 3 1 4 3Output9NoteConside the first sample:Vertex1is added.k= 0, thus no edges are added.Vertex2is added.k= 0, thus no edges are added.Vertex3is added.k= 1.v1= 2,x1= 1. Edge from vertexroot(2) = 2to vertex3with weightdepth(2) +x1= 0 + 1 = 1is added.Vertex4is added.k= 2.v1= 1,x1= 5. Edge from vertexroot(1) = 1to vertex4with weightdepth(1) +x1= 0 + 5 = 5is added.v2= 2,x2= 2. Edge from vertexroot(2) = 3to vertex4with weightdepth(2) +x1= 1 + 2 = 3is added.Vertex5is added.k= 1.v1= 1,x1= 2. Edge from vertexroot(1) = 4to vertex5with weightdepth(1) +x1= 5 + 2 = 7is added.Vertex6is added.k= 1.v1= 3,x1= 4. Edge from vertexroot(3) = 5to vertex6with weightdepth(3) +x1= 10 + 4 = 14is added.The resulting graph is shown on the pictore below:", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a35a1d07", "template_md5": "35d339e4", "result": "You are given a sequence of operations to build a directed forest. Each operation adds a new vertex and optionally connects it to existing vertices with directed edges.  \n\n* Each edge has a weight which is the sum of the depths of the path from the edge's source vertex to the root of the forest.\n* The depth of a vertex is the sum of the weights of the edges on the path from the vertex to its root.\n* The root of a vertex is a vertex with no outgoing edges and can be reached from the given vertex.\n\nYour task is to calculate the sum of the weights of all edges in the resulting forest after applying all the operations, modulo 1000000007.\n\n**Input:**\n\n* The first line contains an integer *n* (1 ≤ *n* ≤ 10^5), the number of operations.\n* Each of the next *n* lines describes an operation:\n    * The first number is an integer *k* (0 ≤ *k* ≤ *i* - 1).\n    * The next 2*k* numbers are integers *v1*, *x1*, *v2*, *x2*, ..., *vk*, *xk* (1 ≤ *vj* ≤ *i* - 1, |*xj*| ≤ 10^9).\n    * This operation adds vertex *i* and *k* edges:\n        * An edge from the root of vertex *v1* to vertex *i* with weight depth(*v1*) + *x1*.\n        * An edge from the root of vertex *v2* to vertex *i* with weight depth(*v2*) + *x2*.\n        * ...\n        * An edge from the root of vertex *vk* to vertex *i* with weight depth(*vk*) + *xk*.\n    * If *k* = 0, only vertex *i* is added.\n\n**Output:**\n\n* Print a single number — the sum of the weights of all edges in the resulting forest modulo 1000000007."}, {"prompt_md5": "f71498d6", "template_md5": "465699a0", "result": "You are building a tree by adding nodes one by one. Each node can have connections to previously added nodes. The weight of a connection is the sum of the depths of the connected nodes. Calculate the total weight of all connections in the final tree."}]}