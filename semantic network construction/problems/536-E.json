{"uid": "536-E", "url": "https://codeforces.com/contest/536/problem/E", "tags": ["data structures", " divide and conquer", " trees"], "title": "536-E", "statement": "E. Tavas on the Pathtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTavas lives in Tavaspolis. Tavaspolis hasncities numbered from1tonconnected byn- 1bidirectional roads. There exists a path between any two cities. Also each road has a length.Tavas' favorite strings are binary strings (they contain only 0 and 1). For any binary string likes=s1s2...sk,T(s)is itsGoodness.T(s)can be calculated as follows:Consider there are exactlymblocks of1s in this string (a block of1s insis a maximal consecutive substring ofsthat only contains1) with lengthsx1,x2, ...,xm.Definewherefis a given sequence (ifm= 0, thenT(s) = 0).Tavas loves queries. He asks you to answerqqueries. In each query he gives you numbersv,u,land you should print following number:Consider the roads on the path from cityvto cityu:e1,e2, ...,ex.Build the binary stringbof lengthxsuch that:bi= 1if and only ifl≤w(ei)wherew(e)is the length of roade.You should printT(b)for this query.InputThe first line of input contains integersnandq(2 ≤n≤ 105and1 ≤q≤ 105).The next line containsn- 1space separated integersf1,f2, ...,fn- 1(|fi| ≤ 1000).The nextn- 1lines contain the details of the roads. Each line contains integersv,uandwand it means that there's a road between citiesvanduof lengthw(1 ≤v,u≤nand1 ≤w≤ 109).The nextqlines contain the details of the queries. Each line contains integersv,u,l(1 ≤v,u≤n,v≠uand1 ≤l≤ 109).OutputPrint the answer of each query in a single line.ExamplesInput2 3101 2 31 2 21 2 31 2 4Output10100Input6 6-5 0 0 2 101 2 12 3 23 4 54 5 15 6 51 6 11 6 21 6 53 6 54 6 41 4 2Output10-5-10-10-50", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5da4a83a", "template_md5": "35d339e4", "result": "There are $n$ cities connected by $n-1$ bidirectional roads. Each road has a length. \n\nFor a binary string $s$ (containing only 0s and 1s), its \"Goodness\" $T(s)$ is calculated as follows:\n\n1.  Count the number of blocks of consecutive 1s in the string. Let there be $m$ blocks with lengths $x_1, x_2, ..., x_m$.\n2.  Define $T(s) = f(x_1) + f(x_2) + ... + f(x_m)$, where $f$ is a given sequence. If there are no blocks of 1s ($m=0$), then $T(s) = 0$.\n\nYou are given $q$ queries. Each query consists of three numbers $v$, $u$, and $l$. For each query, you need to:\n\n1.  Find the path from city $v$ to city $u$.\n2.  Build a binary string $b$ of length $x$ (where $x$ is the number of roads on the path) such that:\n    *  $b_i = 1$ if and only if the length of the $i$-th road on the path is less than or equal to $l$.\n3.  Calculate and print $T(b)$.\n\n\n\nYou are given the values of $n$, $q$, the sequence $f$, the lengths of all roads, and the details of each query."}, {"prompt_md5": "44eb4025", "template_md5": "465699a0", "result": "You are given a connected graph with weighted edges.  You need to answer queries that ask for the \"goodness\" of a binary string. The string is built based on the weights of edges on a path between two given cities. The goodness of a binary string is calculated based on the lengths of consecutive blocks of '1's in the string."}]}