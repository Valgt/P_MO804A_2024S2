{"uid": "550-E", "url": "https://codeforces.com/contest/550/problem/E", "tags": ["constructive algorithms", " greedy", " implementation", " math"], "title": "550-E", "statement": "E. Brackets in Implicationstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputImplication is a function of two logical arguments, its value is false if and only if the value of the first argument is true and the value of the second argument is false.Implication is written by using character '', and the arguments and the result of the implication are written as '0' (false) and '1' (true). According to the definition of the implication:When a logical expression contains multiple implications, then when there are no brackets, it will be calculated from left to fight. For example,.When there are brackets, we first calculate the expression in brackets. For example,.For the given logical expressiondetermine if it is possible to place there brackets so that the value of a logical expression is false. If it is possible, your task is to find such an arrangement of brackets.InputThe first line contains integern(1 ≤n≤ 100 000) — the number of arguments in a logical expression.The second line containsnnumbersa1,a2, ...,an(), which means the values of arguments in the expression in the order they occur.OutputPrint \"NO\" (without the quotes), if it is impossible to place brackets in the expression so that its value was equal to 0.Otherwise, print \"YES\" in the first line and the logical expression with the required arrangement of brackets in the second line.The expression should only contain characters '0', '1', '-' (character with ASCII code 45), '>' (character with ASCII code 62), '(' and ')'. Characters '-' and '>' can occur in an expression only paired like that: (\"->\") and represent implication. The total number of logical arguments (i.e. digits '0' and '1') in the expression must be equal ton. The order in which the digits follow in the expression from left to right must coincide witha1,a2, ...,an.The expression should becorrect. More formally, acorrectexpression is determined as follows:Expressions \"0\", \"1\" (without the quotes) are correct.Ifv1,v2are correct, thenv1->v2is a correct expression.Ifvis a correct expression, then(v)is a correct expression.The total number of characters in the resulting expression mustn't exceed106.If there are multiple possible answers, you are allowed to print any of them.ExamplesInput40 1 1 0OutputYES(((0)->1)->(1->0))Input21 1OutputNOInput10OutputYES0", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e08429cf", "template_md5": "35d339e4", "result": "You are given a sequence of 0s and 1s.  \n\nYou need to determine if it is possible to add parentheses to this sequence to create a logical expression that evaluates to false. \n\nHere's how the logic works:\n\n*  '0' represents false\n*  '1' represents true\n*  '->' represents implication (A -> B is true unless A is true and B is false)\n\nIf you can create a false expression, output \"YES\" followed by the expression with parentheses. If it's impossible, output \"NO\".\n\n**Example:**\n\nInput: 0 1 1 0\n\nOutput: \nYES\n(((0)->1)->(1->0)) \n\n\n\nLet me know if you'd like more examples or have any other questions."}, {"prompt_md5": "646ac84f", "template_md5": "465699a0", "result": "Given a sequence of true/false values, determine if you can arrange parentheses in a logical expression to make the overall result false. If possible, output the expression with the correct parentheses."}]}