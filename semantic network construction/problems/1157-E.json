{"uid": "1157-E", "url": "https://codeforces.com/contest/1157/problem/E", "tags": ["binary search", " data structures", " greedy"], "title": "1157-E", "statement": "E. Minimum Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two arrays $$$a$$$ and $$$b$$$, both of length $$$n$$$. All elements of both arrays are from $$$0$$$ to $$$n-1$$$.You can reorder elements of the array $$$b$$$ (if you want, you may leave the order of elements as it is). After that, let array $$$c$$$ be the array of length $$$n$$$, the $$$i$$$-th element of this array is $$$c_i = (a_i + b_i) \\\\% n$$$, where $$$x \\\\% y$$$ is $$$x$$$ modulo $$$y$$$.Your task is to reorder elements of the array $$$b$$$ to obtain thelexicographicallyminimum possible array $$$c$$$.Array $$$x$$$ of length $$$n$$$ is lexicographically less than array $$$y$$$ of length $$$n$$$, if there exists such $$$i$$$ ($$$1 \\\\le i \\\\le n$$$), that $$$x_i < y_i$$$, and for any $$$j$$$ ($$$1 \\\\le j < i$$$) $$$x_j = y_j$$$.InputThe first line of the input contains one integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) â€” the number of elements in $$$a$$$, $$$b$$$ and $$$c$$$.The second line of the input contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$0 \\\\le a_i < n$$$), where $$$a_i$$$ is the $$$i$$$-th element of $$$a$$$.The third line of the input contains $$$n$$$ integers $$$b_1, b_2, \\\\dots, b_n$$$ ($$$0 \\\\le b_i < n$$$), where $$$b_i$$$ is the $$$i$$$-th element of $$$b$$$.OutputPrint thelexicographicallyminimum possible array $$$c$$$. Recall that your task is to reorder elements of the array $$$b$$$ and obtain thelexicographicallyminimum possible array $$$c$$$, where the $$$i$$$-th element of $$$c$$$ is $$$c_i = (a_i + b_i) \\\\% n$$$.ExamplesInput4 0 1 2 1 3 2 1 1Output1 0 0 2Input7 2 5 1 5 3 4 3 2 4 3 5 6 5 1Output0 0 0 1 0 2 4", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "55a3cca3", "template_md5": "35d339e4", "result": "You are given two arrays,  'a' and 'b', both of length 'n'. Each element in both arrays is a number from 0 to n-1.\n\nYou can rearrange the elements in array 'b'.  \n\nThen, create a new array 'c' of length 'n'.  The i-th element of 'c' is calculated as:  $c_i = (a_i + b_i) \\mod n$  (where 'mod' means the remainder after division).\n\nYour goal is to rearrange the elements in array 'b' so that the resulting array 'c' is lexicographically the smallest possible.\n\n**Lexicographically smallest** means that there is at least one position 'i' where the element in 'c' is smaller than the corresponding element in any other possible 'c'.  For all positions 'j' less than 'i', the elements in 'c' must be the same.\n\nInput:\n\n* The first line contains 'n' (the length of the arrays).\n* The second line contains the elements of array 'a'.\n* The third line contains the elements of array 'b'.\n\nOutput:\n\n* Print the lexicographically smallest possible array 'c'."}, {"prompt_md5": "eebaf59c", "template_md5": "465699a0", "result": "You have two lists of numbers. You can rearrange the second list.  The goal is to rearrange the second list so that the resulting list, created by adding corresponding numbers from the two lists and taking the remainder after dividing by a given number, is the smallest possible list when compared to other possible rearrangements."}]}