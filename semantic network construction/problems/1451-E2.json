{"uid": "1451-E2", "url": "https://codeforces.com/contest/1451/problem/E2", "tags": ["bitmasks", " constructive algorithms", " interactive", " math"], "title": "1451-E2", "statement": "E2. Bitwise Queries (Hard Version)time limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between the easy and hard versions is the constraints on the number of queries.This is an interactive problem.Ridbit has a hidden array $$$a$$$ of $$$n$$$ integers which he wants Ashish to guess. Note that $$$n$$$ is apower of two. Ashish is allowed to ask three different types of queries. They are of the formAND$$$i$$$ $$$j$$$: ask for thebitwise ANDof elements $$$a_i$$$ and $$$a_j$$$ $$$(1 \\\\leq i, j \\\\le n$$$, $$$i \\\\neq j)$$$OR$$$i$$$ $$$j$$$: ask for thebitwise ORof elements $$$a_i$$$ and $$$a_j$$$ $$$(1 \\\\leq i, j \\\\le n$$$, $$$i \\\\neq j)$$$XOR$$$i$$$ $$$j$$$: ask for thebitwise XORof elements $$$a_i$$$ and $$$a_j$$$ $$$(1 \\\\leq i, j \\\\le n$$$, $$$i \\\\neq j)$$$Can you help Ashish guess the elements of the array?In this version, each element takes a value in the range $$$[0, n-1]$$$ (inclusive) and Ashish can ask no more than $$$n+1$$$ queries.InputThe first line of input contains one integer $$$n$$$ $$$(4 \\\\le n \\\\le 2^{16})$$$ — the length of the array. It is guaranteed that $$$n$$$ is apower of two.InteractionTo ask a query print a single line containing one of the following (without quotes)\"AND i j\"\"OR i j\"\"XOR i j\"where $$$i$$$ and $$$j$$$ $$$(1 \\\\leq i, j \\\\le n$$$, $$$i \\\\neq j)$$$ denote the indices being queried.For each query, you will receive an integer $$$x$$$ whose value depends on the type of query. If the indices queried are invalid or you exceed the number of queries however, you will get $$$x = -1$$$. In this case, you should terminate the program immediately.When you have guessed the elements of the array, print a single line \"!\" (without quotes), followed by $$$n$$$ space-separated integers  — the elements of the array.Guessing the array doesnotcount towards the number of queries asked.The interactor is not adaptive.The array $$$a$$$ does not change with queries.After printing a query do not forget to output the end of the line and flush the output. Otherwise, you will getIdleness limit exceeded. To do this, use:fflush(stdout)orcout.flush()in C++;System.out.flush()in Java;flush(output)in Pascal;stdout.flush()in Python;see the documentation for other languages.HacksTo hack the solution, use the following test format:On the first line print a single integer $$$n$$$ $$$(4 \\\\le n \\\\le 2^{16})$$$ — the length of the array. Itmustbe a power of 2. The next line should contain $$$n$$$ space-separated integers in the range $$$[0, n-1]$$$ — the array $$$a$$$.ExampleInput4  0  2  3OutputOR 1 2  OR 2 3  XOR 2 4  ! 0 0 2 3NoteThe array $$$a$$$ in the example is $$$[0, 0, 2, 3]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "befac730", "template_md5": "35d339e4", "result": "You are given an array of $n$ integers, where $n$ is a power of 2. You can ask up to $n+1$ queries to find the elements of the array.  \n\nThere are three types of queries:\n\n* **AND i j**: Returns the bitwise AND of the elements at indices $i$ and $j$ in the array.\n* **OR i j**: Returns the bitwise OR of the elements at indices $i$ and $j$ in the array.\n* **XOR i j**: Returns the bitwise XOR of the elements at indices $i$ and $j$ in the array.\n\nYou must determine all the elements of the array by asking queries. \n\nAfter you think you know the array, you can print \"!\" followed by the $n$ elements of the array."}, {"prompt_md5": "f02da524", "template_md5": "465699a0", "result": "You need to guess a hidden list of numbers. You can ask questions about pairs of numbers in the list. The questions can be:\n\n*  Find the \"AND\" of two numbers.\n*  Find the \"OR\" of two numbers.\n*  Find the \"XOR\" of two numbers.\n\nYou have a limited number of questions to guess the entire list."}]}