{"uid": "1667-B", "url": "https://codeforces.com/contest/1667/problem/B", "tags": ["data structures", " dp"], "title": "1667-B", "statement": "B. Optimal Partitiontime limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array $$$a$$$ consisting of $$$n$$$ integers. You should divide $$$a$$$ into continuous non-empty subarrays (there are $$$2^{n-1}$$$ ways to do that).Let $$$s=a_l+a_{l+1}+\\\\ldots+a_r$$$. The value of a subarray $$$a_l, a_{l+1}, \\\\ldots, a_r$$$ is:$$$(r-l+1)$$$ if $$$s>0$$$,$$$0$$$ if $$$s=0$$$,$$$-(r-l+1)$$$ if $$$s<0$$$.What is the maximum sum of values you can get with a partition?InputThe input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 5 \\\\cdot 10^5$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 5 \\\\cdot 10^5$$$).The second line of each test case contains $$$n$$$ integers $$$a_1$$$, $$$a_2$$$, ..., $$$a_n$$$ ($$$-10^9 \\\\le a_i \\\\le 10^9$$$).It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$5 \\\\cdot 10^5$$$.OutputFor each test case print a single integer — the maximum sum of values you can get with an optimal parition.ExampleInput531 2 -340 -2 3 -45-1 -2 3 -1 -16-1 2 -3 4 -5 671 -1 -1 1 -1 -1 1Output1 2 1 6 -1NoteTest case $$$1$$$: one optimal partition is $$$[1, 2]$$$, $$$[-3]$$$. $$$1+2>0$$$ so the value of $$$[1, 2]$$$ is $$$2$$$. $$$-3<0$$$, so the value of $$$[-3]$$$ is $$$-1$$$. $$$2+(-1)=1$$$.Test case $$$2$$$: the optimal partition is $$$[0, -2, 3]$$$, $$$[-4]$$$, and the sum of values is $$$3+(-1)=2$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f638f215", "template_md5": "465699a0", "result": "You are given a list of numbers.  You need to divide the list into smaller non-empty sections.  Each section gets a score based on the sum of its numbers.  The score is positive if the sum is positive, zero if the sum is zero, and negative if the sum is negative. The score of a section is also equal to the number of numbers in the section. What is the highest total score you can achieve by dividing the list into sections?"}, {"prompt_md5": "d6eadd5b", "template_md5": "35d339e4", "result": "You are given an array of integers. You need to divide the array into smaller, non-empty, continuous subarrays.  \n\nThe value of a subarray is calculated as follows:\n\n* If the sum of the elements in the subarray is positive, the value is the number of elements in the subarray.\n* If the sum of the elements in the subarray is zero, the value is 0.\n* If the sum of the elements in the subarray is negative, the value is the negative of the number of elements in the subarray.\n\nFind the maximum possible sum of values you can get by dividing the array into subarrays.\n\n\n\nInput:\n\n* The first line contains the number of test cases, *t*.\n* For each test case:\n    * The first line contains the number of integers in the array, *n*.\n    * The second line contains *n* integers, representing the array.\n\nOutput:\n\n* For each test case, print the maximum sum of values you can get."}]}