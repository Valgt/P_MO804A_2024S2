{"uid": "2011-F", "url": "https://codeforces.com/contest/2011/problem/F", "tags": ["*special", " data structures", " greedy"], "title": "2011-F", "statement": "F. Good Subarraytime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given an integer array $$$a$$$ of size $$$n$$$.Let's call an arraygoodif it can be obtained using the following algorithm: create an array consisting of any single integer; and then perform the following operation an arbitrary number of times: choose an element from the already existing array (let's call it $$$x$$$) and add $$$x$$$, $$$(x-1)$$$, or $$$(x+1)$$$ to the end of the array.For example, the arrays $$$[1, 2, 1]$$$, $$$[5]$$$ and $$$[3, 2, 1, 4]$$$ are good, while $$$[2, 4]$$$ and $$$[3, 1, 2]$$$ are not.Your task is to count the number of goodcontiguoussubarrays of the array $$$a$$$. Two subarrays that have the same elements but are in different positions of the array $$$a$$$ are considered different.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 3 \\\\cdot 10^5$$$).The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$ 1 \\\\le a_i \\\\le n)$$$.Additional constraint on the input: the sum of $$$n$$$ over all test cases does not exceed $$$3 \\\\cdot 10^5$$$.OutputFor each test case, print a single integer — the number of goodcontiguoussubarrays of the array $$$a$$$.ExampleInput431 1 343 2 3 11184 5 6 5 3 2 3 1Output4 9 1 23NoteIn the first example, the following four subarrays are good:from the $$$1$$$-st to the $$$1$$$-st element;from the $$$1$$$-st to the $$$2$$$-nd element;from the $$$2$$$-nd to the $$$2$$$-nd element;from the $$$3$$$-rd to the $$$3$$$-rd element.In the second example, the only subarray which isnotgood is the subarray from the $$$3$$$-rd element to the $$$4$$$-th element.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "49fcb84f", "template_md5": "35d339e4", "result": "You are given an array of integers.  An array is considered \"good\" if it can be created by:\n\n1. Starting with a single integer.\n2. Repeatedly adding one of the following to the end of the array:\n    * The current last element\n    * The current last element minus 1\n    * The current last element plus 1\n\nYour task is to count the number of \"good\" subarrays within the given array. Two subarrays are considered different if they have the same elements but are in different positions within the array. \n\n\nInput:\n\n* The first line contains the number of test cases (t).\n* Each test case has two lines:\n    * The first line contains the size of the array (n).\n    * The second line contains the n integers of the array.\n\nOutput:\n\n* For each test case, print the number of \"good\" subarrays."}, {"prompt_md5": "ca862e41", "template_md5": "465699a0", "result": "You are given a list of numbers.  Determine the number of sublists within the original list where each sublist can be created by repeatedly adding the current number, the number minus one, or the number plus one to the end of a starting list of a single number."}]}