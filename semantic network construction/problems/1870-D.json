{"uid": "1870-D", "url": "https://codeforces.com/contest/1870/problem/D", "tags": ["greedy", " implementation", " sortings"], "title": "1870-D", "statement": "D. Prefix Purchasetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have an array $$$a$$$ of size $$$n$$$, initially filled with zeros ($$$a_1 = a_2 = \\\\ldots = a_n = 0$$$). You also have an array of integers $$$c$$$ of size $$$n$$$.Initially, you have $$$k$$$ coins. By paying $$$c_i$$$ coins, you can add $$$1$$$ to all elements of the array $$$a$$$ from the first to the $$$i$$$-th element ($$$a_j \\\\mathrel{+}= 1$$$ for all $$$1 \\\\leq j \\\\leq i$$$). You can buy any $$$c_i$$$ any number of times. A purchase is only possible if $$$k \\\\geq c_i$$$, meaning that at any moment $$$k \\\\geq 0$$$ must hold true.Find the lexicographically largest array $$$a$$$ that can be obtained.An array $$$a$$$ is lexicographically smaller than an array $$$b$$$ of the same length if and only if in the first position where $$$a$$$ and $$$b$$$ differ, the element in array $$$a$$$ is smaller than the corresponding element in $$$b$$$.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$) — the number of test cases. This is followed by a description of the test cases.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 2 \\\\cdot 10^5$$$) — the size of arrays $$$a$$$ and $$$c$$$.The second line of each test case contains $$$n$$$ integers $$$c_1, c_2, \\\\ldots, c_n$$$ ($$$1 \\\\leq c_i \\\\leq 10^9$$$) — the array $$$c$$$.The third line of each test case contains a single integer $$$k$$$ ($$$1 \\\\leq k \\\\leq 10^9$$$) — the number of coins you have.It is guaranteed that the sum of all $$$n$$$ values across all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ — the lexicographically largest array $$$a$$$ that can be obtained.ExampleInput431 2 3523 4733 2 12610 6 4 6 3 47Output5 0 0  2 1  2 2 2  2 2 2 2 2 1NoteIn the first test case, $$$a_1$$$ cannot be greater than $$$5$$$, and if we buy $$$c_1$$$ five times, we will run out of money, so $$$a = [5, 0, 0]$$$.In the second test case, $$$a_1$$$ cannot be greater than $$$2$$$, but we can buy $$$c_1$$$ and $$$c_2$$$ once each (buying $$$c_2$$$ twice is not possible), so $$$a = [2, 1]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d4a28c69", "template_md5": "35d339e4", "result": "You have two arrays,  'a' and 'c', both of size 'n'. Array 'a' is initially filled with zeros. You start with 'k' coins.\n\nYou can perform the following operation:\n\n* Pay 'c_i' coins to add 1 to all elements of array 'a' from index 1 to 'i'.\n\nYou can repeat this operation as many times as you want, but only if you have enough coins ('k >= c_i').\n\nFind the lexicographically largest possible array 'a' you can create using these operations.\n\n**Input:**\n\n* 't' - the number of test cases\n* For each test case:\n    * 'n' - the size of the arrays\n    * 'c' - an array of 'n' integers\n    * 'k' - the number of coins you start with\n\n**Output:**\n\n* For each test case, output the lexicographically largest array 'a' you can create.\n\n\n\nLet me know if you'd like me to elaborate on any part of the problem!"}, {"prompt_md5": "ccaad397", "template_md5": "465699a0", "result": "You have a list of prices and a budget. You can buy items that increase the value of a separate list.  Each item increases the value of all previous items in the list.  Find the largest possible list of values you can create, given your budget and the prices."}]}