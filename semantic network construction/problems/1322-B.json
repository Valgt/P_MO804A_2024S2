{"uid": "1322-B", "url": "https://codeforces.com/contest/1322/problem/B", "tags": ["binary search", " bitmasks", " constructive algorithms", " data structures", " math", " sortings"], "title": "1322-B", "statement": "B. Presenttime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputCatherine received an array of integers as a gift for March 8. Eventually she grew bored with it, and she started calculated various useless characteristics for it. She succeeded to do it for each one she came up with. But when she came up with another one —xorof all pairwise sums of elements in the array, she realized that she couldn't compute it for a very large array, thus she asked for your help. Can you do it? Formally, you need to compute$$$$$$ (a_1 + a_2) \\\\oplus (a_1 + a_3) \\\\oplus \\\\ldots \\\\oplus (a_1 + a_n) \\\\\\\\ \\\\oplus (a_2 + a_3) \\\\oplus \\\\ldots \\\\oplus (a_2 + a_n) \\\\\\\\ \\\\ldots \\\\\\\\ \\\\oplus (a_{n-1} + a_n) \\\\\\\\ $$$$$$Here $$$x \\\\oplus y$$$ is a bitwise XOR operation (i.e. $$$x$$$^$$$y$$$ in many modern programming languages). You can read about it in Wikipedia:https://en.wikipedia.org/wiki/Exclusive_or#Bitwise_operation.InputThe first line contains a single integer $$$n$$$ ($$$2 \\\\leq n \\\\leq 400\\\\,000$$$) — the number of integers in the array.The second line contains integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\leq a_i \\\\leq 10^7$$$).OutputPrint a single integer — xor of all pairwise sums of integers in the given array.ExamplesInput2 1 2Output3Input3 1 2 3Output2NoteIn the first sample case there is only one sum $$$1 + 2 = 3$$$.In the second sample case there are three sums: $$$1 + 2 = 3$$$, $$$1 + 3 = 4$$$, $$$2 + 3 = 5$$$. In binary they are represented as $$$011_2 \\\\oplus 100_2 \\\\oplus 101_2 = 010_2$$$, thus the answer is 2.$$$\\\\oplus$$$ is the bitwise xor operation. To define $$$x \\\\oplus y$$$, consider binary representations of integers $$$x$$$ and $$$y$$$. We put the $$$i$$$-th bit of the result to be 1 when exactly one of the $$$i$$$-th bits of $$$x$$$ and $$$y$$$ is 1. Otherwise, the $$$i$$$-th bit of the result is put to be 0. For example, $$$0101_2 \\\\, \\\\oplus \\\\, 0011_2 = 0110_2$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "aade1d8c", "template_md5": "35d339e4", "result": "You are given an array of $n$ integers ($2 \\le n \\le 400,000$).  Calculate the bitwise XOR of all possible pairwise sums of the integers in the array.\n\nThe bitwise XOR of two integers $x$ and $y$ is denoted as $x \\oplus y$.  For each bit position, the result has a 1 if and only if one of the corresponding bits in $x$ and $y$ is 1.\n\nInput:\n\n* The first line contains an integer $n$.\n* The second line contains $n$ integers, the elements of the array.\n\nOutput:\n\n* A single integer, the bitwise XOR of all pairwise sums of the array elements."}, {"prompt_md5": "8599c9e8", "template_md5": "465699a0", "result": "You are given a list of numbers.  Calculate the bitwise XOR of all possible sums you can make by pairing up the numbers in the list."}]}