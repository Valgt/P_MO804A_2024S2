{"uid": "1743-C", "url": "https://codeforces.com/contest/1743/problem/C", "tags": ["constructive algorithms", " dp", " greedy"], "title": "1743-C", "statement": "C. Save the Magazinestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMonocarp has been collecting rare magazines for quite a while, and now he has decided to sell them. He distributed the magazines between $$$n$$$ boxes, arranged in a row. The $$$i$$$-th box contains $$$a_i$$$ magazines. Some of the boxes are covered with lids, others are not.Suddenly it started to rain, and now Monocarp has to save as many magazines from the rain as possible. To do this, he can move the lids between boxes as follows: if the $$$i$$$-th box was covered with a lid initially, he can either move the lid from the $$$i$$$-th box to the box $$$(i-1)$$$ (if it exists), or keep the lid on the $$$i$$$-th box. You may assume that Monocarp can move the lids instantly at the same moment, and no lid can be moved more than once. If a box will be covered with a lid after Monocarp moves the lids, the magazines in it will be safe from the rain; otherwise they will soak.You have to calculate the maximum number of magazines Monocarp can save from the rain.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of the testcases.The first line of each testcase contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the number of boxes.The second line contains a string of $$$n$$$ characters0and/or1. If the $$$i$$$-th character is1, the $$$i$$$-th box is initially covered with a lid. If the $$$i$$$-th character is0, the $$$i$$$-th box is initially not covered.The third line contains a sequence of integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\le a_i \\\\le 10^4$$$), where $$$a_i$$$ is the number of magazines in the $$$i$$$-th box.The sum of $$$n$$$ over all testcases doesn't exceed $$$2 \\\\cdot 10^5$$$.OutputFor each testcase, print one integer — the maximum number of magazines Monocarp can save from the rain.ExampleInput450111010 5 8 9 6601101120 10 9 30 20 1940000100 100 100 100401115 4 5 1Output27 80 0 14NoteIn the first testcase of the example, Monocarp can move the lid from the second box to the first box, so the boxes $$$1$$$, $$$3$$$ and $$$4$$$ are covered, and $$$10 + 8 + 9 = 27$$$ magazines are saved.In the second testcase, Monocarp can move the lid from the second box to the first box, then from the third box to the second box, then from the fifth box to the fourth box, and then from the sixth box to the fifth box. The boxes $$$1$$$, $$$2$$$, $$$4$$$ and $$$5$$$ will be covered, so $$$20 + 10 + 30 + 20 = 80$$$ magazines can be saved.There are no lids in the third testcase, so it's impossible to save even a single magazine.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "0f4065fb", "template_md5": "35d339e4", "result": "You are given $n$ boxes, each containing a number of magazines ($a_i$). Some boxes are initially covered with lids (represented by 1) and some are not (represented by 0).\n\nYou can move a lid from a box to the box before it (if it exists).  You can only move a lid once.\n\nFind the maximum number of magazines you can save from the rain by strategically moving the lids. A box with a lid will protect its magazines. \n\n\nInput:\n\n* $t$ - the number of test cases\n* For each test case:\n    * $n$ - the number of boxes\n    * A string of $n$ characters (0 or 1) representing the initial lid positions\n    * A list of $n$ integers ($a_1, a_2, ..., a_n$) representing the number of magazines in each box\n\nOutput:\n\n* For each test case, print the maximum number of magazines that can be saved."}, {"prompt_md5": "29a23544", "template_md5": "465699a0", "result": "You are given a row of boxes, some of which have lids. Each box contains a number of items. You can move a lid from one box to the box in front of it.  The goal is to maximize the number of items that are covered by a lid."}]}