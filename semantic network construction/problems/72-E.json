{"uid": "72-E", "url": "https://codeforces.com/contest/72/problem/E", "tags": ["*special", " brute force", " strings"], "title": "72-E", "statement": "E. Ali goes shoppingtime limit per test5 secondsmemory limit per test256 megabytesinputstdinoutputstdoutAli Koochooloo is going to buy new clothes since we're reaching Noruz, the ancient Persian festival and the beginning of new Persian year.When Ali entered a shop, he saw that the shopkeeper was a programmer and since there is no money in programming he had changed his career. The shopkeeper told Ali that he can buy anything for free if he could answer a simple question in10seconds. But to see the question Ali has to pay 3 tomans.Ali agreed instantly and the shopkeeper handed him a piece of paper containing the task. The task was indeed very simple. It said:Let stringAbeababababababab. Which non-empty substring ofAis repeated the most times in it?Ali answered fast. He said the answer isa. But the shopkeeper said that Ali is wrong and asked him to read the rest of statement:If several substrings have the maximal repeat time, then the substring with maximal length would be the answer, in case of a tie the alphabetically latest substring will be chosen.So the answer isab.Now Ali wants us to solve this problem for different strings. We don't have a great advantage over Ali, we just have a computer and a weird language.InputThe single line consisting of a stringA. It is non-empty, made of lower-case Latin letters and contains at most30characters.OutputThe single line contains the answer.ExamplesInputababOutputabInputabcdOutputabcd", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d11fdcf3", "template_md5": "35d339e4", "result": "Given a string $A$, find the longest repeating substring. If there are multiple substrings with the same maximum length, return the lexicographically largest one. \n\nFor example:\n\n* Input: \"abab\"\n* Output: \"ab\"\n\n* Input: \"abcd\"\n* Output: \"abcd\""}, {"prompt_md5": "7679066e", "template_md5": "465699a0", "result": "Given a string, find the longest repeated substring. If multiple substrings have the same maximum length, choose the one that comes last alphabetically."}]}