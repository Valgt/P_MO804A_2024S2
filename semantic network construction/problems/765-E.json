{"uid": "765-E", "url": "https://codeforces.com/contest/765/problem/E", "tags": ["dfs and similar", " dp", " greedy", " implementation", " trees"], "title": "765-E", "statement": "E. Tree Foldingtime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputVanya wants to minimize a tree. He can perform the following operation multiple times: choose a vertexv, and two disjoint (except forv) paths of equal lengtha0=v,a1, ...,ak, andb0=v,b1, ...,bk. Additionally, verticesa1, ...,ak,b1, ...,bkmust not have any neighbours in the tree other than adjacent vertices of corresponding paths. After that, one of the paths may be merged into the other, that is, the verticesb1, ...,bkcan be effectively erased:Help Vanya determine if it possible to make the tree into a path via a sequence of described operations, and if the answer is positive, also determine the shortest length of such path.InputThe first line of input contains the number of verticesn(2 ≤n≤ 2·105).Nextn- 1lines describe edges of the tree. Each of these lines contains two space-separated integersuandv(1 ≤u,v≤n,u≠v) — indices of endpoints of the corresponding edge. It is guaranteed that the given graph is a tree.OutputIf it is impossible to obtain a path, print-1. Otherwise, print the minimum number of edges in a possible path.ExamplesInput61 22 32 44 51 6Output3Input71 21 33 41 55 66 7Output-1NoteIn the first sample case, a path of three edges is obtained after merging paths2 - 1 - 6and2 - 4 - 5.It is impossible to perform any operation in the second sample case. For example, it is impossible to merge paths1 - 3 - 4and1 - 5 - 6, since vertex 6 additionally has a neighbour 7 that is not present in the corresponding path.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "7804a637", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices ($2 \\le n \\le 2 \\cdot 10^5$).  \n\nYou can perform the following operation multiple times:\n\n1. Choose a vertex $v$.\n2. Find two disjoint paths of equal length starting at $v$.  Let the paths be $a_0 = v, a_1, ..., a_k$ and $b_0 = v, b_1, ..., b_k$.  \n3.  The vertices $a_1, ..., a_k$ and $b_1, ..., b_k$ must not have any neighbors in the tree other than the vertices directly connected to them in their respective paths.\n4. Merge one of the paths into the other by effectively removing the vertices $b_1, ..., b_k$.\n\nDetermine if it is possible to transform the tree into a path using these operations. If it is possible, find the shortest possible length of the resulting path (the number of edges). If it is not possible, output -1."}, {"prompt_md5": "32f94c10", "template_md5": "465699a0", "result": "You are given a tree (a connected graph with no cycles). You can repeatedly choose a vertex and two paths of equal length branching from it.  You can then merge one of these paths into the other, effectively removing the vertices on the merged path.  \n\nDetermine if it's possible to transform the tree into a single path using this operation, and if so, find the shortest possible length of that path."}]}