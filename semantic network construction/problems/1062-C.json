{"uid": "1062-C", "url": "https://codeforces.com/contest/1062/problem/C", "tags": ["greedy", " implementation", " math"], "title": "1062-C", "statement": "C. Banh-mitime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputJATC loves Banh-mi (a Vietnamese food). His affection for Banh-mi is so much that he always has it for breakfast. This morning, as usual, he buys a Banh-mi and decides to enjoy it in a special way.First, he splits the Banh-mi into $$$n$$$ parts, places them on a row and numbers them from $$$1$$$ through $$$n$$$. For each part $$$i$$$, he defines thedeliciousnessof the part as $$$x_i \\\\in \\\\{0, 1\\\\}$$$. JATC's going to eat those parts one by one. At each step, he chooses arbitrary remaining part and eats it. Suppose that part is the $$$i$$$-th part then hisenjoymentof the Banh-mi will increase by $$$x_i$$$ and the deliciousness of all the remaining parts will also increase by $$$x_i$$$. The initial enjoyment of JATC is equal to $$$0$$$.For example, suppose the deliciousness of $$$3$$$ parts are $$$[0, 1, 0]$$$. If JATC eats the second part then his enjoyment will become $$$1$$$ and the deliciousness of remaining parts will become $$$[1, \\\\_, 1]$$$. Next, if he eats the first part then his enjoyment will become $$$2$$$ and the remaining parts will become $$$[\\\\_, \\\\_, 2]$$$. After eating the last part, JATC's enjoyment will become $$$4$$$.However, JATC doesn't want to eat all the parts but to save some for later. He gives you $$$q$$$ queries, each of them consisting of two integers $$$l_i$$$ and $$$r_i$$$. For each query, you have to let him know what is the maximum enjoyment he can get if he eats all the parts with indices in the range $$$[l_i, r_i]$$$ in some order.All the queries are independent of each other. Since the answer to the query could be very large, print it modulo $$$10^9+7$$$.InputThe first line contains two integers $$$n$$$ and $$$q$$$ ($$$1 \\\\le n, q \\\\le 100\\\\,000$$$).The second line contains a string of $$$n$$$ characters, each character is either '0' or '1'. The $$$i$$$-th character defines the deliciousness of the $$$i$$$-th part.Each of the following $$$q$$$ lines contains two integers $$$l_i$$$ and $$$r_i$$$ ($$$1 \\\\le l_i \\\\le r_i \\\\le n$$$) — the segment of the corresponding query.OutputPrint $$$q$$$ lines, where $$$i$$$-th of them contains a single integer — the answer to the $$$i$$$-th query modulo $$$10^9 + 7$$$.ExamplesInput4 210111 43 4Output143Input3 21111 23 3Output31NoteIn the first example:For query $$$1$$$: One of the best ways for JATC to eats those parts is in this order: $$$1$$$, $$$4$$$, $$$3$$$, $$$2$$$.For query $$$2$$$: Both $$$3$$$, $$$4$$$ and $$$4$$$, $$$3$$$ ordering give the same answer.In the second example, any order of eating parts leads to the same answer.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "dd2a34eb", "template_md5": "35d339e4", "result": "You are given a string of length $n$ consisting of '0's and '1's. Each '1' represents a part of a food item with a certain deliciousness value.  \n\nYou are also given $q$ queries, each query is a range $[l_i, r_i]$ within the string. For each query, you need to find the maximum total deliciousness that can be obtained by eating all the parts within the given range in some order. \n\nThe deliciousness of a part increases the deliciousness of all remaining parts by its own value when eaten.\n\nThe answer to each query should be printed modulo $10^9 + 7$."}, {"prompt_md5": "3eaa8470", "template_md5": "465699a0", "result": "You are given a sequence of 0s and 1s.  You can choose any subsequence of this sequence and eat it.  Each 1 you eat increases your enjoyment by 1, and also increases the value of all remaining elements in the sequence by 1.  You are given multiple ranges of indices. For each range, find the maximum enjoyment you can achieve by eating only the elements in that range."}]}