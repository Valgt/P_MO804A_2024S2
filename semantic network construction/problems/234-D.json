{"uid": "234-D", "url": "https://codeforces.com/contest/234/problem/D", "tags": ["implementation"], "title": "234-D", "statement": "D. Cinematime limit per test1 secondmemory limit per test256 megabytesinputinput.txtoutputoutput.txtOverall there aremactors in Berland. Each actor has a personal identifier — an integer from1tom(distinct actors have distinct identifiers). Vasya likes to watch Berland movies with Berland actors, and he haskfavorite actors. He watched the movie trailers for the next month and wrote the following information for every movie: the movie title, the number of actors who starred in it, and the identifiers of these actors. Besides, he managed to copy the movie titles and how many actors starred there, but he didn't manage to write down the identifiers of some actors. Vasya looks at his records and wonders which movies may be his favourite, and which ones may not be. Once Vasya learns the exact cast of all movies, his favorite movies will be determined as follows: a movie becomes favorite movie, if no other movie from Vasya's list has more favorite actors.Help the boy to determine the following for each movie:whether it surely will be his favourite movie;whether it surely won't be his favourite movie;can either be favourite or not.InputThe first line of the input contains two integersmandk(1 ≤m≤ 100, 1 ≤k≤m) — the number of actors in Berland and the number of Vasya's favourite actors.The second line containskdistinct integersai(1 ≤ai≤m) — the identifiers of Vasya's favourite actors.The third line contains a single integern(1 ≤n≤ 100) — the number of movies in Vasya's list.Then follownblocks of lines, each block contains a movie's description. Thei-th movie's description contains three lines:the first line contains stringsi(siconsists of lowercase English letters and can have the length of from1to10characters, inclusive) — the movie's title,the second line contains a non-negative integerdi(1 ≤di≤m) — the number of actors who starred in this movie,the third line hasdiintegersbi,j(0 ≤bi,j≤m) — the identifiers of the actors who star in this movie. Ifbi,j= 0, than Vasya doesn't remember the identifier of thej-th actor. It is guaranteed that the list of actors for a movie doesn't contain the same actors.All movies have distinct names. The numbers on the lines are separated by single spaces.OutputPrintnlines in the output. In thei-th line print:0, if thei-th movie will surely be the favourite;1, if thei-th movie won't surely be the favourite;2, if thei-th movie can either be favourite, or not favourite.ExamplesInput5 31 2 36firstfilm30 0 0secondfilm40 0 4 5thirdfilm12fourthfilm15fifthfilm14sixthfilm21 0Output221112Input5 31 3 54jumanji30 0 0theeagle51 2 3 4 0matrix32 4 0sourcecode22 4Output2011NoteNote to the second sample:Moviejumanjican theoretically have from 1 to 3 Vasya's favourite actors.Movietheeaglehas all three favourite actors, as the actor Vasya failed to remember, can only have identifier 5.Moviematrixcan have exactly one favourite actor.Moviesourcecodedoesn't have any favourite actors.Thus, movietheeaglewill surely be favourite, moviesmatrixandsourcecodewon't surely be favourite, and moviejumanjican be either favourite (if it has all three favourite actors), or not favourite.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d9ac3195", "template_md5": "35d339e4", "result": "There are $m$ actors.  You know $k$ of them are favorites. You have a list of $n$ movies. For each movie, you know the title, the number of actors in it, and some of the actors' IDs. Some actor IDs are missing.\n\nDetermine for each movie:\n\n* **0:** If it will definitely be a favorite movie (meaning no other movie has more favorite actors).\n* **1:** If it will definitely not be a favorite movie.\n* **2:** If it could be a favorite or not. \n\n\nA movie is a favorite if it has more favorite actors than any other movie on the list."}, {"prompt_md5": "49bfc442", "template_md5": "465699a0", "result": "You are given a list of movies and the number of actors in each movie. You also have a list of favorite actors. For each movie, determine if it will definitely be a favorite movie (has more favorite actors than any other movie), definitely not a favorite movie, or could be either.  Some movies have missing actor information."}]}