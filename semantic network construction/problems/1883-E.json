{"uid": "1883-E", "url": "https://codeforces.com/contest/1883/problem/E", "tags": ["bitmasks", " greedy"], "title": "1883-E", "statement": "E. Look Backtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array of integers $$$a_1, a_2, \\\\ldots, a_n$$$. You need to make it non-decreasing with the minimum number of operations. In one operation, you do the following:Choose an index $$$1 \\\\leq i \\\\leq n$$$,Set $$$a_i = a_i \\\\cdot 2$$$.An array $$$b_1, b_2, \\\\ldots, b_n$$$ is non-decreasing if $$$b_i \\\\leq b_{i+1}$$$ for all $$$1 \\\\leq i < n$$$.InputEach test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^4$$$) — the number of test cases. This is followed by their description.The first line of each test case contains an integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 10^5$$$) — the size of the array $$$a$$$.The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\leq a_i \\\\leq 10^9$$$).It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output the minimum number of operations needed to make the array non-decreasing.ExampleInput91122 133 2 147 1 5 3511 2 15 7 1061 8 2 16 8 162624323799 708290323122 1 1 3 3 11 12 22 45 777 777 15001212 11 10 9 8 7 6 5 4 3 2 1Output0 1 3 6 10 3 0 2 66NoteNo operations are needed in the first test case.In the second test case, we need to choose $$$i = 2$$$, after which the array will be $$$[2, 2]$$$.In the third test case, we can apply the following operations:Choose $$$i = 3$$$, after which the array will be $$$[3, 2, 2]$$$,Choose $$$i = 3$$$, after which the array will be $$$[3, 2, 4]$$$,Choose $$$i = 2$$$, after which the array will be $$$[3, 4, 4]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f7e65cf0", "template_md5": "35d339e4", "result": "You are given an array of integers $a_1, a_2, ..., a_n$.  You can make the array non-decreasing by performing the following operation any number of times:\n\n* Choose an index $1 \\le i \\le n$ and set $a_i = a_i \\cdot 2$.\n\nFind the minimum number of operations needed to make the array non-decreasing.\n\n**Input:**\n\n* The first line contains an integer $t$ ($1 \\le t \\le 10^4$) representing the number of test cases.\n* For each test case:\n    * The first line contains an integer $n$ ($1 \\le n \\le 10^5$) representing the size of the array.\n    * The second line contains $n$ integers $a_1, a_2, ..., a_n$ ($1 \\le a_i \\le 10^9$).\n\n**Output:**\n\nFor each test case, output the minimum number of operations needed to make the array non-decreasing."}, {"prompt_md5": "5dc2d6c3", "template_md5": "465699a0", "result": "You are given a list of numbers. You can double any number in the list. What is the fewest times you need to double a number to make the list sorted in increasing order?"}]}