{"uid": "1704-H1", "url": "https://codeforces.com/contest/1704/problem/H1", "tags": ["combinatorics", " constructive algorithms", " dp", " fft", " math"], "title": "1704-H1", "statement": "H1. Game of AI (easy version)time limit per test2.5 secondsmemory limit per test1024 megabytesinputstandard inputoutputstandard outputThis is the easy version of this problem. The difference between easy and hard versions is the constraint on $$$k$$$ and the time limit. Also, in this version of the problem, you only need to calculate the answer when $$$n=k$$$. You can make hacks only if both versions of the problem are solved.Cirno is playing a war simulator game with $$$n$$$ towers (numbered from $$$1$$$ to $$$n$$$) and $$$n$$$ bots (numbered from $$$1$$$ to $$$n$$$). The $$$i$$$-th tower is initially occupied by the $$$i$$$-th bot for $$$1 \\\\le i \\\\le n$$$.Before the game, Cirno first chooses a permutation $$$p = [p_1, p_2, \\\\ldots, p_n]$$$ of length $$$n$$$ (A permutation of length $$$n$$$ is an array of length $$$n$$$ where each integer between $$$1$$$ and $$$n$$$ appears exactly once). After that, she can choose a sequence $$$a = [a_1, a_2, \\\\ldots, a_n]$$$ ($$$1 \\\\le a_i \\\\le n$$$ and $$$a_i \\\\ne i$$$ for all $$$1 \\\\le i \\\\le n$$$).The game has $$$n$$$ rounds of attacks. In the $$$i$$$-th round, if the $$$p_i$$$-th bot is still in the game, it will begin its attack, and as the result the $$$a_{p_i}$$$-th tower becomes occupied by the $$$p_i$$$-th bot; the bot that previously occupied the $$$a_{p_i}$$$-th tower will no longer occupy it. If the $$$p_i$$$-th bot is not in the game, nothing will happen in this round.After each round, if a bot doesn't occupy any towers, it will be eliminated and leave the game. Please note that no tower can be occupied by more than one bot, but one bot can occupy more than one tower during the game.At the end of the game, Cirno will record the result as a sequence $$$b = [b_1, b_2, \\\\ldots, b_n]$$$, where $$$b_i$$$ is the number of the bot that occupies the $$$i$$$-th tower at the end of the game.However, as a mathematics master, she wants you to solve the following counting problem instead of playing games:Count the number of different pairs of sequences $$$a$$$ and $$$b$$$ that we can get from all possible choices of sequence $$$a$$$ and permutation $$$p$$$.Since this number may be large, output it modulo $$$M$$$.InputThe only line contains two positive integers $$$k$$$ and $$$M$$$ ($$$1\\\\le k\\\\le 5000$$$, $$$2\\\\le M\\\\le 10^9$$$ ). It is guaranteed that $$$2^{18}$$$ is a divisor of $$$M-1$$$ and $$$M$$$ is a prime number.You need to calculate the answer for $$$n=k$$$.OutputOutput a single integer â€” the number of different pairs of sequences for $$$n=k$$$ modulo $$$M$$$.ExamplesInput1 998244353Output0Input2 998244353Output2Input3 998244353Output24Input8 998244353Output123391016NoteFor $$$n=1$$$, no valid sequence $$$a$$$ exists. We regard the answer as $$$0$$$.For $$$n=2$$$, there is only one possible array $$$a$$$: $$$[2, 1]$$$.For array $$$a$$$ is $$$[2, 1]$$$ and permutation $$$p$$$ is $$$[1, 2]$$$, the sequence $$$b$$$ will be $$$[1, 1]$$$ after all rounds have finished. The details for each rounds:In the first round, the first bot will begin its attack and successfully capture the tower $$$2$$$. After this round, the second bot will be eliminated and leave the game as all of its towers are occupied by other bots.In the second round, the second bot is not in the game.For array $$$a$$$ is $$$[2, 1]$$$ and permutation $$$p$$$ is $$$[2, 1]$$$, the sequence $$$b$$$ will be $$$[2, 2]$$$ after all rounds have finished. The details for each rounds:In the first round, the second bot will begin its attack and successfully capture the tower $$$1$$$. After this round, the first bot will be eliminated and leave the game as all of its towers are occupied by other bots.In the second round, the first bot is not in the game.So the number of different pairs of sequences $$$(a,b)$$$ is $$$2$$$ ($$$[2, 1]$$$, $$$[1, 1]$$$ and $$$[2, 1]$$$, $$$[2, 2]$$$) for $$$n=2$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "32bed155", "template_md5": "35d339e4", "result": "You are given an integer $k$.  \n\nYou need to find the number of possible pairs of sequences $(a, b)$ that can be generated under the following rules:\n\n* **Sequence $a$:**  A sequence of $k$ integers between 1 and $k$ (inclusive), where each integer appears exactly once.\n* **Sequence $p$:** A permutation of the integers from 1 to $k$.\n\n**Game Rules:**\n\n1.  In each round, the bot numbered $p_i$ (where $i$ is the current round number) attacks.\n2.  If bot $p_i$ is still in the game, it captures the tower numbered $a_{p_i}$. The bot previously occupying that tower is eliminated.\n3.  If bot $p_i$ is not in the game, nothing happens in that round.\n4.  A bot is eliminated if it no longer occupies any towers.\n\n**Output:**\n\nAfter all rounds, the final state of the towers is represented by sequence $b$, where $b_i$ is the number of the bot occupying tower $i$.\n\nYou need to count the number of distinct pairs $(a, b)$ that can be generated from all possible choices of $a$ and $p$.  Output this count modulo $M$, where $M$ is a given prime number.\n\n\n\nLet me know if you'd like me to elaborate on any specific part of the problem!"}, {"prompt_md5": "90748000", "template_md5": "465699a0", "result": "You are given a number *n*.  Find the number of ways to arrange two lists of numbers, *a* and *b*, where:\n\n* List *a* has *n* numbers, each between 1 and *n*, and no number appears twice.\n* List *b* is the result of a game where you start with *n* objects, each assigned to a number from 1 to *n*.  In each round, you choose an object based on a specific rule, and the object moves to a new location based on list *a*.  Objects that are not chosen in a round are removed.\n\nThe final arrangement of objects in list *b* depends on the order of the lists *a* and the specific rules of the game.  \n\nCount the number of unique pairs of lists *a* and *b* that can be created, and output the result modulo *M*."}]}