{"uid": "1495-C", "url": "https://codeforces.com/contest/1495/problem/C", "tags": ["constructive algorithms", " graphs"], "title": "1495-C", "statement": "C. Garden of the Suntime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are many sunflowers in the Garden of the Sun.Garden of the Sun is a rectangular table with $$$n$$$ rows and $$$m$$$ columns, where the cells of the table are farmlands. All of the cells grow a sunflower on it. Unfortunately, one night, the lightning stroke some (possibly zero) cells, and sunflowers on those cells were burned into ashes. In other words, those cells struck by the lightning became empty. Magically,any two empty cells have no common points(neither edges nor corners).Now the owner wants to remove some (possibly zero) sunflowers to reach the following two goals:When you are on an empty cell, you can walk to any other empty cell. In other words, those empty cells are connected.There isexactly onesimple path between any two empty cells. In other words, there is no cycle among the empty cells.You can walk from an empty cell to another if they share a common edge.Could you please give the owner a solution that meets all her requirements?Note that you are not allowed to plant sunflowers. Youdon't needto minimize the number of sunflowers you remove. It can be shown that the answer always exists.InputThe input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1\\\\le t\\\\le 10^4$$$) — the number of test cases. The description of the test cases follows.The first line contains two integers $$$n$$$, $$$m$$$ ($$$1 \\\\le n,m \\\\le 500$$$) — the number of rows and columns.Each of the next $$$n$$$ lines contains $$$m$$$ characters. Each character is either 'X' or '.', representing an empty cell and a cell that grows a sunflower, respectively.It is guaranteed that the sum of $$$n \\\\cdot m$$$ for all test cases does not exceed $$$250\\\\,000$$$.OutputFor each test case, print $$$n$$$ lines. Each should contain $$$m$$$ characters, representing one row of the table. Each character should be either 'X' or '.', representing an empty cell and a cell with a sunflower, respectively.If there are multiple answers, you can print any. It can be shown that the answer always exists.ExampleInput5 3 3 X.X ... X.X 4 4 .... .X.X .... .X.X 5 5 .X... ....X .X... ..... X.X.X 1 10 ....X.X.X. 2 2 .. ..OutputXXX ..X XXX XXXX .X.X .X.. .XXX .X... .XXXX .X... .X... XXXXX XXXXXXXXXX .. ..NoteLet's use $$$(x,y)$$$ to describe the cell on $$$x$$$-th row and $$$y$$$-th column.In the following pictures white, yellow, and blue cells stand for the cells that grow a sunflower, the cells lightning stroke, and the cells sunflower on which are removed, respectively.In the first test case, one possible solution is to remove sunflowers on $$$(1,2)$$$, $$$(2,3)$$$ and $$$(3 ,2)$$$.Another acceptable solution is to remove sunflowers on $$$(1,2)$$$, $$$(2,2)$$$ and $$$(3,2)$$$.This output is considered wrong because there are 2 simple paths between any pair of cells (there is a cycle). For example, there are 2 simple paths between $$$(1,1)$$$ and $$$(3,3)$$$.$$$(1,1)\\\\to (1,2)\\\\to (1,3)\\\\to (2,3)\\\\to (3,3)$$$$$$(1,1)\\\\to (2,1)\\\\to (3,1)\\\\to (3,2)\\\\to (3,3)$$$This output is considered wrong because you can't walk from $$$(1,1)$$$ to $$$(3,3)$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ef5882c8", "template_md5": "35d339e4", "result": "You are given a rectangular grid of cells. Some cells contain sunflowers ('.'), and some are empty ('X').  Lightning struck some of the cells, turning them empty.\n\nYour task is to remove sunflowers from the grid so that:\n\n1. All empty cells are connected (you can walk from any empty cell to any other empty cell by moving to an adjacent cell).\n2. There is exactly one path between any two empty cells (no cycles).\n\nYou can remove any number of sunflowers, but you cannot plant new ones. \n\nInput:\n\n* The first line contains the number of test cases,  *t*.\n* For each test case:\n    * The first line contains two integers, *n* and *m*, representing the number of rows and columns of the grid.\n    * The next *n* lines each contain *m* characters, representing the grid. '.' represents a sunflower, and 'X' represents an empty cell.\n\nOutput:\n\n* For each test case, print the modified grid with sunflowers removed."}, {"prompt_md5": "cfa05a4e", "template_md5": "465699a0", "result": "You are given a grid of cells. Some cells are empty and some have sunflowers.  You need to remove sunflowers from the grid so that:\n\n1. Empty cells are connected (you can walk from any empty cell to any other empty cell).\n2. There is only one path between any two empty cells. \n\n\n\nLet me know if you'd like help with the code!"}]}