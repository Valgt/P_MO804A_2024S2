{"uid": "377-B", "url": "https://codeforces.com/contest/377/problem/B", "tags": ["binary search", " data structures", " greedy", " sortings"], "title": "377-B", "statement": "B. Preparing for the Contesttime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutSoon there will be held the world's largest programming contest, but the testing system still hasmbugs. The contest organizer, a well-known university, has no choice but to attract university students to fix all the bugs. The university hasnstudents able to perform such work. The students realize that they are the only hope of the organizers, so they don't want to work for free: thei-th student wants to getci'passes' in his subjects (regardless of the volume of his work).Bugs, like students, are not the same: every bug is characterized by complexityaj, and every student has the level of his abilitiesbi. Studentican fix a bugjonly if the level of his abilities is not less than the complexity of the bug:bi≥aj, and he does it in one day. Otherwise, the bug will have to be fixed by another student. Of course, no student can work on a few bugs in one day. All bugs are not dependent on each other, so they can be corrected in any order, and different students can work simultaneously.The university wants to fix all the bugs as quickly as possible, but giving the students the total of not more thanspasses. Determine which students to use for that and come up with the schedule of work saying which student should fix which bug.InputThe first line contains three space-separated integers:n,mands(1 ≤n,m≤ 105,0 ≤s≤ 109) — the number of students, the number of bugs in the system and the maximum number of passes the university is ready to give the students.The next line containsmspace-separated integersa1,a2, ...,am(1 ≤ai≤ 109) — the bugs' complexities.The next line containsnspace-separated integersb1,b2, ...,bn(1 ≤bi≤ 109) — the levels of the students' abilities.The next line containsnspace-separated integersc1,c2, ...,cn(0 ≤ci≤ 109) — the numbers of the passes the students want to get for their help.OutputIf the university can't correct all bugs print \"NO\".Otherwise, on the first line print \"YES\", and on the next line printmspace-separated integers: thei-th of these numbers should equal the number of the student who corrects thei-th bug in the optimal answer. The bugs should be corrected as quickly as possible (you must spend the minimum number of days), and the total given passes mustn't exceeds. If there are multiple optimal answers, you can output any of them.ExamplesInput3 4 91 3 1 22 1 34 3 6OutputYES2 3 2 3Input3 4 102 3 1 22 1 34 3 6OutputYES1 3 1 3Input3 4 92 3 1 22 1 34 3 6OutputYES3 3 2 3Input3 4 51 3 1 22 1 35 3 6OutputNONoteConsider the first sample.The third student (with level 3) must fix the 2nd and 4th bugs (complexities 3 and 2 correspondingly) and the second student (with level 1) must fix the 1st and 3rd bugs (their complexity also equals 1). Fixing each bug takes one day for each student, so it takes 2 days to fix all bugs (the students can work in parallel).The second student wants 3 passes for his assistance, the third student wants 6 passes. It meets the university's capabilities as it is ready to give at most 9 passes.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a4dc5fdb", "template_md5": "35d339e4", "result": "There are $n$ students and $m$ bugs. Each bug has a complexity level $a_i$ and each student has an ability level $b_i$. A student can fix a bug only if their ability level is greater than or equal to the bug's complexity level.  \n\nThe university wants to fix all the bugs as quickly as possible.  Each student wants $c_i$ passes for their work, and the university can give a maximum of $s$ passes in total.\n\nDetermine the minimum number of days required to fix all the bugs, assigning each bug to a student such that:\n\n*  A student can only fix one bug per day.\n*  A student's ability level must be greater than or equal to the bug's complexity level.\n*  The total number of passes given to the students does not exceed $s$.\n\nIf it's impossible to fix all the bugs within these constraints, output \"NO\". Otherwise, output \"YES\" and a list of integers representing the student assigned to each bug."}, {"prompt_md5": "eb433b8b", "template_md5": "465699a0", "result": "You have a set of tasks of varying difficulty and a set of workers with varying skill levels. Each worker can only do a task if their skill level is high enough.  You need to assign tasks to workers to complete them as quickly as possible, while making sure each worker doesn't get more than a certain number of rewards.  Determine if it's possible to complete all tasks and, if so, assign the tasks to workers in an optimal way."}]}