{"uid": "1100-B", "url": "https://codeforces.com/contest/1100/problem/B", "tags": ["data structures", " implementation"], "title": "1100-B", "statement": "B. Build a Contesttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputArkady coordinates rounds on some not really famous competitive programming platform. Each round features $$$n$$$ problems of distinct difficulty, the difficulties are numbered from $$$1$$$ to $$$n$$$.To hold a round Arkady needs $$$n$$$ new (not used previously) problems, one for each difficulty. As for now, Arkady creates all the problems himself, but unfortunately, he can't just create a problem of a desired difficulty. Instead, when he creates a problem, he evaluates its difficulty from $$$1$$$ to $$$n$$$ and puts it into the problems pool.At each moment when Arkady can choose a set of $$$n$$$ new problems of distinct difficulties from the pool, he holds a round with these problems and removes them from the pool. Arkady always creates one problem at a time, so if he can hold a round after creating a problem, he immediately does it.You are given a sequence of problems' difficulties in the order Arkady created them. For each problem, determine whether Arkady held the round right after creating this problem, or not. Initially the problems pool is empty.InputThe first line contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\\\le n, m \\\\le 10^5$$$) — the number of difficulty levels and the number of problems Arkady created.The second line contains $$$m$$$ integers $$$a_1, a_2, \\\\ldots, a_m$$$ ($$$1 \\\\le a_i \\\\le n$$$) — the problems' difficulties in the order Arkady created them.OutputPrint a line containing $$$m$$$ digits. The $$$i$$$-th digit should be $$$1$$$ if Arkady held the round after creation of the $$$i$$$-th problem, and $$$0$$$ otherwise.ExamplesInput3 11 2 3 1 2 2 2 3 2 2 3 1Output00100000001Input4 8 4 1 3 3 2 3 3 3Output00001000NoteIn the first example Arkady held the round after the first three problems, because they are of distinct difficulties, and then only after the last problem.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "dd894510", "template_md5": "35d339e4", "result": "There are $n$ difficulty levels for problems.  A round requires $n$ new problems, one for each difficulty level.  Problems are created one at a time.  \n\nYou are given a list of $m$ problem difficulties, in the order they were created.  For each problem, determine if a round was held immediately after it was created.\n\nInitially, there are no problems. A round can be held when $n$ new problems of distinct difficulties are available. \n\n\nInput:\n\n* The first line contains two integers $n$ and $m$ ($1 \\le n, m \\le 10^5$) — the number of difficulty levels and the number of problems created.\n* The second line contains $m$ integers $a_1, a_2, ..., a_m$ ($1 \\le a_i \\le n$) — the problem difficulties in the order they were created.\n\nOutput:\n\nPrint a line containing $m$ digits. The $i$-th digit should be 1 if a round was held after the $i$-th problem was created, and 0 otherwise."}, {"prompt_md5": "154b53f9", "template_md5": "465699a0", "result": "You are given a list of numbers representing the difficulty of items created one by one.  Determine for each item if a set of  $n$ unique items (one for each difficulty level) was formed immediately after its creation."}]}