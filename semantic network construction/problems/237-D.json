{"uid": "237-D", "url": "https://codeforces.com/contest/237/problem/D", "tags": ["dfs and similar", " graphs", " greedy", " trees"], "title": "237-D", "statement": "D. T-decompositiontime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutYou've got a undirected trees, consisting ofnnodes. Your task is to build an optimal T-decomposition for it. Let's define a T-decomposition as follows.Let's denote the set of all nodessasv. Let's consider an undirected treet, whose nodes are some non-empty subsets ofv, we'll call themxi. The treetis a T-decomposition ofs, if the following conditions holds:the union of allxiequalsv;for any edge(a,b)of treesexists the tree nodet, containing bothaandb;if the nodes of the treetxiandxjcontain the nodeaof the trees, then all nodes of the treet, lying on the path fromxitoxjalso contain nodea. So this condition is equivalent to the following: all nodes of the treet, that contain nodeaof the trees, form a connected subtree of treet.There are obviously many distinct treest, that are T-decompositions of the trees. For example, a T-decomposition is a tree that consists of a single node, equal to setv.Let's define the cardinality of nodexias the number of nodes in trees, containing in the node. Let's choose the node with the maximum cardinality int. Let's assume that its cardinality equalsw. Then the weight of T-decompositiontis valuew. The optimal T-decomposition is the one with the minimum weight.Your task is to find the optimal T-decomposition of the given treesthat has the minimum number of nodes.InputThe first line contains a single integern(2 ≤n≤ 105), that denotes the number of nodes in trees.Each of the followingn- 1lines contains two space-separated integersai,bi(1 ≤ai,bi≤n;ai≠bi), denoting that the nodes of treeswith indicesaiandbiare connected by an edge.Consider the nodes of treesindexed from 1 ton. It is guaranteed thatsis a tree.OutputIn the first line print a single integermthat denotes the number of nodes in the required T-decomposition.Then printmlines, containing descriptions of the T-decomposition nodes. In thei-th(1 ≤i≤m)of them print the description of nodexiof the T-decomposition. The description of each nodexishould start from an integerki, that represents the number of nodes of the initial trees, that are contained in the nodexi. Then you should printkidistinct space-separated integers — the numbers of nodes froms, contained inxi, in arbitrary order.Then printm- 1lines, each consisting two integerspi,qi(1 ≤pi,qi≤m;pi≠qi). The pair of integerspi,qimeans there is an edge between nodesxpiandxqiof T-decomposition.The printed T-decomposition should be the optimal T-decomposition for the given treesand have the minimum possible number of nodes among all optimal T-decompositions. If there are multiple optimal T-decompositions with the minimum number of nodes, print any of them.ExamplesInput21 2Output12 1 2Input31 22 3Output22 1 22 2 31 2Input42 13 14 1Output32 2 12 3 12 4 11 22 3", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "2ef2d6df", "template_md5": "35d339e4", "result": "You are given a tree with $n$ nodes.  A T-decomposition of the tree is a tree where each node represents a subset of the original tree's nodes, and the following conditions hold:\n\n1. The union of all the subsets represented by the nodes in the T-decomposition tree equals the set of all nodes in the original tree.\n2. For any edge $(a,b)$ in the original tree, there exists a node in the T-decomposition tree that contains both nodes $a$ and $b$.\n3. If nodes $x_i$ and $x_j$ in the T-decomposition tree both contain node $a$, then all nodes on the path from $x_i$ to $x_j$ in the T-decomposition tree also contain node $a$.\n\nThe weight of a T-decomposition is the size of the node in the T-decomposition tree with the largest number of nodes from the original tree.\n\nYour task is to find the T-decomposition with the minimum weight. Output the number of nodes in the T-decomposition and a description of each node (the number of nodes it contains and the list of those nodes). Also output the edges connecting the nodes in the T-decomposition tree."}, {"prompt_md5": "028290f9", "template_md5": "465699a0", "result": "You are given a tree with a certain number of nodes.  You need to divide the tree into groups of nodes, where each group forms a separate node in a new tree.  The goal is to find the smallest possible number of groups while ensuring that:\n\n* All nodes from the original tree are included in some group.\n* If two nodes in the original tree are connected, then they must be in the same group in the new tree. \n\n\n\nLet me know if you'd like me to elaborate on any of these points."}]}