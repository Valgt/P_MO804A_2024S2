{"uid": "1303-E", "url": "https://codeforces.com/contest/1303/problem/E", "tags": ["dp", " strings"], "title": "1303-E", "statement": "E. Erase Subsequencestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string $$$s$$$. You can build new string $$$p$$$ from $$$s$$$ using the following operationno more than two times:choose any subsequence $$$s_{i_1}, s_{i_2}, \\\\dots, s_{i_k}$$$ where $$$1 \\\\le i_1 < i_2 < \\\\dots < i_k \\\\le |s|$$$;erase the chosen subsequence from $$$s$$$ ($$$s$$$ can become empty);concatenate chosen subsequence to the right of the string $$$p$$$ (in other words, $$$p = p + s_{i_1}s_{i_2}\\\\dots s_{i_k}$$$).Of course, initially the string $$$p$$$ is empty.For example, let $$$s = \\\\text{ababcd}$$$. At first, let's choose subsequence $$$s_1 s_4 s_5 = \\\\text{abc}$$$ — we will get $$$s = \\\\text{bad}$$$ and $$$p = \\\\text{abc}$$$. At second, let's choose $$$s_1 s_2 = \\\\text{ba}$$$ — we will get $$$s = \\\\text{d}$$$ and $$$p = \\\\text{abcba}$$$. So we can build $$$\\\\text{abcba}$$$ from $$$\\\\text{ababcd}$$$.Can you build a given string $$$t$$$ using the algorithm above?InputThe first line contains the single integer $$$T$$$ ($$$1 \\\\le T \\\\le 100$$$) — the number of test cases.Next $$$2T$$$ lines contain test cases — two per test case. The first line contains string $$$s$$$ consisting of lowercase Latin letters ($$$1 \\\\le |s| \\\\le 400$$$) — the initial string.The second line contains string $$$t$$$ consisting of lowercase Latin letters ($$$1 \\\\le |t| \\\\le |s|$$$) — the string you'd like to build.It's guaranteed that the total length of strings $$$s$$$ doesn't exceed $$$400$$$.OutputPrint $$$T$$$ answers — one per test case. PrintYES(case insensitive) if it's possible to build $$$t$$$ andNO(case insensitive) otherwise.ExampleInput4 ababcd abcba a b defi fed xyz xOutputYES NO NO YES", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "b49e0c23", "template_md5": "35d339e4", "result": "You are given two strings,  *s* and *t*. You can perform the following operation on *s* no more than two times:\n\n1. Choose any subsequence of *s*.\n2. Remove that subsequence from *s*.\n3. Append the chosen subsequence to the end of another string *p* (which initially is empty).\n\nCan you build string *t* using this operation on string *s*?\n\nFor each test case, output \"YES\" if it's possible to build *t* and \"NO\" otherwise."}, {"prompt_md5": "99e43941", "template_md5": "465699a0", "result": "You are given two strings,  's' and 't'. You can build string 't' from string 's' by repeatedly doing the following:\n\n1. Choose any sequence of characters from 's'.\n2. Remove that sequence from 's'.\n3. Add the removed sequence to the end of 't'.\n\nYou can do this operation at most twice.  Determine if it's possible to build 't' from 's' using these rules."}]}