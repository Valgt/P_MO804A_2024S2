{"uid": "1083-A", "url": "https://codeforces.com/contest/1083/problem/A", "tags": ["data structures", " dp", " trees"], "title": "1083-A", "statement": "A. The Fair Nut and the Best Pathtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Fair Nut is going to travel to the Tree Country, in which there are $$$n$$$ cities. Most of the land of this country is covered by forest. Furthermore, the local road system forms a tree (connected graph without cycles). Nut wants to rent a car in the city $$$u$$$ and go by a simple path to city $$$v$$$. He hasn't determined the path, so it's time to do it. Note that chosen path can consist of only one vertex.A filling station is located in every city. Because of strange law, Nut can buy only $$$w_i$$$ liters of gasoline in the $$$i$$$-th city. We can assume, that he hasinfinite money. Each road has a length, and as soon as Nut drives through this road, the amount of gasoline decreases by length. Of course, Nut can't choose a path, which consists of roads, where he runs out of gasoline. He can buy gasoline ineveryvisited city, even inthe firstandthe last.He also wants to find the maximum amount of gasoline that he can have at the end of the path. Help him: count it.InputThe first line contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 3 \\\\cdot 10^5$$$) — the number of cities.The second line contains $$$n$$$ integers $$$w_1, w_2, \\\\ldots, w_n$$$ ($$$0 \\\\leq w_{i} \\\\leq 10^9$$$) — the maximum amounts of liters of gasoline that Nut can buy in cities.Each of the next $$$n - 1$$$ lines describes road and contains three integers $$$u$$$, $$$v$$$, $$$c$$$ ($$$1 \\\\leq u, v \\\\leq n$$$, $$$1 \\\\leq c \\\\leq 10^9$$$, $$$u \\\\ne v$$$), where $$$u$$$ and $$$v$$$ — cities that are connected by this road and $$$c$$$ — its length.It is guaranteed that graph of road connectivity is a tree.OutputPrint one number — the maximum amount of gasoline that he can have at the end of the path.ExamplesInput31 3 31 2 21 3 2Output3Input56 3 2 5 01 2 102 3 32 4 11 5 1Output7NoteThe optimal way in the first example is $$$2 \\\\to 1 \\\\to 3$$$.The optimal way in the second example is $$$2 \\\\to 4$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "2d41a406", "template_md5": "35d339e4", "result": "There are $n$ cities connected by a tree-shaped road network. Each city has a gas station where you can buy a maximum of $w_i$ liters of gasoline. You want to travel from city $u$ to city $v$ by car, and you need to find the maximum amount of gasoline you can have at the end of your trip.\n\nYou can buy gasoline in any city you visit, even at the starting and ending cities.  Each road has a length, and your gasoline decreases by that amount when you drive on it. You can't run out of gas during your trip.\n\nInput:\n\n* The first line contains an integer $n$ ($1 \\le n \\le 3 \\cdot 10^5$) representing the number of cities.\n* The second line contains $n$ integers $w_1, w_2, ..., w_n$ ($0 \\le w_i \\le 10^9$) representing the maximum gasoline you can buy in each city.\n* Each of the next $n-1$ lines describes a road with three integers $u$, $v$, and $c$ ($1 \\le u, v \\le n$, $1 \\le c \\le 10^9$, $u \\ne v$), where $u$ and $v$ are the cities connected by the road, and $c$ is the road's length.\n\nOutput:\n\nPrint a single integer representing the maximum amount of gasoline you can have at the end of your trip."}, {"prompt_md5": "6a251d1c", "template_md5": "465699a0", "result": "You are given a tree with $n$ cities, each city has a maximum amount of fuel you can buy there. You need to find the longest path in the tree where you can always buy enough fuel at each city to reach the next. Output the maximum amount of fuel you can have at the end of the path."}]}