{"uid": "1669-E", "url": "https://codeforces.com/contest/1669/problem/E", "tags": ["data structures", " math", " strings"], "title": "1669-E", "statement": "E. 2-Letter Stringstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputGiven $$$n$$$ strings, each of length $$$2$$$, consisting of lowercase Latin alphabet lettersfrom 'a' to 'k', output the number of pairs of indices $$$(i, j)$$$ such that $$$i < j$$$ and the $$$i$$$-th string and the $$$j$$$-th string differ in exactly one position.In other words, count the number of pairs $$$(i, j)$$$ ($$$i < j$$$) such that the $$$i$$$-th string and the $$$j$$$-th string haveexactlyone position $$$p$$$ ($$$1 \\\\leq p \\\\leq 2$$$) such that $$${s_{i}}_{p} \\\\neq {s_{j}}_{p}$$$.The answer may not fit into 32-bit integer type, so you should use 64-bit integers likelong longin C++ to avoid integer overflow.InputThe first line of the input contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 100$$$) — the number of test cases. The description of test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 10^5$$$) — the number of strings.Then follows $$$n$$$ lines, the $$$i$$$-th of which containing a single string $$$s_i$$$ of length $$$2$$$, consisting of lowercase Latin lettersfrom 'a' to 'k'.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.OutputFor each test case, print a single integer — the number of pairs $$$(i, j)$$$ ($$$i < j$$$) such that the $$$i$$$-th string and the $$$j$$$-th string haveexactlyone position $$$p$$$ ($$$1 \\\\leq p \\\\leq 2$$$) such that $$${s_{i}}_{p} \\\\neq {s_{j}}_{p}$$$.Please note, that the answer for some test cases won't fit into 32-bit integer type, so you should use at least 64-bit integer type in your programming language (likelong longfor C++).ExampleInput46abcbdbaaccef7aabbccaccabbaa4kkkkabab5jfjfjkjkjkOutput5 6 0 6NoteFor the first test case the pairs that differ in exactly one position are: (\"ab\", \"cb\"), (\"ab\", \"db\"), (\"ab\", \"aa\"), (\"cb\", \"db\") and (\"cb\", \"cc\").For the second test case the pairs that differ in exactly one position are: (\"aa\", \"ac\"), (\"aa\", \"ca\"), (\"cc\", \"ac\"), (\"cc\", \"ca\"), (\"ac\", \"aa\") and (\"ca\", \"aa\").For the third test case, the are no pairs satisfying the conditions.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "9a2855f5", "template_md5": "35d339e4", "result": "You are given $n$ strings, each of length 2, consisting of lowercase letters from 'a' to 'k'.  \n\nCount the number of pairs of indices $(i, j)$ where $i < j$ and the $i$-th string and the $j$-th string differ in exactly one position. \n\nIn other words, count the number of pairs $(i, j)$ ($i < j$) such that the $i$-th string and the $j$-th string have exactly one position $p$ ($1 \\le p \\le 2$) such that $s_i[p] \\neq s_j[p]$.\n\nThe answer may be too large to fit in a regular integer, so use a 64-bit integer data type."}, {"prompt_md5": "7df9365d", "template_md5": "465699a0", "result": "You are given a list of two-letter words. Count how many pairs of words in the list differ by exactly one letter."}]}