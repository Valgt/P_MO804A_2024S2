{"uid": "174-C", "url": "https://codeforces.com/contest/174/problem/C", "tags": ["data structures", " greedy"], "title": "174-C", "statement": "C. Range Incrementstime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutPolycarpus is an amateur programmer. Now he is analyzing a friend's program. He has already found there the functionrangeIncrement(l, r), that adds1to each element of some arrayafor all indexes in the segment[l,r]. In other words, this function does the following:function rangeIncrement(l, r)for i := l .. r doa[i] = a[i] + 1Polycarpus knows the state of the arrayaafter a series of function calls. He wants to determine the minimum number of function calls that lead to such state. In addition, he wants to find what function calls are needed in this case. It is guaranteed that the required number of calls does not exceed105.Before calls of functionrangeIncrement(l, r)all array elements equal zero.InputThe first input line contains a single integern(1 ≤n≤ 105) — the length of the arraya[1...n].The second line contains its integer space-separated elements,a[1],a[2], ...,a[n](0 ≤a[i] ≤ 105) after some series of function callsrangeIncrement(l, r).It is guaranteed that at least one element of the array is positive. It is guaranteed that the answer contains no more than105calls of functionrangeIncrement(l, r).OutputPrint on the first linet— the minimum number of calls of functionrangeIncrement(l, r), that lead to the array from the input data. It is guaranteed that this number will turn out not more than105.Then printtlines — the descriptions of function calls, one per line. Each line should contain two integersli,ri(1 ≤li≤ri≤n) — the arguments of thei-th callrangeIncrement(l, r). Calls can be applied in any order.If there are multiple solutions, you are allowed to print any of them.ExamplesInput61 2 1 1 4 1Output52 25 55 55 51 6Input51 0 1 0 1Output31 13 35 5NoteThe first sample requires a call for the entire array, and four additional calls:one for the segment [2,2] (i.e. the second element of the array),three for the segment [5,5] (i.e. the fifth element of the array).", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "56e3f281", "template_md5": "35d339e4", "result": "You are given an array of $n$ integers.  You know that the array was initially filled with zeros, and a function `rangeIncrement(l, r)` was applied multiple times. This function takes two integers, $l$ and $r$, and increments each element of the array from index $l$ to $r$ (inclusive) by 1.\n\nYour task is to:\n\n1. Determine the minimum number of times the `rangeIncrement` function was applied.\n2. List the specific calls to `rangeIncrement` that would result in the given array.\n\n**Input:**\n\n* The first line contains an integer $n$ (1 ≤ $n$ ≤ 10⁵) representing the size of the array.\n* The second line contains $n$ space-separated integers representing the elements of the array after the `rangeIncrement` function was applied.\n\n**Output:**\n\n* Print the minimum number of `rangeIncrement` calls.\n* Print $t$ lines, each containing two integers $l_i$ and $r_i$ (1 ≤ $l_i$ ≤ $r_i$ ≤ $n$), representing a call to `rangeIncrement(l_i, r_i)`.\n\n\n\n**Constraints:**\n\n* At least one element in the array is positive.\n* The number of `rangeIncrement` calls is at most 10⁵."}, {"prompt_md5": "7701b6f9", "template_md5": "465699a0", "result": "You are given an array of numbers.  Some numbers are positive, and you know that these numbers were created by repeatedly adding 1 to a range of numbers in the array.  Find the minimum number of times this operation was performed and list the ranges that were modified."}]}