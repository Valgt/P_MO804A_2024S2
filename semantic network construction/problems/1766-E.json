{"uid": "1766-E", "url": "https://codeforces.com/contest/1766/problem/E", "tags": ["binary search", " brute force", " data structures", " divide and conquer", " dp", " two pointers"], "title": "1766-E", "statement": "E. Decompositiontime limit per test4 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputFor a sequence of integers $$$[x_1, x_2, \\\\dots, x_k]$$$, let's define itsdecompositionas follows:Process the sequence from the first element to the last one, maintaining the list of its subsequences. When you process the element $$$x_i$$$, append it to the end of thefirstsubsequence in the list such that the bitwise AND of its last element and $$$x_i$$$ is greater than $$$0$$$. If there is no such subsequence in the list, create a new subsequence with only one element $$$x_i$$$ and append it to the end of the list of subsequences.For example, let's analyze the decomposition of the sequence $$$[1, 3, 2, 0, 1, 3, 2, 1]$$$:processing element $$$1$$$, the list of subsequences is empty. There is no subsequence to append $$$1$$$ to, so we create a new subsequence $$$[1]$$$;processing element $$$3$$$, the list of subsequences is $$$[[1]]$$$. Since the bitwise AND of $$$3$$$ and $$$1$$$ is $$$1$$$, the element is appended to the first subsequence;processing element $$$2$$$, the list of subsequences is $$$[[1, 3]]$$$. Since the bitwise AND of $$$2$$$ and $$$3$$$ is $$$2$$$, the element is appended to the first subsequence;processing element $$$0$$$, the list of subsequences is $$$[[1, 3, 2]]$$$. There is no subsequence to append $$$0$$$ to, so we create a new subsequence $$$[0]$$$;processing element $$$1$$$, the list of subsequences is $$$[[1, 3, 2], [0]]$$$. There is no subsequence to append $$$1$$$ to, so we create a new subsequence $$$[1]$$$;processing element $$$3$$$, the list of subsequences is $$$[[1, 3, 2], [0], [1]]$$$. Since the bitwise AND of $$$3$$$ and $$$2$$$ is $$$2$$$, the element is appended to the first subsequence;processing element $$$2$$$, the list of subsequences is $$$[[1, 3, 2, 3], [0], [1]]$$$. Since the bitwise AND of $$$2$$$ and $$$3$$$ is $$$2$$$, the element is appended to the first subsequence;processing element $$$1$$$, the list of subsequences is $$$[[1, 3, 2, 3, 2], [0], [1]]$$$. The element $$$1$$$ cannot be appended to any of the first two subsequences, but can be appended to the third one.The resulting list of subsequences is $$$[[1, 3, 2, 3, 2], [0], [1, 1]]$$$.Let $$$f([x_1, x_2, \\\\dots, x_k])$$$ be the number of subsequences the sequence $$$[x_1, x_2, \\\\dots, x_k]$$$ is decomposed into.Now, for the problem itself.You are given a sequence $$$[a_1, a_2, \\\\dots, a_n]$$$, where each element is an integer from $$$0$$$ to $$$3$$$. Let $$$a[i..j]$$$ be the sequence $$$[a_i, a_{i+1}, \\\\dots, a_j]$$$. You have to calculate $$$\\\\sum \\\\limits_{i=1}^n \\\\sum \\\\limits_{j=i}^n f(a[i..j])$$$.InputThe first line contains one integer $$$n$$$ ($$$1 \\\\le n \\\\le 3 \\\\cdot 10^5$$$).The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$0 \\\\le a_i \\\\le 3$$$).OutputPrint one integer, which should be equal to $$$\\\\sum \\\\limits_{i=1}^n \\\\sum \\\\limits_{j=i}^n f(a[i..j])$$$.ExamplesInput8 1 3 2 0 1 3 2 1Output71Input5 0 0 0 0 0Output35", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f290e2d3", "template_md5": "35d339e4", "result": "You are given a sequence of integers $a_1, a_2, ..., a_n$ where each element is between 0 and 3. \n\nDefine a function $f(x)$ as follows:\n\n1.  Start with an empty list of subsequences.\n2.  Iterate through the sequence $x$.\n3.  For each element $x_i$ in the sequence:\n    * Find a subsequence in the list where the bitwise AND of its last element and $x_i$ is greater than 0.\n    * If such a subsequence exists, append $x_i$ to the end of that subsequence.\n    * If no such subsequence exists, create a new subsequence containing only $x_i$ and add it to the list.\n4.  The function $f(x)$ returns the number of subsequences in the final list.\n\nCalculate the following sum:\n\n$$\\sum_{i=1}^n \\sum_{j=i}^n f(a[i..j])$$\n\nwhere $a[i..j]$ represents the subsequence from index $i$ to $j$ inclusive.\n\n\n\nInput:\n\n* The first line contains an integer $n$ (1 ≤ $n$ ≤ 3 * 10⁵).\n* The second line contains $n$ integers $a_1, a_2, ..., a_n$ (0 ≤ $a_i$ ≤ 3).\n\nOutput:\n\n* Print a single integer representing the calculated sum."}, {"prompt_md5": "2630c2f3", "template_md5": "465699a0", "result": "You are given a sequence of numbers.  For each subsequence within the sequence, count how many separate groups the numbers in that subsequence can be divided into based on a specific rule. The rule is:  \n\n*  Each group must start with a number.\n*  You can only add a new number to a group if the last number in the group and the new number have a bitwise AND value greater than 0.\n\nFinally, sum up the counts for all the subsequences in the original sequence."}]}