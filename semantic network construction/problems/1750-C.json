{"uid": "1750-C", "url": "https://codeforces.com/contest/1750/problem/C", "tags": ["constructive algorithms", " implementation"], "title": "1750-C", "statement": "C. Complementary XORtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have two binary strings $$$a$$$ and $$$b$$$ of length $$$n$$$. You would like to make all the elements of both strings equal to $$$0$$$. Unfortunately, you can modify the contents of these strings using only the following operation:You choose two indices $$$l$$$ and $$$r$$$ ($$$1 \\\\le l \\\\le r \\\\le n$$$);For every $$$i$$$ that respects $$$l \\\\le i \\\\le r$$$, change $$$a_i$$$ to the opposite. That is, $$$a_i := 1 - a_i$$$;For every $$$i$$$ that respects either $$$1 \\\\le i < l$$$ or $$$r < i \\\\le n$$$, change $$$b_i$$$ to the opposite. That is, $$$b_i := 1 - b_i$$$.Your task is to determine if this is possible, and if it is, to find such an appropriate chain of operations. The number of operationsshould not exceed$$$n + 5$$$. It can be proven that if such chain of operations exists, one exists with at most $$$n + 5$$$ operations.InputEach test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 10^5$$$) — the number of test cases. The description of test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the length of the strings.The second line of each test case contains a binary string $$$a$$$, consisting only of characters0and1, of length $$$n$$$.The third line of each test case contains a binary string $$$b$$$, consisting only of characters0and1, of length $$$n$$$.It is guaranteed that sum of $$$n$$$ over all test cases doesn't exceed $$$2 \\\\cdot 10^5$$$.OutputFor each testcase, print first \"YES\" if it's possible to make all the elements of both strings equal to $$$0$$$. Otherwise, print \"NO\". If the answer is \"YES\", on the next line print a single integer $$$k$$$ ($$$0 \\\\le k \\\\le n + 5$$$) — the number of operations. Then $$$k$$$ lines follows, each contains two integers $$$l$$$ and $$$r$$$ ($$$1 \\\\le l \\\\le r \\\\le n$$$) — the description of the operation.If there are several correct answers, print any of them.ExampleInput5301010121110410000011210103111111OutputYES 1 2 2 NO NO YES 2 1 2 2 2 YES 2 1 1 2 3NoteIn the first test case, we can perform one operation with $$$l = 2$$$ and $$$r = 2$$$. So $$$a_2 := 1 - 1 = 0$$$ and string $$$a$$$ became equal to000. $$$b_1 := 1 - 1 = 0$$$, $$$b_3 := 1 - 1 = 0$$$ and string $$$b$$$ became equal to000.In the second and in the third test cases, it can be proven that it's impossible to make all elements of both strings equal to $$$0$$$.In the fourth test case, we can perform an operation with $$$l = 1$$$ and $$$r = 2$$$, then string $$$a$$$ became equal to01, and string $$$b$$$ doesn't change. Then we perform an operation with $$$l = 2$$$ and $$$r = 2$$$, then $$$a_2 := 1 - 1 = 0$$$ and $$$b_1 = 1 - 1 = 0$$$. So both of string $$$a$$$ and $$$b$$$ became equal to00.In the fifth test case, we can perform an operation with $$$l = 1$$$ and $$$r = 1$$$. Then string $$$a$$$ became equal to011and string $$$b$$$ became equal to100. Then we can perform an operation with $$$l = 2$$$ and $$$r = 3$$$, so both of string $$$a$$$ and $$$b$$$ became equal to000.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "914a2d1d", "template_md5": "35d339e4", "result": "You are given two binary strings,  *a* and *b*, both of length *n*.  You can change the strings by performing the following operation any number of times:\n\n1. Choose two indices *l* and *r* (where 1 ≤ *l* ≤ *r* ≤ *n*).\n2. For all indices *i* from *l* to *r*, flip the bit in string *a* (0 becomes 1, 1 becomes 0).\n3. For all indices *i* that are less than *l* or greater than *r*, flip the bit in string *b*.\n\nDetermine if it is possible to make all the bits in both strings equal to 0. If it is possible, find the minimum number of operations needed and list the operations. \n\n**Input:**\n\n* The first line contains the number of test cases *t*.\n* For each test case:\n    * The first line contains the length of the strings *n*.\n    * The second line contains the binary string *a*.\n    * The third line contains the binary string *b*.\n\n**Output:**\n\n* For each test case:\n    * Print \"YES\" if it is possible to make all bits 0, otherwise print \"NO\".\n    * If \"YES\", print the minimum number of operations *k*.\n    * Then print *k* lines, each containing two integers *l* and *r* representing one operation."}, {"prompt_md5": "890fc86a", "template_md5": "465699a0", "result": "You have two binary strings of the same length. You can change parts of the strings by flipping all the bits within a chosen range.  Determine if you can make both strings all zeros using at most  n+5 operations, where n is the length of the strings. If possible, show one way to do it."}]}