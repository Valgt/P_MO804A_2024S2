{"uid": "1837-D", "url": "https://codeforces.com/contest/1837/problem/D", "tags": ["constructive algorithms", " greedy"], "title": "1837-D", "statement": "D. Bracket Coloringtime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputA regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example:the bracket sequences \"()()\" and \"(())\" are regular (the resulting expressions are: \"(1)+(1)\" and \"((1+1)+1)\");the bracket sequences \")(\", \"(\" and \")\" are not.A bracket sequence is calledbeautifulif one of the following conditions is satisfied:it is a regular bracket sequence;if the order of the characters in this sequence is reversed, it becomes a regular bracket sequence.For example, the bracket sequences \"()()\", \"(())\", \")))(((\", \"))()((\" are beautiful.You are given a bracket sequence $$$s$$$. You have to color it in such a way that:every bracket is colored into one color;for every color, there is at least one bracket colored into that color;for every color, if you write down the sequence of brackets having that color in the order they appear, you will get a beautiful bracket sequence.Color the given bracket sequence $$$s$$$ into theminimumnumber of colors according to these constraints, or report that it is impossible.InputThe first line contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases.Each test case consists of two lines. The first line contains one integer $$$n$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the number of characters in $$$s$$$. The second line contains $$$s$$$ — a string of $$$n$$$ characters, where each character is either \"(\" or \")\".Additional constraint on the input: the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, print the answer as follows:if it is impossible to color the brackets according to the problem statement, print $$$-1$$$;otherwise, print two lines. In the first line, print one integer $$$k$$$ ($$$1 \\\\le k \\\\le n$$$) — the minimum number of colors. In the second line, print $$$n$$$ integers $$$c_1, c_2, \\\\dots, c_n$$$ ($$$1 \\\\le c_i \\\\le k$$$), where $$$c_i$$$ is the color of the $$$i$$$-th bracket. If there are multiple answers, print any of them.ExampleInput48((())))(4(())4))((3(()Output2 2 2 2 1 2 2 2 1 1 1 1 1 1 1 1 1 1 1 -1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "4a70b201", "template_md5": "35d339e4", "result": "You are given a sequence of parentheses,  '()'.  \n\nA sequence is considered \"beautiful\" if:\n\n1. It can be turned into a valid mathematical expression by inserting \"1\" and \"+\" between the parentheses.\n2.  Reversing the sequence also results in a valid mathematical expression.\n\nYour task is to color each parenthesis with a unique color, following these rules:\n\n* Each parenthesis must have a color.\n* For each color, the sequence of parentheses colored with that color must form a beautiful sequence.\n\nFind the minimum number of colors needed to color the parentheses. If it's impossible to color them according to these rules, output -1."}, {"prompt_md5": "9068a022", "template_md5": "465699a0", "result": "You are given a sequence of parentheses. You need to color each parenthesis with a color so that:\n\n* Each color is used at least once.\n* If you arrange all parentheses of a single color in order, the resulting sequence is either a valid parenthesis sequence or its reverse is a valid parenthesis sequence.\n\nFind the minimum number of colors needed to do this. If it's impossible, output -1."}]}