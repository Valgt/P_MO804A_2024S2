{"uid": "1109-B", "url": "https://codeforces.com/contest/1109/problem/B", "tags": ["constructive algorithms", " hashing", " strings"], "title": "1109-B", "statement": "B. Sasha and One More Nametime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputReading books is one of Sasha's passions. Once while he was reading one book, he became acquainted with an unusual character. The character told about himself like that: \"Many are my names in many countries. Mithrandir among the Elves, Tharkûn to the Dwarves, Olórin I was in my youth in the West that is forgotten, in the South Incánus, in the North Gandalf; to the East I go not.\"And at that moment Sasha thought, how would that character be called in the East? In the East all names are palindromes. A string is a palindrome if it reads the same backward as forward. For example, such strings as \"kazak\", \"oo\" and \"r\" are palindromes, but strings \"abb\" and \"ij\" are not.Sasha believed that the hero would be named after one of the gods of the East. As long as there couldn't be two equal names, so in the East people did the following: they wrote the original name as a string on a piece of paper, then cut the paper minimum number of times $$$k$$$, so they got $$$k+1$$$ pieces of paper with substrings of the initial string, and then unite those pieces together to get a new string. Piecescouldn't be turned over, they could be shuffled.In this way, it's possible to achive a stringabcdefgfrom the stringf|de|abc|gusing $$$3$$$ cuts (by swapping papers with substringsfandabc). The stringcbadefgcan't be received using the same cuts.More formally, Sasha wants for the givenpalindrome$$$s$$$ find such minimum $$$k$$$, that you can cut this string into $$$k + 1$$$ parts, and then unite them in such a way that the final string will be a palindrome and it won't be equal to the initial string $$$s$$$. It there is no answer, then print \"Impossible\" (without quotes).InputThe first line contains one string $$$s$$$ ($$$1 \\\\le |s| \\\\le 5\\\\,000$$$) — the initial name, which consists only of lowercase Latin letters. It is guaranteed that $$$s$$$ is a palindrome.OutputPrint one integer $$$k$$$ — the minimum number of cuts needed to get a new name, or \"Impossible\" (without quotes).ExamplesInputnolonOutput2InputottoOutput1InputqqqqOutputImpossibleInputkinnikkinnikOutput1NoteIn the first example, you can cut the string in those positions:no|l|on, and then unite them as followson|l|no. It can be shown that there is no solution with one cut.In the second example, you can cut the string right in the middle, and swap peaces, so you gettoot.In the third example, you can't make a string, that won't be equal to the initial one.In the fourth example, you can cut the suffixnikand add it to the beginning, so you getnikkinnikkin.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ffc7b9ac", "template_md5": "35d339e4", "result": "You are given a palindrome string $s$ consisting of lowercase letters.  You can cut the string into $k+1$ substrings by inserting cuts into the string.  The substrings can then be rearranged in any order.\n\nFind the minimum number of cuts $k$ needed to rearrange the substrings into a new palindrome that is different from the original string $s$. If it is impossible to create a different palindrome, output \"Impossible\"."}, {"prompt_md5": "a0531f14", "template_md5": "465699a0", "result": "Given a palindrome string, find the minimum number of cuts needed to rearrange the string into a new palindrome that is different from the original. If it's impossible, print \"Impossible\"."}]}