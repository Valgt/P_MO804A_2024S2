{"uid": "1342-D", "url": "https://codeforces.com/contest/1342/problem/D", "tags": ["binary search", " constructive algorithms", " data structures", " greedy", " sortings", " two pointers"], "title": "1342-D", "statement": "D. Multiple Testcasestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSo you decided to hold a contest on Codeforces. You prepared the problems: statements, solutions, checkers, validators, tests... Suddenly, your coordinator asks you to change all your tests to multiple testcases in the easiest problem!Initially, each test in that problem is just an array. The maximum size of an array is $$$k$$$. For simplicity, the contents of arrays don't matter. You have $$$n$$$ tests — the $$$i$$$-th test is an array of size $$$m_i$$$ ($$$1 \\\\le m_i \\\\le k$$$).Your coordinator asks you to distribute all of your arrays into multiple testcases. Each testcase can include multiple arrays. However, each testcase should include no more than $$$c_1$$$ arrays of sizegreater than or equal to $$$1$$$($$$\\\\ge 1$$$), no more than $$$c_2$$$ arrays of sizegreater than or equal to $$$2$$$, $$$\\\\dots$$$, no more than $$$c_k$$$ arrays of sizegreater than or equal to $$$k$$$. Also, $$$c_1 \\\\ge c_2 \\\\ge \\\\dots \\\\ge c_k$$$.So now your goal is to create the new testcases in such a way that:each of the initial arrays appears inexactly onetestcase;for each testcase the given conditions hold;the number of testcases is minimum possible.Print the minimum possible number of testcases you can achieve and the sizes of arrays included in each testcase.InputThe first line contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\\\le n, k \\\\le 2 \\\\cdot 10^5$$$) — the number of initial tests and the limit for the size of each array.The second line contains $$$n$$$ integers $$$m_1, m_2, \\\\dots, m_n$$$ ($$$1 \\\\le m_i \\\\le k$$$) — the sizes of the arrays in the original tests.The third line contains $$$k$$$ integers $$$c_1, c_2, \\\\dots, c_k$$$ ($$$n \\\\ge c_1 \\\\ge c_2 \\\\ge \\\\dots \\\\ge c_k \\\\ge 1$$$); $$$c_i$$$ is the maximum number of arrays of size greater than or equal to $$$i$$$ you can have in a single testcase.OutputIn the first line print a single integer $$$ans$$$ ($$$1 \\\\le ans \\\\le n$$$) — the minimum number of testcases you can achieve.Each of the next $$$ans$$$ lines should contain the description of a testcase in the following format:$$$t$$$ $$$a_1$$$ $$$a_2$$$ $$$\\\\dots$$$ $$$a_{t}$$$ ($$$1 \\\\le t\\\\le n$$$) — the testcase includes $$$t$$$ arrays, $$$a_i$$$ is the size of the $$$i$$$-th array in that testcase.Each of the initial arrays should appear inexactly onetestcase. In particular, it implies that the sum of $$$t$$$ over all $$$ans$$$ testcases should be equal to $$$n$$$.Note that the answer always exists due to $$$c_k \\\\ge 1$$$ (and therefore $$$c_1 \\\\ge 1$$$).If there are multiple answers, you can output any one of them.ExamplesInput4 3 1 2 2 3 4 1 1Output3 1 2 2 1 3 1 2Input6 10 5 8 1 10 8 7 6 6 4 4 3 2 2 2 1 1Output2 3 8 5 7 3 10 8 1Input5 1 1 1 1 1 1 5Output1 5 1 1 1 1 1Input5 1 1 1 1 1 1 1Output5 1 1 1 1 1 1 1 1 1 1NoteIn the first example there is no way to distribute the tests into less than $$$3$$$ testcases. The given answer satisfies the conditions: each of the testcases includes no more than $$$4$$$ arrays of size greater than or equal to $$$1$$$ and no more than $$$1$$$ array of sizes greater than or equal to $$$2$$$ and $$$3$$$.Note that there are multiple valid answers for this test. For example, testcases with sizes $$$[[2], [1, 2], [3]]$$$ would also be correct.However, testcases with sizes $$$[[1, 2], [2, 3]]$$$ would be incorrect because there are $$$2$$$ arrays of size greater than or equal to $$$2$$$ in the second testcase.Note the difference between the third and the fourth examples. You can include up to $$$5$$$ arrays of size greater than or equal to $$$1$$$ in the third example, so you can put all arrays into a single testcase. And you can have only up to $$$1$$$ array in the fourth example. Thus, every array should be included in a separate testcase.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "bf0bbb89", "template_md5": "35d339e4", "result": "You are given $n$ arrays, each with a size between 1 and $k$. You need to divide these arrays into multiple test cases, with each test case containing a subset of these arrays. \n\nEach test case must follow these rules:\n\n* It can have at most $c_1$ arrays with size greater than or equal to 1.\n* It can have at most $c_2$ arrays with size greater than or equal to 2.\n* ...\n* It can have at most $c_k$ arrays with size greater than or equal to $k$.\n\nFurthermore, $c_1 \\ge c_2 \\ge ... \\ge c_k \\ge 1$.\n\nYour goal is to find the minimum number of test cases required to satisfy these rules and ensure that each array appears in exactly one test case.\n\n**Input:**\n\n* The first line contains two integers, $n$ and $k$ ($1 \\le n, k \\le 2 \\cdot 10^5$), representing the number of arrays and the maximum size of an array.\n* The second line contains $n$ integers, $m_1, m_2, ..., m_n$ ($1 \\le m_i \\le k$), representing the sizes of the arrays.\n* The third line contains $k$ integers, $c_1, c_2, ..., c_k$ ($n \\ge c_1 \\ge c_2 \\ge ... \\ge c_k \\ge 1$), representing the maximum number of arrays of each size allowed in a test case.\n\n**Output:**\n\n* The first line contains a single integer, $ans$ ($1 \\le ans \\le n$), representing the minimum number of test cases.\n* Each of the next $ans$ lines should contain a description of a test case in the following format: $t$ $a_1$ $a_2$ ... $a_t$ ($1 \\le t \\le n$), where $t$ is the number of arrays in the test case, and $a_i$ is the size of the $i$-th array in that test case."}, {"prompt_md5": "1e83aba1", "template_md5": "465699a0", "result": "You have a list of numbers representing the sizes of arrays. You need to divide these arrays into groups (test cases) with specific rules:\n\n* Each group can have at most a certain number of arrays of each size (e.g., at most 4 arrays with size 1 or greater).\n* Each array must belong to exactly one group.\n\nFind the minimum number of groups needed to satisfy these rules."}]}