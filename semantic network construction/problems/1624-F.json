{"uid": "1624-F", "url": "https://codeforces.com/contest/1624/problem/F", "tags": ["binary search", " constructive algorithms", " interactive"], "title": "1624-F", "statement": "F. Interacdive Problemtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis problem is interactive.We decided to play a game with you and guess the number $$$x$$$ ($$$1 \\\\le x < n$$$), where you know the number $$$n$$$.You can make queries like this:+ c: this command assigns $$$x = x + c$$$ ($$$1 \\\\le c < n$$$) and then returns you the value $$$\\\\lfloor\\\\frac{x}{n}\\\\rfloor$$$ ($$$x$$$ divide by $$$n$$$ and round down).You win if you guess the current number with no more than $$$10$$$ queries.InteractionThe interaction begins by reading an integer $$$n$$$ ($$$2 < n \\\\le 1000$$$), which is written in the input data on its own line.Then you can make no more than $$$10$$$ queries. To make a query, print on a separate line:+ c: this command will assign $$$x = x + c$$$ ($$$1 \\\\le c < n$$$) and then print $$$\\\\lfloor\\\\frac{x}{n}\\\\rfloor$$$ (divide $$$x$$$ by $$$n$$$ and round down) on a separate line.Print the answer, like the queries, on a separate line. The answer doesn't count in number of queries. To output it, use the following format:! x: the current value of $$$x$$$.After that, your program should exit.You have to use aflushoperation right after printing each line. For example, in C++ you should use the functionfflush(stdout), in Java —System.out.flush(), in Pascal —flush(output)and in Python —sys.stdout.flush().Note that the interactor is not responsive.To make a hack, use the following format: a single line must contain two numbers $$$x$$$ and $$$n$$$, separated by a space.ExamplesInput3  1Output+ 1  ! 3Input5  0  0  1Output+ 1  + 1  + 1  ! 5Input10  0  0  1  2Output+ 2  + 2  + 3  + 8  ! 20NoteIn the first sample initially $$$x = 2$$$. After the first query $$$x = 3$$$, $$$\\\\lfloor\\\\frac{x}{n}\\\\rfloor = 1$$$.In the second sample also initially $$$x = 2$$$. After the first query $$$x = 3$$$, $$$\\\\lfloor\\\\frac{x}{n}\\\\rfloor = 0$$$. After the second query $$$x = 4$$$, $$$\\\\lfloor\\\\frac{x}{n}\\\\rfloor = 0$$$. After the third query $$$x=5$$$, $$$\\\\lfloor\\\\frac{x}{n}\\\\rfloor = 1$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "143a1ec4", "template_md5": "35d339e4", "result": "You are playing a game where you need to guess a secret number $x$ ($1 \\le x < n$) given a number $n$ ($2 < n \\le 1000$).\n\nYou can make queries of the form \"+ c\" where:\n\n*  $c$ is an integer between 1 and $n-1$.\n*  This command updates the current number $x$ to $x + c$.\n*  You are then told the result of $\\lfloor \\frac{x}{n} \\rfloor$ (the largest integer less than or equal to $\\frac{x}{n}$).\n\nYou win if you guess the correct value of $x$ within 10 queries.\n\n**How to interact:**\n\n1. The program will first give you the value of $n$.\n2. You can then make up to 10 queries by printing a line containing \"+ c\" where $c$ is your chosen integer.\n3. After each query, the program will print the result of $\\lfloor \\frac{x}{n} \\rfloor$.\n4. When you think you know the value of $x$, print a line containing \"! x\" where $x$ is your guess.\n\n\n\n**Example:**\n\nLet's say $n = 3$.\n\n1. You receive the input: `3`\n2. You make a query: `+ 1`\n3. The program responds: `1` (because $\\lfloor \\frac{1}{3} \\rfloor = 0$)\n4. You make another query: `+ 2`\n5. The program responds: `1` (because $\\lfloor \\frac{3}{3} \\rfloor = 1$)\n6. You guess: `! 3` \n\n\n\nLet me know if you have any other questions."}, {"prompt_md5": "7b0c0595", "template_md5": "465699a0", "result": "You need to guess a secret number between 1 and n (inclusive). You can repeatedly add a number between 1 and n to the current guess and get the result of dividing the new guess by n, rounded down. You have 10 attempts to guess the number."}]}