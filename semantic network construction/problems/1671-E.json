{"uid": "1671-E", "url": "https://codeforces.com/contest/1671/problem/E", "tags": ["combinatorics", " divide and conquer", " dp", " dsu", " hashing", " sortings", " trees"], "title": "1671-E", "statement": "E. Preordertime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given a rooted tree of $$$2^n - 1$$$ vertices. Every vertex of this tree has either $$$0$$$ children, or $$$2$$$ children. All leaves of this tree have the same distance from the root, and for every non-leaf vertex, one of its children is the left one, and the other child is the right one. Formally, you are given aperfect binary tree.The vertices of the tree are numbered in the following order:the root has index $$$1$$$;if a vertex has index $$$x$$$, then its left child has index $$$2x$$$, and its right child has index $$$2x+1$$$.Every vertex of the tree has a letter written on it, eitherAorB. Let's define the character on the vertex $$$x$$$ as $$$s_x$$$.Let thepreorder stringof some vertex $$$x$$$ be defined in the following way:if the vertex $$$x$$$ is a leaf, then thepreorder stringof $$$x$$$ be consisting of only one character $$$s_x$$$;otherwise, thepreorder stringof $$$x$$$ is $$$s_x + f(l_x) + f(r_x)$$$, where $$$+$$$ operator defines concatenation of strings, $$$f(l_x)$$$ is thepreorder stringof the left child of $$$x$$$, and $$$f(r_x)$$$ is thepreorder stringof the right child of $$$x$$$.Thepreorder stringof the tree is thepreorder stringof its root.Now, for the problem itself...You have to calculate the number of different strings that can be obtained as thepreorder stringof the given tree, if you are allowed to perform the following operation any number of times before constructing thepreorder stringof the tree:choose any non-leaf vertex $$$x$$$, and swap its children (so, the left child becomes the right one, and vice versa).InputThe first line contains one integer $$$n$$$ ($$$2 \\\\le n \\\\le 18$$$).The second line contains a sequence of $$$2^n-1$$$ characters $$$s_1, s_2, \\\\dots, s_{2^n-1}$$$. Each character is eitherAorB. The characters arenot separatedby spaces or anything else.OutputPrint one integer â€” the number of different strings that can be obtained as thepreorder stringof the given tree, if you can apply any number of operations described in the statement. Since it can be very large, print it modulo $$$998244353$$$.ExamplesInput4 BAAAAAAAABBABABOutput16Input2 BAAOutput1Input2 ABAOutput2Input2 AABOutput2Input2 AAAOutput1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "98f532aa", "template_md5": "35d339e4", "result": "You are given a binary tree with $2^n - 1$ nodes, where $n$ is an integer between 2 and 18.  Each node has either 0 or 2 children. All leaves are the same distance from the root.  \n\nEach node is labeled with either 'A' or 'B'.  \n\nThe preorder traversal of a node is defined as follows:\n\n* If the node is a leaf, the preorder traversal is just the label of the node.\n* If the node is not a leaf, the preorder traversal is the label of the node followed by the preorder traversal of its left child followed by the preorder traversal of its right child.\n\nThe preorder traversal of the entire tree is the preorder traversal of the root node.\n\nYou can swap the left and right children of any non-leaf node any number of times.\n\nFind the number of unique preorder traversals that can be obtained after performing these swaps.  The answer should be modulo 998244353."}, {"prompt_md5": "cc921ed2", "template_md5": "465699a0", "result": "You are given a tree with a specific structure (every node has either 0 or 2 children). Each node has a letter A or B.  You can swap the left and right children of any node.  Find the number of unique strings you can create by traversing the tree in a specific order (preorder traversal) and output the result modulo 998244353."}]}