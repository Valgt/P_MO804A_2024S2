{"uid": "1070-H", "url": "https://codeforces.com/contest/1070/problem/H", "tags": ["brute force", " implementation"], "title": "1070-H", "statement": "H. BerOS File Suggestiontime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp is working on a new operating system called BerOS. He asks you to help with implementation of a file suggestion feature.There are $$$n$$$ files on hard drive and their names are $$$f_1, f_2, \\\\dots, f_n$$$. Any file name contains between $$$1$$$ and $$$8$$$ characters, inclusive. All file names are unique.The file suggestion feature handles queries, each represented by a string $$$s$$$. For each query $$$s$$$ it should count number of files containing $$$s$$$ as a substring (i.e. some continuous segment of characters in a file name equals $$$s$$$) and suggest any such file name.For example, if file names are \"read.me\", \"hosts\", \"ops\", and \"beros.18\", and the query is \"os\", the number of matched files is $$$2$$$ (two file names contain \"os\" as a substring) and suggested file name can be either \"hosts\" or \"beros.18\".InputThe first line of the input contains integer $$$n$$$ ($$$1 \\\\le n \\\\le 10000$$$) — the total number of files.The following $$$n$$$ lines contain file names, one per line. The $$$i$$$-th line contains $$$f_i$$$ — the name of the $$$i$$$-th file. Each file name contains between $$$1$$$ and $$$8$$$ characters, inclusive. File names contain only lowercase Latin letters, digits and dot characters ('.'). Any sequence of valid characters can be a file name (for example, in BerOS \".\", \"..\" and \"...\" are valid file names). All file names are unique.The following line contains integer $$$q$$$ ($$$1 \\\\le q \\\\le 50000$$$) — the total number of queries.The following $$$q$$$ lines contain queries $$$s_1, s_2, \\\\dots, s_q$$$, one per line. Each $$$s_j$$$ has length between $$$1$$$ and $$$8$$$ characters, inclusive. It contains only lowercase Latin letters, digits and dot characters ('.').OutputPrint $$$q$$$ lines, one per query. The $$$j$$$-th line should contain the response on the $$$j$$$-th query — two values $$$c_j$$$ and $$$t_j$$$, where$$$c_j$$$ is the number of matched files for the $$$j$$$-th query,$$$t_j$$$ is the name of any file matched by the $$$j$$$-th query. If there is no such file, print a single character '-' instead. If there are multiple matched files, print any.ExampleInput4testconteststest..test6ts.st..testcontes.stOutput1 contests2 .test1 test.1 .test0 -4 test.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6702f221", "template_md5": "35d339e4", "result": "You are given a list of $n$ file names.  Each file name is between 1 and 8 characters long and contains only lowercase letters, digits, and dots.\n\nYou are also given $q$ queries, each consisting of a string $s$. For each query, you need to:\n\n1. Count the number of file names in the list that contain $s$ as a substring.\n2. Print the count and the name of any file that contains $s$ as a substring. If no file contains $s$, print a hyphen (-)."}, {"prompt_md5": "193fa324", "template_md5": "465699a0", "result": "You are given a list of files.  You need to process queries, each consisting of a string. For each query, count how many files contain that string as a substring and output the name of one such file. If no file contains the string, output a hyphen."}]}