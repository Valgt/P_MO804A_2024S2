{"uid": "1637-D", "url": "https://codeforces.com/contest/1637/problem/D", "tags": ["dp", " greedy", " math"], "title": "1637-D", "statement": "D. Yet Another Minimization Problemtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two arrays $$$a$$$ and $$$b$$$, both of length $$$n$$$.You can perform the following operation any number of times (possibly zero): select an index $$$i$$$ ($$$1 \\\\leq i \\\\leq n$$$) and swap $$$a_i$$$ and $$$b_i$$$.Let's define thecostof the array $$$a$$$ as $$$\\\\sum_{i=1}^{n} \\\\sum_{j=i + 1}^{n} (a_i + a_j)^2$$$. Similarly, thecostof the array $$$b$$$ is $$$\\\\sum_{i=1}^{n} \\\\sum_{j=i + 1}^{n} (b_i + b_j)^2$$$.Your task is to minimize the totalcostof two arrays.InputEach test case consists of several test cases. The first line contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 40$$$) — the number of test cases. The following is a description of the input data sets.The first line of each test case contains an integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 100$$$) — the length of both arrays.The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\leq a_i \\\\leq 100$$$) — elements of the first array.The third line of each test case contains $$$n$$$ integers $$$b_1, b_2, \\\\ldots, b_n$$$ ($$$1 \\\\leq b_i \\\\leq 100$$$) — elements of the second array.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$100$$$.OutputFor each test case, print the minimum possible total cost.ExampleInput313643 6 6 62 7 4 146 7 2 42 5 3 5Output0 987 914NoteIn the second test case, in one of the optimal answers after all operations $$$a = [2, 6, 4, 6]$$$, $$$b = [3, 7, 6, 1]$$$.The cost of the array $$$a$$$ equals to $$$(2 + 6)^2 + (2 + 4)^2 + (2 + 6)^2 + (6 + 4)^2 + (6 + 6)^2 + (4 + 6)^2 = 508$$$.The cost of the array $$$b$$$ equals to $$$(3 + 7)^2 + (3 + 6)^2 + (3 + 1)^2 + (7 + 6)^2 + (7 + 1)^2 + (6 + 1)^2 = 479$$$.The total cost of two arrays equals to $$$508 + 479 = 987$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5371f8e9", "template_md5": "35d339e4", "result": "You are given two arrays,  'a' and 'b', both of length 'n'. You can swap any element of 'a' with the corresponding element in 'b' any number of times.\n\nThe cost of an array is calculated as the sum of the squares of the sums of all pairs of elements in the array. For example, if  'a' = [1, 2, 3], the cost of 'a' would be:\n\n(1+2)^2 + (1+3)^2 + (2+3)^2 = 9 + 16 + 25 = 50\n\nYour task is to find the minimum possible total cost of both arrays after performing any number of swaps. \n\n\n\nInput:\n\n* The first line contains 't' (1 ≤ t ≤ 40), the number of test cases.\n* For each test case:\n    * The first line contains 'n' (1 ≤ n ≤ 100), the length of the arrays.\n    * The second line contains 'n' integers, the elements of array 'a'.\n    * The third line contains 'n' integers, the elements of array 'b'.\n\nOutput:\n\n* For each test case, print the minimum possible total cost."}, {"prompt_md5": "d22baac9", "template_md5": "465699a0", "result": "You have two lists of numbers. You can swap any number in the first list with the corresponding number in the second list any number of times.  What is the smallest possible sum of squared differences between pairs of numbers in the two lists after you've made your swaps?"}]}