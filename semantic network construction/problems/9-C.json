{"uid": "9-C", "url": "https://codeforces.com/contest/9/problem/C", "tags": ["brute force", " implementation", " math"], "title": "9-C", "statement": "C. Hexadecimal's Numberstime limit per test1 secondmemory limit per test64 megabytesinputstdinoutputstdoutOne beautiful July morning a terrible thing happened in Mainframe: a mean virus Megabyte somehow got access to the memory of his not less mean sister Hexadecimal. He loaded there a huge amount ofndifferent natural numbers from 1 tonto obtain total control over her energy.But his plan failed. The reason for this was very simple: Hexadecimal didn't perceive any information, apart from numbers written in binary format. This means that if a number in a decimal representation contained characters apart from 0 and 1, it was not stored in the memory. Now Megabyte wants to know, how many numbers were loaded successfully.InputInput data contains the only numbern(1 ≤n≤ 109).OutputOutput the only number — answer to the problem.ExamplesInput10Output2NoteForn= 10 the answer includes numbers 1 and 10.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ef423d72", "template_md5": "35d339e4", "result": "Given a positive integer $n$, count how many numbers from 1 to $n$ can be represented using only the digits 0 and 1 (i.e., binary representation)."}, {"prompt_md5": "7b5e714e", "template_md5": "465699a0", "result": "Given a number *n*, count how many numbers from 1 to *n* can be represented using only the digits 0 and 1."}]}