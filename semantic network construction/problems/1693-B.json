{"uid": "1693-B", "url": "https://codeforces.com/contest/1693/problem/B", "tags": ["dfs and similar", " dp", " greedy", " trees"], "title": "1693-B", "statement": "B. Fake Plastic Treestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputWe are given a rooted tree consisting of $$$n$$$ vertices numbered from $$$1$$$ to $$$n$$$. The root of the tree is the vertex $$$1$$$ and the parent of the vertex $$$v$$$ is $$$p_v$$$.There is a number written on each vertex, initially all numbers are equal to $$$0$$$. Let's denote the number written on the vertex $$$v$$$ as $$$a_v$$$.For each $$$v$$$, we want $$$a_v$$$ to be between $$$l_v$$$ and $$$r_v$$$ $$$(l_v \\\\leq a_v \\\\leq r_v)$$$.In a single operation we do the following:Choose some vertex $$$v$$$. Let $$$b_1, b_2, \\\\ldots, b_k$$$ be vertices on the path from the vertex $$$1$$$ to vertex $$$v$$$ (meaning $$$b_1 = 1$$$, $$$b_k = v$$$ and $$$b_i = p_{b_{i + 1}}$$$).Choose a non-decreasing array $$$c$$$ of length $$$k$$$ of nonnegative integers: $$$0 \\\\leq c_1 \\\\leq c_2 \\\\leq \\\\ldots \\\\leq c_k$$$.For each $$$i$$$ $$$(1 \\\\leq i \\\\leq k)$$$, increase $$$a_{b_i}$$$ by $$$c_i$$$.What's the minimum number of operations needed to achieve our goal?InputThe first line contains an integer $$$t$$$ $$$(1\\\\le t\\\\le 1000)$$$  — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ $$$(2\\\\le n\\\\le 2 \\\\cdot 10^5)$$$  — the number of the vertices in the tree.The second line of each test case contains $$$n - 1$$$ integers, $$$p_2, p_3, \\\\ldots, p_n$$$ $$$(1 \\\\leq p_i < i)$$$, where $$$p_i$$$ denotes the parent of the vertex $$$i$$$.The $$$i$$$-th of the following $$$n$$$ lines contains two integers $$$l_i$$$ and $$$r_i$$$ $$$(1 \\\\le l_i \\\\le r_i \\\\le 10^9)$$$.It is guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case output the minimum number of operations needed.ExampleInput4211 52 931 14 52 46 1041 2 16 95 64 52 451 2 3 45 54 43 32 21 1Output1 2 2 5NoteIn the first test case, we can achieve the goal with a single operation: choose $$$v = 2$$$ and $$$c = [1, 2]$$$, resulting in $$$a_1 = 1, a_2 = 2$$$.In the second test case, we can achieve the goal with two operations: first, choose $$$v = 2$$$ and $$$c = [3, 3]$$$, resulting in $$$a_1 = 3, a_2 = 3, a_3 = 0$$$. Then, choose $$$v = 3, c = [2, 7]$$$, resulting in $$$a_1 = 5, a_2 = 3, a_3 = 7$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "17c35945", "template_md5": "35d339e4", "result": "You are given a tree with $n$ nodes, numbered from 1 to $n$. The root of the tree is node 1.  Each node has a value $a_i$ initially set to 0.  You are given a range $l_i \\le a_i \\le r_i$ for each node $i$.\n\nYou can perform the following operation:\n\n1. Choose a node $v$.\n2. Choose a non-decreasing sequence of non-negative integers $c_1, c_2, ..., c_k$ where $k$ is the number of nodes on the path from node 1 to node $v$.\n3. For each node $b_i$ on the path from node 1 to node $v$, increase $a_{b_i}$ by $c_i$.\n\nWhat is the minimum number of operations needed to ensure that $l_i \\le a_i \\le r_i$ for all nodes $i$?"}, {"prompt_md5": "8d7a0ee9", "template_md5": "465699a0", "result": "You have a tree-shaped structure with numbered nodes. Each node has a target range for a value. You can change the values of nodes along a path from the root to a specific node by adding non-decreasing amounts to each node on the path. Find the fewest changes needed to make all nodes have values within their target ranges."}]}