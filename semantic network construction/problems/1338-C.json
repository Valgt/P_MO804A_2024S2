{"uid": "1338-C", "url": "https://codeforces.com/contest/1338/problem/C", "tags": ["bitmasks", " brute force", " constructive algorithms", " divide and conquer", " math"], "title": "1338-C", "statement": "C. Perfect Triplestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputConsider the infinite sequence $$$s$$$ of positive integers, created by repeating the following steps:Find the lexicographically smallest triple of positive integers $$$(a, b, c)$$$ such that$$$a \\\\oplus b \\\\oplus c = 0$$$, where $$$\\\\oplus$$$ denotes thebitwise XOR operation.$$$a$$$, $$$b$$$, $$$c$$$ are not in $$$s$$$.Here triple of integers $$$(a_1, b_1, c_1)$$$ is considered to be lexicographically smaller than triple $$$(a_2, b_2, c_2)$$$ if sequence $$$[a_1, b_1, c_1]$$$ is lexicographically smaller than sequence $$$[a_2, b_2, c_2]$$$.Append $$$a$$$, $$$b$$$, $$$c$$$ to $$$s$$$ in this order.Go back to the first step.You have integer $$$n$$$. Find the $$$n$$$-th element of $$$s$$$.You have to answer $$$t$$$ independent test cases.A sequence $$$a$$$ is lexicographically smaller than a sequence $$$b$$$ if in the first position where $$$a$$$ and $$$b$$$ differ, the sequence $$$a$$$ has a smaller element than the corresponding element in $$$b$$$.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^5$$$) — the number of test cases.Each of the next $$$t$$$ lines contains a single integer $$$n$$$ ($$$1\\\\le n \\\\le 10^{16}$$$) — the position of the element you want to know.OutputIn each of the $$$t$$$ lines, output the answer to the corresponding test case.ExampleInput9 1 2 3 4 5 6 7 8 9Output1 2 3 4 8 12 5 10 15NoteThe first elements of $$$s$$$ are $$$1, 2, 3, 4, 8, 12, 5, 10, 15, \\\\dots $$$", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "3ab7fab6", "template_md5": "35d339e4", "result": "You are given a sequence of positive integers generated as follows:\n\n1. Find the lexicographically smallest triple of positive integers $(a, b, c)$ such that $a \\oplus b \\oplus c = 0$, where $\\oplus$ denotes the bitwise XOR operation.  The numbers $a$, $b$, and $c$ must not already be in the sequence.\n\n2. Append $a$, $b$, and $c$ to the sequence in that order.\n\n3. Repeat steps 1 and 2.\n\nYou are given an integer $n$. Find the $n$th element in this sequence.\n\n**Input:**\n\n* The first line contains an integer $t$ ($1 \\le t \\le 10^5$) representing the number of test cases.\n* Each of the next $t$ lines contains an integer $n$ ($1 \\le n \\le 10^{16}$) representing the desired position in the sequence.\n\n**Output:**\n\n* For each test case, output the $n$th element of the sequence."}, {"prompt_md5": "78808177", "template_md5": "465699a0", "result": "You are given a sequence of numbers generated by a specific rule:\n\n1. Find the smallest set of three new numbers that add up to zero using the bitwise XOR operation.\n2. Add these three numbers to the sequence.\n3. Repeat steps 1 and 2.\n\nGiven a position in the sequence, find the number at that position."}]}