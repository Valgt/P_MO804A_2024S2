{"uid": "182-D", "url": "https://codeforces.com/contest/182/problem/D", "tags": ["brute force", " hashing", " implementation", " math", " strings"], "title": "182-D", "statement": "D. Common Divisorstime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutVasya has recently learned at school what a number's divisor is and decided to determine a string's divisor. Here is what he came up with.Stringais the divisor of stringbif and only if there exists a positive integerxsuch that if we write out stringaconsecutivelyxtimes, we get stringb. For example, string \"abab\" has two divisors â€” \"ab\" and \"abab\".Now Vasya wants to write a program that calculates the number of common divisors of two strings. Please help him.InputThe first input line contains a non-empty strings1.The second input line contains a non-empty strings2.Lengths of stringss1ands2are positive and do not exceed105. The strings only consist of lowercase Latin letters.OutputPrint the number of common divisors of stringss1ands2.ExamplesInputabcdabcdabcdabcdabcdabcdOutput2InputaaaaaOutput1NoteIn first sample the common divisors are strings \"abcd\" and \"abcdabcd\".In the second sample the common divisor is a single string \"a\". String \"aa\" isn't included in the answer as it isn't a divisor of string \"aaa\".", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e307d8a0", "template_md5": "35d339e4", "result": "Given two strings, $s_1$ and $s_2$, find the number of strings that are divisors of both $s_1$ and $s_2$. \n\nA string $s$ is a divisor of string $t$ if there exists an integer $x$ such that $s$ repeated $x$ times equals $t$. \n\n\nFor example:\n\n* \"abcd\" is a divisor of \"abcdabcd\" because \"abcd\" repeated 2 times equals \"abcdabcd\".\n* \"ab\" is a divisor of \"abab\" because \"ab\" repeated 2 times equals \"abab\". \n\n\nThe strings will only contain lowercase letters and will have lengths no greater than 10^5."}, {"prompt_md5": "1843b010", "template_md5": "465699a0", "result": "Given two strings, find the number of strings that divide evenly into both of them.  A string divides evenly into another if it can be repeated a certain number of times to create the larger string."}]}