{"uid": "238-B", "url": "https://codeforces.com/contest/238/problem/B", "tags": ["constructive algorithms"], "title": "238-B", "statement": "B. Boring Partitiontime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutThis problem is the most boring one you've ever seen.Given a sequence of integersa1,a2, ...,anand a non-negative integerh, our goal is to partition the sequence into two subsequences (not necessarily consist of continuous elements). Each element of the original sequence should be contained in exactly one of the result subsequences. Note, that one of the result subsequences can be empty.Let's define functionf(ai,aj)on pairs of distinct elements (that isi≠j) in the original sequence. Ifaiandajare in the same subsequence in the current partition thenf(ai,aj) =ai+ajotherwisef(ai,aj) =ai+aj+h.Consider all possible values of the functionffor some partition. We'll call thegoodnessof this partiotion the difference between the maximum value of functionfand the minimum value of functionf.Your task is to find a partition of the given sequenceathat have the minimal possible goodness among all possible partitions.InputThe first line of input contains integersnandh(2 ≤n≤ 105, 0 ≤h≤ 108). In the second line there is a list ofnspace-separated integers representinga1,a2, ...,an(0 ≤ai≤ 108).OutputThe first line of output should contain the required minimum goodness.The second line describes the optimal partition. You should printnwhitespace-separated integers in the second line. Thei-th integer is1ifaiis in the first subsequence otherwise it should be2.If there are several possible correct answers you are allowed to print any of them.ExamplesInput3 21 2 3Output11 2 2Input5 100 1 0 2 1Output32 2 2 2 2NoteIn the first sample the values offare as follows:f(1, 2) = 1 + 2 + 2 = 5,f(1, 3) = 1 + 3 + 2 = 6andf(2, 3) = 2 + 3 = 5. So the difference between maximum and minimum values offis1.In the second sample the value ofhis large, so it's better for one of the sub-sequences to be empty.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a9d7fca3", "template_md5": "35d339e4", "result": "You are given a sequence of integers $a_1, a_2, ..., a_n$ and a non-negative integer $h$.  \n\nYour task is to divide the sequence into two subsequences.  Each element in the original sequence must be in exactly one of the subsequences.\n\nDefine a function $f(a_i, a_j)$ as follows:\n\n* If $a_i$ and $a_j$ are in the same subsequence, then $f(a_i, a_j) = a_i + a_j$.\n* If $a_i$ and $a_j$ are in different subsequences, then $f(a_i, a_j) = a_i + a_j + h$.\n\nThe *goodness* of a partition is the difference between the maximum value of $f$ for any pair of elements in the partition and the minimum value of $f$ for any pair of elements in the partition.\n\nFind a partition that has the minimum possible goodness. \n\nOutput the minimum goodness and a description of the partition (indicating which subsequence each element belongs to)."}, {"prompt_md5": "4db1723d", "template_md5": "465699a0", "result": "You are given a list of numbers and a positive number 'h'.  You need to split the list into two groups.  The goal is to minimize the difference between the largest and smallest sum of pairs of numbers within the same group. If two numbers are in the same group, their sum is their value. If they are in different groups, their sum is their value plus 'h'."}]}