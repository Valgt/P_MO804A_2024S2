{"uid": "115-D", "url": "https://codeforces.com/contest/115/problem/D", "tags": ["dp", " expression parsing"], "title": "115-D", "statement": "D. Unambiguous Arithmetic Expressiontime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutLet's define anunambiguous arithmetic expression(UAE) as follows.All non-negative integers are UAE's. Integers may have leading zeroes (for example,0000and0010are considered valid integers).IfXandYare two UAE's, then \"(X) + (Y)\", \"(X) - (Y)\", \"(X) * (Y)\", and \"(X) / (Y)\" (all without the double quotes) are UAE's.IfXis an UAE, then \"- (X)\" and \"+ (X)\" (both without the double quotes) are UAE's.You are given a string consisting only of digits (\"0\" - \"9\") and characters \"-\", \"+\", \"*\", and \"/\". Your task is to compute the number of different possible unambiguous arithmetic expressions such that if all brackets (characters \"(\" and \")\") of that unambiguous arithmetic expression are removed, it becomes the input string. Since the answer may be very large, print it modulo1000003(106+ 3).InputThe first line is anon-emptystring consisting of digits ('0'-'9') and characters '-', '+', '*', and/or '/'. Its length will not exceed2000. The line doesn't contain any spaces.OutputPrint a single integer representing the number of different unambiguous arithmetic expressions modulo1000003(106+ 3) such that if all its brackets are removed, it becomes equal to the input string (character-by-character).ExamplesInput1+2*3Output2Input03+-30+40Output3Input5//4Output0Input5/0Output1Input1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1Output100728NoteFor the first example, the two possible unambiguous arithmetic expressions are:((1) + (2)) * (3)(1) + ((2) * (3))For the second example, the three possible unambiguous arithmetic expressions are:(03) + (( - (30)) + (40))(03) + ( - ((30) + (40)))((03) + ( - (30))) + (40)", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "44341d9e", "template_md5": "35d339e4", "result": "You are given a string consisting only of digits and the operators +, -, *, /.  \n\nYour task is to determine the number of different valid arithmetic expressions that can be formed using these characters.  A valid expression must:\n\n*  Use only the given digits and operators.\n*  Be unambiguous, meaning there is only one way to interpret the order of operations.\n\nThe answer should be the number of valid expressions modulo 1000003. \n\n\nFor example:\n\n* Input: 1+2*3\n* Output: 2  (The valid expressions are (1)+(2)*(3) and (1)+(2*3))"}, {"prompt_md5": "f461dc4c", "template_md5": "465699a0", "result": "You are given a string of numbers and operators.  Find the number of different ways to put parentheses in the string to create a valid mathematical expression.  The answer should be the number of valid expressions modulo 1000003."}]}