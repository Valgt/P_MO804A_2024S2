{"uid": "1890-B", "url": "https://codeforces.com/contest/1890/problem/B", "tags": ["constructive algorithms", " implementation"], "title": "1890-B", "statement": "B. Qingshan Loves Stringstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputQingshan has a string $$$s$$$, while Daniel has a string $$$t$$$. Both strings only contain $$$\\\\texttt{0}$$$ and $$$\\\\texttt{1}$$$.A string $$$a$$$ of length $$$k$$$ is good if and only if$$$a_i \\\\ne a_{i+1}$$$ for all $$$i=1,2,\\\\ldots,k-1$$$.For example, $$$\\\\texttt{1}$$$, $$$\\\\texttt{101}$$$, $$$\\\\texttt{0101}$$$ are good, while $$$\\\\texttt{11}$$$, $$$\\\\texttt{1001}$$$, $$$\\\\texttt{001100}$$$ are not good.Qingshan wants to make $$$s$$$ good. To do this, she can do the following operation any number of times (possibly, zero):insert $$$t$$$ to any position of $$$s$$$ (getting a new $$$s$$$).Please tell Qingshan if it is possible to make $$$s$$$ good.InputThe input consists of multiple test cases. The first line contains a single integer $$$T$$$ ($$$1\\\\le T\\\\le 2000$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\\\le n,m \\\\le 50$$$) — the length of the strings $$$s$$$ and $$$t$$$, respectively.The second line of each test case contains a string $$$s$$$ of length $$$n$$$.The third line of each test case contains a string $$$t$$$ of length $$$m$$$.It is guaranteed that $$$s$$$ and $$$t$$$ only contain $$$\\\\texttt{0}$$$ and $$$\\\\texttt{1}$$$.OutputFor each test case, print \"YES\" (without quotes), if it is possible to make $$$s$$$ good, and \"NO\" (without quotes) otherwise.You can print letters in any case (upper or lower).ExampleInput51 1103 31110103 2111006 7101100101010110 2100100100010OutputYes Yes No No NoNoteIn the first test case, $$$s$$$ is good initially, so you can get a good $$$s$$$ by doing zero operations.In the second test case, you can do the following two operations (the inserted string $$$t$$$ is underlined):$$$\\\\texttt{1}\\\\underline{\\\\texttt{010}}\\\\texttt{11}$$$$$$\\\\texttt{10101}\\\\underline{\\\\texttt{010}}\\\\texttt{1}$$$and get $$$s = \\\\texttt{101010101}$$$, which is good.In the third test case, there is no way to make $$$s$$$ good after any number of operations.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "135ac35e", "template_md5": "35d339e4", "result": "You are given two strings,  $s$ and $t$, both consisting only of '0's and '1's.  A string is considered \"good\" if no two consecutive characters are the same.\n\nYou can insert the string $t$ into $s$ at any position any number of times. \n\nDetermine if it is possible to make string $s$ \"good\" through these insertions.\n\n\nIf yes, output \"YES\". If no, output \"NO\"."}, {"prompt_md5": "c1bd2b0a", "template_md5": "465699a0", "result": "You are given two strings, one longer than the other. The longer string can be made \"good\" by inserting parts of the shorter string into it. A string is \"good\" if no two consecutive characters are the same. Determine if it's possible to make the longer string \"good\"."}]}