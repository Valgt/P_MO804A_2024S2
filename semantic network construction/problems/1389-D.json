{"uid": "1389-D", "url": "https://codeforces.com/contest/1389/problem/D", "tags": ["brute force", " greedy", " implementation", " math"], "title": "1389-D", "statement": "D. Segment Intersectionstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two lists of segments $$$[al_1, ar_1], [al_2, ar_2], \\\\dots, [al_n, ar_n]$$$ and $$$[bl_1, br_1], [bl_2, br_2], \\\\dots, [bl_n, br_n]$$$.Initially, all segments $$$[al_i, ar_i]$$$ are equal to $$$[l_1, r_1]$$$ and all segments $$$[bl_i, br_i]$$$ are equal to $$$[l_2, r_2]$$$.In one step, you can choose one segment (either from the first or from the second list) and extend it by $$$1$$$. In other words, suppose you've chosen segment $$$[x, y]$$$ then you can transform it either into $$$[x - 1, y]$$$ or into $$$[x, y + 1]$$$.Let's define a total intersection $$$I$$$ as the sum of lengths of intersections of the corresponding pairs of segments, i.e. $$$\\\\sum\\\\limits_{i=1}^{n}{\\\\text{intersection_length}([al_i, ar_i], [bl_i, br_i])}$$$. Empty intersection has length $$$0$$$ and length of a segment $$$[x, y]$$$ is equal to $$$y - x$$$.What is the minimum number of steps you need to make $$$I$$$ greater or equal to $$$k$$$?InputThe first line contains the single integer $$$t$$$ ($$$1 \\\\le t \\\\le 1000$$$) — the number of test cases.The first line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$; $$$1 \\\\le k \\\\le 10^9$$$) — the length of lists and the minimum required total intersection.The second line of each test case contains two integers $$$l_1$$$ and $$$r_1$$$ ($$$1 \\\\le l_1 \\\\le r_1 \\\\le 10^9$$$) — the segment all $$$[al_i, ar_i]$$$ are equal to initially.The third line of each test case contains two integers $$$l_2$$$ and $$$r_2$$$ ($$$1 \\\\le l_2 \\\\le r_2 \\\\le 10^9$$$) — the segment all $$$[bl_i, br_i]$$$ are equal to initially.It's guaranteed that the sum of $$$n$$$ doesn't exceed $$$2 \\\\cdot 10^5$$$.OutputPrint $$$t$$$ integers — one per test case. For each test case, print the minimum number of step you need to make $$$I$$$ greater or equal to $$$k$$$.ExampleInput3 3 5 1 2 3 4 2 1000000000 1 1 999999999 999999999 10 3 5 10 7 8Output7 2000000000 0NoteIn the first test case, we can achieve total intersection $$$5$$$, for example, using next strategy:make $$$[al_1, ar_1]$$$ from $$$[1, 2]$$$ to $$$[1, 4]$$$ in $$$2$$$ steps;make $$$[al_2, ar_2]$$$ from $$$[1, 2]$$$ to $$$[1, 3]$$$ in $$$1$$$ step;make $$$[bl_1, br_1]$$$ from $$$[3, 4]$$$ to $$$[1, 4]$$$ in $$$2$$$ steps;make $$$[bl_2, br_2]$$$ from $$$[3, 4]$$$ to $$$[1, 4]$$$ in $$$2$$$ steps.In result, $$$I = \\\\text{intersection_length}([al_1, ar_1], [bl_1, br_1]) + \\\\text{intersection_length}([al_2, ar_2], [bl_2, br_2]) + \\\\\\\\ + \\\\text{intersection_length}([al_3, ar_3], [bl_3, br_3]) = 3 + 2 + 0 = 5$$$In the second test case, we can make $$$[al_1, ar_1] = [0, 1000000000]$$$ in $$$1000000000$$$ steps and $$$[bl_1, br_1] = [0, 1000000000]$$$ in $$$1000000000$$$ steps.In the third test case, the total intersection $$$I$$$ is already equal to $$$10 > 3$$$, so we don't need to do any steps.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "fbe4a997", "template_md5": "35d339e4", "result": "You are given two lists of segments:\n\n* List 1: $[al_1, ar_1], [al_2, ar_2], ..., [al_n, ar_n]$\n* List 2: $[bl_1, br_1], [bl_2, br_2], ..., [bl_n, br_n]$\n\nInitially, all segments in List 1 are equal to $[l_1, r_1]$ and all segments in List 2 are equal to $[l_2, r_2]$.\n\nIn one step, you can choose one segment (from either list) and extend it by 1. For example, if you choose segment $[x, y]$, you can transform it into either $[x-1, y]$ or $[x, y+1]$.\n\nThe total intersection $I$ is the sum of the lengths of the intersections of the corresponding pairs of segments. For example, the intersection length of $[a, b]$ and $[c, d]$ is $\\max(0, \\min(a, d) - \\max(b, c))$.\n\nWhat is the minimum number of steps you need to make $I$ greater than or equal to $k$?\n\n**Input:**\n\n* The first line contains the number of test cases $t$ ($1 \\le t \\le 1000$).\n* For each test case:\n    * The first line contains two integers $n$ and $k$ ($1 \\le n \\le 2 \\cdot 10^5$, $1 \\le k \\le 10^9$) - the length of the lists and the minimum required total intersection.\n    * The second line contains two integers $l_1$ and $r_1$ ($1 \\le l_1 \\le r_1 \\le 10^9$) - the initial segment for List 1.\n    * The third line contains two integers $l_2$ and $r_2$ ($1 \\le l_2 \\le r_2 \\le 10^9$) - the initial segment for List 2.\n\n**Output:**\n\nPrint $t$ integers - one per test case. For each test case, print the minimum number of steps needed to make $I$ greater than or equal to $k$."}, {"prompt_md5": "d53a323f", "template_md5": "465699a0", "result": "You have two lists of segments. Each segment can be extended by one unit.  Find the minimum number of extensions needed to make the total combined length of overlapping segments greater than or equal to a given target."}]}