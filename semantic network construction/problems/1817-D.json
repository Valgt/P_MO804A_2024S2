{"uid": "1817-D", "url": "https://codeforces.com/contest/1817/problem/D", "tags": ["constructive algorithms", " games", " implementation"], "title": "1817-D", "statement": "D. Toy Machinetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a toy machine with toys arranged in two rows of $$$n$$$ cells each ($$$n$$$ is odd).Initial state for $$$n=9$$$.Initially, $$$n-2$$$ toys are placed in the non-corner cells of the top row. The bottom row is initially empty, and its leftmost, rightmost, and central cells are blocked. There are $$$4$$$ buttons to control the toy machine: left, right, up, and down marked by the lettersL,R,U, andDcorrespondingly.When pressingL,R,U, orD, all the toys will be moved simultaneously in the corresponding direction and will only stop if they push into another toy, the wall or a blocked cell. Your goal is to move the $$$k$$$-th toy into the leftmost cell of the top row. The toys are numbered from $$$1$$$ to $$$n-2$$$ from left to right. Given $$$n$$$ and $$$k$$$, find a solution that uses at most $$$1\\\\,000\\\\,000$$$ button presses.To test out the toy machine, aweb pageis available that lets you play the game in real time.InputThe first and only line contains two integers, $$$n$$$ and $$$k$$$ ($$$5 \\\\le n \\\\le 100\\\\,000$$$, $$$n$$$ is odd, $$$1 \\\\le k \\\\le n-2$$$) — the number of cells in a row, and the index of the toy that has to be moved to the leftmost cell of the top row.OutputOn a single line, output a description of the button presses as a string of at most $$$1\\\\,000\\\\,000$$$ characters. The string should only contain the charactersL,R,U, andD. The $$$i$$$-th character in the string is the $$$i$$$-th button that is pressed. After all the button presses are performed, the $$$k$$$-th toy should be in the leftmost cell of the top row.If there are multiple solutions, print any. The number of button presses does not have to be minimized.ExamplesInput5 1OutputRDLInput7 2OutputRDLNoteIn the first example, there will be $$$5-2 = 3$$$ toys. The first toy needs to end up in the leftmost cell of the top row. The movesRDLwill achieve this, see the picture for a better understanding. Another possible solution would be to do one button pressL.Visualization of the moves for the first example.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "28705de4", "template_md5": "465699a0", "result": "You have a grid with toys. Some toys are initially in the top row. You can move all the toys in one direction at a time (left, right, up, down).  Your goal is to move a specific toy to the leftmost cell of the top row using as few moves as possible."}, {"prompt_md5": "7184565e", "template_md5": "35d339e4", "result": "There is a toy machine with $n$ cells in each of two rows ($n$ is an odd number).  Initially, $n-2$ toys are placed in the non-corner cells of the top row. The bottom row is empty, and its leftmost, rightmost, and central cells are blocked. There are four buttons: left (L), right (R), up (U), and down (D).\n\nWhen you press a button, all the toys move simultaneously in the corresponding direction until they hit another toy, a wall, or a blocked cell. Your goal is to move the $k$-th toy (numbered from 1 to $n-2$) to the leftmost cell of the top row.\n\nGiven $n$ and $k$, find a sequence of button presses (using at most 1,000,000 presses) that achieves this."}]}