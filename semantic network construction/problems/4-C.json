{"uid": "4-C", "url": "https://codeforces.com/contest/4/problem/C", "tags": ["data structures", " hashing", " implementation"], "title": "4-C", "statement": "C. Registration systemtime limit per test5 secondsmemory limit per test64 megabytesinputstdinoutputstdoutA new e-mail service \"Berlandesk\" is going to be opened in Berland in the near future. The site administration wants to launch their project as soon as possible, that's why they ask you to help. You're suggested to implement the prototype of site registration system. The system should work on the following principle.Each time a new user wants to register, he sends to the system a request with hisname. If such anamedoes not exist in the system database, it is inserted into the database, and the user gets the responseOK, confirming the successful registration. If thenamealready exists in the system database, the system makes up a new user name, sends it to the user as a prompt andalso inserts the prompt into the database. The new name is formed by the following rule. Numbers, starting with 1, are appended one after another toname(name1,name2, ...), among these numbers the leastiis found so thatnameidoes not yet exist in the database.InputThe first line contains numbern(1 ≤n≤ 105). The followingnlines contain the requests to the system. Each request is a non-empty line, and consists of not more than 32 characters, which are all lowercase Latin letters.OutputPrintnlines, which are system responses to the requests:OKin case of successful registration, or a prompt with a new name, if the requested name is already taken.ExamplesInput4abacabaacabaabacabaacabOutputOKOKabacaba1OKInput6firstfirstsecondsecondthirdthirdOutputOKfirst1OKsecond1OKthird1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "fe60effa", "template_md5": "35d339e4", "result": "You are given a list of names.  Each name represents a user trying to register for a service.  \n\n* If a name is not already in the list, add it to the list and print \"OK\".\n* If a name is already in the list, generate a new name by appending a number to the original name (e.g., name1, name2, name3, etc.) and find the smallest number that creates a unique name. Add this new name to the list and print it.\n\n**Input:**\n\nThe first line contains an integer $n$ (1 ≤ $n$ ≤ 10⁵) representing the number of names.\n\nThe following $n$ lines each contain a name (up to 32 lowercase letters).\n\n**Output:**\n\nPrint $n$ lines, one for each name.\n\n* If the name is unique, print \"OK\".\n* If the name is not unique, print the generated new name."}, {"prompt_md5": "2dfc87ec", "template_md5": "465699a0", "result": "A system registers users.  If a name is new, it's accepted. If a name is already taken, the system adds a number to the end of the name and checks if that's unique. Repeat until a unique name is found. Output \"OK\" for successful registration or the new name."}]}