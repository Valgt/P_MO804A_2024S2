{"uid": "1374-F", "url": "https://codeforces.com/contest/1374/problem/F", "tags": ["brute force", " constructive algorithms", " implementation", " sortings"], "title": "1374-F", "statement": "F. Cyclic Shifts Sortingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array $$$a$$$ consisting of $$$n$$$ integers.In one move, you can choose some index $$$i$$$ ($$$1 \\\\le i \\\\le n - 2$$$) and shift the segment $$$[a_i, a_{i + 1}, a_{i + 2}]$$$ cyclically to the right (i.e. replace the segment $$$[a_i, a_{i + 1}, a_{i + 2}]$$$ with $$$[a_{i + 2}, a_i, a_{i + 1}]$$$).Your task is to sort the initial array byno more than $$$n^2$$$ such operationsor say that it is impossible to do that.You have to answer $$$t$$$ independent test cases.InputThe first line of the input contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 100$$$) — the number of test cases. Then $$$t$$$ test cases follow.The first line of the test case contains one integer $$$n$$$ ($$$3 \\\\le n \\\\le 500$$$) — the length of $$$a$$$. The second line of the test case contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\le a_i \\\\le 500$$$), where $$$a_i$$$ is the $$$i$$$-th element $$$a$$$.It is guaranteed that the sum of $$$n$$$ does not exceed $$$500$$$.OutputFor each test case, print the answer:-1on the only line if it is impossible to sort the given array using operations described in the problem statement, or the number of operations $$$ans$$$ on the first line and $$$ans$$$ integers $$$idx_1, idx_2, \\\\dots, idx_{ans}$$$ ($$$1 \\\\le idx_i \\\\le n - 2$$$), where $$$idx_i$$$ is the index of left border of the segment for the $$$i$$$-th operation. You should print indicesin order of performing operations.ExampleInput5 5 1 2 3 4 5 5 5 4 3 2 1 8 8 4 5 2 3 6 7 3 7 5 2 1 6 4 7 3 6 1 2 3 3 6 4Output0  6 3 1 3 2 2 3  13 2 1 1 6 4 2 4 3 3 4 4 6 6  -1 4 3 3 4 4", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "439ba412", "template_md5": "465699a0", "result": "You are given a list of numbers. You can swap three consecutive numbers in the list cyclically (like rotating a section of the list).  Find the minimum number of swaps needed to sort the list, or say if it's impossible."}, {"prompt_md5": "aec08adf", "template_md5": "35d339e4", "result": "You are given an array of $n$ integers. You can perform the following operation any number of times:\n\n* Choose an index $i$ where $1 \\le i \\le n-2$.\n* Cyclically shift the segment $[a_i, a_{i+1}, a_{i+2}]$ to the right. This means replacing the segment with $[a_{i+2}, a_i, a_{i+1}]$.\n\nYour goal is to sort the array using at most $n^2$ of these operations. If it's impossible to sort the array, output -1.\n\n**Input:**\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains the length of the array, $n$.\n    * The second line contains the $n$ integers of the array.\n\n**Output:**\n\n* For each test case:\n    * If it's impossible to sort the array, output -1.\n    * Otherwise, output the minimum number of operations required to sort the array, followed by a list of the indices $i$ where the operation was performed."}]}