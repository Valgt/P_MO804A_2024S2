{"uid": "1115-U2", "url": "https://codeforces.com/contest/1115/problem/U2", "tags": ["*special"], "title": "1115-U2", "statement": "U2. Chessboard unitarytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputImplement a unitary operation on $$$N$$$ qubits which is represented by a square matrix of size $$$2^N$$$ in which zero and non-zero elements form a chessboard pattern with alternating 2x2 squares (top left square formed by non-zero elements).For example, for $$$N = 3$$$ the matrix of the operation should have the following shape:XX..XX..XX..XX....XX..XX..XX..XXXX..XX..XX..XX....XX..XX..XX..XXHereXdenotes a \"non-zero\" element of the matrix (a complex number which has the square of the absolute value greater than or equal to $$$10^{-5}$$$), and.denotes a \"zero\" element of the matrix (a complex number which has the square of the absolute value less than $$$10^{-5}$$$).The row and column indices of the matrix follow little endian format: the least significant bit of the index is stored first in the qubit array. Thus, the first column of the matrix gives you the coefficients of the basis states you'll get if you apply the unitary to the $$$|00..0\\\\rangle$$$ basis state, the second column - to the $$$|10..0\\\\rangle$$$ basis state etc. You can use theDumpUnitary toolto get the coefficients of the matrix your unitary implements (up to relative phases between columns) and the corresponding pattern ofXs and.s.You have to implement an operation which takes an array of $$$N$$$ ($$$2 \\\\le N \\\\le 5$$$) qubits as an input and applies the unitary transformation with the matrix of the described shape to it. If there are multiple unitaries which satisfy the requirements, you can implement any of them. The \"output\" of your operation is the pattern of the matrix coefficients implemented by it; you can see the testing harness in theUnitaryPatternskata.Your code should have the following signature:namespace Solution {open Microsoft.Quantum.Primitive;open Microsoft.Quantum.Canon;operation Solve (qs : Qubit[]) : Unit {// your code here}}", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "3eea032a", "template_md5": "35d339e4", "result": "You are given a number $N$ ($2 \\le N \\le 5$).  You need to write a program that performs a specific operation on $N$ qubits. This operation is represented by a square matrix of size $2^N$. The matrix has a pattern of \"non-zero\" and \"zero\" elements that resembles a chessboard.\n\n* **Non-zero elements:** Complex numbers with a squared absolute value greater than or equal to $10^{-5}$.\n* **Zero elements:** Complex numbers with a squared absolute value less than $10^{-5}$.\n\nThe matrix is structured so that the first column represents the result of applying the operation to the qubit state $|00...0\\rangle$, the second column to $|10...0\\rangle$, and so on.\n\nYour program should take an array of $N$ qubits as input and apply this specific chessboard-patterned matrix operation to them.  The output of your program is the pattern of the matrix coefficients."}, {"prompt_md5": "4390326e", "template_md5": "465699a0", "result": "You are given a number N.  You need to write a program that takes N qubits as input and applies a specific type of transformation to them. This transformation is defined by a matrix with a particular pattern of 0s and 1s. The output of your program is the pattern of numbers in the matrix."}]}