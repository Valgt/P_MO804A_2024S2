{"uid": "1508-C", "url": "https://codeforces.com/contest/1508/problem/C", "tags": ["bitmasks", " brute force", " data structures", " dfs and similar", " dsu", " graphs", " greedy", " trees"], "title": "1508-C", "statement": "C. Complete the MSTtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAs a teacher, Riko Hakozaki often needs to help her students with problems from various subjects. Today, she is asked a programming task which goes as follows.You are given an undirected complete graph with $$$n$$$ nodes, where some edges are pre-assigned with a positive weight while the rest aren't. You need to assign all unassigned edges withnon-negative weightsso that in the resulting fully-assigned complete graph theXORsum of all weights would be equal to $$$0$$$.Define theuglinessof a fully-assigned complete graph the weight of itsminimum spanning tree, where the weight of a spanning tree equals the sum of weights of its edges. You need to assign the weights so that the ugliness of the resulting graph is as small as possible.As a reminder, an undirected complete graph with $$$n$$$ nodes contains all edges $$$(u, v)$$$ with $$$1 \\\\le u < v \\\\le n$$$; such a graph has $$$\\\\frac{n(n-1)}{2}$$$ edges.She is not sure how to solve this problem, so she asks you to solve it for her.InputThe first line contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$, $$$0 \\\\le m \\\\le \\\\min(2 \\\\cdot 10^5, \\\\frac{n(n-1)}{2} - 1)$$$)  — the number of nodes and the number of pre-assigned edges. The inputs are given so that there is at least one unassigned edge.The $$$i$$$-th of the following $$$m$$$ lines contains three integers $$$u_i$$$, $$$v_i$$$, and $$$w_i$$$ ($$$1 \\\\le u_i, v_i \\\\le n$$$, $$$u \\\\ne v$$$, $$$1 \\\\le w_i < 2^{30}$$$), representing the edge from $$$u_i$$$ to $$$v_i$$$ has been pre-assigned with the weight $$$w_i$$$. No edge appears in the input more than once.OutputPrint on one line one integer  — the minimum ugliness among all weight assignments with XOR sum equal to $$$0$$$.ExamplesInput4 4 2 1 14 1 4 14 3 2 15 4 3 8Output15Input6 6 3 6 4 2 4 1 4 5 7 3 4 10 3 5 1 5 2 15Output0Input5 6 2 3 11 5 3 7 1 4 10 2 4 14 4 3 8 2 5 6Output6NoteThe following image showcases the first test case. The black weights are pre-assigned from the statement, the red weights are assigned by us, and the minimum spanning tree is denoted by the blue edges.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "63a78ebb", "template_md5": "35d339e4", "result": "You are given a complete graph with $n$ nodes. Some edges have pre-assigned positive weights, and the rest have no weight.  \n\nYou need to assign non-negative weights to the remaining edges so that the XOR sum of all edge weights in the graph is 0.\n\nThe \"ugliness\" of a graph is defined as the weight of its minimum spanning tree (the tree that connects all nodes with the minimum total edge weight).\n\nFind the minimum possible ugliness of the graph after assigning weights to the remaining edges."}, {"prompt_md5": "749db8dd", "template_md5": "465699a0", "result": "You are given a graph with some edges already having weights. You need to assign weights to the remaining edges so that the sum of all edge weights is zero.  The goal is to find the smallest possible total weight of the minimum spanning tree of the resulting graph."}]}