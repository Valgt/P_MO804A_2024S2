{"uid": "105-C", "url": "https://codeforces.com/contest/105/problem/C", "tags": ["brute force", " implementation", " sortings"], "title": "105-C", "statement": "C. Item Worldtime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutEach item in the game has a level. The higher the level is, the higher basic parameters the item has. We shall consider only the following basic parameters: attack (atk), defense (def) and resistance to different types of impact (res).Each item belongs to one class. In this problem we will only consider three of such classes:weapon,armor,orb.Besides, there's a whole new world hidden inside each item. We can increase an item's level travelling to its world. We can also capture the so-called residents in the Item WorldResidents are the creatures that live inside items. Each resident gives some bonus to the item in which it is currently located. We will only consider residents of types:gladiator(who improves the item'satk),sentry(who improvesdef) andphysician(who improvesres).Each item has the size parameter. The parameter limits the maximum number of residents that can live inside an item. We can move residents between items. Within one moment of time we can take some resident from an item and move it to some other item if it has a free place for a new resident. We cannot remove a resident from the items and leave outside — any of them should be inside of some item at any moment of time.Laharl has a certain number of items. He wants to move the residents between items so as to equip himself with weapon, armor and a defensive orb. The weapon'satkshould be largest possible in the end. Among all equipping patterns containing weapon's maximumatkparameter we should choose the ones where the armor’sdefparameter is the largest possible. Among all such equipment patterns we should choose the one where the defensive orb would have the largest possibleresparameter. Values of the parametersdefandresof weapon,atkandresof armor andatkanddefof orb are indifferent for Laharl.Find the optimal equipment pattern Laharl can get.InputThe first line contains numbern(3 ≤n≤ 100) — representing how many items Laharl has.Then follownlines. Each line contains description of an item. The description has the following form: \"nameclassatkdefressize\" — the item's name, class, basic attack, defense and resistance parameters and its size correspondingly.nameandclassare strings andatk,def,resandsizeare integers.nameconsists of lowercase Latin letters and its length can range from1to10, inclusive.classcan be \"weapon\", \"armor\" or \"orb\".0 ≤atk,def,res≤ 1000.1 ≤size≤ 10.It is guaranteed that Laharl has at least one item of each class.The next line contains an integerk(1 ≤k≤ 1000) — the number of residents.Thenklines follow. Each of them describes a resident. A resident description looks like: \"nametypebonushome\" — the resident's name, his type, the number of points the resident adds to the item's corresponding parameter and the name of the item which currently contains the resident.name,typeandhomeare strings andbonusis an integer.nameconsists of lowercase Latin letters and its length can range from1to10, inclusive.typemay be \"gladiator\", \"sentry\" or \"physician\".1 ≤bonus≤ 100.It is guaranteed that the number of residents in each item does not exceed the item's size.The names of all items and residents are pairwise different.All words and numbers in the input are separated by single spaces.OutputPrint on the first line the name of the weapon in the optimal equipping pattern; then print the number of residents the weapon contains; then print the residents' names.Print on the second and third lines in the same form the names of the armor and defensive orb as well as the residents they contain.Use single spaces for separation.If there are several possible solutions, print any of them.ExamplesInput4sword weapon 10 2 3 2pagstarmor armor 0 15 3 1iceorb orb 3 2 13 2longbow weapon 9 1 2 15mike gladiator 5 longbowbobby sentry 6 pagstarmorpetr gladiator 7 iceorbteddy physician 6 swordblackjack sentry 8 swordOutputsword 2 petr mikepagstarmor 1 blackjackiceorb 2 teddy bobbyInput4sword weapon 10 2 3 2pagstarmor armor 0 15 3 1iceorb orb 3 2 13 2longbow weapon 9 1 2 16mike gladiator 5 longbowbobby sentry 6 pagstarmorpetr gladiator 7 iceorbteddy physician 6 swordblackjack sentry 8 swordjoe physician 6 iceorbOutputlongbow 1 mikepagstarmor 1 bobbyiceorb 2 petr joeNoteIn the second sample we have no free space inside the items, therefore we cannot move the residents between them.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "c1e6cb41", "template_md5": "35d339e4", "result": "You are given a set of items, each with attributes: attack ($atk$), defense ($def$), resistance ($res$), and size. There are three types of items: weapon, armor, and orb.\n\nEach item can contain residents, which provide bonuses to the item's attributes. There are three types of residents: gladiator (increases $atk$), sentry (increases $def$), and physician (increases $res$).\n\nThe goal is to find the optimal combination of a weapon, armor, and orb, maximizing the weapon's attack ($atk$) while also maximizing the armor's defense ($def$) and the orb's resistance ($res$).\n\nYou can move residents between items, but you cannot remove them from items. Each item has a limited size, restricting the number of residents it can hold.\n\nInput:\n\n* The number of items ($n$).\n* Descriptions of each item, including its name, type, $atk$, $def$, $res$, and size.\n* The number of residents ($k$).\n* Descriptions of each resident, including its name, type, bonus to an attribute, and the item it currently resides in.\n\nOutput:\n\n* The name of the optimal weapon, the number of residents it contains, and the names of the residents.\n* The name of the optimal armor, the number of residents it contains, and the names of the residents.\n* The name of the optimal orb, the number of residents it contains, and the names of the residents."}, {"prompt_md5": "2d9384ef", "template_md5": "465699a0", "result": "You have a set of items with different attributes (attack, defense, resistance). Each item can hold a limited number of residents that boost these attributes.  You need to find the best combination of a weapon, armor, and orb, maximizing the weapon's attack while also maximizing the armor's defense and the orb's resistance. You can move residents between items."}]}