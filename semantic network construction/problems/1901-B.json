{"uid": "1901-B", "url": "https://codeforces.com/contest/1901/problem/B", "tags": ["greedy", " math"], "title": "1901-B", "statement": "B. Chip and Ribbontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a ribbon divided into $$$n$$$ cells, numbered from $$$1$$$ to $$$n$$$ from left to right. Initially, an integer $$$0$$$ is written in each cell.Monocarp plays a game with a chip. The game consists of several turns. During the first turn, Monocarp places the chip in the $$$1$$$-st cell of the ribbon. During each turnexcept for the first turn, Monocarp doesexactly oneof the two following actions:move the chip to the next cell (i. e. if the chip is in the cell $$$i$$$, it is moved to the cell $$$i+1$$$). This action is impossible if the chip is in the last cell;choose any cell $$$x$$$ and teleport the chip into that cell.It is possible to choose the cell where the chip is currently located.At the end of each turn, the integer written in the cell with the chip is increased by $$$1$$$.Monocarp's goal is to make some turns so that the $$$1$$$-st cell contains the integer $$$c_1$$$, the $$$2$$$-nd cell contains the integer $$$c_2$$$, ..., the $$$n$$$-th cell contains the integer $$$c_n$$$. He wants to teleport the chip as few times as possible.Help Monocarp calculate the minimum number of times he has to teleport the chip.InputThe first line contains one integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases.Each test case consists of two lines:the first line contains one integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$);the second line contains $$$n$$$ integers $$$c_1, c_2, \\\\dots, c_n$$$ ($$$0 \\\\le c_i \\\\le 10^9$$$; $$$c_1 \\\\ge 1$$$).It can be shown that under these constraints, it is always possible to make a finite amount of turns so that the integers in the cells match the sequence $$$c_1, c_2, \\\\dots, c_n$$$.Additional constraint on the input: the sum of values of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, print one integer — the minimum number of times Monocarp has to teleport the chip.ExampleInput441 2 2 151 0 1 0 155 4 3 2 1112Output1 2 4 11NoteIn the first test case of the example, Monocarp can perform the turns as follows:place the chip in the $$$1$$$-st cell; the numbers in the cells are $$$[1, 0, 0, 0]$$$;move the chip to the next ($$$2$$$-nd) cell; the numbers in the cells are $$$[1, 1, 0, 0]$$$;move the chip to the next ($$$3$$$-rd) cell; the numbers in the cells are $$$[1, 1, 1, 0]$$$;teleport the chip to the $$$2$$$-nd cell; the numbers in the cells are $$$[1, 2, 1, 0]$$$;move the chip to the next ($$$3$$$-rd) cell; the numbers in the cells are $$$[1, 2, 2, 0]$$$;move the chip to the next ($$$4$$$-th) cell; the numbers in the cells are $$$[1, 2, 2, 1]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5e3a2ba7", "template_md5": "35d339e4", "result": "You are given a ribbon divided into $n$ cells, numbered from 1 to $n$. Each cell initially contains the number 0.\n\nYou can play a game with a chip on this ribbon.\n\n* **Start:** The chip begins in cell 1.\n* **Turns:** On each turn, you can either:\n    * Move the chip to the next cell (if it's not already in the last cell).\n    * Teleport the chip to any cell.\n\nAfter each turn, the number in the cell containing the chip is increased by 1.\n\n**Goal:** You want to end up with a specific sequence of numbers in each cell: $c_1$, $c_2$, ..., $c_n$.  You want to minimize the number of times you teleport the chip.\n\n**Input:**\n\n* $t$: The number of test cases.\n* For each test case:\n    * $n$: The number of cells on the ribbon.\n    * $c_1$, $c_2$, ..., $c_n$: The desired final numbers in each cell.\n\n**Output:**\n\nFor each test case, print the minimum number of times you need to teleport the chip to achieve the desired sequence."}, {"prompt_md5": "ba07f87e", "template_md5": "465699a0", "result": "You have a line of cells, each initially containing 0. You start a chip at the first cell.  Each turn, you can either move the chip to the next cell (if possible) or teleport it to any cell.  After each turn, the cell containing the chip's value is increased by 1.  Find the minimum number of times you need to teleport the chip to reach a target value in each cell."}]}