{"uid": "1741-B", "url": "https://codeforces.com/contest/1741/problem/B", "tags": ["constructive algorithms", " math"], "title": "1741-B", "statement": "B. Funny Permutationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA sequence of $$$n$$$ numbers is calledpermutationif it contains all numbers from $$$1$$$ to $$$n$$$ exactly once. For example, the sequences $$$[3, 1, 4, 2]$$$, [$$$1$$$] and $$$[2,1]$$$ are permutations, but $$$[1,2,1]$$$, $$$[0,1]$$$ and $$$[1,3,4]$$$ are not.For a given number $$$n$$$ you need to make a permutation $$$p$$$ such that two requirements are satisfied at the same time:For each element $$$p_i$$$, at least one of its neighbors has a value that differs from the value of $$$p_i$$$ by one. That is, for each element $$$p_i$$$ ($$$1 \\\\le i \\\\le n$$$), at least one of its neighboring elements (standing to the left or right of $$$p_i$$$) must be $$$p_i + 1$$$, or $$$p_i - 1$$$.the permutation must have no fixed points. That is, for every $$$i$$$ ($$$1 \\\\le i \\\\le n$$$), $$$p_i \\\\neq i$$$ must be satisfied.Let's call the permutation that satisfies these requirementsfunny.For example, let $$$n = 4$$$. Then [$$$4, 3, 1, 2$$$] is afunnypermutation, since:to the right of $$$p_1=4$$$ is $$$p_2=p_1-1=4-1=3$$$;to the left of $$$p_2=3$$$ is $$$p_1=p_2+1=3+1=4$$$;to the right of $$$p_3=1$$$ is $$$p_4=p_3+1=1+1=2$$$;to the left of $$$p_4=2$$$ is $$$p_3=p_4-1=2-1=1$$$.for all $$$i$$$ is $$$p_i \\\\ne i$$$.For a given positive integer $$$n$$$, outputanyfunnypermutation of length $$$n$$$, or output-1iffunnypermutation of length $$$n$$$ does not exist.InputThe first line of input data contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases.The description of the test cases follows.Each test case consists of f single line containing one integer $$$n$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$).It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, print on a separate line:anyfunnypermutation $$$p$$$ of length $$$n$$$;or the number-1if the permutation you are looking for does not exist.ExampleInput543752Output3 4 2 1 -1 6 7 4 5 3 2 1 5 4 1 2 3 2 1NoteThe first test case is explained in the problem statement.In the second test case, it is not possible to make the required permutation: permutations $$$[1, 2, 3]$$$, $$$[1, 3, 2]$$$, $$$[2, 1, 3]$$$, $$$[3, 2, 1]$$$ have fixed points, and in $$$[2, 3, 1]$$$ and $$$[3, 1, 2]$$$ the first condition is met not for all positions.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "8a2189ba", "template_md5": "35d339e4", "result": "You are given a positive integer $n$.  You need to create a sequence of numbers from 1 to $n$ (called a permutation) that follows these rules:\n\n1. **Neighboring Difference:** For each number in the sequence, at least one of its neighbors (the number before it or the number after it) must be either one more or one less than the current number.\n\n2. **No Fixed Points:**  No number in the sequence can be in the same position as its corresponding number in the original sequence (e.g., the first number in the sequence cannot be 1, the second cannot be 2, and so on).\n\nIf you can create such a sequence, output it. If it's impossible to create a sequence that follows both rules, output -1."}, {"prompt_md5": "f1599c99", "template_md5": "465699a0", "result": "Given a number *n*, create a list of numbers from 1 to *n* where:\n\n1.  Each number in the list is either one more or one less than its neighbor.\n2.  No number in the list is in the same position as its corresponding number in the original sequence (1, 2, 3... *n*).\n\nIf you can't create such a list, output -1."}]}