{"uid": "132-B", "url": "https://codeforces.com/contest/132/problem/B", "tags": ["implementation"], "title": "132-B", "statement": "B. Piettime limit per test2 secondsmemory limit per test256 megabytesinputstdinoutputstdoutPiet is one of the most known visual esoteric programming languages. The programs in Piet are constructed from colorful blocks of pixels and interpreted using pretty complicated rules. In this problem we will use a subset of Piet language with simplified rules.The program will be a rectangular image consisting of colored and black pixels. The color of each pixel will be given by an integer number between 0 and 9, inclusive, with 0 denoting black. A block of pixels is defined as a rectangle of pixels of the same color (not black). It is guaranteed that all connected groups of colored pixels of the same color will form rectangular blocks. Groups of black pixels can form arbitrary shapes.The program is interpreted using movement of instruction pointer (IP) which consists of three parts:current block pointer (BP); note that there is no concept of current pixel within the block;direction pointer (DP) which can point left, right, up or down;block chooser (CP) which can point to the left or to the right from the direction given by DP; in absolute values CP can differ from DP by 90 degrees counterclockwise or clockwise, respectively.Initially BP points to the block which contains the top-left corner of the program, DP points to the right, and CP points to the left (see the orange square on the image below).One step of program interpretation changes the state of IP in a following way. The interpreter finds the furthest edge of the current color block in the direction of the DP. From all pixels that form this edge, the interpreter selects the furthest one in the direction ofCP. After this, BP attempts to move from this pixel into the next one in the direction of DP. If the next pixel belongs to a colored block, this block becomes the current one, and two other parts of IP stay the same. It the next pixel is black or outside of the program, BP stays the same but two other parts of IP change. If CP was pointing to the left, now it points to the right, and DP stays the same. If CP was pointing to the right, now it points to the left, and DP is rotated 90 degrees clockwise.This way BP will never point to a black block (it is guaranteed that top-left pixel of the program will not be black).You are given a Piet program. You have to figure out which block of the program will be current afternsteps.InputThe first line of the input contains two integer numbersm(1 ≤m≤ 50) andn(1 ≤n≤ 5·107). Nextmlines contain the rows of the program. All the lines have the same length between 1 and 50 pixels, and consist of characters0-9. The first character of the first line will not be equal to 0.OutputOutput the color of the block which will be current afternsteps of program interpretation.ExamplesInput2 101243Output1Input3 12142366246625Output6Input5 91034523456345674567856789Output5NoteIn the first example IP changes in the following way. After step 1 block 2 becomes current one and stays it after two more steps. After step 4 BP moves to block 3, after step 7 — to block 4, and finally after step 10 BP returns to block 1.The sequence of states of IP is shown on the image: the arrows are traversed clockwise, the main arrow shows direction of DP, the side one — the direction of CP.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "688f3dd8", "template_md5": "35d339e4", "result": "You are given a rectangular grid of numbers from 0 to 9, where 0 represents black.  \n\nA \"block\" is a group of connected numbers of the same color (not 0).\n\nAn instruction pointer (IP) moves through the grid according to these rules:\n\n* **Current Block Pointer (BP):** Points to the current block.\n* **Direction Pointer (DP):** Points left, right, up, or down.\n* **Block Chooser (CP):** Points left or right from the direction of DP.\n\nThe IP moves one step at a time:\n\n1. Find the furthest edge of the current block in the direction of DP.\n2. From that edge, select the furthest pixel in the direction of CP.\n3. Move BP to the next pixel in the direction of DP.\n\n    * If the next pixel is in a colored block, that block becomes the current block.\n    * If the next pixel is black or outside the grid, BP stays in the same position, but CP and DP change direction.\n\nYou are given a grid and the number of steps to execute. Determine the color of the block that the IP will be pointing to after the given number of steps."}, {"prompt_md5": "912c12f4", "template_md5": "465699a0", "result": "You are given a grid of colored squares.  A program moves across the grid, changing direction based on the colors it encounters.  Determine the color of the square the program will be on after a given number of steps."}]}