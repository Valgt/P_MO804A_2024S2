{"uid": "873-E", "url": "https://codeforces.com/contest/873/problem/E", "tags": ["brute force", " data structures", " dp"], "title": "873-E", "statement": "E. Awards For Contestantstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlexey recently held a programming contest for students from Berland.nstudents participated in a contest,i-th of them solvedaiproblems. Now he wants to award some contestants. Alexey can award the students with diplomas of three different degrees. Each student either will receive one diploma of some degree, or won't receive any diplomas at all. Letcntxbe the number of students that are awarded with diplomas of degreex(1 ≤x≤ 3). The following conditions must hold:For eachx(1 ≤x≤ 3)cntx> 0;For any two degreesxandycntx≤ 2·cnty.Of course, there are a lot of ways to distribute the diplomas. Letbibe the degree of diplomai-th student will receive (or- 1ifi-th student won't receive any diplomas). Also for anyxsuch that1 ≤x≤ 3letcxbe the maximum number of problems solved by a student that receives a diploma of degreex, anddxbe the minimum number of problems solved by a student that receives a diploma of degreex. Alexey wants to distribute the diplomas in such a way that:If studentisolved more problems than studentj, then he has to be awarded not worse than studentj(it's impossible that studentjreceives a diploma andidoesn't receive any, and also it's impossible that both of them receive a diploma, butbj<bi);d1-c2is maximum possible;Among all ways that maximize the previous expression,d2-c3is maximum possible;Among all ways that correspond to the two previous conditions,d3-c- 1is maximum possible, wherec- 1is the maximum number of problems solved by a student that doesn't receive any diploma (or0if each student is awarded with some diploma).Help Alexey to find a way to award the contestants!InputThe first line contains one integer numbern(3 ≤n≤ 3000).The second line containsninteger numbersa1,a2, ...,an(1 ≤ai≤ 5000).OutputOutputnnumbers.i-th number must be equal to the degree of diplomai-th contestant will receive (or- 1if he doesn't receive any diploma).If there are multiple optimal solutions, print any of them. It is guaranteed that the answer always exists.ExamplesInput41 2 3 4Output3 3 2 1Input61 4 3 1 1 2Output-1 1 2 -1 -1 3", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "663e9e49", "template_md5": "35d339e4", "result": "There are $n$ students who participated in a contest. The $i$-th student solved $a_i$ problems.  \n\nYou need to award diplomas of three different degrees to the students, following these rules:\n\n* At least one student must receive each degree.\n* The number of students receiving degree $x$ ($1 \\le x \\le 3$) must be at most twice the number of students receiving degree $y$ ($y \\neq x$).\n* If student $i$ solved more problems than student $j$, then student $i$ must receive at least the same degree as student $j$.\n\nYou want to maximize the following expression:\n\n*  $d_1 - c_2$ (where $d_1$ is the maximum number of problems solved by a student receiving degree 1, and $c_2$ is the number of students receiving degree 2)\n*  $d_2 - c_3$ (where $d_2$ is the maximum number of problems solved by a student receiving degree 2, and $c_3$ is the number of students receiving degree 3)\n*  $d_3 - c_{-1}$ (where $d_3$ is the maximum number of problems solved by a student receiving degree 3, and $c_{-1}$ is the maximum number of problems solved by a student who doesn't receive any diploma)\n\nOutput a list of $n$ numbers, where the $i$-th number is the degree of diploma the $i$-th student receives (or -1 if they don't receive a diploma)."}, {"prompt_md5": "430f5d5f", "template_md5": "465699a0", "result": "You are given a list of numbers representing how many problems each of *n* students solved. You need to award diplomas of three different degrees to some of the students, following these rules:\n\n* At least one student must receive each degree.\n* The number of students receiving degree *x* cannot be more than twice the number receiving degree *y* for any *x* and *y*.\n* If a student solved more problems than another, they must receive a diploma of at least the same degree.\n* You want to maximize the difference between the highest number of problems solved by a student with a certain degree and the number of students with that degree.\n\nOutput a list of diploma degrees for each student (1, 2, or 3, or -1 if they don't receive a diploma)."}]}