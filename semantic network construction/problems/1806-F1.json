{"uid": "1806-F1", "url": "https://codeforces.com/contest/1806/problem/F1", "tags": ["greedy", " math", " number theory", " sortings"], "title": "1806-F1", "statement": "F1. GCD Master (easy version)time limit per test3 secondsmemory limit per test1024 megabytesinputstandard inputoutputstandard outputThis is the easy version of the problem. The only difference between the two versions is the constraint on $$$m$$$. You can make hacks only if both versions of the problem are solved.You are given an array $$$a$$$ of length $$$n$$$ and two integers $$$m$$$ and $$$k$$$. Each element in $$$a$$$ satisfies $$$1\\\\le a_i \\\\le m$$$.In one operation, you choose two indices $$$i$$$ and $$$j$$$ such that $$$1 \\\\le i < j \\\\le |a|$$$, then append $$$\\\\gcd(a_i,a_j)$$$ to the back of the array and delete $$$a_i$$$ and $$$a_j$$$ from the array. Note that the length of the array decreases by one after this operation.Find the maximum possible sum of the array after performingexactly$$$k$$$ operations.InputThe first line contains a single integer $$$t$$$ ($$$1\\\\le t\\\\le 10^5$$$) — the number of test cases. The description of test cases follows.The first line of each test case contains three integers $$$n$$$, $$$m$$$ and $$$k$$$ ($$$2 \\\\le n \\\\le 10^6$$$; $$$1\\\\le m \\\\le 10^6$$$; $$$1 \\\\le k \\\\le n-1$$$).The second line of each test case contains $$$n$$$ integers $$$a_1,a_2,\\\\ldots,a_n$$$ ($$$1 \\\\le a_i \\\\le m$$$).It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^6$$$ and the sum of $$$m$$$ over all test cases does not exceed $$$10^6$$$.OutputFor each test case, output the maximum possible sum of the array after performing $$$k$$$ operations optimally.ExampleInput33 8 14 7 85 114 27 2 4 1 63 514 22 3 3Output11 14 1NoteIn the first test case, the best way is to choose $$$i=1$$$, $$$j=3$$$ in the first operation. The final sequence is $$$[7,4]$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "2ce97051", "template_md5": "35d339e4", "result": "You are given an array of $n$ integers, $a_1, a_2, ..., a_n$, where each integer is between 1 and $m$ inclusive. You can perform the following operation exactly $k$ times:\n\n1. Choose two indices $i$ and $j$ where $1 \\le i < j \\le n$.\n2. Calculate the greatest common divisor (GCD) of $a_i$ and $a_j$.\n3. Append the GCD to the end of the array.\n4. Remove $a_i$ and $a_j$ from the array.\n\nFind the maximum possible sum of the array after performing these operations. \n\n\nInput:\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains three integers: $n$, $m$, and $k$.\n    * The second line contains $n$ integers: $a_1, a_2, ..., a_n$.\n\nOutput:\n\nFor each test case, output the maximum possible sum of the array after performing $k$ operations."}, {"prompt_md5": "7b5b014f", "template_md5": "465699a0", "result": "You have a list of numbers. You can repeatedly pick two numbers from the list, find their greatest common divisor, and add it to the end of the list while removing the two original numbers.  You can do this a limited number of times. What is the largest possible sum of the numbers in the list you can achieve?"}]}