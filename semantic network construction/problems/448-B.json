{"uid": "448-B", "url": "https://codeforces.com/contest/448/problem/B", "tags": ["implementation", " strings"], "title": "448-B", "statement": "B. Suffix Structurestime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutBizon the Champion isn't just a bison. He also is a favorite of the \"Bizons\" team.At a competition the \"Bizons\" got the following problem: \"You are given two distinct words (strings of English letters),sandt. You need to transform wordsinto wordt\". The task looked simple to the guys because they know the suffix data structures well. Bizon Senior loves suffix automaton. By applying it once to a string, he can remove from this string any single character. Bizon Middle knows suffix array well. By applying it once to a string, he can swap any two characters of this string. The guys do not know anything about the suffix tree, but it can help them do much more.Bizon the Champion wonders whether the \"Bizons\" can solve the problem. Perhaps, the solution do not require both data structures. Find out whether the guys can solve the problem and if they can, how do they do it? Can they solve it either only with use of suffix automaton or only with use of suffix array or they need both structures? Note that any structure may be used an unlimited number of times, the structures may be used in any order.InputThe first line contains a non-empty words. The second line contains a non-empty wordt. Wordssandtare different. Each word consists only of lowercase English letters. Each word contains at most 100 letters.OutputIn the single line print the answer to the problem. Print \"need tree\" (without the quotes) if wordscannot be transformed into wordteven with use of both suffix array and suffix automaton. Print \"automaton\" (without the quotes) if you need only the suffix automaton to solve the problem. Print \"array\" (without the quotes) if you need only the suffix array to solve the problem. Print \"both\" (without the quotes), if you need both data structures to solve the problem.It's guaranteed that if you can solve the problem only with use of suffix array, then it is impossible to solve it only with use of suffix automaton. This is also true for suffix automaton.ExamplesInputautomatontomatOutputautomatonInputarrayararyOutputarrayInputbothhotOutputbothInputneedtreeOutputneed treeNoteIn the third sample you can act like that: first transform \"both\" into \"oth\" by removing the first character using the suffix automaton and then make two swaps of the string using the suffix array and get \"hot\".", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "a1061918", "template_md5": "35d339e4", "result": "You are given two different strings,  $s$ and $t$.  You need to determine if it is possible to transform string $s$ into string $t$ using the following operations:\n\n* **Suffix Automaton:** Remove a single character from the string.\n* **Suffix Array:** Swap any two characters in the string.\n\nYou can use each operation an unlimited number of times, and you can use them in any order.\n\nOutput one of the following:\n\n* **\"need tree\"**:  It is impossible to transform $s$ into $t$ using only suffix automaton and suffix array operations.\n* **\"automaton\"**: It is possible to transform $s$ into $t$ using only suffix automaton operations.\n* **\"array\"**: It is possible to transform $s$ into $t$ using only suffix array operations.\n* **\"both\"**: It is possible to transform $s$ into $t$ using both suffix automaton and suffix array operations."}, {"prompt_md5": "52f9e290", "template_md5": "465699a0", "result": "You are given two different words.  Determine if you can transform the first word into the second word using only one of the following operations:\n\n* Remove a single character from the word.\n* Swap any two characters in the word.\n\nIf it's possible to transform the first word into the second word using only one of these operations, specify which operation is sufficient. If both operations are needed, say so. If it's impossible to transform the first word into the second word using either operation, say so."}]}