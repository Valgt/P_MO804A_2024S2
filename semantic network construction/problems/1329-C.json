{"uid": "1329-C", "url": "https://codeforces.com/contest/1329/problem/C", "tags": ["constructive algorithms", " data structures", " greedy", " implementation"], "title": "1329-C", "statement": "C. Drazil Likes Heaptime limit per test1.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputDrazil likes heap very much. So he created a problem with heap:There is a max heap with a height $$$h$$$ implemented on the array. The details of this heap are the following:This heap contains exactly $$$2^h - 1$$$distinctpositive non-zero integers. All integers are distinct. These numbers are stored in the array $$$a$$$ indexed from $$$1$$$ to $$$2^h-1$$$. For any $$$1 < i < 2^h$$$, $$$a[i] < a[\\\\left \\\\lfloor{\\\\frac{i}{2}}\\\\right \\\\rfloor]$$$.Now we want to reduce the height of this heap such that the height becomes $$$g$$$ with exactly $$$2^g-1$$$ numbers in heap. To reduce the height, we should perform the following action $$$2^h-2^g$$$ times:Choose an index $$$i$$$, which contains an element and call the following function $$$f$$$ in index $$$i$$$:Note that we suppose that if $$$a[i]=0$$$, then index $$$i$$$ don't contain an element.After all operations, the remaining $$$2^g-1$$$ element must be located in indices from $$$1$$$ to $$$2^g-1$$$. Now Drazil wonders what's the minimum possible sum of the remaining $$$2^g-1$$$ elements. Please find this sum and find a sequence of the function calls to achieve this value.InputThe first line of the input contains an integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 70\\\\,000$$$): the number of test cases.Each test case contain two lines. The first line contains two integers $$$h$$$ and $$$g$$$ ($$$1 \\\\leq g < h \\\\leq 20$$$). The second line contains $$$n = 2^h-1$$$distinctpositive integers $$$a[1], a[2], \\\\ldots, a[n]$$$ ($$$1 \\\\leq a[i] < 2^{20}$$$). For all $$$i$$$ from $$$2$$$ to $$$2^h - 1$$$, $$$a[i] < a[\\\\left \\\\lfloor{\\\\frac{i}{2}}\\\\right \\\\rfloor]$$$.The total sum of $$$n$$$ is less than $$$2^{20}$$$.OutputFor each test case, print two lines.The first line should contain one integer denoting the minimum sum after reducing the height of heap to $$$g$$$. The second line should contain $$$2^h - 2^g$$$ integers $$$v_1, v_2, \\\\ldots, v_{2^h-2^g}$$$. In $$$i$$$-th operation $$$f(v_i)$$$ should be called.ExampleInput2 3 2 7 6 3 5 4 2 1 3 2 7 6 5 4 3 2 1Output10 3 2 3 1 8 2 1 3 1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "d801bf18", "template_md5": "35d339e4", "result": "You are given a max heap with a height $h$ containing $2^h - 1$ distinct positive integers. The integers are stored in an array $a$ indexed from 1 to $2^h - 1$.  The heap property is satisfied, meaning for any $1 < i < 2^h$, $a[i] < a[\\lfloor i/2 \\rfloor]$.\n\nYou need to reduce the height of the heap to $g$ ($g < h$) such that it contains $2^g - 1$ elements. To do this, you can perform the following operation $2^h - 2^g$ times:\n\nChoose an index $i$ that contains an element and call the function $f(i)$.\n\nThe function $f(i)$ does the following:\n\n* If $a[i] = 0$, do nothing.\n* Otherwise, remove the element at index $i$ from the heap and update the heap property.\n\nAfter all operations, the remaining $2^g - 1$ elements must be located in indices from 1 to $2^g - 1$.\n\nFind the minimum possible sum of the remaining $2^g - 1$ elements and provide a sequence of function calls to achieve this value.\n\n\n\nLet me know if you'd like me to elaborate on any part of the problem statement."}, {"prompt_md5": "bfdceb2e", "template_md5": "465699a0", "result": "You are given a special array representing a max heap.  The goal is to reduce the height of the heap to a smaller value while minimizing the sum of the remaining elements. You can do this by repeatedly removing elements from the array using a specific function. Find the minimum possible sum and a sequence of function calls to achieve it."}]}