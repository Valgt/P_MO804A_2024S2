{"uid": "1904-F", "url": "https://codeforces.com/contest/1904/problem/F", "tags": ["data structures", " dfs and similar", " graphs", " implementation", " trees"], "title": "1904-F", "statement": "F. Beautiful Treetime limit per test4 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputLunchbox has a tree of size $$$n$$$ rooted at node $$$1$$$. Each node is then assigned a value. Lunchbox considers the tree to be beautiful if each value is distinct and ranges from $$$1$$$ to $$$n$$$. In addition, a beautiful tree must also satisfy $$$m$$$ requirements of $$$2$$$ types:\"1 a b c\" — The node with the smallest value on the path between nodes $$$a$$$ and $$$b$$$ must be located at $$$c$$$.\"2 a b c\" — The node with the largest value on the path between nodes $$$a$$$ and $$$b$$$ must be located at $$$c$$$.Now, you must assign values to each node such that the resulting tree is beautiful. If it is impossible to do so, output $$$-1$$$.InputThe first line contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\\\le n, m \\\\le 2 \\\\cdot 10^5$$$).The next $$$n - 1$$$ lines contain two integers $$$u$$$ and $$$v$$$ ($$$1 \\\\le u, v \\\\le n, u \\\\ne v$$$) — denoting an edge between nodes $$$u$$$ and $$$v$$$. It is guaranteed that the given edges form a tree.The next $$$m$$$ lines each contain four integers $$$t$$$, $$$a$$$, $$$b$$$, and $$$c$$$ ($$$t \\\\in \\\\{1,2\\\\}$$$, $$$1 \\\\le a, b, c \\\\le n$$$). It is guaranteed that node $$$c$$$ is on the path between nodes $$$a$$$ and $$$b$$$.OutputIf it is impossible to assign values such that the tree is beautiful, output $$$-1$$$. Otherwise, output $$$n$$$ integers, the $$$i$$$-th of which denotes the value of node $$$i$$$.ExamplesInput7 5 1 2 1 3 1 4 3 5 4 6 3 7 1 6 5 1 2 6 7 3 1 2 7 1 1 7 5 7 2 4 2 2Output1 6 7 5 3 4 2Input2 2 1 2 1 1 2 1 1 1 2 2Output-1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "852d68a9", "template_md5": "35d339e4", "result": "You are given a tree with $n$ nodes. Each node needs to be assigned a distinct value from 1 to $n$.  There are $m$ requirements, each of which is one of two types:\n\n* **Type 1:**  The node with the smallest value on the path between nodes $a$ and $b$ must be located at node $c$.\n* **Type 2:** The node with the largest value on the path between nodes $a$ and $b$ must be located at node $c$.\n\nDetermine if it is possible to assign values to the nodes such that the tree satisfies all the requirements. If it is possible, output the values for each node. If it is not possible, output $-1$."}, {"prompt_md5": "f72c68b4", "template_md5": "465699a0", "result": "You are given a tree with  nodes. Each node needs a unique number from 1 to  . There are  rules. Each rule specifies two nodes and a third node that must be either the smallest or largest numbered node on the path between the first two nodes.  Determine if it's possible to assign numbers to the nodes so that all rules are satisfied. If possible, output the numbers for each node. If not, output -1."}]}