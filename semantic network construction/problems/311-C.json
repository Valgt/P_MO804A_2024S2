{"uid": "311-C", "url": "https://codeforces.com/contest/311/problem/C", "tags": ["brute force", " data structures", " graphs", " shortest paths"], "title": "311-C", "statement": "C. Fetch the Treasuretime limit per test3 secondsmemory limit per test256 megabytesinputstdinoutputstdoutRainbow builthcells in a row that are numbered from 1 tohfrom left to right. There arencells with treasure. We call each of thesencells \"Treasure Cell\". Thei-th \"Treasure Cell\" is theai-th cell and the value of treasure in it iscidollars.Then, Freda went in the first cell. For now, she can go justkcells forward, or return to the first cell. That means Freda was able to reach the 1st, (k+ 1)-th, (2·k+ 1)-th, (3·k+ 1)-th cells and so on.Then Rainbow gave Fredamoperations. Each operation is one of the following three types:Add another methodx: she can also go justxcells forward at any moment. For example, initially she has only one methodk. If at some moment she has methodsa1,a2, ...,arthen she can reach all the cells with number in form, wherevi— some non-negative integer.Reduce the value of the treasure in thex-th \"Treasure Cell\" byydollars. In other words, to apply assignmentcx=cx-y.Ask the value of the most valuable treasure among the cells Freda can reach. If Freda cannot reach any cell with the treasure then consider the value of the most valuable treasure equal to 0, and do nothing. Otherwise take the most valuable treasure away. If several \"Treasure Cells\" have the most valuable treasure, take the \"Treasure Cell\" with the minimum number (not necessarily with the minimum number of cell). After that the total number of cells with a treasure is decreased by one.As a programmer, you are asked by Freda to write a program to answer each query.InputThe first line of the input contains four integers:h(1 ≤h≤ 1018),n,m(1 ≤n,m≤ 105)andk(1 ≤k≤ 104).Each of the nextnlines contains two integers:ai(1 ≤ai≤h),ci(1 ≤ci≤ 109). That means thei-th \"Treasure Cell\" is theai-th cell and cost of the treasure in that cell iscidollars. All theaiare distinct.Each of the nextmlines is in one of the three following formats:\"1x\" — an operation of type 1,1 ≤x≤h;\"2xy\" — an operation of type 2,1 ≤x≤n, 0 ≤y<cx;\"3\" — an operation of type 3.There are at most 20 operations of type 1. It's guaranteed that at any moment treasure in each cell has positive value. It's guaranteed that all operations is correct (no operation can decrease the value of the taken tresure).Please, do not use the%lldspecifier to read 64-bit integers in С++. It is preferred to use thecin,coutstreams or the%I64dspecifier.OutputFor each operation of type 3, output an integer indicates the value (in dollars) of the most valuable treasure among the \"Treasure Cells\" Freda can reach. If there is no such treasure, output 0.ExamplesInput10 3 5 25 507 608 1002 2 531 333Output5510050NoteIn the sample, there are 10 cells and 3 \"Treasure Cells\". The first \"Treasure Cell\" is cell 5, having 50 dollars tresure in it. The second \"Treasure Cell\" is cell 7, having 60 dollars tresure in it. The third \"Treasure Cell\" is cell 8, having 100 dollars tresure in it.At first, Freda can only reach cell 1, 3, 5, 7 and 9. In the first operation, we reduce the value in the second \"Treasure Cell\" from 60 to 55. Then the most valuable treasure among the \"Treasure Cells\" she can reach is max(50, 55) = 55. After the third operation, she can also go 3 cells forward each step, being able to reach cell 1, 3, 4, 5, 6, 7, 8, 9, 10. So the most valuable tresure is 100.Noticed that she took the 55 dollars and 100 dollars treasure away, so the last answer is 50.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "2f27d9d5", "template_md5": "35d339e4", "result": "There are $h$ cells in a row numbered from 1 to $h$. There are $n$ treasure cells, the $i$-th treasure cell is in cell $a_i$ and contains $c_i$ dollars.\n\nYou can start at cell 1. Initially, you can move $k$ cells forward at a time.  You can also add new movement options of $x$ cells forward.\n\nThere are $m$ operations:\n\n* **Operation 1:** Add a new movement option of $x$ cells forward.\n* **Operation 2:** Reduce the treasure in cell $x$ by $y$ dollars.\n* **Operation 3:**  Find the maximum value of treasure you can reach and remove it.\n\nOutput the maximum treasure value you can reach after each operation of type 3. If you cannot reach any treasure, output 0."}, {"prompt_md5": "790ba708", "template_md5": "465699a0", "result": "You are given a row of cells with some containing treasure.  You can move a fixed number of cells forward at a time, and this number can be increased by adding new movement options.  You can also reduce the value of treasure in a cell.  For each query, determine the highest value treasure you can reach and remove it from the row. If no treasure is reachable, output 0."}]}