{"uid": "1851-D", "url": "https://codeforces.com/contest/1851/problem/D", "tags": ["implementation", " math"], "title": "1851-D", "statement": "D. Prefix Permutation Sumstime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYour friends have an array of $$$n$$$ elements, calculated its array of prefix sums and passed it to you, accidentally losing one element during the transfer. Your task is to find out if the given array can matchespermutation.A permutation of $$$n$$$ elements is an array of $$$n$$$ numbers from $$$1$$$ to $$$n$$$ such that each number occurs exactlyonetimes in it.The array of prefix sums of the array $$$a$$$ — is such an array $$$b$$$ that $$$b_i = \\\\sum_{j=1}^i a_j, 1 \\\\le i \\\\le n$$$.For example, the original permutation was $$$[1, 5, 2, 4, 3]$$$. Its array of prefix sums — $$$[1, 6, 8, 12, 15]$$$. Having lost one element, you can get, for example, arrays $$$[6, 8, 12, 15]$$$ or $$$[1, 6, 8, 15]$$$.It can also be shown that the array $$$[1, 2, 100]$$$ does not correspond to any permutation.InputThe first line contains a positive number $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases. The description of the test cases follows.The first line of the description of each test case contains a positive number $$$n$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the size of the initial array.The second line of the description of each test case contains $$$n - 1$$$ positive number $$$a_i$$$ ($$$1 \\\\le a_i \\\\le 10^{18}$$$), $$$a_{i-1} < a_i$$$ — elements of the array of prefix sums.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output \"YES\" if such a permutation exists, and \"NO\" otherwise.You can output \"YES\" and \"NO\" in any case (for example, the strings \"yEs\", \"yes\" and \"Yes\" will be recognized as a positive response).ExampleInput1256 8 12 1551 6 8 1541 2 10041 3 62231 243 7 1055 44 46 5041 9 10513 21 36 4251 2 3 100000000000000000099 11 12 20 25 28 30 33OutputYES YES NO YES YES NO YES NO NO NO NO NONoteIn the fourth example, for example, the permutation $$$[1, 2, 3, 4]$$$ is suitable. In the fifth example, for example, the permutation $$$[2, 1]$$$ is suitable. In the seventh example, for example, the permutation $$$[1, 2, 4, 3]$$$ is suitable.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "1a1f5882", "template_md5": "35d339e4", "result": "You are given an array of $n-1$ numbers. This array represents the prefix sums of a permutation of numbers from 1 to $n$.  A permutation is an arrangement of numbers where each number appears exactly once. The prefix sum of an array is calculated as follows:\n\n* $b_1 = a_1$\n* $b_2 = a_1 + a_2$\n* $b_3 = a_1 + a_2 + a_3$\n* ...\n* $b_i = a_1 + a_2 + ... + a_i$\n\nDetermine if it is possible to reconstruct a permutation of numbers from 1 to $n$ that would produce the given array of prefix sums.\n\n**Input:**\n\n* $t$: The number of test cases.\n* For each test case:\n    * $n$: The size of the permutation.\n    * $n-1$ numbers: The elements of the prefix sum array.\n\n**Output:**\n\nFor each test case, output \"YES\" if a permutation can be reconstructed, and \"NO\" otherwise."}, {"prompt_md5": "1c917d75", "template_md5": "465699a0", "result": "You are given a list of numbers representing the prefix sums of a permutation.  One number is missing from the list. Determine if a valid permutation exists that could have produced this list of prefix sums."}]}