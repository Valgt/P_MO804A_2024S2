{"uid": "549-D", "url": "https://codeforces.com/contest/549/problem/D", "tags": ["greedy", " implementation"], "title": "549-D", "statement": "D. Haar Featurestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe first algorithm for detecting a face on the image working in realtime was developed by Paul Viola and Michael Jones in 2001. A part of the algorithm is a procedure that computesHaar features. As part of this task, we consider a simplified model of this concept.Let's consider a rectangular image that is represented with a table of sizen×m. The table elements are integers that specify the brightness of each pixel in the image.Afeaturealso is a rectangular table of sizen×m. Each cell of afeatureis painted black or white.To calculate the value of the given feature at the given image, you must perform the following steps. First the table of the feature is put over the table of the image (without rotations or reflections), thus each pixel is entirely covered with either black or white cell. Thevalueof a feature in the image is the value ofW-B, whereWis the total brightness of the pixels in the image, covered with white feature cells, andBis the total brightness of the pixels covered with black feature cells.Some examples of the most popular Haar features are given below.Your task is to determine the number of operations that are required to calculate the feature by using the so-calledprefix rectangles.Aprefix rectangleis any rectangle on the image, the upper left corner of which coincides with the upper left corner of the image.You have a variablevalue, whose value is initially zero. In oneoperationyou can count the sum of pixel values ​​at any prefix rectangle, multiply it by any integer and add to variablevalue.You are given a feature. It is necessary to calculate the minimum number ofoperationsrequired to calculate the values of this attribute at an arbitrary image. For a better understanding of the statement, read the explanation of the first sample.InputThe first line contains two space-separated integersnandm(1 ≤n,m≤ 100) — the number of rows and columns in the feature.Nextnlines contain the description of the feature. Each line consists ofmcharacters, thej-th character of thei-th line equals to \"W\", if this element of the feature is white and \"B\" if it is black.OutputPrint a single number — the minimum number of operations that you need to make to calculate the value of the feature.ExamplesInput6 8BBBBBBBBBBBBBBBBBBBBBBBBWWWWWWWWWWWWWWWWWWWWWWWWOutput2Input3 3WBWBWWWWWOutput4Input3 6WWBBWWWWBBWWWWBBWWOutput3Input4 4BBBBBBBBBBBBBBBWOutput4NoteThe first sample corresponds to featureB, the one shown in the picture. The value of this feature in an image of size6 × 8equals to the difference of the total brightness of the pixels in the lower and upper half of the image. To calculate its value, perform the following twooperations:add the sum of pixels in the prefix rectangle with the lower right corner in the6-th row and8-th column with coefficient1to the variablevalue(the rectangle is indicated by a red frame);add the number of pixels in the prefix rectangle with the lower right corner in the3-rd row and8-th column with coefficient- 2and variablevalue.Thus, all the pixels in the lower three rows of the image will be included with factor1, and all pixels in the upper three rows of the image will be included with factor1 - 2 =  - 1, as required.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6701203c", "template_md5": "35d339e4", "result": "You are given a rectangular \"feature\" made up of black and white squares.  The feature is used to analyze an image, which is also a rectangular grid of numbers representing pixel brightness.\n\nTo calculate the feature's value for a given image, you:\n\n1. Place the feature on top of the image, aligning the top-left corners.\n2. Sum the brightness of all pixels covered by white squares in the feature.\n3. Sum the brightness of all pixels covered by black squares in the feature.\n4. Subtract the second sum from the first sum.\n\nYou have a tool called \"prefix rectangles\". A prefix rectangle is any rectangle starting at the top-left corner of the image. You can calculate the sum of pixel brightness within any prefix rectangle.\n\nYour task is to find the minimum number of operations needed to calculate the feature's value for any image. Each operation involves:\n\n1. Choosing a prefix rectangle.\n2. Calculating the sum of pixel brightness within that rectangle.\n3. Multiplying that sum by an integer.\n4. Adding the result to a running total.\n\n\n\nLet me know if you'd like me to elaborate on any part of this!"}, {"prompt_md5": "af0ef03f", "template_md5": "465699a0", "result": "You are given a black and white grid representing a feature.  You need to find the minimum number of operations to calculate the value of this feature on any given image. Each operation involves summing the brightness of a rectangular section of the image (starting from the top-left corner) and multiplying it by a number, then adding the result to a running total."}]}