{"uid": "1264-D1", "url": "https://codeforces.com/contest/1264/problem/D1", "tags": ["combinatorics", " dp", " probabilities"], "title": "1264-D1", "statement": "D1. Beautiful Bracket Sequence (easy version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is the easy version of this problem. The only difference is the limit of $$$n$$$ - the length of the input string. In this version, $$$1 \\\\leq n \\\\leq 2000$$$. The hard version of this challenge is not offered in the round for the second division.Let's define a correct bracket sequence and its depth as follow:An empty string is a correct bracket sequence with depth $$$0$$$.If \"s\" is a correct bracket sequence with depth $$$d$$$ then \"(s)\" is a correct bracket sequence with depth $$$d + 1$$$.If \"s\" and \"t\" are both correct bracket sequences then their concatenation \"st\" is a correct bracket sequence with depth equal to the maximum depth of $$$s$$$ and $$$t$$$.For a (not necessarily correct) bracket sequence $$$s$$$, we define its depth as the maximum depth of anycorrectbracket sequence induced by removing some characters from $$$s$$$ (possibly zero). For example: the bracket sequence $$$s = $$$\"())(())\" has depth $$$2$$$, because by removing the third character we obtain a correct bracket sequence \"()(())\" with depth $$$2$$$.Given a string $$$a$$$ consists of only characters '(', ')' and '?'. Consider all (not necessarily correct) bracket sequences obtained by replacing all characters '?' in $$$a$$$ by either '(' or ')'. Calculate the sum of all the depths of all these bracket sequences. As this number can be large, find it modulo $$$998244353$$$.Hacksin this problem in the first division can be done only if easy and hard versions of this problem was solved.InputThe only line contains a non-empty string consist of only '(', ')' and '?'. The length of the string is at most $$$2000$$$.OutputPrint the answer modulo $$$998244353$$$ in a single line.ExamplesInput??Output1Input(?(?))Output9NoteIn the first test case, we can obtain $$$4$$$ bracket sequences by replacing all characters '?' with either '(' or ')':\"((\". Its depth is $$$0$$$;\"))\". Its depth is $$$0$$$;\")(\". Its depth is $$$0$$$;\"()\". Its depth is $$$1$$$.So, the answer is $$$1 = 0 + 0 + 0 + 1$$$.In the second test case, we can obtain $$$4$$$ bracket sequences by replacing all characters '?' with either '(' or ')':\"(((())\". Its depth is $$$2$$$;\"()()))\". Its depth is $$$2$$$;\"((()))\". Its depth is $$$3$$$;\"()(())\". Its depth is $$$2$$$.So, the answer is $$$9 = 2 + 2 + 3 + 2$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f2706712", "template_md5": "35d339e4", "result": "You are given a string  $a$ consisting of characters '(', ')', and '?'.  \n\nReplace each '?' in the string with either '(' or ')'.  \n\nFor each possible replacement, calculate the depth of the resulting bracket sequence. The depth of a bracket sequence is the maximum depth of any correct bracket sequence you can get by removing some characters from it.\n\nFinally, sum up the depths of all the bracket sequences you created and find the result modulo 998244353."}, {"prompt_md5": "7f292f73", "template_md5": "465699a0", "result": "You are given a string containing parentheses '(' , ')' and question marks '?'.  Replace each '?' with either '(' or ')'.  Calculate the sum of the maximum depths of all possible resulting bracket sequences. The depth of a bracket sequence is the highest nesting level of parentheses.  The answer should be given modulo 998244353."}]}