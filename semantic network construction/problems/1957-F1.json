{"uid": "1957-F1", "url": "https://codeforces.com/contest/1957/problem/F1", "tags": ["binary search", " data structures", " divide and conquer", " hashing", " probabilities", " trees"], "title": "1957-F1", "statement": "F1. Frequency Mismatch (Easy Version)time limit per test4 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputThis is the easy version of the problem. The difference between the two versions of this problem is the constraint on $$$k$$$. You can make hacks only if all versions of the problem are solved.You are given an undirected tree of $$$n$$$ nodes. Each node $$$v$$$ has a value $$$a_v$$$ written on it. You have to answer queries related to the tree.You are given $$$q$$$ queries. In each query, you are given $$$5$$$ integers, $$$u_1, v_1, u_2, v_2, k$$$. Denote the count of nodes with value $$$c$$$ on path $$$u_1 \\\\rightarrow v_1$$$ with $$$x_c$$$, and the count of nodes with value $$$c$$$ on path $$$u_2 \\\\rightarrow v_2$$$ with $$$y_c$$$. If there are $$$z$$$ such values of $$$c$$$ such that $$$x_c \\\\neq y_c$$$, output any $$$\\\\min(z, k)$$$ such values in any order.InputThe first line contains one integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 10^5$$$) — the number of nodes in the tree.The next line contains $$$n$$$ integers, $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\leq a_i \\\\leq 10^5$$$) — the value written on each node of the tree.Then $$$n - 1$$$ lines follow. Each line contains two integers $$$u$$$ and $$$v$$$ ($$$1 \\\\leq u, v \\\\leq n, u \\\\neq v$$$) denoting an edge of the tree. It is guaranteed that the given edges form a tree.The next line contains one integer $$$q$$$ ($$$1 \\\\leq q \\\\leq 10^5$$$) — the number of queries.Then $$$q$$$ lines follow. Each line contains five integers $$$u_1, v_1, u_2, v_2, k$$$ ($$$1 \\\\leq u_1, v_1, u_2, v_2 \\\\leq n$$$, $$$k = 1$$$).OutputFor each query, output on a separate line. For a query, first output $$$\\\\min(z, k)$$$ and then on the same line, output any $$$\\\\min(z, k)$$$ values in any order which occur a different number of times in each path.ExampleInput5 5 2 3 4 3 1 2 1 3 2 4 2 5 3 1 4 4 5 1 2 3 2 3 1 5 5 4 3 1Output1 5 0 1 2NoteFor query $$$1$$$, the first path is $$$1 \\\\rightarrow 2 \\\\rightarrow 4$$$, coming across the multiset of values $$$\\\\{5, 2, 4\\\\}$$$. On the second path $$$4 \\\\rightarrow 2 \\\\rightarrow 5$$$, we have the multiset $$$\\\\{4, 2, 3\\\\}$$$. Two numbers — $$$3$$$ and $$$5$$$ occur a different number of times, hence we print one of them.In query $$$2$$$, there is no difference between the paths, hence we output $$$0$$$.In query $$$3$$$, the first path is just the node $$$5$$$, resulting in the multiset $$$\\\\{3\\\\}$$$, and the second path $$$4 \\\\rightarrow 2 \\\\rightarrow 1 \\\\rightarrow 3$$$ gives $$$\\\\{4, 2, 5, 3\\\\}$$$. The numbers $$$5$$$, $$$2$$$ and $$$4$$$ occur a different number of times.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "4be2e567", "template_md5": "465699a0", "result": "You are given a tree with numbered nodes, each node having a value. You need to answer queries. Each query consists of four nodes and a number k. For each query, you need to find the k smallest values that appear a different number of times on the paths between the first pair of nodes and the second pair of nodes."}, {"prompt_md5": "c992056d", "template_md5": "35d339e4", "result": "You are given a tree with $n$ nodes. Each node has a value $a_i$ associated with it. You need to answer $q$ queries. Each query consists of 5 integers: $u_1$, $v_1$, $u_2$, $v_2$, and $k$. \n\nFor each query, you need to:\n\n1. Find the number of times each value appears on the path from node $u_1$ to $v_1$ (let's call this count $x_c$ for each value $c$).\n2. Find the number of times each value appears on the path from node $u_2$ to $v_2$ (let's call this count $y_c$ for each value $c$).\n3. Identify the values $c$ where $x_c \\neq y_c$.\n4. Output the minimum of $z$ (the number of values where $x_c \\neq y_c$) and $k$. Then, output any $min(z, k)$ of those values in any order.\n\n\n\n**Input:**\n\n* The first line contains $n$ (the number of nodes).\n* The next line contains $n$ integers, $a_1, a_2, ..., a_n$ (the values on each node).\n* The next $n-1$ lines each contain two integers, $u$ and $v$, representing an edge in the tree.\n* The next line contains $q$ (the number of queries).\n* Each of the next $q$ lines contains five integers: $u_1$, $v_1$, $u_2$, $v_2$, and $k$ for each query.\n\n**Output:**\n\nFor each query, output:\n\n* The minimum of $z$ and $k$.\n* Then, output any $min(z, k)$ values where $x_c \\neq y_c$."}]}