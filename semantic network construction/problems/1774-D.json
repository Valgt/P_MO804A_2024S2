{"uid": "1774-D", "url": "https://codeforces.com/contest/1774/problem/D", "tags": ["brute force", " constructive algorithms", " greedy", " implementation", " two pointers"], "title": "1774-D", "statement": "D. Same Count Onetime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputChthollyNotaSeniorious received a special gift from AquaMoon: $$$n$$$ binary arrays of length $$$m$$$. AquaMoon tells him that in one operation, he can choose any two arrays and any position $$$pos$$$ from $$$1$$$ to $$$m$$$, and swap the elements at positions $$$pos$$$ in these arrays.He is fascinated with this game, and he wants to find the minimum number of operations needed to make the numbers of $$$1$$$s in all arrays the same. He has invited you to participate in this interesting game, so please try to find it!If it is possible, please output specific exchange steps in the format described in the output section. Otherwise, please output $$$-1$$$.InputThe first line of the input contains a single integer $$$t$$$ ($$$1 \\\\leq t \\\\leq 2\\\\cdot 10^4$$$)  — the number of test cases. The description of test cases follows.The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\\\leq n \\\\leq 10^5$$$, $$$2 \\\\leq m \\\\leq 10^5$$$).The $$$i$$$-th of the following $$$n$$$ lines contains $$$m$$$ integers $$$a_{i, 1}, a_{i, 2}, \\\\ldots, a_{i, m}$$$ $$$(0 \\\\le a_{i, j} \\\\le 1)$$$  — the elements of the $$$i$$$-th array.It is guaranteed that the sum of $$$n \\\\cdot m$$$ over all test cases does not exceed $$$10^6$$$.OutputFor each test case, if the objective is not achievable, output $$$-1$$$.Otherwise, in the first line output $$$k$$$ $$$(0 \\\\le k \\\\le mn)$$$  — the minimum number of operations required.The $$$i$$$-th of the following $$$k$$$ lines should contain $$$3$$$ integers, $$$x_i, y_i, z_i$$$ $$$(1 \\\\le x_i, y_i \\\\le n, 1 \\\\le z_i \\\\le m)$$$, which describe an operation that swap $$$a_{x_i, z_i}, a_{y_i, z_i}$$$: swap the $$$z_i$$$-th number of the $$$x_i$$$-th and $$$y_i$$$-th arrays.ExampleInput33 41 1 1 00 0 1 01 0 0 14 31 0 00 1 10 0 10 0 02 20 00 1Output1 2 1 1 1 4 2 2 -1NoteIn the first test case, it's enough to do a single operation: to swap the first element in the second and the first rows. The arrays will become $$$[0, 1, 1, 0], [1, 0, 1, 0], [1, 0, 0, 1]$$$, each of them contains exactly two $$$1$$$s.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "4a00fb0d", "template_md5": "35d339e4", "result": "You are given $n$ binary arrays, each of length $m$.  You can perform the following operation any number of times:\n\n* Choose two arrays and a position $pos$ from 1 to $m$.\n* Swap the elements at position $pos$ in the two chosen arrays.\n\nFind the minimum number of operations needed to make the number of 1's in each array the same. If this is not possible, output -1. If it is possible, output the minimum number of operations and a list of the operations performed. \n\n**Input:**\n\n* The first line contains an integer $t$ ($1 \\le t \\le 2 \\cdot 10^4$) representing the number of test cases.\n* For each test case:\n    * The first line contains two integers $n$ and $m$ ($2 \\le n \\le 10^5$, $2 \\le m \\le 10^5$).\n    * The next $n$ lines each contain $m$ integers ($0 \\le a_{i,j} \\le 1$) representing the elements of the $i$-th array.\n\n**Output:**\n\n* For each test case:\n    * If it is not possible to make the number of 1's the same in all arrays, output -1.\n    * Otherwise, output the minimum number of operations $k$ ($0 \\le k \\le mn$).\n    * The next $k$ lines each contain three integers $x_i$, $y_i$, and $z_i$ ($1 \\le x_i, y_i \\le n$, $1 \\le z_i \\le m$) describing an operation: swap the $z_i$-th element of the $x_i$-th and $y_i$-th arrays."}, {"prompt_md5": "ae98044b", "template_md5": "465699a0", "result": "You are given a set of binary arrays. You can swap elements between two arrays at a specific position. Find the minimum number of swaps needed to make the number of '1's in each array the same. If it's impossible, output -1."}]}