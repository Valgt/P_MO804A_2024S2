{"uid": "631-D", "url": "https://codeforces.com/contest/631/problem/D", "tags": ["data structures", " hashing", " implementation", " string suffix structures", " strings"], "title": "631-D", "statement": "D. Messengertime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputEach employee of the \"Blake Techologies\" company uses a special messaging app \"Blake Messenger\". All the stuff likes this app and uses it constantly. However, some important futures are missing. For example, many users want to be able to search through the message history. It was already announced that the new feature will appear in the nearest update, when developers faced some troubles that only you may help them to solve.All the messages are represented as a strings consisting of only lowercase English letters. In order to reduce the network load strings are represented in the special compressed form. Compression algorithm works as follows: string is represented as a concatenation ofnblocks, each block containing only equal characters. One block may be described as a pair(li,ci), whereliis the length of thei-th block andciis the corresponding letter. Thus, the stringsmay be written as the sequence of pairs.Your task is to write the program, that given two compressed stringtandsfinds all occurrences ofsint. Developers know that there may be many such occurrences, so they only ask you to find thenumberof them. Note thatpis the starting position of some occurrence ofsintif and only iftptp+ 1...tp+ |s| - 1=s, wheretiis thei-th character of stringt.Note that the way to represent the string in compressed form may not be unique. For example string \"aaaa\" may be given as,,...InputThe first line of the input contains two integersnandm(1 ≤n,m≤ 200 000) — the number of blocks in the stringstands, respectively.The second line contains the descriptions ofnparts of stringtin the format \"li-ci\" (1 ≤li≤ 1 000 000) — the length of thei-th part and the corresponding lowercase English letter.The second line contains the descriptions ofmparts of stringsin the format \"li-ci\" (1 ≤li≤ 1 000 000) — the length of thei-th part and the corresponding lowercase English letter.OutputPrint a single integer — the number of occurrences ofsint.ExamplesInput5 33-a 2-b 4-c 3-a 2-c2-a 2-b 1-cOutput1Input6 13-a 6-b 7-a 4-c 8-e 2-a3-aOutput6Input5 51-h 1-e 1-l 1-l 1-o1-w 1-o 1-r 1-l 1-dOutput0NoteIn the first sample,t= \"aaabbccccaaacc\", and strings= \"aabbc\". The only occurrence of stringsin stringtstarts at positionp= 2.In the second sample,t= \"aaabbbbbbaaaaaaacccceeeeeeeeaa\", ands= \"aaa\". The occurrences ofsintstart at positionsp= 1,p= 10,p= 11,p= 12,p= 13andp= 14.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "5289f14c", "template_md5": "35d339e4", "result": "You are given two strings,  $t$ and $s$, represented in a compressed format. \n\nThe compressed format is a sequence of pairs, where each pair $(li, ci)$ represents a block of $li$ characters, all of which are equal to $ci$.\n\nYour task is to find the number of times $s$ appears as a substring within $t$.  \n\n**Note:**\n\n* The length of $t$ and $s$ can be up to 200,000 characters.\n* The length of each block in the compressed representation can be up to 1,000,000.\n* An occurrence of $s$ in $t$ starts at position $p$ if and only if $t_{p}t_{p+1}...t_{p+|s|-1} = s$.\n\n\n\nLet me know if you'd like me to elaborate on any part of the problem statement."}, {"prompt_md5": "31039c38", "template_md5": "465699a0", "result": "You are given two compressed strings,  't' and 's'.  't' is made up of blocks of repeating characters, and 's' is also made up of blocks of repeating characters.  Find how many times 's' appears within 't', considering that the blocks in 't' can be rearranged."}]}