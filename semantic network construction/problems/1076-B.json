{"uid": "1076-B", "url": "https://codeforces.com/contest/1076/problem/B", "tags": ["implementation", " math", " number theory"], "title": "1076-B", "statement": "B. Divisor Subtractiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an integer number $$$n$$$. The following algorithm is applied to it:if $$$n = 0$$$, then end algorithm;find the smallestprimedivisor $$$d$$$ of $$$n$$$;subtract $$$d$$$ from $$$n$$$ and go to step $$$1$$$.Determine the number of subtrations the algorithm will make.InputThe only line contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 10^{10}$$$).OutputPrint a single integer â€” the number of subtractions the algorithm will make.ExamplesInput5Output1Input4Output2NoteIn the first example $$$5$$$ is the smallest prime divisor, thus it gets subtracted right away to make a $$$0$$$.In the second example $$$2$$$ is the smallest prime divisor at both steps.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "6f694a49", "template_md5": "35d339e4", "result": "You are given an integer $n$.  Here's an algorithm applied to it:\n\n1. If $n = 0$, stop the algorithm.\n2. Find the smallest prime divisor $d$ of $n$.\n3. Subtract $d$ from $n$.\n4. Go back to step 2.\n\nDetermine how many times the subtraction step is performed before the algorithm stops. \n\nInput: A single integer $n$ ($2 \\le n \\le 10^{10}$).\n\nOutput: A single integer representing the number of subtractions performed."}, {"prompt_md5": "9ef01c63", "template_md5": "465699a0", "result": "You are given a number. Repeatedly find the smallest prime number that divides the number, subtract it, and repeat until the number is zero. Count how many times you subtract."}]}