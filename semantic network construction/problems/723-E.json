{"uid": "723-E", "url": "https://codeforces.com/contest/723/problem/E", "tags": ["constructive algorithms", " dfs and similar", " flows", " graphs", " greedy"], "title": "723-E", "statement": "E. One-Way Reformtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere arencities andmtwo-way roads in Berland, each road connects two cities. It is known that there is no more than one road connecting each pair of cities, and there is no road which connects the city with itself. It is possible that there is no way to get from one city to some other city using only these roads.The road minister decided to make a reform in Berland and to orient all roads in the country, i.e. to make each road one-way. The minister wants tomaximizethe number of cities, for which the number of roads that begins in the cityequalsto the number of roads that ends in it.InputThe first line contains a positive integert(1 ≤t≤ 200) — the number of testsets in the input.Each of the testsets is given in the following way. The first line contains two integersnandm(1 ≤n≤ 200,0 ≤m≤n·(n- 1) / 2) — the number of cities and the number of roads in Berland.The nextmlines contain the description of roads in Berland. Each line contains two integersuandv(1 ≤u,v≤n) — the cities the corresponding road connects. It's guaranteed that there are no self-loops and multiple roads. It is possible that there is no way along roads between a pair of cities.It is guaranteed that the total number of cities in all testset of input data doesn't exceed200.Pay attention that forhacks, you can only use tests consisting ofone testset, sotshould be equal to one.OutputFor each testset print the maximum number of such cities that the number of roads that begins in the city, is equal to the number of roads that ends in it.In the nextmlines print oriented roads. First print the number of the city where the road begins and then the number of the city where the road ends. If there are several answers, print any of them. It is allowed to print roads in each test in arbitrary order. Each road should be printed exactly once.ExampleInput25 52 14 52 31 33 57 23 74 2Output31 33 55 43 22 132 43 7", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "b5de79a3", "template_md5": "35d339e4", "result": "There are $n$ cities and $m$ two-way roads in Berland. Each road connects two different cities.  The goal is to orient all the roads to make them one-way.  \n\nYou need to find the maximum number of cities where the number of roads starting at the city equals the number of roads ending at the city.\n\n**Input:**\n\n* The first line contains an integer $t$ (1 ≤ $t$ ≤ 200), the number of test cases.\n* For each test case:\n    * The first line contains two integers $n$ (1 ≤ $n$ ≤ 200) and $m$ (0 ≤ $m$ ≤ $n$( $n$ - 1) / 2), the number of cities and roads.\n    * The next $m$ lines each contain two integers $u$ and $v$ (1 ≤ $u$, $v$ ≤ $n$), representing a road connecting cities $u$ and $v$.\n\n**Output:**\n\n* For each test case, print the maximum number of cities that satisfy the condition.\n* Print the oriented roads in the following format:\n    * For each road, print the starting city followed by the ending city. \n\n\n\nLet me know if you'd like help with any specific part of the problem or the solution."}, {"prompt_md5": "d29a73be", "template_md5": "465699a0", "result": "You are given a network of cities connected by roads.  Each road connects two cities, and there is at most one road between any two cities.  You need to reorient all the roads to be one-way.  Find the maximum number of cities where the number of roads entering the city equals the number of roads leaving the city.  Also, list the one-way roads."}]}