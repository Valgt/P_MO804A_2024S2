{"uid": "1987-D", "url": "https://codeforces.com/contest/1987/problem/D", "tags": ["dp", " games"], "title": "1987-D", "statement": "D. World is Minetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlice and Bob are playing a game. Initially, there are $$$n$$$ cakes, with the $$$i$$$-th cake having atastinessvalue of $$$a_i$$$.Alice and Bob take turns eating them, with Alice starting first:In her turn, Alice chooses and eats any remaining cake whose tastiness isstrictly greaterthan themaximumtastiness of any of the cakes she's eaten before that. Note that on the first turn, she can choose any cake.In his turn, Bob chooses any remaining cake and eats it.The game ends when the current player can't eat a suitable cake. Let $$$x$$$ be the number of cakes that Alice ate. Then, Alice wants to maximize $$$x$$$, while Bob wants to minimize $$$x$$$.Find out how many cakes Alice will eat if both players play optimally.InputEach test contains multiple test cases. The first line of input contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 500$$$) — the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 5000$$$) — the number of cakes.The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\\\ldots, a_n$$$ ($$$1 \\\\le a_i \\\\le n$$$) — the tastiness values of the cakes.It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$5000$$$.OutputFor each test case, output a single integer — the number of cakes Alice will eat if both players play optimally.ExampleInput941 4 2 331 1 151 4 2 3 443 4 1 41184 3 2 5 6 8 3 476 1 1 3 5 3 1116 11 6 8 7 5 3 11 2 3 5172 6 5 3 9 1 6 2 5 6 3 2 3 9 6 1 6Output2 1 3 2 1 3 2 4 4NoteIn the first test case, one possible sequence of turns is:Alice eats a cake with a tastiness value of $$$1$$$. The remaining cakes are $$$[4, 2, 3]$$$.Bob eats a cake with a tastiness value of $$$2$$$. The remaining cakes are $$$[4, 3]$$$.Alice eats a cake with a tastiness of $$$3$$$. The remaining cakes are $$$[4]$$$.Bob eats a cake with a tastiness value of $$$4$$$. The remaining cakes are $$$[]$$$.Since there are no more cakes left, the game ends.In the second test case, one possible sequence of turns is:Alice eats a cake with a tastiness value of $$$1$$$. The remaining cakes are $$$[1, 1]$$$.Bob eats a cake with a tastiness value of $$$1$$$. The remaining cakes are $$$[1]$$$.Since Alice has already eaten a cake with a tastiness value of $$$1$$$, she cannot make a turn, so the game ends.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "983ac07a", "template_md5": "35d339e4", "result": "There are $n$ cakes, each with a distinct tastiness value $a_i$ ($1 \\le a_i \\le n$). Two players take turns eating cakes. \n\n* Player 1 (let's call them \"A\") can eat a cake if its tastiness is strictly greater than the tastiness of any cake they have eaten before. On their first turn, they can eat any cake.\n* Player 2 (let's call them \"B\") can eat any remaining cake.\n\nThe game ends when a player cannot eat a suitable cake.  \n\nDetermine the maximum number of cakes A can eat if both players play optimally. \n\nInput:\n\n* $t$ - the number of test cases\n* For each test case:\n    * $n$ - the number of cakes\n    * $a_1, a_2, ..., a_n$ - the tastiness values of the cakes\n\nOutput:\n\n* For each test case, output the maximum number of cakes A can eat."}, {"prompt_md5": "a789d5e9", "template_md5": "465699a0", "result": "Two players take turns choosing from a list of items with increasing values. The first player can only choose an item with a value higher than any they've chosen before. The second player can choose any item. The game ends when a player can't choose.  Find the maximum number of items the first player can choose."}]}