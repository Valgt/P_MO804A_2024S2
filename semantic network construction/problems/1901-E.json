{"uid": "1901-E", "url": "https://codeforces.com/contest/1901/problem/E", "tags": ["dfs and similar", " dp", " graphs", " greedy", " sortings", " trees"], "title": "1901-E", "statement": "E. Compressed Treetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a tree consisting of $$$n$$$ vertices. A number is written on each vertex; the number on vertex $$$i$$$ is equal to $$$a_i$$$.You can perform the following operation any number of times (possibly zero):choose a vertex which hasat most $$$1$$$incident edge and remove this vertex from the tree.Note that you can delete all vertices.After all operations are done, you're compressing the tree. The compression process is done as follows. While there is a vertex havingexactly $$$2$$$incident edges in the tree, perform the following operation:delete this vertex, connect its neighbors with an edge.It can be shown that if there are multiple ways to choose a vertex to delete during the compression process, the resulting tree is still the same.Your task is to calculate the maximum possible sum of numbers written on vertices after applying the aforementioned operation any number of times, and then compressing the tree.InputThe first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases.The first line of each test case contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 5 \\\\cdot 10^5$$$) — the number of vertices.The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$-10^9 \\\\le a_i \\\\le 10^9$$$).Each of the next $$$n - 1$$$ lines describes an edge of the tree. Edge $$$i$$$ is denoted by two integers $$$v_i$$$ and $$$u_i$$$, the labels of vertices it connects ($$$1 \\\\le v_i, u_i \\\\le n$$$, $$$v_i \\\\ne u_i$$$). These edges form a tree.Additional constraint on the input: the sum of $$$n$$$ over all test cases doesn't exceed $$$5 \\\\cdot 10^5$$$.OutputFor each test case, print a single integer — the maximum possible sum of numbers written on vertices after applying the aforementioned operation any number of times, and then compressing the tree.ExampleInput341 -2 2 11 23 22 42-2 -52 17-2 4 -2 3 3 2 -11 22 33 43 54 64 7Output3 0 9", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "ce0d5ae1", "template_md5": "35d339e4", "result": "You are given a tree with $n$ vertices, where each vertex has a number $a_i$ assigned to it.  You can repeatedly remove a vertex with at most one edge connected to it.  \n\nAfter removing vertices, you compress the tree as follows:\n\n* While there is a vertex with exactly two edges connected to it, remove that vertex and connect its two neighbors with a new edge.\n\nThe goal is to find the maximum possible sum of the numbers on the vertices after performing these operations and compressing the tree.\n\n\nInput:\n\n* The first line contains the number of test cases, $t$.\n* For each test case:\n    * The first line contains the number of vertices, $n$.\n    * The second line contains the $n$ numbers $a_1, a_2, ..., a_n$.\n    * The next $n-1$ lines each describe an edge of the tree with two vertex labels $v_i$ and $u_i$.\n\nOutput:\n\n* For each test case, print the maximum possible sum of the numbers on the vertices after the operations and compression."}, {"prompt_md5": "49474d49", "template_md5": "465699a0", "result": "You are given a tree-like structure with numbers on each node. You can remove nodes with at most one connection, then repeatedly remove nodes with exactly two connections, merging their neighbors.  What is the largest possible sum of the numbers remaining after these operations?"}]}