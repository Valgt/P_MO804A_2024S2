{"uid": "523-D", "url": "https://codeforces.com/contest/523/problem/D", "tags": ["*special", " data structures", " implementation"], "title": "523-D", "statement": "D. Statistics of Recompressing Videostime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA social network for dogs called DH (DogHouse) haskspecial servers to recompress uploaded videos of cute cats. After each video is uploaded, it should be recompressed on one (any) of the servers, and only after that it can be saved in the social network.We know that each server takes one second to recompress a one minute fragment. Thus, any server takesmseconds to recompress amminute video.We know the time when each of thenvideos were uploaded to the network (in seconds starting from the moment all servers started working). All videos appear at different moments of time and they are recompressed in the order they appear. If some video appeared at times, then its recompressing can start at that very moment, immediately. Some videos can await recompressing when all the servers are busy. In this case, as soon as a server is available, it immediately starts recompressing another video. The videos that await recompressing go in a queue. If by the moment the videos started being recompressed some servers are available, then any of them starts recompressing the video.For each video find the moment it stops being recompressed.InputThe first line of the input contains integersnandk(1 ≤n,k≤ 5·105) — the number of videos and servers, respectively.Nextnlines contain the descriptions of the videos as pairs of integerssi,mi(1 ≤si,mi≤ 109), wheresiis the time in seconds when thei-th video appeared andmiis its duration in minutes. It is guaranteed that all thesi's are distinct and the videos are given in the chronological order of upload, that is in the order of increasingsi.OutputPrintnnumberse1,e2, ...,en, whereeiis the time in seconds after the servers start working, when thei-th video will be recompressed.ExamplesInput3 21 52 53 5Output6711Input6 11 10000000002 10000000003 10000000004 10000000005 10000000006 3Output100000000120000000013000000001400000000150000000015000000004", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "cc222cee", "template_md5": "35d339e4", "result": "You are given $n$ videos that arrive at different times. Each video has a duration of $m$ minutes. There are $k$ servers, each capable of re-compressing a 1-minute video fragment in 1 second.\n\nVideos are processed in the order they arrive.  A server can start re-compressing a video as soon as it becomes available. If a server is busy, the video waits in a queue.\n\nFor each video, determine the time (in seconds) when it finishes being re-compressed. \n\n**Input:**\n\n* The first line contains two integers, $n$ and $k$ ($1 \\le n, k \\le 5 \\cdot 10^5$), representing the number of videos and servers, respectively.\n* The next $n$ lines each contain two integers, $s_i$ and $m_i$ ($1 \\le s_i, m_i \\le 10^9$), representing the arrival time (in seconds) and duration (in minutes) of the $i$-th video.\n\n**Output:**\n\nPrint $n$ integers, $e_1, e_2, ..., e_n$, where $e_i$ is the time (in seconds) when the $i$-th video finishes being re-compressed."}, {"prompt_md5": "78a32080", "template_md5": "465699a0", "result": "You have a number of videos that arrive at different times. Each video needs to be processed by one of several processors. Each processor takes a certain amount of time to process a video.  Find the time each video finishes processing."}]}