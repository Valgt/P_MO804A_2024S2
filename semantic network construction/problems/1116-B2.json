{"uid": "1116-B2", "url": "https://codeforces.com/contest/1116/problem/B2", "tags": [], "title": "1116-B2", "statement": "B2. Not A, not B or not C?time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a qubit which is guaranteed to be in one of the following states:$$$|A\\\\rangle = \\\\frac{1}{\\\\sqrt{2}} \\\\big( |0\\\\rangle + |1\\\\rangle \\\\big)$$$,$$$|B\\\\rangle = \\\\frac{1}{\\\\sqrt{2}} \\\\big( |0\\\\rangle + \\\\omega |1\\\\rangle \\\\big)$$$, or$$$|C\\\\rangle = \\\\frac{1}{\\\\sqrt{2}} \\\\big( |0\\\\rangle + \\\\omega^2 |1\\\\rangle \\\\big)$$$, where $$$\\\\omega = e^{2i\\\\pi/3}$$$.These states are not orthogonal, and thus can not be distinguished perfectly. Your task is to figure out in which state the qubit isnot. More formally:If the qubit was in state $$$|A\\\\rangle$$$, you have to return 1 or 2.If the qubit was in state $$$|B\\\\rangle$$$, you have to return 0 or 2.If the qubit was in state $$$|C\\\\rangle$$$, you have to return 0 or 1.In other words, return 0 if you're sure the qubit wasnotin state $$$|A\\\\rangle$$$, return 1 if you're sure the qubit wasnotin state $$$|B\\\\rangle$$$, and return 2 if you're sure the qubit wasnotin state $$$|C\\\\rangle$$$.Your solution will be called 1000 times, each time the state of the qubit will be chosen as $$$|A\\\\rangle$$$, $$$|B\\\\rangle$$$ or $$$|C\\\\rangle$$$ with equal probability. The state of the qubit after the operations does not matter.You have to implement an operation which takes a qubit as an input and returns an integer. Your code should have the following signature:namespace Solution {open Microsoft.Quantum.Primitive;open Microsoft.Quantum.Canon;operation Solve (q : Qubit) : Int {// your code here}}", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "9c982067", "template_md5": "35d339e4", "result": "You are given a qubit that can be in one of three states:\n\n* $|A\\rangle = \\frac{1}{\\sqrt{2}} (|0\\rangle + |1\\rangle)$\n* $|B\\rangle = \\frac{1}{\\sqrt{2}} (|0\\rangle + \\omega |1\\rangle)$\n* $|C\\rangle = \\frac{1}{\\sqrt{2}} (|0\\rangle + \\omega^2 |1\\rangle)$\n\nwhere $\\omega = e^{2i\\pi/3}$.\n\nYour task is to determine which state the qubit is **not** in.  \n\nYou can return:\n\n* 0 if you are sure the qubit is not in state $|A\\rangle$\n* 1 if you are sure the qubit is not in state $|B\\rangle$\n* 2 if you are sure the qubit is not in state $|C\\rangle$\n\nYou will be given the qubit in each of the three states with equal probability 1/3.  The state of the qubit after your operation does not matter. \n\nYou need to write a program that takes a qubit as input and returns an integer (0, 1, or 2)."}, {"prompt_md5": "d6d005e5", "template_md5": "465699a0", "result": "You have a system that can be in one of three states. You need to figure out which state it is *not* in. You can perform a single operation on the system, and the operation's output will tell you which state it is definitely not in.  You will be tested 1000 times, each time with a random state."}]}