{"uid": "914-H", "url": "https://codeforces.com/contest/914/problem/H", "tags": ["combinatorics", " dp", " games", " trees"], "title": "914-H", "statement": "H. Ember and Storm's Tree Gametime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputEmber and Storm play a game. First, Ember picks a labelled treeTofnvertices, such that the degree of every vertex is at mostd. Then, Storm picks two distinct verticesuandvin this tree and writes down the labels of the vertices in the path fromutovin a sequencea1,a2...ak. Finally, Ember picks any indexi(1 ≤i<k) in the array. Now he performs one of the following two operations exactly once:flip the subrange[i+ 1,k]and addaito it. After this, the sequence becomesa1, ...ai,ak+ai,ak- 1+ai, ...ai+ 1+ainegate the subrange[i+ 1,k]and addaito it. i.e., the array becomesa1, ...ai,  -ai+ 1+ai,  -ai+ 2+ai, ... -ak+aiEmber wins if the array is monotonically increasing or decreasing after this. Otherwise Storm wins.The game can be described by the tuple(T,u,v,i,op)whereopis «flip» or «negate» depending on the action Ember chose in the last turn. Find the number of tuples that can occur if Ember and Storm play optimally. When they play optimally, if there are multiple moves by which they are guaranteed to win, then they may play any of the winning moves. Otherwise, if someone loses no matter what they play, then they may play any of the possible moves.Report the answer modulom.InputThe input consists of a single line containing three integersn,dandm(2 ≤n≤ 200, 1 ≤d<n, 1 ≤m≤ 2·109).OutputPrint a single number  — the number of possible tuples if Ember and Storm play as described, modulom.ExamplesInput2 1 1000000007Output4Input3 1 250Output0Input3 2 100Output36NoteIn the first sample case, there is only one possible tree. There are two possible paths,1to2and2to1. For both paths,ican only be1, andopcan take both possibilities. Therefore, the answer is4.In the second sample, there are no possible trees.In the third sample, there are three possible trees.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "2317bf16", "template_md5": "35d339e4", "result": "Given a tree with $n$ vertices and a maximum degree of $d$ for each vertex, two players take turns. \n\n* **Player 1** chooses two distinct vertices $u$ and $v$ in the tree and outputs the labels of the vertices in the path from $u$ to $v$ as a sequence $a_1, a_2, ..., a_k$.\n\n* **Player 2** chooses an index $i$ ($1 \\le i < k$) and performs one of the following operations:\n    * **Flip:** Reverse the subrange $[i+1, k]$ and add $a_i$ to each element in the subrange.\n    * **Negate:** Negate the subrange $[i+1, k]$ and add $a_i$ to each element in the subrange.\n\nPlayer 2 wins if the resulting sequence is monotonically increasing or decreasing. Otherwise, Player 1 wins.\n\nGiven $n$, $d$, and a modulus $m$, find the number of possible game states $(T, u, v, i, op)$ where $op$ is either \"flip\" or \"negate\", considering optimal play from both players."}, {"prompt_md5": "03ab0491", "template_md5": "465699a0", "result": "Two players take turns modifying a list of numbers. The first player chooses a starting point in the list and decides to either reverse the remaining part of the list or negate it (change all numbers to their opposite) and add a value to each number. The goal is to make the list either entirely increasing or entirely decreasing.  \n\nDetermine how many different ways the list can be modified, given certain constraints on the list's length and the starting point."}]}