{"uid": "1439-C", "url": "https://codeforces.com/contest/1439/problem/C", "tags": ["binary search", " data structures", " divide and conquer", " greedy", " implementation"], "title": "1439-C", "statement": "C. Greedy Shoppingtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array $$$a_1, a_2, \\\\ldots, a_n$$$ of integers. This array isnon-increasing.Let's consider a line with $$$n$$$ shops. The shops are numbered with integers from $$$1$$$ to $$$n$$$ from left to right. The cost of a meal in the $$$i$$$-th shop is equal to $$$a_i$$$.You should process $$$q$$$ queries of two types:1 x y: for each shop $$$1 \\\\leq i \\\\leq x$$$ set $$$a_{i} = max(a_{i}, y)$$$.2 x y: let's consider a hungry man with $$$y$$$ money. He visits the shops from $$$x$$$-th shop to $$$n$$$-th and if he can buy a meal in the current shop he buys one item of it. Find how many meals he will purchase. The man can buy a meal in the shop $$$i$$$ if he has at least $$$a_i$$$ money, and after it his money decreases by $$$a_i$$$.InputThe first line contains two integers $$$n$$$, $$$q$$$ ($$$1 \\\\leq n, q \\\\leq 2 \\\\cdot 10^5$$$).The second line contains $$$n$$$ integers $$$a_{1},a_{2}, \\\\ldots, a_{n}$$$ $$$(1 \\\\leq a_{i} \\\\leq 10^9)$$$ — the costs of the meals. It is guaranteed, that $$$a_1 \\\\geq a_2 \\\\geq \\\\ldots \\\\geq a_n$$$.Each of the next $$$q$$$ lines contains three integers $$$t$$$, $$$x$$$, $$$y$$$ ($$$1 \\\\leq t \\\\leq 2$$$, $$$1\\\\leq x \\\\leq n$$$, $$$1 \\\\leq y \\\\leq 10^9$$$), each describing the next query.It is guaranteed that there exists at least one query of type $$$2$$$.OutputFor each query of type $$$2$$$ output the answer on the new line.ExampleInput10 6 10 10 10 6 6 5 5 5 3 1 2 3 50 2 4 10 1 3 10 2 2 36 1 4 7 2 2 17Output8 3 6 2NoteIn the first query a hungry man will buy meals in all shops from $$$3$$$ to $$$10$$$.In the second query a hungry man will buy meals in shops $$$4$$$, $$$9$$$, and $$$10$$$.After the third query the array $$$a_1, a_2, \\\\ldots, a_n$$$ of costs won't change and will be $$$\\\\{10, 10, 10, 6, 6, 5, 5, 5, 3, 1\\\\}$$$.In the fourth query a hungry man will buy meals in shops $$$2$$$, $$$3$$$, $$$4$$$, $$$5$$$, $$$9$$$, and $$$10$$$.After the fifth query the array $$$a$$$ of costs will be $$$\\\\{10, 10, 10, 7, 6, 5, 5, 5, 3, 1\\\\}$$$.In the sixth query a hungry man will buy meals in shops $$$2$$$ and $$$4$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "c47e5aec", "template_md5": "35d339e4", "result": "You are given a list of non-increasing numbers representing the cost of meals at different shops.  You need to process queries of two types:\n\n1. **Update:** For a given range of shops, increase the cost of each meal in that range to a new maximum value.\n2. **Purchase:** Given a starting shop and an amount of money, determine how many meals can be purchased from that shop to the end of the list, given that a meal can only be purchased if the person has enough money.\n\nOutput the number of meals purchased for each \"Purchase\" query."}, {"prompt_md5": "a7b068c7", "template_md5": "465699a0", "result": "You are given a list of non-increasing prices.  You can perform two types of operations:\n\n1. Increase the price of a range of items to a new value.\n2.  Simulate a customer with a certain amount of money visiting shops from a given point onwards. The customer buys as many items as possible, stopping when they run out of money. Count how many items the customer buys. \n\n\nAnswer questions of type 2."}]}