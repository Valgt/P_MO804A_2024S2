{"uid": "1956-D", "url": "https://codeforces.com/contest/1956/problem/D", "tags": ["bitmasks", " brute force", " constructive algorithms", " divide and conquer", " dp", " greedy", " implementation", " math"], "title": "1956-D", "statement": "D. Nene and the Mex Operatortime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputNene gave you an array of integers $$$a_1, a_2, \\\\ldots, a_n$$$ of length $$$n$$$.You can perform the following operation no more than $$$5\\\\cdot 10^5$$$ times (possibly zero):Choose two integers $$$l$$$ and $$$r$$$ such that $$$1 \\\\le l \\\\le r \\\\le n$$$, compute $$$x$$$ as $$$\\\\operatorname{MEX}(\\\\{a_l, a_{l+1}, \\\\ldots, a_r\\\\})$$$, and simultaneously set $$$a_l:=x, a_{l+1}:=x, \\\\ldots, a_r:=x$$$.Here, $$$\\\\operatorname{MEX}$$$ of a set of integers $$$\\\\{c_1, c_2, \\\\ldots, c_k\\\\}$$$ is defined as the smallest non-negative integer $$$m$$$ which does not occur in the set $$$c$$$.Your goal is to maximize the sum of the elements of the array $$$a$$$. Find the maximum sum and construct a sequence of operations that achieves this sum. Note that you don't need to minimize the number of operations in this sequence, you only should use no more than $$$5\\\\cdot 10^5$$$ operations in your solution.InputThe first line contains an integer $$$n$$$ ($$$1 \\\\le n \\\\le 18$$$) — the length of the array $$$a$$$.The second line contains $$$n$$$ integers $$$a_1,a_2,\\\\ldots,a_n$$$ ($$$0\\\\leq a_i \\\\leq 10^7$$$) — the array $$$a$$$.OutputIn the first line, output two integers $$$s$$$ and $$$m$$$ ($$$0\\\\le m\\\\le 5\\\\cdot 10^5$$$) — the maximum sum of elements of the array $$$a$$$ and the number of operations in your solution.In the $$$i$$$-th of the following $$$m$$$ lines, output two integers $$$l$$$ and $$$r$$$ ($$$1 \\\\le l \\\\le r \\\\le n$$$), representing the parameters of the $$$i$$$-th operation.It can be shown that the maximum sum of elements of the array $$$a$$$ can always be obtained in no more than $$$5 \\\\cdot 10^5$$$ operations.ExamplesInput20 1Output4 1 1 2Input31 3 9Output13 0Input41 100 2 1Output105 2 3 3 3 4Input10Output1 1 1 1NoteIn the first example, after the operation with $$$l=1$$$ and $$$r=2$$$ the array $$$a$$$ becomes equal to $$$[2,2]$$$. It can be shown that it is impossible to achieve a larger sum of the elements of $$$a$$$, so the answer is $$$4$$$.In the second example, the initial sum of elements is $$$13$$$ which can be shown to be the largest.In the third example, the array $$$a$$$ changes as follows:after the first operation ($$$l=3$$$, $$$r=3$$$), the array $$$a$$$ becomes equal to $$$[1,100,0,1]$$$;after the second operation ($$$l=3$$$, $$$r=4$$$), the array $$$a$$$ becomes equal to $$$[1,100,2,2]$$$.It can be shown that it is impossible to achieve a larger sum of the elements of $$$a$$$, so the answer is $$$105$$$.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "501f9b71", "template_md5": "35d339e4", "result": "You are given an array of integers $a_1, a_2, ..., a_n$. You can perform the following operation up to 500,000 times:\n\n1. Choose two integers $l$ and $r$ where $1 \\le l \\le r \\le n$.\n2. Calculate $x$ as the smallest non-negative integer not present in the subarray $a_l, a_{l+1}, ..., a_r$.\n3. Set $a_l = x$, $a_{l+1} = x$, ..., $a_r = x$.\n\nYour goal is to maximize the sum of the elements in the array. Find the maximum sum achievable and provide a sequence of operations that reaches this sum. You don't need to use the minimum number of operations, just no more than 500,000. \n\n**Input:**\n\n* The first line contains an integer $n$ (1 ≤ $n$ ≤ 18), the length of the array.\n* The second line contains $n$ integers $a_1, a_2, ..., a_n$ (0 ≤ $a_i$ ≤ 10⁷), the array elements.\n\n**Output:**\n\n* The first line contains two integers $s$ and $m$ (0 ≤ $m$ ≤ 500,000), the maximum sum of the array elements ($s$) and the number of operations used ($m$).\n* The following $m$ lines each contain two integers $l$ and $r$ (1 ≤ $l$ ≤ $r$ ≤ $n$), representing the parameters of an operation."}, {"prompt_md5": "77cd8207", "template_md5": "465699a0", "result": "You are given a list of numbers. You can repeatedly choose a section of the list and replace all the numbers in that section with the smallest non-negative integer not present in that section.  Your goal is to maximize the sum of the numbers in the list after performing this operation at most 500,000 times. Output the maximum sum achievable and a sequence of operations that reach it."}]}