{"uid": "756-F", "url": "https://codeforces.com/contest/756/problem/F", "tags": ["expression parsing", " math", " number theory"], "title": "756-F", "statement": "F. Long numbertime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputConsider the following grammar:<expression> ::= <term> | <expression> '+' <term><term> ::= <number> | <number> '-' <number> | <number> '(' <expression> ')'<number> ::= <pos_digit> | <number> <digit><digit> ::= '0' | <pos_digit><pos_digit> ::= '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'This grammar describes a number in decimal system using the following rules:<number>describes itself,<number>-<number>(l-r,l≤r) describes integer which is concatenation of all integers fromltor, written without leading zeros. For example,8-11describes891011,<number>(<expression>)describes integer which is concatenation of <number> copies of integer described by<expression>,<expression>+<term>describes integer which is concatenation of integers described by<expression>and<term>.For example,2(2-4+1)+2(2(17))describes the integer2341234117171717.You are given an expression in the given grammar. Print the integer described by it modulo109+ 7.InputThe only line contains a non-empty string at most105characters long which is valid according to the given grammar. In particular, it means that in termsl-rl≤rholds.OutputPrint single integer — the number described by the expression modulo109+ 7.ExamplesInput8-11Output891011Input2(2-4+1)+2(2(17))Output100783079Input1234-5678Output745428774Input1+2+3+4-5+6+7-9Output123456789", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "e2840b35", "template_md5": "35d339e4", "result": "You are given a mathematical expression following a specific set of rules.  \n\nThe rules are:\n\n* **<number>**: Represents a single digit from 0 to 9.\n* **<number> - <number> (l-r, l ≤ r)**: Represents the concatenation of all integers from *l* to *r* (inclusive), written without leading zeros. For example, 8-11 represents 891011.\n* **<number> (<expression>)**: Represents the concatenation of *n* copies of the integer described by the <expression>, where *n* is the integer represented by <number>.\n* **<expression> + <term>**: Represents the concatenation of the integers described by <expression> and <term>.\n\nYour task is to evaluate the given expression and output the resulting integer modulo 10<sup>9</sup> + 7. \n\n\n**Input:**\n\nA single line containing a valid mathematical expression following the rules above.\n\n**Output:**\n\nA single integer representing the result of the expression modulo 10<sup>9</sup> + 7."}, {"prompt_md5": "e6193c16", "template_md5": "465699a0", "result": "You are given a string representing a mathematical expression. The expression uses a specific set of rules to build numbers.  Your task is to calculate the final number represented by the expression and print the result modulo 10^9 + 7."}]}