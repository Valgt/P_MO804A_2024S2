{"uid": "1002-E1", "url": "https://codeforces.com/contest/1002/problem/E1", "tags": [], "title": "1002-E1", "statement": "E1. Bernstein-Vazirani algorithmtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a quantum oracle - an operation onN+ 1qubits which implements a function. You are guaranteed that the functionfimplemented by the oracle is scalar product function (oracle from problem D1):Here(an array ofNintegers, each of which can be 0 or 1).Your task is to reconstruct the array. Your code is allowed to call the given oracle only once.You have to implement an operation which takes the following inputs:an integerN- the number of qubits in the oracle input (1 ≤N≤ 8),an oracleUf, implemented as an operation with signature((Qubit[], Qubit) => ()), i.e., an operation which takes as input an array of qubits and an output qubit and has no output.The return of your operation is an array of integers of lengthN, each of them 0 or 1.Your code should have the following signature:namespace Solution {open Microsoft.Quantum.Primitive;open Microsoft.Quantum.Canon;operation Solve (N : Int, Uf : ((Qubit[], Qubit) => ())) : Int[]{body{// your code here}}}", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "77a5a9e6", "template_md5": "35d339e4", "result": "You are given a function that takes an array of $N$ bits (0 or 1) as input and outputs a single bit.  You can only call this function once. Your task is to figure out the input array. \n\nYou are given:\n\n* $N$: The number of bits in the input array (1 ≤ $N$ ≤ 8).\n* $Uf$: A function that represents the given function. It takes an array of $N$ qubits and a single qubit as input and performs the function.\n\nYour task is to write a function that takes $N$ and $Uf$ as input and returns the input array."}, {"prompt_md5": "582ffc7c", "template_md5": "465699a0", "result": "You are given a function that takes a sequence of bits as input and produces a single bit as output. You can only call this function once. Your task is to figure out the sequence of bits that the function uses."}]}