{"uid": "1914-G2", "url": "https://codeforces.com/contest/1914/problem/G2", "tags": ["combinatorics", " data structures", " dfs and similar", " dp", " graphs", " hashing"], "title": "1914-G2", "statement": "G2. Light Bulbs (Hard Version)time limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputThe easy and hard versions of this problem differ only in the constraints on $$$n$$$. In the hard version, the sum of values of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$. Furthermore, there are no additional constraints on the value of $$$n$$$ in a single test case.There are $$$2n$$$ light bulbs arranged in a row. Each light bulb has a color from $$$1$$$ to $$$n$$$ (exactly two light bulbs for each color).Initially, all light bulbs are turned off. You choose a set of light bulbs $$$S$$$ that you initially turn on. After that, you can perform the following operations in any order any number of times:choose two light bulbs $$$i$$$ and $$$j$$$of the same color, exactly one of which is on, and turn on the second one;choose three light bulbs $$$i, j, k$$$, such that both light bulbs $$$i$$$ and $$$k$$$are on and have the same color, and the light bulb $$$j$$$ is between them ($$$i < j < k$$$), and turn on the light bulb $$$j$$$.You want to choose a set of light bulbs $$$S$$$ that you initially turn on in such a way that by performing the described operations, you can ensure that all light bulbs are turned on.Calculate two numbers:the minimum size of the set $$$S$$$ that you initially turn on;the number of sets $$$S$$$ of minimum size (taken modulo $$$998244353$$$).InputThe first line of the input contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases. Then follow the descriptions of the test cases.The first line of each test case contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) — the number of pairs of light bulbs.The second line of each test case contains $$$2n$$$ integers $$$c_1, c_2, \\\\dots, c_{2n}$$$ ($$$1 \\\\le c_i \\\\le n$$$), where $$$c_i$$$ is the color of the $$$i$$$-th light bulb. For each color from $$$1$$$ to $$$n$$$, exactly two light bulbs have this color.Additional constraint on the input: the sum of values of $$$n$$$ over all test cases does not exceed $$$2 \\\\cdot 10^5$$$.OutputFor each test case, output two integers:the minimum size of the set $$$S$$$ that you initially turn on;the number of sets $$$S$$$ of minimum size (taken modulo $$$998244353$$$).ExampleInput422 2 1 121 2 2 121 2 1 253 4 4 5 3 1 1 5 2 2Output2 4 1 2 1 4 2 8", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f09cc81d", "template_md5": "35d339e4", "result": "You have $2n$ light bulbs arranged in a row. Each bulb has a color from 1 to $n$ (exactly two bulbs for each color). Initially, all bulbs are off. You can turn on a set of bulbs initially. Then, you can perform these operations:\n\n1. Choose two bulbs of the same color, one on and one off, and turn on the off one.\n2. Choose three bulbs of the same color, where the first and third are on and the second is between them, and turn on the second bulb.\n\nYour goal is to find the smallest set of bulbs to turn on initially so that you can turn on all bulbs using these operations. Also, find the number of such smallest sets (modulo 998244353).\n\nInput:\n\n* The first line contains $t$ (the number of test cases).\n* For each test case:\n    * The first line contains $n$ (the number of bulb pairs).\n    * The second line contains $2n$ integers $c_1, c_2, ..., c_{2n}$ representing the colors of the bulbs.\n\nOutput:\n\n* For each test case, output two integers:\n    * The minimum size of the initial set of bulbs.\n    * The number of such minimum-size sets (modulo 998244353)."}, {"prompt_md5": "d7ababa8", "template_md5": "465699a0", "result": "You have a row of light bulbs, each with a unique color. Some bulbs are initially on, and you can perform two types of operations:\n\n1. Turn on a bulb of the same color as another bulb that is already on.\n2. Turn on a bulb between two other bulbs of the same color that are already on.\n\nYour goal is to find the smallest number of bulbs you need to turn on initially to ensure that all bulbs are eventually on, and count how many different initial sets of bulbs will achieve this."}]}