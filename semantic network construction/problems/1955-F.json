{"uid": "1955-F", "url": "https://codeforces.com/contest/1955/problem/F", "tags": ["dp", " games", " greedy", " math", " schedules"], "title": "1955-F", "statement": "F. Unfair Gametime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlice and Bob gathered in the evening to play an exciting game on a sequence of $$$n$$$ integers, each integer of the sequencedoesn't exceed $$$4$$$. The rules of the game are too complex to describe, so let's just describe the winning condition — Alice wins if thebitwise XORof all the numbers in the sequence is non-zero; otherwise, Bob wins.The guys invited Eve to act as a judge. Initially, Alice and Bob play with $$$n$$$ numbers. After one game, Eve removes one of the numbers from the sequence, then Alice and Bob play with $$$n-1$$$ numbers. Eve removes one number again, after which Alice and Bob play with $$$n - 2$$$ numbers. This continues until the sequence of numbers is empty.Eve seems to think that in such a game, Alice almost always wins, so she wants Bob to win as many times as possible. Determine the maximum number of times Bob can win against Alice if Eve removes the numbers optimally.InputThe first line contains an integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$) — the number of test cases.The first and only line of each test case contains four integers $$$p_i$$$ ($$$0 \\\\le p_i \\\\le 200$$$) — the number of ones, twos, threes, and fours in the sequence at the beginning of the game.OutputFor each test case, print the maximum number of times Bob will win in a separate line, if Eve removes the numbers optimally.ExampleInput51 1 1 01 0 1 22 2 2 03 3 2 00 9 9 9Output1 1 3 3 12NoteIn the first example, Bob wins when Eve has not removed any numbers yet.In the second example, Bob wins if Eve removes one one and one three.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "7b649afe", "template_md5": "35d339e4", "result": "You are given a sequence of $n$ integers, where each integer is between 0 and 4.  Two players take turns playing a game with this sequence.\n\n* **Player 1's goal:** Make the bitwise XOR of all the numbers in the sequence non-zero.\n* **Player 2's goal:** Prevent Player 1 from achieving their goal.\n\nAfter each turn, a number is removed from the sequence. The game continues until the sequence is empty.\n\nDetermine the maximum number of times Player 2 can win if a third party optimally removes the numbers from the sequence. \n\n**Input:**\n\n* The first line contains an integer $t$ ($1 \\le t \\le 10^4$) representing the number of test cases.\n* For each test case, the first line contains four integers $p_i$ ($0 \\le p_i \\le 200$) representing the number of 0s, 1s, 2s, and 3s in the sequence.\n\n**Output:**\n\nFor each test case, print the maximum number of times Player 2 can win."}, {"prompt_md5": "865e983d", "template_md5": "465699a0", "result": "You are given a sequence of numbers.  Each number is either 1, 2, 3, or 4.  Two players take turns. On each turn, one number is removed from the sequence. The game ends when the sequence is empty. The first player to have the sum of the numbers in the sequence be non-zero wins.  \n\nDetermine the maximum number of times the second player can win if the numbers are removed optimally."}]}