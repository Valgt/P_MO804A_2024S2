{"uid": "1392-E", "url": "https://codeforces.com/contest/1392/problem/E", "tags": ["bitmasks", " constructive algorithms", " interactive", " math"], "title": "1392-E", "statement": "E. Omkar and Ducktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is an interactive problem.Omkar has just come across a duck! The duck is walking on a grid with $$$n$$$ rows and $$$n$$$ columns ($$$2 \\\\leq n \\\\leq 25$$$) so that the grid contains a total of $$$n^2$$$ cells. Let's denote by $$$(x, y)$$$ the cell in the $$$x$$$-th row from the top and the $$$y$$$-th column from the left. Right now, the duck is at the cell $$$(1, 1)$$$ (the cell in the top left corner) and would like to reach the cell $$$(n, n)$$$ (the cell in the bottom right corner) by moving either down $$$1$$$ cell or to the right $$$1$$$ cell each second.Since Omkar thinks ducks are fun, he wants to play a game with you based on the movement of the duck. First, for each cell $$$(x, y)$$$ in the grid, you will tell Omkar a nonnegative integer $$$a_{x,y}$$$ not exceeding $$$10^{16}$$$, and Omkar will then put $$$a_{x,y}$$$ uninteresting problems in the cell $$$(x, y)$$$. After that, the duck will start their journey from $$$(1, 1)$$$ to $$$(n, n)$$$. For each cell $$$(x, y)$$$ that the duck crosses during their journey (including the cells $$$(1, 1)$$$ and $$$(n, n)$$$), the duck will eat the $$$a_{x,y}$$$ uninteresting problems in that cell. Once the duck has completed their journey, Omkar will measure their mass to determine the total number $$$k$$$ of uninteresting problems that the duck ate on their journey, and then tell you $$$k$$$.Your challenge, given $$$k$$$, is to exactly reproduce the duck's path, i. e. to tell Omkar precisely which cells the duck crossed on their journey. To be sure of your mastery of this game, Omkar will have the duck complete $$$q$$$ different journeys ($$$1 \\\\leq q \\\\leq 10^3$$$). Note that all journeys are independent: at the beginning of each journey, the cell $$$(x, y)$$$ will still contain $$$a_{x,y}$$$ uninteresting tasks.InteractionThe interaction will begin with a line containing a single integer $$$n$$$ ($$$2 \\\\leq n \\\\leq 25$$$), the amount of rows and columns in the grid. Read it.Your program should then print $$$n$$$ lines. The $$$x$$$-th line should contain $$$n$$$ integers $$$a_{x,1}, a_{x,2}, \\\\dotsc, a_{x,n}$$$ satisfying $$$0 \\\\leq a_{x,y} \\\\leq 10^{16}$$$, where $$$a_{x,y}$$$ is the amount of uninteresting problems Omkar should place in the cell $$$(x, y)$$$.After that, you will first receive a single integer $$$q$$$, the amount of journeys that the duck will take. $$$q$$$ queries will follow; each query will consist of a single line containing an integer $$$k$$$, the amount of uninteresting problems that the duck ate on that journey. After each query, given that you have determined that the duck visited the cells $$$(x_1, y_1), (x_2, y_2), \\\\dotsc, (x_{2n - 1}, y_{2n - 1})$$$ in that order (it should always be true that $$$(x_1, y_1) = (1, 1)$$$ and $$$(x_{2n - 1}, y_{2n - 1}) = (n, n)$$$), you should output $$$2n - 1$$$ lines so that the $$$j$$$-th line contains the two integers $$$x_j, y_j$$$.Bear in mind that if the sum on your path is $$$k$$$, but your path is different from the actual hidden path, then your solution is still wrong!After printing each line do not forget to output end of line and flush the output. Otherwise, you will getIdleness limit exceeded. To do this, use:fflush(stdout)orcout.flush()in C++;System.out.flush()in Java;flush(output)in Pascal;stdout.flush()in Python;see documentation for other languages.Hack FormatTo hack, first output a line containing $$$n$$$ and another line containing $$$q$$$. It must be true that $$$2 \\\\leq n \\\\leq 25$$$ and $$$1 \\\\leq q \\\\leq 1000$$$. Then, output the $$$q$$$ journeys taken by the duck in the same format as described above: for each journey, given that the duck visited the cells $$$(x_1, y_1), (x_2, y_2), \\\\dotsc, (x_{2n - 1}, y_{2n - 1})$$$ in that order, you should output $$$2n - 1$$$ lines so that the $$$j$$$-th line contains the two integers $$$x_j, y_j$$$. It must be true that $$$(x_1, y_1) = (1, 1)$$$ and $$$(x_{2n - 1}, y_{2n - 1}) = (n, n)$$$. Additionally, for each $$$j$$$ such that $$$2 \\\\leq j \\\\leq 2n - 1$$$, it must be true that $$$1 \\\\leq x_j, y_j \\\\leq n$$$ and either $$$(x_j, y_j) = (x_{j - 1} + 1, y_{j - 1})$$$ or $$$(x_j, y_j) = (x_{j - 1}, y_{j - 1} + 1)$$$.ExampleInput4     3 23        26        27Output1 2 3 6 4 6 2 10 9 0 7 3 2 8 8 2   1 1 1 2 1 3 2 3 2 4 3 4 4 4  1 1 2 1 3 1 3 2 3 3 3 4 4 4  1 1 1 2 1 3 1 4 2 4 3 4 4 4NoteThe duck's three journeys are illustrated below.$$$1 + 2 + 3 + 2 + 10 + 3 + 2 = 23$$$$$$1 + 4 + 9 + 0 + 7 + 3 + 2 = 26$$$$$$1 + 2 + 3 + 6 + 10 + 3 + 2 = 27$$$", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "f78083f0", "template_md5": "465699a0", "result": "You are given a grid of size n x n. You need to determine the path a duck takes across the grid from the top left corner to the bottom right corner, knowing only the total number of cells it visited. The duck can only move down or right one cell at a time."}, {"prompt_md5": "a958a035", "template_md5": "35d339e4", "result": "You are given a grid of size $n \\times n$ ($2 \\le n \\le 25$).  You need to determine the path the duck takes to travel from the top-left corner $(1,1)$ to the bottom-right corner $(n,n)$ of the grid.\n\nThe duck can only move down or right one cell at a time.  \n\nFor each cell $(x,y)$ in the grid, you will be given a non-negative integer $a_{x,y}$ (not exceeding $10^{16}$). This represents the number of \"uninteresting problems\" in that cell.\n\nThe duck eats the problems in each cell it visits. After each journey, you will be given the total number of problems the duck ate ($k$). Your task is to determine the exact path the duck took.\n\nYou will be given $q$ ($1 \\le q \\le 10^3$) journeys to solve.\n\n**Input:**\n\n* The first line contains an integer $n$.\n* The next $n$ lines each contain $n$ integers, representing the values of $a_{x,y}$ for each cell.\n* The next line contains an integer $q$.\n* Each of the next $q$ lines contains an integer $k$, representing the total number of problems eaten in a journey.\n\n**Output:**\n\nFor each journey, output the path the duck took. Each line should contain two integers, representing the coordinates $(x,y)$ of a cell visited by the duck. The path should start at $(1,1)$ and end at $(n,n)$."}]}