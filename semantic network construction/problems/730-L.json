{"uid": "730-L", "url": "https://codeforces.com/contest/730/problem/L", "tags": ["data structures"], "title": "730-L", "statement": "L. Expression Queriestime limit per test4 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputAsimplified arithmetic expression(SAE) is an arithmetic expression defined by the following grammar:<SAE> ::= <Number> | <SAE>+<SAE> | <SAE>*<SAE> | (<SAE>)<Number> ::= <Digit> | <Digit><Number><Digit> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9In other words it's a correct arithmetic expression that is allowed to contain brackets, numbers (possibly with leading zeros), multiplications and additions. For example expressions \"(0+01)\", \"0\" and \"1*(0)\" are simplified arithmetic expressions, but expressions \"2-1\", \"+1\" and \"1+2)\" are not.Given a strings1s2...s|s|that represents a SAE;sidenotes thei-th character of the string which can be either a digit ('0'-'9'), a plus sign ('+'), a multiplication sign ('*'), an opening round bracket '(' or a closing round bracket ')'.A partslsl+ 1...srof this string is called asub-expressionif and only if it is a SAE.You task is to answermqueries, each of which is a pair of integersli,ri(1 ≤li≤ri≤ |s|). For each query determine whether the corresponding part of the given string is a sub-expression and in case it's a sub-expression calculate its value modulo1000000007 (109+ 7). The values should be calculated using standard operator priorities.InputThe first line of the input contains non-empty strings(1 ≤ |s| ≤ 4·105)which represents a correct SAE. Each character of the string can be one of the following characters: '*', '+', '(', ')' or a digit ('0'-'9'). The expression might contain extra-huge numbers.The second line contains an integerm(1 ≤m≤ 4·105)which is the number of queries. Each of the nextmlines contains two space-separated integersli,ri(1 ≤li≤ri≤ |s|)— thei-th query.OutputThei-th number of output should be the answer for thei-th query. If thei-th query corresponds to a valid sub-expression output the value of the sub-expression modulo1000000007 (109+ 7). Otherwise output -1 as an answer for the query. Print numbers on separate lines.ExamplesInput((1+2)*3+101*2)68 141 62 1011 145 54 5Output205-11022-1Input(01)11 4Output1", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "de909ef0", "template_md5": "35d339e4", "result": "You are given a string representing a simplified arithmetic expression.  This expression can contain digits (0-9), plus signs (+), multiplication signs (*), and parentheses. \n\nYou need to answer multiple queries. Each query is a pair of numbers (l, r) representing a substring of the original expression. For each query, determine if the substring is a valid arithmetic expression (a sub-expression). If it is, calculate its value modulo 1000000007. If it is not a valid expression, output -1. \n\n**Example:**\n\nInput string:  ((1+2)*3+101*2)\nQueries:\n* (1, 4)\n* (6, 8)\n* (1, 10)\n* (14, 15)\n\nOutput:\n* 205\n* -1\n* 11022\n* -1"}, {"prompt_md5": "b84f4dbf", "template_md5": "465699a0", "result": "You are given a string representing a mathematical expression.  You need to determine if parts of this string are valid mathematical expressions and, if so, calculate their value.  You will be given multiple ranges within the string. For each range, tell if it's a valid expression and, if it is, calculate its value.  The result should be the value modulo 1000000007."}]}