{"uid": "321-C", "url": "https://codeforces.com/contest/321/problem/C", "tags": ["constructive algorithms", " dfs and similar", " divide and conquer", " greedy", " trees"], "title": "321-C", "statement": "C. Ciel the Commandertime limit per test1 secondmemory limit per test256 megabytesinputstdinoutputstdoutNow Fox Ciel becomes a commander of Tree Land. Tree Land, like its name said, hasncities connected byn- 1undirected roads, and for any two cities there always exists a path between them.Fox Ciel needs to assign an officer to each city. Each officer has a rank — a letter from 'A' to 'Z'. So there will be 26 different ranks, and 'A' is the topmost, so 'Z' is the bottommost.There are enough officers of each rank. But there is a special rule must obey: ifxandyare two distinct cities and their officers have the same rank, then on the simple path betweenxandythere must be a cityzthat has an officer with higher rank. The rule guarantee that a communications between same rank officers will be monitored by higher rank officer.Help Ciel to make a valid plan, and if it's impossible, output \"Impossible!\".InputThe first line contains an integern(2 ≤n≤ 105) — the number of cities in Tree Land.Each of the followingn- 1lines contains two integersaandb(1 ≤a,b≤n,a≠b) — they mean that there will be an undirected road betweenaandb. Consider all the cities are numbered from 1 ton.It guaranteed that the given graph will be a tree.OutputIf there is a valid plane, outputnspace-separated characters in a line —i-th character is the rank of officer in the city with numberi.Otherwise output \"Impossible!\".ExamplesInput41 21 31 4OutputA B B BInput101 22 33 44 55 66 77 88 99 10OutputD C B A D C B D C DNoteIn the first example, for any two officers of rank 'B', an officer with rank 'A' will be on the path between them. So it is a valid solution.", "source": "CF", "vjudge": false, "processed": [{"prompt_md5": "c74a64e6", "template_md5": "35d339e4", "result": "You are given a tree with $n$ nodes ($2 \\le n \\le 10^5$).  Each node needs to be assigned a rank from 'A' to 'Z', where 'A' is the highest rank and 'Z' is the lowest.  \n\nThe rule is that for any two nodes with the same rank, there must be a node on the path between them with a higher rank.\n\nDetermine if it is possible to assign ranks to the nodes according to this rule. If it is possible, output the ranks for each node. Otherwise, output \"Impossible!\".\n\nThe input will consist of:\n\n* The number of nodes, $n$.\n* $n-1$ lines, each containing two integers representing an edge between two nodes."}, {"prompt_md5": "ab00dac9", "template_md5": "465699a0", "result": "Assign a rank (A to Z, A being the highest) to each of N cities in a tree-shaped network.  The rule is that if two cities have the same rank, there must be a city on the path between them with a higher rank.  Determine if a valid assignment is possible. If so, output the ranks for each city. If not, output \"Impossible!\"."}]}